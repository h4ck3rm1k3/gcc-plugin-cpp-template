
union tree_node;
typedef union tree_node *tree;

class va_gc {};
template <class T, class Y> class vec {
public:
  static int embedded_size(int ) {}
  int length () const {return 0;}
};

enum tree_code {
  ERROR_MARK,
  IDENTIFIER_NODE,
  TREE_LIST,
  TREE_VEC,
  BLOCK,
  // 126 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  OFFSET_TYPE,
  // 139 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  ENUMERAL_TYPE,
  BOOLEAN_TYPE,
  // 153 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  INTEGER_TYPE,
  REAL_TYPE,
  // 166 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  POINTER_TYPE,REFERENCE_TYPE,
  NULLPTR_TYPE,
  FIXED_POINT_TYPE,
  // 187 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  COMPLEX_TYPE,
  VECTOR_TYPE,
  // 208 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  ARRAY_TYPE,
  // 218 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  RECORD_TYPE,UNION_TYPE,QUAL_UNION_TYPE,
  VOID_TYPE,
  POINTER_BOUNDS_TYPE,FUNCTION_TYPE,
  METHOD_TYPE,LANG_TYPE,VOID_CST,
  // 289 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  INTEGER_CST,
  REAL_CST,
  FIXED_CST,COMPLEX_CST,
  VECTOR_CST,
  STRING_CST,
  // 365 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  FUNCTION_DECL,
  LABEL_DECL,
  FIELD_DECL,
  VAR_DECL,
  CONST_DECL,
  PARM_DECL,
  TYPE_DECL,
  RESULT_DECL,DEBUG_EXPR_DECL,NAMESPACE_DECL,
  // 395 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  IMPORTED_DECL,
  // 405 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  NAMELIST_DECL,TRANSLATION_UNIT_DECL,
  // 422 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  COMPONENT_REF,
  // 432 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  BIT_FIELD_REF,
  ARRAY_REF,
  ARRAY_RANGE_REF,REALPART_EXPR,
  IMAGPART_EXPR,
  // 461 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  VIEW_CONVERT_EXPR,
  INDIRECT_REF,
  // 473 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  OBJ_TYPE_REF,
  // 492 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  CONSTRUCTOR,
  // 502 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  COMPOUND_EXPR,
  MODIFY_EXPR,
  INIT_EXPR,TARGET_EXPR,
  // 532 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  COND_EXPR,
  // 544 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  VEC_COND_EXPR,
  // 558 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  VEC_PERM_EXPR,
  // 581 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  BIND_EXPR,CALL_EXPR,
  WITH_CLEANUP_EXPR,
  // 613 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  CLEANUP_POINT_EXPR,
  // 665 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  PLACEHOLDER_EXPR,
  PLUS_EXPR,
  MINUS_EXPR,
  MULT_EXPR,POINTER_PLUS_EXPR,MULT_HIGHPART_EXPR,
  TRUNC_DIV_EXPR,
  CEIL_DIV_EXPR,
  FLOOR_DIV_EXPR,
  ROUND_DIV_EXPR,
  TRUNC_MOD_EXPR,
  CEIL_MOD_EXPR,
  FLOOR_MOD_EXPR,
  ROUND_MOD_EXPR,
  RDIV_EXPR,EXACT_DIV_EXPR,
  FIX_TRUNC_EXPR,
  FLOAT_EXPR,
  NEGATE_EXPR,
  MIN_EXPR,
  MAX_EXPR,ABS_EXPR,
  // 739 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  LSHIFT_EXPR,
  RSHIFT_EXPR,
  LROTATE_EXPR,
  RROTATE_EXPR,
  BIT_IOR_EXPR,
  BIT_XOR_EXPR,
  BIT_AND_EXPR,
  BIT_NOT_EXPR,
  // 759 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  TRUTH_ANDIF_EXPR,
  TRUTH_ORIF_EXPR,
  TRUTH_AND_EXPR,
  TRUTH_OR_EXPR,
  TRUTH_XOR_EXPR,
  TRUTH_NOT_EXPR,
  // 775 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
  LT_EXPR,
  LE_EXPR,
  GT_EXPR,
  GE_EXPR,
  EQ_EXPR,
  NE_EXPR,
  UNORDERED_EXPR,
  ORDERED_EXPR,
  UNLT_EXPR,
  UNLE_EXPR,
  UNGT_EXPR,
  UNGE_EXPR,
  UNEQ_EXPR,
  LTGT_EXPR,RANGE_EXPR,PAREN_EXPR,
  CONVERT_EXPR,ADDR_SPACE_CONVERT_EXPR,
  FIXED_CONVERT_EXPR,
  NOP_EXPR,
NON_LVALUE_EXPR,
COMPOUND_LITERAL_EXPR,
SAVE_EXPR,ADDR_EXPR,FDESC_EXPR,COMPLEX_EXPR,
CONJ_EXPR,
PREDECREMENT_EXPR,
PREINCREMENT_EXPR,
POSTDECREMENT_EXPR,
POSTINCREMENT_EXPR,
VA_ARG_EXPR,
TRY_CATCH_EXPR,
TRY_FINALLY_EXPR,DECL_EXPR,
LABEL_EXPR,GOTO_EXPR,
RETURN_EXPR,EXIT_EXPR,
LOOP_EXPR,
// 915 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
SWITCH_EXPR,
// 927 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
CASE_LABEL_EXPR,
ASM_EXPR,
SSA_NAME,CATCH_EXPR,
EH_FILTER_EXPR,SCEV_KNOWN,SCEV_NOT_KNOWN,POLYNOMIAL_CHREC,STATEMENT_LIST,
// 983 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
ASSERT_EXPR,TREE_BINFO,
WITH_SIZE_EXPR,
// 1005 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
REALIGN_LOAD_EXPR,
// 1021 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
TARGET_MEM_REF,
// 1031 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
MEM_REF,
// 1040 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
OACC_PARALLEL,OACC_KERNELS,OACC_DATA,OACC_HOST_DATA,OMP_PARALLEL,OMP_TASK,
// 1091 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
OMP_FOR,OMP_SIMD,CILK_SIMD,CILK_FOR,OMP_DISTRIBUTE,OACC_LOOP,
OMP_TEAMS,
OMP_TARGET_DATA,
OMP_TARGET,
OMP_SECTIONS,
OMP_SINGLE,OMP_SECTION,OMP_MASTER,OMP_TASKGROUP,OMP_ORDERED,
OMP_CRITICAL,
OACC_CACHE,OACC_DECLARE,OACC_ENTER_DATA,OACC_EXIT_DATA,OACC_UPDATE,OMP_TARGET_UPDATE,
// 1193 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
OMP_ATOMIC,
OMP_ATOMIC_READ,
// 1208 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
OMP_ATOMIC_CAPTURE_OLD,
OMP_ATOMIC_CAPTURE_NEW,
OMP_CLAUSE,TRANSACTION_EXPR,
// 1226 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
REDUC_MAX_EXPR,
REDUC_MIN_EXPR,
REDUC_PLUS_EXPR,
// 1239 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
DOT_PROD_EXPR,
// 1248 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
WIDEN_SUM_EXPR,
// 1264 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree.def"
SAD_EXPR,
WIDEN_MULT_EXPR,
WIDEN_MULT_PLUS_EXPR,
WIDEN_MULT_MINUS_EXPR,
WIDEN_LSHIFT_EXPR,FMA_EXPR,
VEC_WIDEN_MULT_HI_EXPR,
VEC_WIDEN_MULT_LO_EXPR,
VEC_WIDEN_MULT_EVEN_EXPR,
VEC_WIDEN_MULT_ODD_EXPR,VEC_UNPACK_HI_EXPR,
VEC_UNPACK_LO_EXPR,VEC_UNPACK_FLOAT_HI_EXPR,
VEC_UNPACK_FLOAT_LO_EXPR,VEC_PACK_TRUNC_EXPR,
VEC_PACK_SAT_EXPR,VEC_PACK_FIX_TRUNC_EXPR,
VEC_WIDEN_LSHIFT_HI_EXPR,
VEC_WIDEN_LSHIFT_LO_EXPR,
PREDICT_EXPR,
OPTIMIZATION_NODE,
TARGET_OPTION_NODE,
ANNOTATE_EXPR,CILK_SPAWN_STMT,
CILK_SYNC_STMT,
LAST_AND_UNUSED_TREE_CODE,
C_MAYBE_CONST_EXPR,
EXCESS_PRECISION_EXPR,USERDEF_LITERAL,SIZEOF_EXPR,
ARRAY_NOTATION_REF,
UNCONSTRAINED_ARRAY_TYPE,UNCONSTRAINED_ARRAY_REF,
NULL_EXPR,PLUS_NOMOD_EXPR,MINUS_NOMOD_EXPR,
ATTR_ADDR_EXPR,
STMT_STMT,LOOP_STMT,EXIT_STMT,
OFFSET_REF,
PTRMEM_CST,NEW_EXPR,
VEC_NEW_EXPR,
DELETE_EXPR,
VEC_DELETE_EXPR,
SCOPE_REF,
MEMBER_REF,TYPE_EXPR,
AGGR_INIT_EXPR,
VEC_INIT_EXPR,THROW_EXPR,EMPTY_CLASS_EXPR,
BASELINK,
TEMPLATE_DECL,
TEMPLATE_PARM_INDEX,
TEMPLATE_TEMPLATE_PARM,
TEMPLATE_TYPE_PARM,TYPENAME_TYPE,TYPEOF_TYPE,BOUND_TEMPLATE_TEMPLATE_PARM,UNBOUND_CLASS_TEMPLATE,USING_DECL,
USING_STMT,
DEFAULT_ARG,DEFERRED_NOEXCEPT,
TEMPLATE_ID_EXPR,OVERLOAD,
PSEUDO_DTOR_EXPR,MODOP_EXPR,
CAST_EXPR,
REINTERPRET_CAST_EXPR,
CONST_CAST_EXPR,
STATIC_CAST_EXPR,
DYNAMIC_CAST_EXPR,
IMPLICIT_CONV_EXPR,
DOTSTAR_EXPR,
TYPEID_EXPR,
NOEXCEPT_EXPR,
NON_DEPENDENT_EXPR,CTOR_INITIALIZER,TRY_BLOCK,EH_SPEC_BLOCK,HANDLER,
MUST_NOT_THROW_EXPR,
CLEANUP_STMT,IF_STMT,FOR_STMT,
RANGE_FOR_STMT,WHILE_STMT,DO_STMT,
BREAK_STMT,
CONTINUE_STMT,
SWITCH_STMT,EXPR_STMT,TAG_DEFN,
OFFSETOF_EXPR,
ARROW_EXPR,ALIGNOF_EXPR,AT_ENCODE_EXPR,
STMT_EXPR,UNARY_PLUS_EXPR,STATIC_ASSERT,
// 382 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/cp/cp-tree.def"
TYPE_ARGUMENT_PACK,
// 391 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/cp/cp-tree.def"
NONTYPE_ARGUMENT_PACK,
// 414 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/cp/cp-tree.def"
TYPE_PACK_EXPANSION,

EXPR_PACK_EXPANSION,
// 433 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/cp/cp-tree.def"
ARGUMENT_PACK_SELECT,

TRAIT_EXPR,
// 449 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/cp/cp-tree.def"
LAMBDA_EXPR,
// 458 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/cp/cp-tree.def"
DECLTYPE_TYPE,
UNDERLYING_TYPE,
BASES,
// 476 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/cp/cp-tree.def"
TEMPLATE_INFO,
// 6 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/all-tree.def" 2
// 1 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/d/d-tree.def" 1
// 22 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/d/d-tree.def"
IASM_EXPR,

UNSIGNED_RSHIFT_EXPR,
FLOAT_MOD_EXPR,
// 7 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/all-tree.def" 2
// 1 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/java/java-tree.def" 1
// 23 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/java/java-tree.def"
URSHIFT_EXPR,
COMPARE_EXPR,
COMPARE_L_EXPR,
COMPARE_G_EXPR,
// 8 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/all-tree.def" 2
// 1 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/objc/objc-tree.def" 1
// 24 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/objc/objc-tree.def"
CLASS_INTERFACE_TYPE,
CLASS_IMPLEMENTATION_TYPE,
CATEGORY_INTERFACE_TYPE,
CATEGORY_IMPLEMENTATION_TYPE,
PROTOCOL_INTERFACE_TYPE,
KEYWORD_DECL,
INSTANCE_METHOD_DECL,
CLASS_METHOD_DECL,
PROPERTY_DECL,
MESSAGE_SEND_EXPR,
CLASS_REFERENCE_EXPR,
// 70 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/objc/objc-tree.def"
PROPERTY_REF,
// 8 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/all-tree.def" 2
// 125 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree-core.h" 2
MAX_TREE_CODES
};
enum internal_fn {
IFN_LOAD_LANES,
IFN_STORE_LANES,
IFN_GOMP_SIMD_LANE,
IFN_GOMP_SIMD_VF,
IFN_GOMP_SIMD_LAST_LANE,
IFN_LOOP_VECTORIZED,
IFN_MASK_LOAD,
IFN_MASK_STORE,
IFN_ANNOTATE,
IFN_UBSAN_NULL,
IFN_UBSAN_BOUNDS,
IFN_UBSAN_VPTR,
IFN_UBSAN_CHECK_ADD,
IFN_UBSAN_CHECK_SUB,
IFN_UBSAN_CHECK_MUL,
IFN_UBSAN_OBJECT_SIZE,
IFN_ABNORMAL_DISPATCHER,
IFN_BUILTIN_EXPECT,
IFN_ASAN_CHECK,
IFN_ADD_OVERFLOW,
IFN_SUB_OVERFLOW,
IFN_MUL_OVERFLOW,
IFN_TSAN_FUNC_EXIT,
  IFN_LAST
};
struct tree_base {
  enum tree_code code : 16;  unsigned side_effects_flag : 1;
  unsigned constant_flag : 1;
  unsigned addressable_flag : 1;
  unsigned volatile_flag : 1;
  unsigned readonly_flag : 1;
  unsigned asm_written_flag: 1;
  unsigned nowarning_flag : 1;
  unsigned visited : 1;  unsigned used_flag : 1;
  unsigned nothrow_flag : 1;
  unsigned static_flag : 1;
  unsigned public_flag : 1;
  unsigned private_flag : 1;
  unsigned protected_flag : 1;
  unsigned deprecated_flag : 1;
  unsigned default_def_flag : 1;  union {
    struct {
      unsigned lang_flag_0 : 1;
      unsigned lang_flag_1 : 1;
      unsigned lang_flag_2 : 1;
      unsigned lang_flag_3 : 1;
      unsigned lang_flag_4 : 1;
      unsigned lang_flag_5 : 1;
      unsigned lang_flag_6 : 1;
      unsigned saturating_flag : 1;      unsigned unsigned_flag : 1;
      unsigned packed_flag : 1;
      unsigned user_align : 1;
      unsigned nameless_flag : 1;
      unsigned atomic_flag : 1;
      unsigned spare0 : 3;      unsigned spare1 : 8;
      unsigned address_space : 8;
    } bits;
    struct {
      unsigned char unextended;      unsigned char extended;      unsigned char offset;
    } int_length;
    int length;
    unsigned int version;
    enum internal_fn ifn;
    struct {
      unsigned short clique;
      unsigned short base;
    } dependence_info;
  } u;
};
struct tree_typed {
  struct tree_base base;
  tree type;
};
struct tree_common {
  struct tree_typed typed;
  tree chain;
};
struct tree_int_cst {
  struct tree_typed typed;
  long val[1];
};
struct tree_real_cst {
  struct tree_typed typed;
  struct real_value * real_cst_ptr;
};
struct tree_fixed_cst {
  struct tree_typed typed;
  struct fixed_value * fixed_cst_ptr;
};
struct tree_string {
  struct tree_typed typed;
  int length;
  char str[1];
};
struct tree_complex {
  struct tree_typed typed;
  tree real;
  tree imag;
};
struct tree_vector {
  struct tree_typed typed;
  tree elts[1];
};
typedef struct ht_identifier ht_identifier;
typedef struct ht_identifier *ht_identifier_ptr;
struct ht_identifier {
  const unsigned char *str;
  unsigned int len;
  unsigned int hash_value;
};
struct tree_identifier {
  struct tree_common common;
  struct ht_identifier id;
};
struct tree_list {
  struct tree_common common;
  tree purpose;
  tree value;
};
struct tree_vec {
  struct tree_common common;
  tree a[1];
};

typedef struct gimple_statement_base *gimple;

struct constructor_elt {
  tree index;
  tree value;
};
typedef unsigned int source_location;
typedef source_location location_t;
struct tree_decl_minimal {
  struct tree_common common;
  location_t locus;
  unsigned int uid;
  tree name;
  tree context;
};
enum machine_mode
{
  VOIDmode,
  BLKmode,
  CCmode,
  CCGCmode,
  CCGOCmode,
  CCNOmode,
  CCAmode,
  CCCmode,
  CCOmode,
  CCSmode,
  CCZmode,
  CCFPmode,
  CCFPUmode,
  BImode,
  QImode,
  HImode,
  SImode,
  DImode,
  TImode,
  OImode,
  XImode,
  BND32mode,
  BND64mode,
  QQmode,
  HQmode,
  SQmode,
// //define HAVE_SQmode 
  DQmode,
// //define HAVE_DQmode 
  TQmode,
// //define HAVE_TQmode 
  UQQmode,
// //define HAVE_UQQmode 
  UHQmode,
// //define HAVE_UHQmode 
  USQmode,
// //define HAVE_USQmode 
  UDQmode,
// //define HAVE_UDQmode 
  UTQmode,
// //define HAVE_UTQmode 
  HAmode,
// //define HAVE_HAmode 
  SAmode,
// //define HAVE_SAmode 
  DAmode,
// //define HAVE_DAmode 
  TAmode,
// //define HAVE_TAmode 
  UHAmode,
// //define HAVE_UHAmode 
  USAmode,
// //define HAVE_USAmode 
  UDAmode,
// //define HAVE_UDAmode 
  UTAmode,
// //define HAVE_UTAmode 
  SFmode,
// //define HAVE_SFmode 
  DFmode,
// //define HAVE_DFmode 
  XFmode,
// //define HAVE_XFmode 
  TFmode,
// //define HAVE_TFmode 
  SDmode,
// //define HAVE_SDmode 
  DDmode,
// //define HAVE_DDmode 
  TDmode,
// //define HAVE_TDmode 
  CQImode,
// //define HAVE_CQImode 
  CHImode,
// //define HAVE_CHImode 
  CSImode,
// //define HAVE_CSImode 
  CDImode,
// //define HAVE_CDImode 
  CTImode,
// //define HAVE_CTImode 
  COImode,
// //define HAVE_COImode 
  CXImode,
// //define HAVE_CXImode 
  SCmode,
// //define HAVE_SCmode 
  DCmode,
// //define HAVE_DCmode 
  XCmode,
// //define HAVE_XCmode 
  TCmode,
// //define HAVE_TCmode 
  V2QImode,
// //define HAVE_V2QImode 
  V4QImode,
// //define HAVE_V4QImode 
  V2HImode,
// //define HAVE_V2HImode 
  V1SImode,
// //define HAVE_V1SImode 
  V8QImode,
// //define HAVE_V8QImode 
  V4HImode,
// //define HAVE_V4HImode 
  V2SImode,
// //define HAVE_V2SImode 
  V1DImode,
// //define HAVE_V1DImode 
  V12QImode,
// //define HAVE_V12QImode 
  V6HImode,
// //define HAVE_V6HImode 
  V14QImode,
// //define HAVE_V14QImode 
  V16QImode,
// //define HAVE_V16QImode 
  V8HImode,
// //define HAVE_V8HImode 
  V4SImode,
// //define HAVE_V4SImode 
  V2DImode,
// //define HAVE_V2DImode 
  V1TImode,
// //define HAVE_V1TImode 
  V32QImode,
// //define HAVE_V32QImode 
  V16HImode,
// //define HAVE_V16HImode 
  V8SImode,
// //define HAVE_V8SImode 
  V4DImode,
// //define HAVE_V4DImode 
  V2TImode,
// //define HAVE_V2TImode 
  V64QImode,
// //define HAVE_V64QImode 
  V32HImode,
// //define HAVE_V32HImode 
  V16SImode,
// //define HAVE_V16SImode 
  V8DImode,
// //define HAVE_V8DImode 
  V4TImode,
// //define HAVE_V4TImode 
  V128QImode,
// //define HAVE_V128QImode 
  V64HImode,
// //define HAVE_V64HImode 
  V32SImode,
// //define HAVE_V32SImode 
  V16DImode,
// //define HAVE_V16DImode 
  V8TImode,
// //define HAVE_V8TImode 
  V2SFmode,
// //define HAVE_V2SFmode 
  V4SFmode,
// //define HAVE_V4SFmode 
  V2DFmode,
// //define HAVE_V2DFmode 
  V8SFmode,
// //define HAVE_V8SFmode 
  V4DFmode,
// //define HAVE_V4DFmode 
  V2TFmode,
// //define HAVE_V2TFmode 
  V16SFmode,
// //define HAVE_V16SFmode 
  V8DFmode,
// //define HAVE_V8DFmode 
  V4TFmode,
// //define HAVE_V4TFmode 
  V32SFmode,
// //define HAVE_V32SFmode 
  V16DFmode,
// //define HAVE_V16DFmode 
  V8TFmode,
// //define HAVE_V8TFmode 
  MAX_MACHINE_MODE,
  MIN_MODE_RANDOM = VOIDmode,
  MAX_MODE_RANDOM = BLKmode,
  MIN_MODE_CC = CCmode,
  MAX_MODE_CC = CCFPUmode,
  MIN_MODE_INT = QImode,
  MAX_MODE_INT = XImode,
  MIN_MODE_PARTIAL_INT = VOIDmode,
  MAX_MODE_PARTIAL_INT = VOIDmode,
  MIN_MODE_POINTER_BOUNDS = BND32mode,
  MAX_MODE_POINTER_BOUNDS = BND64mode,
  MIN_MODE_FRACT = QQmode,
  MAX_MODE_FRACT = TQmode,
  MIN_MODE_UFRACT = UQQmode,
  MAX_MODE_UFRACT = UTQmode,
  MIN_MODE_ACCUM = HAmode,
  MAX_MODE_ACCUM = TAmode,
  MIN_MODE_UACCUM = UHAmode,
  MAX_MODE_UACCUM = UTAmode,
  MIN_MODE_FLOAT = SFmode,
  MAX_MODE_FLOAT = TFmode,
  MIN_MODE_DECIMAL_FLOAT = SDmode,
  MAX_MODE_DECIMAL_FLOAT = TDmode,
  MIN_MODE_COMPLEX_INT = CQImode,
  MAX_MODE_COMPLEX_INT = CXImode,
  MIN_MODE_COMPLEX_FLOAT = SCmode,
  MAX_MODE_COMPLEX_FLOAT = TCmode,
  MIN_MODE_VECTOR_INT = V2QImode,
  MAX_MODE_VECTOR_INT = V8TImode,
  MIN_MODE_VECTOR_FRACT = VOIDmode,
  MAX_MODE_VECTOR_FRACT = VOIDmode,
  MIN_MODE_VECTOR_UFRACT = VOIDmode,
  MAX_MODE_VECTOR_UFRACT = VOIDmode,
  MIN_MODE_VECTOR_ACCUM = VOIDmode,
  MAX_MODE_VECTOR_ACCUM = VOIDmode,
  MIN_MODE_VECTOR_UACCUM = VOIDmode,
  MAX_MODE_VECTOR_UACCUM = VOIDmode,
  MIN_MODE_VECTOR_FLOAT = V2SFmode,
  MAX_MODE_VECTOR_FLOAT = V8TFmode,
  NUM_MACHINE_MODES = MAX_MACHINE_MODE
};
struct tree_decl_common {
  struct tree_decl_minimal common;
  tree size;
  enum machine_mode mode : 8;
  unsigned nonlocal_flag : 1;
  unsigned virtual_flag : 1;
  unsigned ignored_flag : 1;
  unsigned abstract_flag : 1;
  unsigned artificial_flag : 1;
  unsigned preserve_flag: 1;
  unsigned debug_expr_is_from : 1;
  unsigned lang_flag_0 : 1;
  unsigned lang_flag_1 : 1;
  unsigned lang_flag_2 : 1;
  unsigned lang_flag_3 : 1;
  unsigned lang_flag_4 : 1;
  unsigned lang_flag_5 : 1;
  unsigned lang_flag_6 : 1;
  unsigned lang_flag_7 : 1;
  unsigned lang_flag_8 : 1;
  unsigned decl_flag_0 : 1;
  unsigned decl_flag_1 : 1;
  unsigned decl_flag_2 : 1;
  unsigned decl_flag_3 : 1;
  unsigned gimple_reg_flag : 1;
  unsigned decl_by_reference_flag : 1;
  unsigned decl_read_flag : 1;
  unsigned decl_nonshareable_flag : 1;
  unsigned int off_align : 8;

  unsigned int align;
  unsigned int pt_uid;
  tree size_unit;
  tree initial;
  tree attributes;
  tree abstract_origin;
  struct lang_decl *lang_specific;
};
struct rtx_def;
typedef struct rtx_def *rtx;
struct tree_decl_with_rtl {
  struct tree_decl_common common;
  rtx rtl;
};
struct tree_field_decl {
  struct tree_decl_common common;
  tree offset;
  tree bit_field_type;
  tree qualifier;
  tree bit_offset;
  tree fcontext;
};
struct tree_label_decl {
  struct tree_decl_with_rtl common;
  int label_decl_uid;
  int eh_landing_pad_nr;
};
struct tree_result_decl {
  struct tree_decl_with_rtl common;
};
struct tree_const_decl {
  struct tree_decl_common common;
};
struct tree_parm_decl {
  struct tree_decl_with_rtl common;
  rtx incoming_rtl;
};
enum symbol_visibility
{
  VISIBILITY_DEFAULT,
  VISIBILITY_PROTECTED,
  VISIBILITY_HIDDEN,
  VISIBILITY_INTERNAL
};
struct tree_decl_with_vis {
 struct tree_decl_with_rtl common;
 tree assembler_name;
 struct symtab_node *symtab_node;
 unsigned defer_output : 1;
 unsigned hard_register : 1;
 unsigned common_flag : 1;
 unsigned in_text_section : 1;
 unsigned in_constant_pool : 1;
 unsigned dllimport_flag : 1;
 unsigned weak_flag : 1;
 unsigned seen_in_bind_expr : 1;
 unsigned comdat_flag : 1;
 enum symbol_visibility visibility : 2;
 unsigned visibility_specified : 1;
 unsigned init_priority_p : 1;
 unsigned shadowed_for_var_p : 1;
 unsigned cxx_constructor : 1;
 unsigned cxx_destructor : 1;
 unsigned final : 1;
 unsigned regdecl_flag : 1;
};
struct tree_var_decl {
  struct tree_decl_with_vis common;
};
struct tree_decl_non_common {
  struct tree_decl_with_vis common;
  tree result;
};

enum built_in_function {
BUILT_IN_NONE,
BUILT_IN_ACOS,
BUILT_IN_ACOSF,
BUILT_IN_ACOSH,
BUILT_IN_ACOSHF,
BUILT_IN_ACOSHL,
BUILT_IN_ACOSL,
BUILT_IN_ALIGNED_ALLOC,
BUILT_IN_ASIN,
BUILT_IN_ASINF,
BUILT_IN_ASINH,
BUILT_IN_ASINHF,
BUILT_IN_ASINHL,
BUILT_IN_ASINL,
BUILT_IN_ATAN,
BUILT_IN_ATAN2,
BUILT_IN_ATAN2F,
BUILT_IN_ATAN2L,
BUILT_IN_ATANF,
BUILT_IN_ATANH,
BUILT_IN_ATANHF,
BUILT_IN_ATANHL,
BUILT_IN_ATANL,
BUILT_IN_CBRT,
BUILT_IN_CBRTF,
BUILT_IN_CBRTL,
BUILT_IN_CEIL,
BUILT_IN_CEILF,
BUILT_IN_CEILL,
BUILT_IN_COPYSIGN,
BUILT_IN_COPYSIGNF,
BUILT_IN_COPYSIGNL,
BUILT_IN_COS,
BUILT_IN_COSF,
BUILT_IN_COSH,
BUILT_IN_COSHF,
BUILT_IN_COSHL,
BUILT_IN_COSL,
BUILT_IN_DREM,
BUILT_IN_DREMF,
BUILT_IN_DREML,
BUILT_IN_ERF,
BUILT_IN_ERFC,
BUILT_IN_ERFCF,
BUILT_IN_ERFCL,
BUILT_IN_ERFF,
BUILT_IN_ERFL,
BUILT_IN_EXP,
BUILT_IN_EXP10,
BUILT_IN_EXP10F,
BUILT_IN_EXP10L,
BUILT_IN_EXP2,
BUILT_IN_EXP2F,
BUILT_IN_EXP2L,
BUILT_IN_EXPF,
BUILT_IN_EXPL,
BUILT_IN_EXPM1,
BUILT_IN_EXPM1F,
BUILT_IN_EXPM1L,
BUILT_IN_FABS,
BUILT_IN_FABSF,
BUILT_IN_FABSL,
BUILT_IN_FABSD32,
BUILT_IN_FABSD64,
BUILT_IN_FABSD128,
BUILT_IN_FDIM,
BUILT_IN_FDIMF,
BUILT_IN_FDIML,
BUILT_IN_FLOOR,
BUILT_IN_FLOORF,
BUILT_IN_FLOORL,
BUILT_IN_FMA,
BUILT_IN_FMAF,
BUILT_IN_FMAL,
BUILT_IN_FMAX,
BUILT_IN_FMAXF,
BUILT_IN_FMAXL,
BUILT_IN_FMIN,
BUILT_IN_FMINF,
BUILT_IN_FMINL,
BUILT_IN_FMOD,
BUILT_IN_FMODF,
BUILT_IN_FMODL,
BUILT_IN_FREXP,
BUILT_IN_FREXPF,
BUILT_IN_FREXPL,
BUILT_IN_GAMMA,
BUILT_IN_GAMMAF,
BUILT_IN_GAMMAL,
BUILT_IN_GAMMA_R,
BUILT_IN_GAMMAF_R,
BUILT_IN_GAMMAL_R,
BUILT_IN_HUGE_VAL,
BUILT_IN_HUGE_VALF,
BUILT_IN_HUGE_VALL,
BUILT_IN_HYPOT,
BUILT_IN_HYPOTF,
BUILT_IN_HYPOTL,
BUILT_IN_ICEIL,
BUILT_IN_ICEILF,
BUILT_IN_ICEILL,
BUILT_IN_IFLOOR,
BUILT_IN_IFLOORF,
BUILT_IN_IFLOORL,
BUILT_IN_ILOGB,
BUILT_IN_ILOGBF,
BUILT_IN_ILOGBL,
BUILT_IN_INF,
BUILT_IN_INFF,
BUILT_IN_INFL,
BUILT_IN_INFD32,
BUILT_IN_INFD64,
BUILT_IN_INFD128,
BUILT_IN_IRINT,
BUILT_IN_IRINTF,
BUILT_IN_IRINTL,
BUILT_IN_IROUND,
BUILT_IN_IROUNDF,
BUILT_IN_IROUNDL,
BUILT_IN_J0,
BUILT_IN_J0F,
BUILT_IN_J0L,
BUILT_IN_J1,
BUILT_IN_J1F,
BUILT_IN_J1L,
BUILT_IN_JN,
BUILT_IN_JNF,
BUILT_IN_JNL,
BUILT_IN_LCEIL,
BUILT_IN_LCEILF,
BUILT_IN_LCEILL,
BUILT_IN_LDEXP,
BUILT_IN_LDEXPF,
BUILT_IN_LDEXPL,
BUILT_IN_LFLOOR,
BUILT_IN_LFLOORF,
BUILT_IN_LFLOORL,
BUILT_IN_LGAMMA,
BUILT_IN_LGAMMAF,
BUILT_IN_LGAMMAL,
BUILT_IN_LGAMMA_R,
BUILT_IN_LGAMMAF_R,
BUILT_IN_LGAMMAL_R,
BUILT_IN_LLCEIL,
BUILT_IN_LLCEILF,
BUILT_IN_LLCEILL,
BUILT_IN_LLFLOOR,
BUILT_IN_LLFLOORF,
BUILT_IN_LLFLOORL,
BUILT_IN_LLRINT,
BUILT_IN_LLRINTF,
BUILT_IN_LLRINTL,
BUILT_IN_LLROUND,
BUILT_IN_LLROUNDF,
BUILT_IN_LLROUNDL,
BUILT_IN_LOG,
BUILT_IN_LOG10,
BUILT_IN_LOG10F,
BUILT_IN_LOG10L,
BUILT_IN_LOG1P,
BUILT_IN_LOG1PF,
BUILT_IN_LOG1PL,
BUILT_IN_LOG2,
BUILT_IN_LOG2F,
BUILT_IN_LOG2L,
BUILT_IN_LOGB,
BUILT_IN_LOGBF,
BUILT_IN_LOGBL,
BUILT_IN_LOGF,
BUILT_IN_LOGL,
BUILT_IN_LRINT,
BUILT_IN_LRINTF,
BUILT_IN_LRINTL,
BUILT_IN_LROUND,
BUILT_IN_LROUNDF,
BUILT_IN_LROUNDL,
BUILT_IN_MODF,
BUILT_IN_MODFF,
BUILT_IN_MODFL,
BUILT_IN_NAN,
BUILT_IN_NANF,
BUILT_IN_NANL,
BUILT_IN_NAND32,
BUILT_IN_NAND64,
BUILT_IN_NAND128,
BUILT_IN_NANS,
BUILT_IN_NANSF,
BUILT_IN_NANSL,
BUILT_IN_NEARBYINT,
BUILT_IN_NEARBYINTF,
BUILT_IN_NEARBYINTL,
BUILT_IN_NEXTAFTER,
BUILT_IN_NEXTAFTERF,
BUILT_IN_NEXTAFTERL,
BUILT_IN_NEXTTOWARD,
BUILT_IN_NEXTTOWARDF,
BUILT_IN_NEXTTOWARDL,
BUILT_IN_POW,
BUILT_IN_POW10,
BUILT_IN_POW10F,
BUILT_IN_POW10L,
BUILT_IN_POWF,
BUILT_IN_POWI,
BUILT_IN_POWIF,
BUILT_IN_POWIL,
BUILT_IN_POWL,
BUILT_IN_REMAINDER,
BUILT_IN_REMAINDERF,
BUILT_IN_REMAINDERL,
BUILT_IN_REMQUO,
BUILT_IN_REMQUOF,
BUILT_IN_REMQUOL,
BUILT_IN_RINT,
BUILT_IN_RINTF,
BUILT_IN_RINTL,
BUILT_IN_ROUND,
BUILT_IN_ROUNDF,
BUILT_IN_ROUNDL,
BUILT_IN_SCALB,
BUILT_IN_SCALBF,
BUILT_IN_SCALBL,
BUILT_IN_SCALBLN,
BUILT_IN_SCALBLNF,
BUILT_IN_SCALBLNL,
BUILT_IN_SCALBN,
BUILT_IN_SCALBNF,
BUILT_IN_SCALBNL,
BUILT_IN_SIGNBIT,
BUILT_IN_SIGNBITF,
BUILT_IN_SIGNBITL,
BUILT_IN_SIGNBITD32,
BUILT_IN_SIGNBITD64,
BUILT_IN_SIGNBITD128,
BUILT_IN_SIGNIFICAND,
BUILT_IN_SIGNIFICANDF,
BUILT_IN_SIGNIFICANDL,
BUILT_IN_SIN,
BUILT_IN_SINCOS,
BUILT_IN_SINCOSF,
BUILT_IN_SINCOSL,
BUILT_IN_SINF,
BUILT_IN_SINH,
BUILT_IN_SINHF,
BUILT_IN_SINHL,
BUILT_IN_SINL,
BUILT_IN_SQRT,
BUILT_IN_SQRTF,
BUILT_IN_SQRTL,
BUILT_IN_TAN,
BUILT_IN_TANF,
BUILT_IN_TANH,
BUILT_IN_TANHF,
BUILT_IN_TANHL,
BUILT_IN_TANL,
BUILT_IN_TGAMMA,
BUILT_IN_TGAMMAF,
BUILT_IN_TGAMMAL,
BUILT_IN_TRUNC,
BUILT_IN_TRUNCF,
BUILT_IN_TRUNCL,
BUILT_IN_Y0,
BUILT_IN_Y0F,
BUILT_IN_Y0L,
BUILT_IN_Y1,
BUILT_IN_Y1F,
BUILT_IN_Y1L,
BUILT_IN_YN,
BUILT_IN_YNF,
BUILT_IN_YNL,
BUILT_IN_CABS,
BUILT_IN_CABSF,
BUILT_IN_CABSL,
BUILT_IN_CACOS,
BUILT_IN_CACOSF,
BUILT_IN_CACOSH,
BUILT_IN_CACOSHF,
BUILT_IN_CACOSHL,
BUILT_IN_CACOSL,
BUILT_IN_CARG,
BUILT_IN_CARGF,
BUILT_IN_CARGL,
BUILT_IN_CASIN,
BUILT_IN_CASINF,
BUILT_IN_CASINH,
BUILT_IN_CASINHF,
BUILT_IN_CASINHL,
BUILT_IN_CASINL,
BUILT_IN_CATAN,
BUILT_IN_CATANF,
BUILT_IN_CATANH,
BUILT_IN_CATANHF,
BUILT_IN_CATANHL,
BUILT_IN_CATANL,
BUILT_IN_CCOS,
BUILT_IN_CCOSF,
BUILT_IN_CCOSH,
BUILT_IN_CCOSHF,
BUILT_IN_CCOSHL,
BUILT_IN_CCOSL,
BUILT_IN_CEXP,
BUILT_IN_CEXPF,
BUILT_IN_CEXPL,
BUILT_IN_CEXPI,
BUILT_IN_CEXPIF,
BUILT_IN_CEXPIL,
BUILT_IN_CIMAG,
BUILT_IN_CIMAGF,
BUILT_IN_CIMAGL,
BUILT_IN_CLOG,
BUILT_IN_CLOGF,
BUILT_IN_CLOGL,
BUILT_IN_CLOG10,
BUILT_IN_CLOG10F,
BUILT_IN_CLOG10L,
BUILT_IN_CONJ,
BUILT_IN_CONJF,
BUILT_IN_CONJL,
BUILT_IN_CPOW,
BUILT_IN_CPOWF,
BUILT_IN_CPOWL,
BUILT_IN_CPROJ,
BUILT_IN_CPROJF,
BUILT_IN_CPROJL,
BUILT_IN_CREAL,
BUILT_IN_CREALF,
BUILT_IN_CREALL,
BUILT_IN_CSIN,
BUILT_IN_CSINF,
BUILT_IN_CSINH,
BUILT_IN_CSINHF,
BUILT_IN_CSINHL,
BUILT_IN_CSINL,
BUILT_IN_CSQRT,
BUILT_IN_CSQRTF,
BUILT_IN_CSQRTL,
BUILT_IN_CTAN,
BUILT_IN_CTANF,
BUILT_IN_CTANH,
BUILT_IN_CTANHF,
BUILT_IN_CTANHL,
BUILT_IN_CTANL,
BUILT_IN_BCMP,
BUILT_IN_BCOPY,
BUILT_IN_BZERO,
BUILT_IN_INDEX,
BUILT_IN_MEMCHR,
BUILT_IN_MEMCMP,
BUILT_IN_MEMCPY,
BUILT_IN_MEMMOVE,
BUILT_IN_MEMPCPY,
BUILT_IN_MEMSET,
BUILT_IN_RINDEX,
BUILT_IN_STPCPY,
BUILT_IN_STPNCPY,
BUILT_IN_STRCASECMP,
BUILT_IN_STRCAT,
BUILT_IN_STRCHR,
BUILT_IN_STRCMP,
BUILT_IN_STRCPY,
BUILT_IN_STRCSPN,
BUILT_IN_STRDUP,
BUILT_IN_STRNDUP,
BUILT_IN_STRLEN,
BUILT_IN_STRNCASECMP,
BUILT_IN_STRNCAT,
BUILT_IN_STRNCMP,
BUILT_IN_STRNCPY,
BUILT_IN_STRPBRK,
BUILT_IN_STRRCHR,
BUILT_IN_STRSPN,
BUILT_IN_STRSTR,
BUILT_IN_FPRINTF,
BUILT_IN_FPRINTF_UNLOCKED,
BUILT_IN_PUTC,
BUILT_IN_PUTC_UNLOCKED,
BUILT_IN_FPUTC,
BUILT_IN_FPUTC_UNLOCKED,
BUILT_IN_FPUTS,
BUILT_IN_FPUTS_UNLOCKED,
BUILT_IN_FSCANF,
BUILT_IN_FWRITE,
BUILT_IN_FWRITE_UNLOCKED,
BUILT_IN_PRINTF,
BUILT_IN_PRINTF_UNLOCKED,
BUILT_IN_PUTCHAR,
BUILT_IN_PUTCHAR_UNLOCKED,
BUILT_IN_PUTS,
BUILT_IN_PUTS_UNLOCKED,
BUILT_IN_SCANF,
BUILT_IN_SNPRINTF,
BUILT_IN_SPRINTF,
BUILT_IN_SSCANF,
BUILT_IN_VFPRINTF,
BUILT_IN_VFSCANF,
BUILT_IN_VPRINTF,
BUILT_IN_VSCANF,
BUILT_IN_VSNPRINTF,
BUILT_IN_VSPRINTF,
BUILT_IN_VSSCANF,
BUILT_IN_ISALNUM,
BUILT_IN_ISALPHA,
BUILT_IN_ISASCII,
BUILT_IN_ISBLANK,
BUILT_IN_ISCNTRL,
BUILT_IN_ISDIGIT,
BUILT_IN_ISGRAPH,
BUILT_IN_ISLOWER,
BUILT_IN_ISPRINT,
BUILT_IN_ISPUNCT,
BUILT_IN_ISSPACE,
BUILT_IN_ISUPPER,
BUILT_IN_ISXDIGIT,
BUILT_IN_TOASCII,
BUILT_IN_TOLOWER,
BUILT_IN_TOUPPER,
BUILT_IN_ISWALNUM,
BUILT_IN_ISWALPHA,
BUILT_IN_ISWBLANK,
BUILT_IN_ISWCNTRL,
BUILT_IN_ISWDIGIT,
BUILT_IN_ISWGRAPH,
BUILT_IN_ISWLOWER,
BUILT_IN_ISWPRINT,
BUILT_IN_ISWPUNCT,
BUILT_IN_ISWSPACE,
BUILT_IN_ISWUPPER,
BUILT_IN_ISWXDIGIT,
BUILT_IN_TOWLOWER,
BUILT_IN_TOWUPPER,
BUILT_IN_ADD_OVERFLOW,
BUILT_IN_SUB_OVERFLOW,
BUILT_IN_MUL_OVERFLOW,
BUILT_IN_SADD_OVERFLOW,
BUILT_IN_SADDL_OVERFLOW,
BUILT_IN_SADDLL_OVERFLOW,
BUILT_IN_SSUB_OVERFLOW,
BUILT_IN_SSUBL_OVERFLOW,
BUILT_IN_SSUBLL_OVERFLOW,
BUILT_IN_SMUL_OVERFLOW,
BUILT_IN_SMULL_OVERFLOW,
BUILT_IN_SMULLL_OVERFLOW,
BUILT_IN_UADD_OVERFLOW,
BUILT_IN_UADDL_OVERFLOW,
BUILT_IN_UADDLL_OVERFLOW,
BUILT_IN_USUB_OVERFLOW,
BUILT_IN_USUBL_OVERFLOW,
BUILT_IN_USUBLL_OVERFLOW,
BUILT_IN_UMUL_OVERFLOW,
BUILT_IN_UMULL_OVERFLOW,
BUILT_IN_UMULLL_OVERFLOW,
BUILT_IN_ABORT,
BUILT_IN_ABS,
BUILT_IN_AGGREGATE_INCOMING_ADDRESS,
BUILT_IN_ALLOCA,
BUILT_IN_APPLY,
BUILT_IN_APPLY_ARGS,
BUILT_IN_BSWAP16,
BUILT_IN_BSWAP32,
BUILT_IN_BSWAP64,
BUILT_IN_CLEAR_CACHE,
BUILT_IN_CALLOC,
BUILT_IN_CLASSIFY_TYPE,
BUILT_IN_CLZ,
BUILT_IN_CLZIMAX,
BUILT_IN_CLZL,
BUILT_IN_CLZLL,
BUILT_IN_CONSTANT_P,
BUILT_IN_CTZ,
BUILT_IN_CTZIMAX,
BUILT_IN_CTZL,
BUILT_IN_CTZLL,
BUILT_IN_CLRSB,
BUILT_IN_CLRSBIMAX,
BUILT_IN_CLRSBL,
BUILT_IN_CLRSBLL,
BUILT_IN_DCGETTEXT,
BUILT_IN_DGETTEXT,
BUILT_IN_DWARF_CFA,
BUILT_IN_DWARF_SP_COLUMN,
BUILT_IN_EH_RETURN,
BUILT_IN_EH_RETURN_DATA_REGNO,
BUILT_IN_EXECL,
BUILT_IN_EXECLP,
BUILT_IN_EXECLE,
BUILT_IN_EXECV,
BUILT_IN_EXECVP,
BUILT_IN_EXECVE,
BUILT_IN_EXIT,
BUILT_IN_EXPECT,
BUILT_IN_ASSUME_ALIGNED,
BUILT_IN_EXTEND_POINTER,
BUILT_IN_EXTRACT_RETURN_ADDR,
BUILT_IN_FFS,
BUILT_IN_FFSIMAX,
BUILT_IN_FFSL,
BUILT_IN_FFSLL,
BUILT_IN_FORK,
BUILT_IN_FRAME_ADDRESS,
BUILT_IN_FREE,
BUILT_IN_FROB_RETURN_ADDR,
BUILT_IN_GETTEXT,
BUILT_IN_IMAXABS,
BUILT_IN_INIT_DWARF_REG_SIZES,
BUILT_IN_FINITE,
BUILT_IN_FINITEF,
BUILT_IN_FINITEL,
BUILT_IN_FINITED32,
BUILT_IN_FINITED64,
BUILT_IN_FINITED128,
BUILT_IN_FPCLASSIFY,
BUILT_IN_ISFINITE,
BUILT_IN_ISINF_SIGN,
BUILT_IN_ISINF,
BUILT_IN_ISINFF,
BUILT_IN_ISINFL,
BUILT_IN_ISINFD32,
BUILT_IN_ISINFD64,
BUILT_IN_ISINFD128,
BUILT_IN_ISNAN,
BUILT_IN_ISNANF,
BUILT_IN_ISNANL,
BUILT_IN_ISNAND32,
BUILT_IN_ISNAND64,
BUILT_IN_ISNAND128,
BUILT_IN_ISNORMAL,
BUILT_IN_ISGREATER,
BUILT_IN_ISGREATEREQUAL,
BUILT_IN_ISLESS,
BUILT_IN_ISLESSEQUAL,
BUILT_IN_ISLESSGREATER,
BUILT_IN_ISUNORDERED,
BUILT_IN_LABS,
BUILT_IN_LLABS,
BUILT_IN_LONGJMP,
BUILT_IN_MALLOC,
BUILT_IN_NEXT_ARG,
BUILT_IN_PARITY,
BUILT_IN_PARITYIMAX,
BUILT_IN_PARITYL,
BUILT_IN_PARITYLL,
BUILT_IN_POPCOUNT,
BUILT_IN_POPCOUNTIMAX,
BUILT_IN_POPCOUNTL,
BUILT_IN_POPCOUNTLL,
BUILT_IN_POSIX_MEMALIGN,
BUILT_IN_PREFETCH,
BUILT_IN_REALLOC,
BUILT_IN_RETURN,
BUILT_IN_RETURN_ADDRESS,
BUILT_IN_SAVEREGS,
BUILT_IN_SETJMP,
BUILT_IN_STRFMON,
BUILT_IN_STRFTIME,
BUILT_IN_TRAP,
BUILT_IN_UNREACHABLE,
BUILT_IN_UNWIND_INIT,
BUILT_IN_UPDATE_SETJMP_BUF,
BUILT_IN_VA_COPY,
BUILT_IN_VA_END,
BUILT_IN_VA_START,
BUILT_IN_VA_ARG_PACK,
BUILT_IN_VA_ARG_PACK_LEN,
BUILT_IN__EXIT,
BUILT_IN__EXIT2,
BUILT_IN_INIT_TRAMPOLINE,
BUILT_IN_INIT_HEAP_TRAMPOLINE,
BUILT_IN_ADJUST_TRAMPOLINE,
BUILT_IN_NONLOCAL_GOTO,
BUILT_IN_SETJMP_SETUP,
BUILT_IN_SETJMP_RECEIVER,
BUILT_IN_STACK_SAVE,
BUILT_IN_STACK_RESTORE,
BUILT_IN_ALLOCA_WITH_ALIGN,
BUILT_IN_OBJECT_SIZE,
BUILT_IN_MEMCPY_CHK,
BUILT_IN_MEMMOVE_CHK,
BUILT_IN_MEMPCPY_CHK,
BUILT_IN_MEMSET_CHK,
BUILT_IN_STPCPY_CHK,
BUILT_IN_STPNCPY_CHK,
BUILT_IN_STRCAT_CHK,
BUILT_IN_STRCPY_CHK,
BUILT_IN_STRNCAT_CHK,
BUILT_IN_STRNCPY_CHK,
BUILT_IN_SNPRINTF_CHK,
BUILT_IN_SPRINTF_CHK,
BUILT_IN_VSNPRINTF_CHK,
BUILT_IN_VSPRINTF_CHK,
BUILT_IN_FPRINTF_CHK,
BUILT_IN_PRINTF_CHK,
BUILT_IN_VFPRINTF_CHK,
BUILT_IN_VPRINTF_CHK,
BUILT_IN_PROFILE_FUNC_ENTER,
BUILT_IN_PROFILE_FUNC_EXIT,
BUILT_IN_THREAD_POINTER,
BUILT_IN_SET_THREAD_POINTER,
BUILT_IN_EMUTLS_GET_ADDRESS,
BUILT_IN_EMUTLS_REGISTER_COMMON,
BUILT_IN_UNWIND_RESUME,
BUILT_IN_CXA_END_CLEANUP,
BUILT_IN_EH_POINTER,
BUILT_IN_EH_FILTER,
BUILT_IN_EH_COPY_VALUES,
BUILT_IN_FILE,
BUILT_IN_FUNCTION,
BUILT_IN_LINE,
// 1 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/sync-builtins.def" 1
// 31 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/sync-builtins.def"
BUILT_IN_SYNC_FETCH_AND_ADD_N,
BUILT_IN_SYNC_FETCH_AND_ADD_1,
BUILT_IN_SYNC_FETCH_AND_ADD_2,
BUILT_IN_SYNC_FETCH_AND_ADD_4,
BUILT_IN_SYNC_FETCH_AND_ADD_8,
BUILT_IN_SYNC_FETCH_AND_ADD_16,
BUILT_IN_SYNC_FETCH_AND_SUB_N,
BUILT_IN_SYNC_FETCH_AND_SUB_1,
BUILT_IN_SYNC_FETCH_AND_SUB_2,
BUILT_IN_SYNC_FETCH_AND_SUB_4,
BUILT_IN_SYNC_FETCH_AND_SUB_8,
BUILT_IN_SYNC_FETCH_AND_SUB_16,
BUILT_IN_SYNC_FETCH_AND_OR_N,
BUILT_IN_SYNC_FETCH_AND_OR_1,
BUILT_IN_SYNC_FETCH_AND_OR_2,
BUILT_IN_SYNC_FETCH_AND_OR_4,
BUILT_IN_SYNC_FETCH_AND_OR_8,
BUILT_IN_SYNC_FETCH_AND_OR_16,
BUILT_IN_SYNC_FETCH_AND_AND_N,
BUILT_IN_SYNC_FETCH_AND_AND_1,
BUILT_IN_SYNC_FETCH_AND_AND_2,
BUILT_IN_SYNC_FETCH_AND_AND_4,
BUILT_IN_SYNC_FETCH_AND_AND_8,
BUILT_IN_SYNC_FETCH_AND_AND_16,
BUILT_IN_SYNC_FETCH_AND_XOR_N,
BUILT_IN_SYNC_FETCH_AND_XOR_1,
BUILT_IN_SYNC_FETCH_AND_XOR_2,
BUILT_IN_SYNC_FETCH_AND_XOR_4,
BUILT_IN_SYNC_FETCH_AND_XOR_8,
BUILT_IN_SYNC_FETCH_AND_XOR_16,
BUILT_IN_SYNC_FETCH_AND_NAND_N,
BUILT_IN_SYNC_FETCH_AND_NAND_1,
BUILT_IN_SYNC_FETCH_AND_NAND_2,
BUILT_IN_SYNC_FETCH_AND_NAND_4,
BUILT_IN_SYNC_FETCH_AND_NAND_8,
BUILT_IN_SYNC_FETCH_AND_NAND_16,
BUILT_IN_SYNC_ADD_AND_FETCH_N,
BUILT_IN_SYNC_ADD_AND_FETCH_1,
BUILT_IN_SYNC_ADD_AND_FETCH_2,
BUILT_IN_SYNC_ADD_AND_FETCH_4,
BUILT_IN_SYNC_ADD_AND_FETCH_8,
BUILT_IN_SYNC_ADD_AND_FETCH_16,
BUILT_IN_SYNC_SUB_AND_FETCH_N,
BUILT_IN_SYNC_SUB_AND_FETCH_1,
BUILT_IN_SYNC_SUB_AND_FETCH_2,
BUILT_IN_SYNC_SUB_AND_FETCH_4,
BUILT_IN_SYNC_SUB_AND_FETCH_8,
BUILT_IN_SYNC_SUB_AND_FETCH_16,
BUILT_IN_SYNC_OR_AND_FETCH_N,
BUILT_IN_SYNC_OR_AND_FETCH_1,
BUILT_IN_SYNC_OR_AND_FETCH_2,
BUILT_IN_SYNC_OR_AND_FETCH_4,
BUILT_IN_SYNC_OR_AND_FETCH_8,
BUILT_IN_SYNC_OR_AND_FETCH_16,
BUILT_IN_SYNC_AND_AND_FETCH_N,
BUILT_IN_SYNC_AND_AND_FETCH_1,
BUILT_IN_SYNC_AND_AND_FETCH_2,
BUILT_IN_SYNC_AND_AND_FETCH_4,
BUILT_IN_SYNC_AND_AND_FETCH_8,
BUILT_IN_SYNC_AND_AND_FETCH_16,
BUILT_IN_SYNC_XOR_AND_FETCH_N,
BUILT_IN_SYNC_XOR_AND_FETCH_1,
BUILT_IN_SYNC_XOR_AND_FETCH_2,
BUILT_IN_SYNC_XOR_AND_FETCH_4,
BUILT_IN_SYNC_XOR_AND_FETCH_8,
BUILT_IN_SYNC_XOR_AND_FETCH_16,
BUILT_IN_SYNC_NAND_AND_FETCH_N,
BUILT_IN_SYNC_NAND_AND_FETCH_1,
BUILT_IN_SYNC_NAND_AND_FETCH_2,
BUILT_IN_SYNC_NAND_AND_FETCH_4,
BUILT_IN_SYNC_NAND_AND_FETCH_8,
BUILT_IN_SYNC_NAND_AND_FETCH_16,
BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_N,
BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_1,
BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_2,
BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_4,
BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_8,
BUILT_IN_SYNC_BOOL_COMPARE_AND_SWAP_16,
BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_N,
BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_1,
BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_2,
BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_4,
BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_8,
BUILT_IN_SYNC_VAL_COMPARE_AND_SWAP_16,
BUILT_IN_SYNC_LOCK_TEST_AND_SET_N,
BUILT_IN_SYNC_LOCK_TEST_AND_SET_1,
BUILT_IN_SYNC_LOCK_TEST_AND_SET_2,
BUILT_IN_SYNC_LOCK_TEST_AND_SET_4,
BUILT_IN_SYNC_LOCK_TEST_AND_SET_8,
BUILT_IN_SYNC_LOCK_TEST_AND_SET_16,
BUILT_IN_SYNC_LOCK_RELEASE_N,
BUILT_IN_SYNC_LOCK_RELEASE_1,
BUILT_IN_SYNC_LOCK_RELEASE_2,
BUILT_IN_SYNC_LOCK_RELEASE_4,
BUILT_IN_SYNC_LOCK_RELEASE_8,
BUILT_IN_SYNC_LOCK_RELEASE_16,
BUILT_IN_SYNC_SYNCHRONIZE,
BUILT_IN_ATOMIC_TEST_AND_SET,
BUILT_IN_ATOMIC_CLEAR,
BUILT_IN_ATOMIC_EXCHANGE,
BUILT_IN_ATOMIC_EXCHANGE_N,
BUILT_IN_ATOMIC_EXCHANGE_1,
BUILT_IN_ATOMIC_EXCHANGE_2,
BUILT_IN_ATOMIC_EXCHANGE_4,
BUILT_IN_ATOMIC_EXCHANGE_8,
BUILT_IN_ATOMIC_EXCHANGE_16,
BUILT_IN_ATOMIC_LOAD,
BUILT_IN_ATOMIC_LOAD_N,
BUILT_IN_ATOMIC_LOAD_1,
BUILT_IN_ATOMIC_LOAD_2,
BUILT_IN_ATOMIC_LOAD_4,
BUILT_IN_ATOMIC_LOAD_8,
BUILT_IN_ATOMIC_LOAD_16,
BUILT_IN_ATOMIC_COMPARE_EXCHANGE,
BUILT_IN_ATOMIC_COMPARE_EXCHANGE_N,
BUILT_IN_ATOMIC_COMPARE_EXCHANGE_1,
BUILT_IN_ATOMIC_COMPARE_EXCHANGE_2,
BUILT_IN_ATOMIC_COMPARE_EXCHANGE_4,
BUILT_IN_ATOMIC_COMPARE_EXCHANGE_8,
BUILT_IN_ATOMIC_COMPARE_EXCHANGE_16,
BUILT_IN_ATOMIC_STORE,
BUILT_IN_ATOMIC_STORE_N,
BUILT_IN_ATOMIC_STORE_1,
BUILT_IN_ATOMIC_STORE_2,
BUILT_IN_ATOMIC_STORE_4,
BUILT_IN_ATOMIC_STORE_8,
BUILT_IN_ATOMIC_STORE_16,
BUILT_IN_ATOMIC_ADD_FETCH_N,
BUILT_IN_ATOMIC_ADD_FETCH_1,
BUILT_IN_ATOMIC_ADD_FETCH_2,
BUILT_IN_ATOMIC_ADD_FETCH_4,
BUILT_IN_ATOMIC_ADD_FETCH_8,
BUILT_IN_ATOMIC_ADD_FETCH_16,
BUILT_IN_ATOMIC_SUB_FETCH_N,
BUILT_IN_ATOMIC_SUB_FETCH_1,
BUILT_IN_ATOMIC_SUB_FETCH_2,
BUILT_IN_ATOMIC_SUB_FETCH_4,
BUILT_IN_ATOMIC_SUB_FETCH_8,
BUILT_IN_ATOMIC_SUB_FETCH_16,
BUILT_IN_ATOMIC_AND_FETCH_N,
BUILT_IN_ATOMIC_AND_FETCH_1,
BUILT_IN_ATOMIC_AND_FETCH_2,
BUILT_IN_ATOMIC_AND_FETCH_4,
BUILT_IN_ATOMIC_AND_FETCH_8,
BUILT_IN_ATOMIC_AND_FETCH_16,
BUILT_IN_ATOMIC_NAND_FETCH_N,
BUILT_IN_ATOMIC_NAND_FETCH_1,
BUILT_IN_ATOMIC_NAND_FETCH_2,
BUILT_IN_ATOMIC_NAND_FETCH_4,
BUILT_IN_ATOMIC_NAND_FETCH_8,
BUILT_IN_ATOMIC_NAND_FETCH_16,
BUILT_IN_ATOMIC_XOR_FETCH_N,
BUILT_IN_ATOMIC_XOR_FETCH_1,
BUILT_IN_ATOMIC_XOR_FETCH_2,
BUILT_IN_ATOMIC_XOR_FETCH_4,
BUILT_IN_ATOMIC_XOR_FETCH_8,
BUILT_IN_ATOMIC_XOR_FETCH_16,
BUILT_IN_ATOMIC_OR_FETCH_N,
BUILT_IN_ATOMIC_OR_FETCH_1,
BUILT_IN_ATOMIC_OR_FETCH_2,
BUILT_IN_ATOMIC_OR_FETCH_4,
BUILT_IN_ATOMIC_OR_FETCH_8,
BUILT_IN_ATOMIC_OR_FETCH_16,
BUILT_IN_ATOMIC_FETCH_ADD_N,
BUILT_IN_ATOMIC_FETCH_ADD_1,
BUILT_IN_ATOMIC_FETCH_ADD_2,
BUILT_IN_ATOMIC_FETCH_ADD_4,
BUILT_IN_ATOMIC_FETCH_ADD_8,
BUILT_IN_ATOMIC_FETCH_ADD_16,
BUILT_IN_ATOMIC_FETCH_SUB_N,
BUILT_IN_ATOMIC_FETCH_SUB_1,
BUILT_IN_ATOMIC_FETCH_SUB_2,
BUILT_IN_ATOMIC_FETCH_SUB_4,
BUILT_IN_ATOMIC_FETCH_SUB_8,
BUILT_IN_ATOMIC_FETCH_SUB_16,
BUILT_IN_ATOMIC_FETCH_AND_N,
BUILT_IN_ATOMIC_FETCH_AND_1,
BUILT_IN_ATOMIC_FETCH_AND_2,
BUILT_IN_ATOMIC_FETCH_AND_4,
BUILT_IN_ATOMIC_FETCH_AND_8,
BUILT_IN_ATOMIC_FETCH_AND_16,
BUILT_IN_ATOMIC_FETCH_NAND_N,
BUILT_IN_ATOMIC_FETCH_NAND_1,
BUILT_IN_ATOMIC_FETCH_NAND_2,
BUILT_IN_ATOMIC_FETCH_NAND_4,
BUILT_IN_ATOMIC_FETCH_NAND_8,
BUILT_IN_ATOMIC_FETCH_NAND_16,
BUILT_IN_ATOMIC_FETCH_XOR_N,
BUILT_IN_ATOMIC_FETCH_XOR_1,
BUILT_IN_ATOMIC_FETCH_XOR_2,
BUILT_IN_ATOMIC_FETCH_XOR_4,
BUILT_IN_ATOMIC_FETCH_XOR_8,
BUILT_IN_ATOMIC_FETCH_XOR_16,
BUILT_IN_ATOMIC_FETCH_OR_N,
BUILT_IN_ATOMIC_FETCH_OR_1,
BUILT_IN_ATOMIC_FETCH_OR_2,
BUILT_IN_ATOMIC_FETCH_OR_4,
BUILT_IN_ATOMIC_FETCH_OR_8,
BUILT_IN_ATOMIC_FETCH_OR_16,
BUILT_IN_ATOMIC_ALWAYS_LOCK_FREE,
BUILT_IN_ATOMIC_IS_LOCK_FREE,
BUILT_IN_ATOMIC_THREAD_FENCE,
BUILT_IN_ATOMIC_SIGNAL_FENCE,
BUILT_IN_ATOMIC_FERAISEEXCEPT,
BUILT_IN_ACC_GET_DEVICE_TYPE,
BUILT_IN_GOACC_DATA_START,
BUILT_IN_GOACC_DATA_END,
BUILT_IN_GOACC_ENTER_EXIT_DATA,
BUILT_IN_GOACC_PARALLEL,
BUILT_IN_GOACC_UPDATE,
BUILT_IN_GOACC_WAIT,
BUILT_IN_GOACC_GET_THREAD_NUM,
BUILT_IN_GOACC_GET_NUM_THREADS,
BUILT_IN_ACC_ON_DEVICE,
BUILT_IN_OMP_GET_THREAD_NUM,
BUILT_IN_OMP_GET_NUM_THREADS,
BUILT_IN_OMP_GET_TEAM_NUM,
BUILT_IN_OMP_GET_NUM_TEAMS,
BUILT_IN_GOMP_ATOMIC_START,
BUILT_IN_GOMP_ATOMIC_END,
BUILT_IN_GOMP_BARRIER,
BUILT_IN_GOMP_BARRIER_CANCEL,
BUILT_IN_GOMP_TASKWAIT,
BUILT_IN_GOMP_TASKYIELD,
BUILT_IN_GOMP_TASKGROUP_START,
BUILT_IN_GOMP_TASKGROUP_END,
BUILT_IN_GOMP_CANCEL,
BUILT_IN_GOMP_CANCELLATION_POINT,
BUILT_IN_GOMP_CRITICAL_START,
BUILT_IN_GOMP_CRITICAL_END,
BUILT_IN_GOMP_CRITICAL_NAME_START,
BUILT_IN_GOMP_CRITICAL_NAME_END,
BUILT_IN_GOMP_LOOP_STATIC_START,
BUILT_IN_GOMP_LOOP_DYNAMIC_START,
BUILT_IN_GOMP_LOOP_GUIDED_START,
BUILT_IN_GOMP_LOOP_RUNTIME_START,
BUILT_IN_GOMP_LOOP_ORDERED_STATIC_START,
BUILT_IN_GOMP_LOOP_ORDERED_DYNAMIC_START,
BUILT_IN_GOMP_LOOP_ORDERED_GUIDED_START,
BUILT_IN_GOMP_LOOP_ORDERED_RUNTIME_START,
BUILT_IN_GOMP_LOOP_STATIC_NEXT,
BUILT_IN_GOMP_LOOP_DYNAMIC_NEXT,
BUILT_IN_GOMP_LOOP_GUIDED_NEXT,
BUILT_IN_GOMP_LOOP_RUNTIME_NEXT,
BUILT_IN_GOMP_LOOP_ORDERED_STATIC_NEXT,
BUILT_IN_GOMP_LOOP_ORDERED_DYNAMIC_NEXT,
BUILT_IN_GOMP_LOOP_ORDERED_GUIDED_NEXT,
BUILT_IN_GOMP_LOOP_ORDERED_RUNTIME_NEXT,
BUILT_IN_GOMP_LOOP_ULL_STATIC_START,
BUILT_IN_GOMP_LOOP_ULL_DYNAMIC_START,
BUILT_IN_GOMP_LOOP_ULL_GUIDED_START,
BUILT_IN_GOMP_LOOP_ULL_RUNTIME_START,
BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_START,
BUILT_IN_GOMP_LOOP_ULL_ORDERED_DYNAMIC_START,
BUILT_IN_GOMP_LOOP_ULL_ORDERED_GUIDED_START,
BUILT_IN_GOMP_LOOP_ULL_ORDERED_RUNTIME_START,
BUILT_IN_GOMP_LOOP_ULL_STATIC_NEXT,
BUILT_IN_GOMP_LOOP_ULL_DYNAMIC_NEXT,
BUILT_IN_GOMP_LOOP_ULL_GUIDED_NEXT,
BUILT_IN_GOMP_LOOP_ULL_RUNTIME_NEXT,
BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_NEXT,
BUILT_IN_GOMP_LOOP_ULL_ORDERED_DYNAMIC_NEXT,
BUILT_IN_GOMP_LOOP_ULL_ORDERED_GUIDED_NEXT,
BUILT_IN_GOMP_LOOP_ULL_ORDERED_RUNTIME_NEXT,
BUILT_IN_GOMP_PARALLEL_LOOP_STATIC,
BUILT_IN_GOMP_PARALLEL_LOOP_DYNAMIC,
BUILT_IN_GOMP_PARALLEL_LOOP_GUIDED,
BUILT_IN_GOMP_PARALLEL_LOOP_RUNTIME,
BUILT_IN_GOMP_LOOP_END,
BUILT_IN_GOMP_LOOP_END_CANCEL,
BUILT_IN_GOMP_LOOP_END_NOWAIT,
BUILT_IN_GOMP_ORDERED_START,
BUILT_IN_GOMP_ORDERED_END,
BUILT_IN_GOMP_PARALLEL,
BUILT_IN_GOMP_TASK,
BUILT_IN_GOMP_SECTIONS_START,
BUILT_IN_GOMP_SECTIONS_NEXT,
BUILT_IN_GOMP_PARALLEL_SECTIONS,
BUILT_IN_GOMP_SECTIONS_END,
BUILT_IN_GOMP_SECTIONS_END_CANCEL,
BUILT_IN_GOMP_SECTIONS_END_NOWAIT,
BUILT_IN_GOMP_SINGLE_START,
BUILT_IN_GOMP_SINGLE_COPY_START,
BUILT_IN_GOMP_SINGLE_COPY_END,
BUILT_IN_GOMP_TARGET,
BUILT_IN_GOMP_TARGET_DATA,
BUILT_IN_GOMP_TARGET_END_DATA,
BUILT_IN_GOMP_TARGET_UPDATE,
BUILT_IN_GOMP_TEAMS,
// 930 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/builtins.def" 2
// 1 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/cilk-builtins.def" 1
// 24 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/cilk-builtins.def"
BUILT_IN_CILK_ENTER_FRAME,
BUILT_IN_CILK_ENTER_FRAME_FAST,
BUILT_IN_CILK_DETACH,
BUILT_IN_CILK_RETHROW,
BUILT_IN_CILK_SYNCHED,
BUILT_IN_CILK_SYNC,
BUILT_IN_CILK_LEAVE_FRAME,
BUILT_IN_CILK_POP_FRAME,
BUILT_IN_CILK_SAVE_FP,
BUILT_IN_CILK_FOR_32,
BUILT_IN_CILK_FOR_64,
// 933 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/builtins.def" 2
// 1 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/gtm-builtins.def" 1
BUILT_IN_TM_START,
BUILT_IN_TM_COMMIT,
BUILT_IN_TM_COMMIT_EH,
BUILT_IN_TM_ABORT,
BUILT_IN_TM_IRREVOCABLE,
BUILT_IN_TM_MEMCPY,
BUILT_IN_TM_MEMMOVE,
BUILT_IN_TM_MEMSET,
BUILT_IN_TM_GETTMCLONE_IRR,
BUILT_IN_TM_GETTMCLONE_SAFE,
BUILT_IN_TM_MALLOC,
BUILT_IN_TM_CALLOC,
BUILT_IN_TM_FREE,
BUILT_IN_TM_LOG_1,
BUILT_IN_TM_LOG_2,
BUILT_IN_TM_LOG_4,
BUILT_IN_TM_LOG_8,
BUILT_IN_TM_LOG_FLOAT,
BUILT_IN_TM_LOG_DOUBLE,
BUILT_IN_TM_LOG_LDOUBLE,
BUILT_IN_TM_LOG,
BUILT_IN_TM_LOG_M64,
BUILT_IN_TM_LOG_M128,
BUILT_IN_TM_LOG_M256,
// 63 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/gtm-builtins.def"
BUILT_IN_TM_STORE_1,
BUILT_IN_TM_STORE_WAR_1,
BUILT_IN_TM_STORE_WAW_1,
BUILT_IN_TM_STORE_2,
BUILT_IN_TM_STORE_WAR_2,
BUILT_IN_TM_STORE_WAW_2,
BUILT_IN_TM_STORE_4,
BUILT_IN_TM_STORE_WAR_4,
BUILT_IN_TM_STORE_WAW_4,
BUILT_IN_TM_STORE_8,
BUILT_IN_TM_STORE_WAR_8,
BUILT_IN_TM_STORE_WAW_8,
BUILT_IN_TM_STORE_FLOAT,
BUILT_IN_TM_STORE_WAR_FLOAT,
BUILT_IN_TM_STORE_WAW_FLOAT,
BUILT_IN_TM_STORE_DOUBLE,
BUILT_IN_TM_STORE_WAR_DOUBLE,
BUILT_IN_TM_STORE_WAW_DOUBLE,
BUILT_IN_TM_STORE_M64,
BUILT_IN_TM_STORE_WAR_M64,
BUILT_IN_TM_STORE_WAW_M64,
BUILT_IN_TM_STORE_M128,
BUILT_IN_TM_STORE_WAR_M128,
BUILT_IN_TM_STORE_WAW_M128,
BUILT_IN_TM_STORE_M256,
BUILT_IN_TM_STORE_WAR_M256,
BUILT_IN_TM_STORE_WAW_M256,
BUILT_IN_TM_STORE_LDOUBLE,
BUILT_IN_TM_STORE_WAR_LDOUBLE,
BUILT_IN_TM_STORE_WAW_LDOUBLE,
// 129 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/gtm-builtins.def"
BUILT_IN_TM_LOAD_1,
BUILT_IN_TM_LOAD_RAR_1,
BUILT_IN_TM_LOAD_RAW_1,
BUILT_IN_TM_LOAD_RFW_1,
BUILT_IN_TM_LOAD_2,
BUILT_IN_TM_LOAD_RAR_2,
BUILT_IN_TM_LOAD_RAW_2,
BUILT_IN_TM_LOAD_RFW_2,
BUILT_IN_TM_LOAD_4,
BUILT_IN_TM_LOAD_RAR_4,
BUILT_IN_TM_LOAD_RAW_4,
BUILT_IN_TM_LOAD_RFW_4,
BUILT_IN_TM_LOAD_8,
BUILT_IN_TM_LOAD_RAR_8,
BUILT_IN_TM_LOAD_RAW_8,
BUILT_IN_TM_LOAD_RFW_8,
BUILT_IN_TM_LOAD_FLOAT,
BUILT_IN_TM_LOAD_RAR_FLOAT,
BUILT_IN_TM_LOAD_RAW_FLOAT,
BUILT_IN_TM_LOAD_RFW_FLOAT,
BUILT_IN_TM_LOAD_DOUBLE,
BUILT_IN_TM_LOAD_RAR_DOUBLE,
BUILT_IN_TM_LOAD_RAW_DOUBLE,
BUILT_IN_TM_LOAD_RFW_DOUBLE,
BUILT_IN_TM_LOAD_M64,
BUILT_IN_TM_LOAD_RAR_M64,
BUILT_IN_TM_LOAD_RAW_M64,
BUILT_IN_TM_LOAD_RFW_M64,
BUILT_IN_TM_LOAD_M128,
BUILT_IN_TM_LOAD_RAR_M128,
BUILT_IN_TM_LOAD_RAW_M128,
BUILT_IN_TM_LOAD_RFW_M128,
BUILT_IN_TM_LOAD_M256,
BUILT_IN_TM_LOAD_RAR_M256,
BUILT_IN_TM_LOAD_RAW_M256,
BUILT_IN_TM_LOAD_RFW_M256,
BUILT_IN_TM_LOAD_LDOUBLE,
BUILT_IN_TM_LOAD_RAR_LDOUBLE,
BUILT_IN_TM_LOAD_RAW_LDOUBLE,
BUILT_IN_TM_LOAD_RFW_LDOUBLE,
// 936 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/builtins.def" 2
// 1 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/sanitizer.def" 1
// 30 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/sanitizer.def"
BUILT_IN_ASAN_INIT,
BUILT_IN_ASAN_REPORT_LOAD1,
BUILT_IN_ASAN_REPORT_LOAD2,
BUILT_IN_ASAN_REPORT_LOAD4,
BUILT_IN_ASAN_REPORT_LOAD8,
BUILT_IN_ASAN_REPORT_LOAD16,
BUILT_IN_ASAN_REPORT_LOAD_N,
BUILT_IN_ASAN_REPORT_STORE1,
BUILT_IN_ASAN_REPORT_STORE2,
BUILT_IN_ASAN_REPORT_STORE4,
BUILT_IN_ASAN_REPORT_STORE8,
BUILT_IN_ASAN_REPORT_STORE16,
BUILT_IN_ASAN_REPORT_STORE_N,
BUILT_IN_ASAN_REPORT_LOAD1_NOABORT,
BUILT_IN_ASAN_REPORT_LOAD2_NOABORT,
BUILT_IN_ASAN_REPORT_LOAD4_NOABORT,
BUILT_IN_ASAN_REPORT_LOAD8_NOABORT,
BUILT_IN_ASAN_REPORT_LOAD16_NOABORT,
BUILT_IN_ASAN_REPORT_LOAD_N_NOABORT,
BUILT_IN_ASAN_REPORT_STORE1_NOABORT,
BUILT_IN_ASAN_REPORT_STORE2_NOABORT,
BUILT_IN_ASAN_REPORT_STORE4_NOABORT,
BUILT_IN_ASAN_REPORT_STORE8_NOABORT,
BUILT_IN_ASAN_REPORT_STORE16_NOABORT,
BUILT_IN_ASAN_REPORT_STORE_N_NOABORT,
BUILT_IN_ASAN_LOAD1,
BUILT_IN_ASAN_LOAD2,
BUILT_IN_ASAN_LOAD4,
BUILT_IN_ASAN_LOAD8,
BUILT_IN_ASAN_LOAD16,
BUILT_IN_ASAN_LOADN,
BUILT_IN_ASAN_STORE1,
BUILT_IN_ASAN_STORE2,
BUILT_IN_ASAN_STORE4,
BUILT_IN_ASAN_STORE8,
BUILT_IN_ASAN_STORE16,
BUILT_IN_ASAN_STOREN,
BUILT_IN_ASAN_LOAD1_NOABORT,
BUILT_IN_ASAN_LOAD2_NOABORT,
BUILT_IN_ASAN_LOAD4_NOABORT,
BUILT_IN_ASAN_LOAD8_NOABORT,
BUILT_IN_ASAN_LOAD16_NOABORT,
BUILT_IN_ASAN_LOADN_NOABORT,
BUILT_IN_ASAN_STORE1_NOABORT,
BUILT_IN_ASAN_STORE2_NOABORT,
BUILT_IN_ASAN_STORE4_NOABORT,
BUILT_IN_ASAN_STORE8_NOABORT,
BUILT_IN_ASAN_STORE16_NOABORT,
BUILT_IN_ASAN_STOREN_NOABORT,
BUILT_IN_ASAN_REGISTER_GLOBALS,
BUILT_IN_ASAN_UNREGISTER_GLOBALS,
BUILT_IN_ASAN_HANDLE_NO_RETURN,
BUILT_IN_ASAN_BEFORE_DYNAMIC_INIT,
BUILT_IN_ASAN_AFTER_DYNAMIC_INIT,
BUILT_IN_TSAN_INIT,
BUILT_IN_TSAN_FUNC_ENTRY,
BUILT_IN_TSAN_FUNC_EXIT,
BUILT_IN_TSAN_VPTR_UPDATE,
BUILT_IN_TSAN_READ1,
BUILT_IN_TSAN_READ2,
BUILT_IN_TSAN_READ4,
BUILT_IN_TSAN_READ8,
BUILT_IN_TSAN_READ16,
BUILT_IN_TSAN_WRITE1,
BUILT_IN_TSAN_WRITE2,
BUILT_IN_TSAN_WRITE4,
BUILT_IN_TSAN_WRITE8,
BUILT_IN_TSAN_WRITE16,
BUILT_IN_TSAN_READ_RANGE,
BUILT_IN_TSAN_WRITE_RANGE,
BUILT_IN_TSAN_ATOMIC8_LOAD,
BUILT_IN_TSAN_ATOMIC16_LOAD,
BUILT_IN_TSAN_ATOMIC32_LOAD,
BUILT_IN_TSAN_ATOMIC64_LOAD,
BUILT_IN_TSAN_ATOMIC128_LOAD,
BUILT_IN_TSAN_ATOMIC8_STORE,
BUILT_IN_TSAN_ATOMIC16_STORE,
BUILT_IN_TSAN_ATOMIC32_STORE,
BUILT_IN_TSAN_ATOMIC64_STORE,
BUILT_IN_TSAN_ATOMIC128_STORE,
BUILT_IN_TSAN_ATOMIC8_EXCHANGE,
BUILT_IN_TSAN_ATOMIC16_EXCHANGE,
BUILT_IN_TSAN_ATOMIC32_EXCHANGE,
BUILT_IN_TSAN_ATOMIC64_EXCHANGE,
BUILT_IN_TSAN_ATOMIC128_EXCHANGE,
BUILT_IN_TSAN_ATOMIC8_FETCH_ADD,
BUILT_IN_TSAN_ATOMIC16_FETCH_ADD,
BUILT_IN_TSAN_ATOMIC32_FETCH_ADD,
BUILT_IN_TSAN_ATOMIC64_FETCH_ADD,
BUILT_IN_TSAN_ATOMIC128_FETCH_ADD,
BUILT_IN_TSAN_ATOMIC8_FETCH_SUB,
BUILT_IN_TSAN_ATOMIC16_FETCH_SUB,
BUILT_IN_TSAN_ATOMIC32_FETCH_SUB,
BUILT_IN_TSAN_ATOMIC64_FETCH_SUB,
BUILT_IN_TSAN_ATOMIC128_FETCH_SUB,
BUILT_IN_TSAN_ATOMIC8_FETCH_AND,
BUILT_IN_TSAN_ATOMIC16_FETCH_AND,
BUILT_IN_TSAN_ATOMIC32_FETCH_AND,
BUILT_IN_TSAN_ATOMIC64_FETCH_AND,
BUILT_IN_TSAN_ATOMIC128_FETCH_AND,
BUILT_IN_TSAN_ATOMIC8_FETCH_OR,
BUILT_IN_TSAN_ATOMIC16_FETCH_OR,
BUILT_IN_TSAN_ATOMIC32_FETCH_OR,
BUILT_IN_TSAN_ATOMIC64_FETCH_OR,
BUILT_IN_TSAN_ATOMIC128_FETCH_OR,
BUILT_IN_TSAN_ATOMIC8_FETCH_XOR,
BUILT_IN_TSAN_ATOMIC16_FETCH_XOR,
BUILT_IN_TSAN_ATOMIC32_FETCH_XOR,
BUILT_IN_TSAN_ATOMIC64_FETCH_XOR,
BUILT_IN_TSAN_ATOMIC128_FETCH_XOR,
BUILT_IN_TSAN_ATOMIC8_FETCH_NAND,
BUILT_IN_TSAN_ATOMIC16_FETCH_NAND,
BUILT_IN_TSAN_ATOMIC32_FETCH_NAND,
BUILT_IN_TSAN_ATOMIC64_FETCH_NAND,
BUILT_IN_TSAN_ATOMIC128_FETCH_NAND,
BUILT_IN_TSAN_ATOMIC8_COMPARE_EXCHANGE_STRONG,
BUILT_IN_TSAN_ATOMIC16_COMPARE_EXCHANGE_STRONG,
BUILT_IN_TSAN_ATOMIC32_COMPARE_EXCHANGE_STRONG,
BUILT_IN_TSAN_ATOMIC64_COMPARE_EXCHANGE_STRONG,
BUILT_IN_TSAN_ATOMIC128_COMPARE_EXCHANGE_STRONG,
BUILT_IN_TSAN_ATOMIC8_COMPARE_EXCHANGE_WEAK,
BUILT_IN_TSAN_ATOMIC16_COMPARE_EXCHANGE_WEAK,
BUILT_IN_TSAN_ATOMIC32_COMPARE_EXCHANGE_WEAK,
BUILT_IN_TSAN_ATOMIC64_COMPARE_EXCHANGE_WEAK,
BUILT_IN_TSAN_ATOMIC128_COMPARE_EXCHANGE_WEAK,
BUILT_IN_TSAN_ATOMIC_THREAD_FENCE,
BUILT_IN_TSAN_ATOMIC_SIGNAL_FENCE,
BUILT_IN_UBSAN_HANDLE_DIVREM_OVERFLOW,
BUILT_IN_UBSAN_HANDLE_SHIFT_OUT_OF_BOUNDS,
BUILT_IN_UBSAN_HANDLE_BUILTIN_UNREACHABLE,
BUILT_IN_UBSAN_HANDLE_MISSING_RETURN,
BUILT_IN_UBSAN_HANDLE_VLA_BOUND_NOT_POSITIVE,
BUILT_IN_UBSAN_HANDLE_TYPE_MISMATCH,
BUILT_IN_UBSAN_HANDLE_ADD_OVERFLOW,
BUILT_IN_UBSAN_HANDLE_SUB_OVERFLOW,
BUILT_IN_UBSAN_HANDLE_MUL_OVERFLOW,
BUILT_IN_UBSAN_HANDLE_NEGATE_OVERFLOW,
BUILT_IN_UBSAN_HANDLE_LOAD_INVALID_VALUE,
BUILT_IN_UBSAN_HANDLE_DIVREM_OVERFLOW_ABORT,
BUILT_IN_UBSAN_HANDLE_SHIFT_OUT_OF_BOUNDS_ABORT,
BUILT_IN_UBSAN_HANDLE_VLA_BOUND_NOT_POSITIVE_ABORT,
BUILT_IN_UBSAN_HANDLE_TYPE_MISMATCH_ABORT,
BUILT_IN_UBSAN_HANDLE_ADD_OVERFLOW_ABORT,
BUILT_IN_UBSAN_HANDLE_SUB_OVERFLOW_ABORT,
BUILT_IN_UBSAN_HANDLE_MUL_OVERFLOW_ABORT,
BUILT_IN_UBSAN_HANDLE_NEGATE_OVERFLOW_ABORT,
BUILT_IN_UBSAN_HANDLE_LOAD_INVALID_VALUE_ABORT,
BUILT_IN_UBSAN_HANDLE_FLOAT_CAST_OVERFLOW,
BUILT_IN_UBSAN_HANDLE_FLOAT_CAST_OVERFLOW_ABORT,
BUILT_IN_UBSAN_HANDLE_OUT_OF_BOUNDS,
BUILT_IN_UBSAN_HANDLE_OUT_OF_BOUNDS_ABORT,
BUILT_IN_UBSAN_HANDLE_NONNULL_ARG,
BUILT_IN_UBSAN_HANDLE_NONNULL_ARG_ABORT,
BUILT_IN_UBSAN_HANDLE_NONNULL_RETURN,
BUILT_IN_UBSAN_HANDLE_NONNULL_RETURN_ABORT,
BUILT_IN_UBSAN_HANDLE_DYNAMIC_TYPE_CACHE_MISS,
BUILT_IN_UBSAN_HANDLE_DYNAMIC_TYPE_CACHE_MISS_ABORT,
// 939 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/builtins.def" 2
// 1 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/cilkplus.def" 1
// 27 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/cilkplus.def"
BUILT_IN_CILKPLUS_SEC_REDUCE_ADD,
BUILT_IN_CILKPLUS_SEC_REDUCE_MUL,
BUILT_IN_CILKPLUS_SEC_REDUCE_ALL_ZERO,
BUILT_IN_CILKPLUS_SEC_REDUCE_ANY_ZERO,
BUILT_IN_CILKPLUS_SEC_REDUCE_MAX,
BUILT_IN_CILKPLUS_SEC_REDUCE_MIN,
BUILT_IN_CILKPLUS_SEC_REDUCE_MIN_IND,
BUILT_IN_CILKPLUS_SEC_REDUCE_MAX_IND,
BUILT_IN_CILKPLUS_SEC_REDUCE_ANY_NONZERO,
BUILT_IN_CILKPLUS_SEC_REDUCE_ALL_NONZERO,
BUILT_IN_CILKPLUS_SEC_REDUCE,
BUILT_IN_CILKPLUS_SEC_REDUCE_MUTATING,
BUILT_IN_CILKPLUS_SEC_IMPLICIT_INDEX,
BUILT_IN_CHKP_INTERSECT,
BUILT_IN_CHKP_SIZEOF,
BUILT_IN_CHKP_NARROW,
BUILT_IN_CHKP_BNDCL,
BUILT_IN_CHKP_BNDCU,
BUILT_IN_CHKP_BNDSTX,
BUILT_IN_CHKP_BNDLDX,
BUILT_IN_CHKP_BNDRET,
BUILT_IN_CHKP_BNDMK,
BUILT_IN_CHKP_EXTRACT_LOWER,
BUILT_IN_CHKP_EXTRACT_UPPER,
BUILT_IN_CHKP_SET_PTR_BOUNDS,
BUILT_IN_CHKP_INIT_PTR_BOUNDS,
BUILT_IN_CHKP_NULL_PTR_BOUNDS,
BUILT_IN_CHKP_COPY_PTR_BOUNDS,
BUILT_IN_CHKP_NARROW_PTR_BOUNDS,
BUILT_IN_CHKP_STORE_PTR_BOUNDS,
BUILT_IN_CHKP_CHECK_PTR_LBOUNDS,
BUILT_IN_CHKP_CHECK_PTR_UBOUNDS,
BUILT_IN_CHKP_CHECK_PTR_BOUNDS,
BUILT_IN_CHKP_GET_PTR_LBOUND,
BUILT_IN_CHKP_GET_PTR_UBOUND,
BUILT_IN_CHKP_MEMCPY_NOBND,
BUILT_IN_CHKP_MEMCPY_NOCHK,
BUILT_IN_CHKP_MEMCPY_NOBND_NOCHK,
BUILT_IN_CHKP_MEMMOVE_NOBND,
BUILT_IN_CHKP_MEMMOVE_NOCHK,
BUILT_IN_CHKP_MEMMOVE_NOBND_NOCHK,
BUILT_IN_CHKP_MEMPCPY_NOBND,
BUILT_IN_CHKP_MEMPCPY_NOCHK,
BUILT_IN_CHKP_MEMPCPY_NOBND_NOCHK,
BUILT_IN_CHKP_MEMSET_NOBND,
BUILT_IN_CHKP_MEMSET_NOCHK,
BUILT_IN_CHKP_MEMSET_NOBND_NOCHK,
// 944 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/builtins.def" 2
// 157 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree-core.h" 2
  BEGIN_CHKP_BUILTINS,
BUILT_IN_MEMCPY_CHKP = BUILT_IN_MEMCPY + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_MEMMOVE_CHKP = BUILT_IN_MEMMOVE + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_MEMPCPY_CHKP = BUILT_IN_MEMPCPY + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_MEMSET_CHKP = BUILT_IN_MEMSET + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_STPCPY_CHKP = BUILT_IN_STPCPY + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_STRCAT_CHKP = BUILT_IN_STRCAT + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_STRCHR_CHKP = BUILT_IN_STRCHR + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_STRCPY_CHKP = BUILT_IN_STRCPY + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_STRLEN_CHKP = BUILT_IN_STRLEN + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_MEMCPY_CHK_CHKP = BUILT_IN_MEMCPY_CHK + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_MEMMOVE_CHK_CHKP = BUILT_IN_MEMMOVE_CHK + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_MEMPCPY_CHK_CHKP = BUILT_IN_MEMPCPY_CHK + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_MEMSET_CHK_CHKP = BUILT_IN_MEMSET_CHK + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_STPCPY_CHK_CHKP = BUILT_IN_STPCPY_CHK + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_STRCAT_CHK_CHKP = BUILT_IN_STRCAT_CHK + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_STRCPY_CHK_CHKP = BUILT_IN_STRCPY_CHK + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_BNDCL_CHKP = BUILT_IN_CHKP_BNDCL + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_BNDCU_CHKP = BUILT_IN_CHKP_BNDCU + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_BNDSTX_CHKP = BUILT_IN_CHKP_BNDSTX + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_BNDLDX_CHKP = BUILT_IN_CHKP_BNDLDX + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_BNDRET_CHKP = BUILT_IN_CHKP_BNDRET + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_BNDMK_CHKP = BUILT_IN_CHKP_BNDMK + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_EXTRACT_LOWER_CHKP = BUILT_IN_CHKP_EXTRACT_LOWER + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_EXTRACT_UPPER_CHKP = BUILT_IN_CHKP_EXTRACT_UPPER + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_SET_PTR_BOUNDS_CHKP = BUILT_IN_CHKP_SET_PTR_BOUNDS + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_INIT_PTR_BOUNDS_CHKP = BUILT_IN_CHKP_INIT_PTR_BOUNDS + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_NULL_PTR_BOUNDS_CHKP = BUILT_IN_CHKP_NULL_PTR_BOUNDS + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_COPY_PTR_BOUNDS_CHKP = BUILT_IN_CHKP_COPY_PTR_BOUNDS + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_NARROW_PTR_BOUNDS_CHKP = BUILT_IN_CHKP_NARROW_PTR_BOUNDS + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_STORE_PTR_BOUNDS_CHKP = BUILT_IN_CHKP_STORE_PTR_BOUNDS + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_CHECK_PTR_LBOUNDS_CHKP = BUILT_IN_CHKP_CHECK_PTR_LBOUNDS + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_CHECK_PTR_UBOUNDS_CHKP = BUILT_IN_CHKP_CHECK_PTR_UBOUNDS + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_CHECK_PTR_BOUNDS_CHKP = BUILT_IN_CHKP_CHECK_PTR_BOUNDS + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_GET_PTR_LBOUND_CHKP = BUILT_IN_CHKP_GET_PTR_LBOUND + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_GET_PTR_UBOUND_CHKP = BUILT_IN_CHKP_GET_PTR_UBOUND + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_MEMCPY_NOBND_CHKP = BUILT_IN_CHKP_MEMCPY_NOBND + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_MEMCPY_NOCHK_CHKP = BUILT_IN_CHKP_MEMCPY_NOCHK + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_MEMCPY_NOBND_NOCHK_CHKP = BUILT_IN_CHKP_MEMCPY_NOBND_NOCHK + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_MEMMOVE_NOBND_CHKP = BUILT_IN_CHKP_MEMMOVE_NOBND + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_MEMMOVE_NOCHK_CHKP = BUILT_IN_CHKP_MEMMOVE_NOCHK + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_MEMMOVE_NOBND_NOCHK_CHKP = BUILT_IN_CHKP_MEMMOVE_NOBND_NOCHK + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_MEMPCPY_NOBND_CHKP = BUILT_IN_CHKP_MEMPCPY_NOBND + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_MEMPCPY_NOCHK_CHKP = BUILT_IN_CHKP_MEMPCPY_NOCHK + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_MEMPCPY_NOBND_NOCHK_CHKP = BUILT_IN_CHKP_MEMPCPY_NOBND_NOCHK + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_MEMSET_NOBND_CHKP = BUILT_IN_CHKP_MEMSET_NOBND + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_MEMSET_NOCHK_CHKP = BUILT_IN_CHKP_MEMSET_NOCHK + BEGIN_CHKP_BUILTINS + 1,
BUILT_IN_CHKP_MEMSET_NOBND_NOCHK_CHKP = BUILT_IN_CHKP_MEMSET_NOBND_NOCHK + BEGIN_CHKP_BUILTINS + 1,
  END_CHKP_BUILTINS = BEGIN_CHKP_BUILTINS * 2 + 1,
  BUILT_IN_COMPLEX_MUL_MIN,
  BUILT_IN_COMPLEX_MUL_MAX
    = BUILT_IN_COMPLEX_MUL_MIN
      + MAX_MODE_COMPLEX_FLOAT
      - MIN_MODE_COMPLEX_FLOAT,
  BUILT_IN_COMPLEX_DIV_MIN,
  BUILT_IN_COMPLEX_DIV_MAX
    = BUILT_IN_COMPLEX_DIV_MIN
      + MAX_MODE_COMPLEX_FLOAT
      - MIN_MODE_COMPLEX_FLOAT,
  END_BUILTINS
};
enum built_in_class {
  NOT_BUILT_IN = 0,
  BUILT_IN_FRONTEND,
  BUILT_IN_MD,
  BUILT_IN_NORMAL
};

struct tree_function_decl {
  struct tree_decl_non_common common;
  struct function *f;
  tree arguments;
  tree personality;
  tree function_specific_target;
  tree function_specific_optimization;
  tree saved_tree;
  tree vindex;

  enum built_in_function function_code : 12;
  enum built_in_class built_in_class : 2;
  unsigned static_ctor_flag : 1;
  unsigned static_dtor_flag : 1;
  unsigned uninlinable : 1;
  unsigned possibly_inlined : 1;
  unsigned novops_flag : 1;
  unsigned returns_twice_flag : 1;
  unsigned malloc_flag : 1;
  unsigned operator_new_flag : 1;
  unsigned declared_inline_flag : 1;
  unsigned no_inline_warning_flag : 1;
  unsigned no_instrument_function_entry_exit : 1;
  unsigned no_limit_stack : 1;
  unsigned disregard_inline_limits : 1;
  unsigned pure_flag : 1;
  unsigned looping_const_or_pure_flag : 1;
  unsigned has_debug_args_flag : 1;
  unsigned tm_clone_flag : 1;
  unsigned versioned_function : 1;
};
struct tree_translation_unit_decl {
  struct tree_decl_common common;
  const char * language;
};
struct tree_type_decl {
  struct tree_decl_non_common common;
};
struct tree_statement_list_node
 {
  struct tree_statement_list_node *prev;
  struct tree_statement_list_node *next;
  tree stmt;
};
struct tree_statement_list
 {
  struct tree_typed typed;
  struct tree_statement_list_node *head;
  struct tree_statement_list_node *tail;
};

struct cl_optimization;

enum fp_contract_mode {
  FP_CONTRACT_OFF = 0,
  FP_CONTRACT_ON = 1,
  FP_CONTRACT_FAST = 2
};


enum vect_cost_model {
  VECT_COST_MODEL_UNLIMITED = 0,
  VECT_COST_MODEL_CHEAP = 1,
  VECT_COST_MODEL_DYNAMIC = 2,
  VECT_COST_MODEL_DEFAULT = 3
};



enum sanitize_code {

  SANITIZE_ADDRESS = 1 << 0,
  SANITIZE_USER_ADDRESS = 1 << 1,
  SANITIZE_KERNEL_ADDRESS = 1 << 2,

  SANITIZE_THREAD = 1 << 3,

  SANITIZE_LEAK = 1 << 4,

  SANITIZE_SHIFT = 1 << 5,
  SANITIZE_DIVIDE = 1 << 6,
  SANITIZE_UNREACHABLE = 1 << 7,
  SANITIZE_VLA = 1 << 8,
  SANITIZE_NULL = 1 << 9,
  SANITIZE_RETURN = 1 << 10,
  SANITIZE_SI_OVERFLOW = 1 << 11,
  SANITIZE_BOOL = 1 << 12,
  SANITIZE_ENUM = 1 << 13,
  SANITIZE_FLOAT_DIVIDE = 1 << 14,
  SANITIZE_FLOAT_CAST = 1 << 15,
  SANITIZE_BOUNDS = 1UL << 16,
  SANITIZE_ALIGNMENT = 1UL << 17,
  SANITIZE_NONNULL_ATTRIBUTE = 1UL << 18,
  SANITIZE_RETURNS_NONNULL_ATTRIBUTE = 1UL << 19,
  SANITIZE_OBJECT_SIZE = 1UL << 20,
  SANITIZE_VPTR = 1UL << 21,
  SANITIZE_UNDEFINED = SANITIZE_SHIFT | SANITIZE_DIVIDE | SANITIZE_UNREACHABLE
         | SANITIZE_VLA | SANITIZE_NULL | SANITIZE_RETURN
         | SANITIZE_SI_OVERFLOW | SANITIZE_BOOL | SANITIZE_ENUM
         | SANITIZE_BOUNDS | SANITIZE_ALIGNMENT
         | SANITIZE_NONNULL_ATTRIBUTE
         | SANITIZE_RETURNS_NONNULL_ATTRIBUTE
         | SANITIZE_OBJECT_SIZE | SANITIZE_VPTR,
  SANITIZE_NONDEFAULT = SANITIZE_FLOAT_DIVIDE | SANITIZE_FLOAT_CAST
};


enum vtv_priority {
  VTV_NO_PRIORITY = 0,
  VTV_STANDARD_PRIORITY = 1,
  VTV_PREINIT_PRIORITY = 2
};


enum lto_partition_model {
  LTO_PARTITION_NONE = 0,
  LTO_PARTITION_ONE = 1,
  LTO_PARTITION_BALANCED = 2,
  LTO_PARTITION_1TO1 = 3,
  LTO_PARTITION_MAX = 4
};




enum gfc_init_local_real
{
  GFC_INIT_REAL_OFF = 0,
  GFC_INIT_REAL_ZERO,
  GFC_INIT_REAL_NAN,
  GFC_INIT_REAL_SNAN,
  GFC_INIT_REAL_INF,
  GFC_INIT_REAL_NEG_INF
};



enum gfc_fcoarray
{
  GFC_FCOARRAY_NONE = 0,
  GFC_FCOARRAY_SINGLE,
  GFC_FCOARRAY_LIB
};




enum gfc_convert
{
  GFC_FLAG_CONVERT_NATIVE = 0,
  GFC_FLAG_CONVERT_SWAP,
  GFC_FLAG_CONVERT_BIG,
  GFC_FLAG_CONVERT_LITTLE
};


enum ivar_visibility
{
  IVAR_VISIBILITY_PRIVATE,
  IVAR_VISIBILITY_PROTECTED,
  IVAR_VISIBILITY_PUBLIC,
  IVAR_VISIBILITY_PACKAGE
};


enum stack_reuse_level
{
  SR_NONE,
  SR_NAMED_VARS,
  SR_ALL
};


enum ira_algorithm
{
  IRA_ALGORITHM_CB,
  IRA_ALGORITHM_PRIORITY
};


enum ira_region
{
  IRA_REGION_ONE,
  IRA_REGION_ALL,
  IRA_REGION_MIXED,



  IRA_REGION_AUTODETECT
};


enum excess_precision
{
  EXCESS_PRECISION_DEFAULT,
  EXCESS_PRECISION_FAST,
  EXCESS_PRECISION_STANDARD
};


enum stack_check_type
{

  NO_STACK_CHECK = 0,



  GENERIC_STACK_CHECK,




  STATIC_BUILTIN_STACK_CHECK,



  FULL_BUILTIN_STACK_CHECK
};




enum warn_strict_overflow_code
{



  WARN_STRICT_OVERFLOW_ALL = 1,




  WARN_STRICT_OVERFLOW_CONDITIONAL = 2,


  WARN_STRICT_OVERFLOW_COMPARISON = 3,


  WARN_STRICT_OVERFLOW_MISC = 4,


  WARN_STRICT_OVERFLOW_MAGNITUDE = 5
};


struct cl_optimization
{
  int x_align_functions;
  int x_align_jumps;
  int x_align_labels;
  int x_align_loops;
  int x_flag_sched_stalled_insns;
  int x_flag_sched_stalled_insns_dep;
  int x_flag_tree_parallelize_loops;
  enum fp_contract_mode x_flag_fp_contract_mode;
  enum ira_algorithm x_flag_ira_algorithm;
  enum ira_region x_flag_ira_region;
  enum vect_cost_model x_flag_simd_cost_model;
  enum stack_reuse_level x_flag_stack_reuse;
  enum vect_cost_model x_flag_vect_cost_model;
  unsigned char x_optimize;
  unsigned char x_optimize_size;
  unsigned char x_optimize_debug;
  signed char x_flag_aggressive_loop_optimizations;
  signed char x_flag_associative_math;
  signed char x_flag_asynchronous_unwind_tables;
  signed char x_flag_auto_inc_dec;
  signed char x_flag_branch_on_count_reg;
  signed char x_flag_branch_probabilities;
  signed char x_flag_branch_target_load_optimize;
  signed char x_flag_branch_target_load_optimize2;
  signed char x_flag_btr_bb_exclusive;
  signed char x_flag_caller_saves;
  signed char x_flag_combine_stack_adjustments;
  signed char x_flag_compare_elim_after_reload;
  signed char x_flag_conserve_stack;
  signed char x_flag_cprop_registers;
  signed char x_flag_crossjumping;
  signed char x_flag_cse_follow_jumps;
  signed char x_flag_cx_fortran_rules;
  signed char x_flag_cx_limited_range;
  signed char x_flag_dce;
  signed char x_flag_defer_pop;
  signed char x_flag_delayed_branch;
  signed char x_flag_delete_dead_exceptions;
  signed char x_flag_delete_null_pointer_checks;
  signed char x_flag_devirtualize;
  signed char x_flag_devirtualize_speculatively;
  signed char x_flag_dse;
  signed char x_flag_early_inlining;
  signed char x_flag_exceptions;
  signed char x_flag_expensive_optimizations;
  signed char x_flag_finite_math_only;
  signed char x_flag_float_store;
  signed char x_flag_forward_propagate;
  signed char x_flag_no_function_cse;
  signed char x_flag_gcse;
  signed char x_flag_gcse_after_reload;
  signed char x_flag_gcse_las;
  signed char x_flag_gcse_lm;
  signed char x_flag_gcse_sm;
  signed char x_flag_graphite;
  signed char x_flag_graphite_identity;
  signed char x_flag_guess_branch_prob;
  signed char x_flag_hoist_adjacent_loads;
  signed char x_flag_if_conversion;
  signed char x_flag_if_conversion2;
  signed char x_flag_indirect_inlining;
  signed char x_flag_no_inline;
  signed char x_flag_inline_atomics;
  signed char x_flag_inline_functions;
  signed char x_flag_inline_functions_called_once;
  signed char x_flag_inline_small_functions;
  signed char x_flag_ipa_cp;
  signed char x_flag_ipa_cp_alignment;
  signed char x_flag_ipa_cp_clone;
  signed char x_flag_ipa_icf;
  signed char x_flag_ipa_icf_functions;
  signed char x_flag_ipa_profile;
  signed char x_flag_ipa_pta;
  signed char x_flag_ipa_pure_const;
  signed char x_flag_ipa_ra;
  signed char x_flag_ipa_reference;
  signed char x_flag_ipa_sra;
  signed char x_flag_ira_hoist_pressure;
  signed char x_flag_ira_loop_pressure;
  signed char x_flag_ira_share_save_slots;
  signed char x_flag_ira_share_spill_slots;
  signed char x_flag_isolate_erroneous_paths_attribute;
  signed char x_flag_isolate_erroneous_paths_dereference;
  signed char x_flag_ivopts;
  signed char x_flag_jump_tables;
  signed char x_flag_lifetime_dse;
  signed char x_flag_live_range_shrinkage;
  signed char x_flag_loop_block;
  signed char x_flag_loop_interchange;
  signed char x_flag_loop_optimize_isl;
  signed char x_flag_loop_parallelize_all;
  signed char x_flag_loop_strip_mine;
  signed char x_flag_loop_unroll_jam;
  signed char x_flag_lra_remat;
  signed char x_flag_errno_math;
  signed char x_flag_modulo_sched;
  signed char x_flag_modulo_sched_allow_regmoves;
  signed char x_flag_move_loop_invariants;
  signed char x_flag_non_call_exceptions;
  signed char x_flag_nothrow_opt;
  signed char x_flag_omit_frame_pointer;
  signed char x_flag_opt_info;
  signed char x_flag_optimize_sibling_calls;
  signed char x_flag_optimize_strlen;
  signed char x_flag_pack_struct;
  signed char x_flag_partial_inlining;
  signed char x_flag_peel_loops;
  signed char x_flag_no_peephole;
  signed char x_flag_peephole2;
  signed char x_flag_predictive_commoning;
  signed char x_flag_prefetch_loop_arrays;
  signed char x_flag_reciprocal_math;
  signed char x_flag_pcc_struct_return;
  signed char x_flag_rename_registers;
  signed char x_flag_reorder_blocks;
  signed char x_flag_reorder_blocks_and_partition;
  signed char x_flag_reorder_functions;
  signed char x_flag_rerun_cse_after_loop;
  signed char x_flag_resched_modulo_sched;
  signed char x_flag_rounding_math;
  signed char x_flag_rtti;
  signed char x_flag_sched_critical_path_heuristic;
  signed char x_flag_sched_dep_count_heuristic;
  signed char x_flag_sched_group_heuristic;
  signed char x_flag_schedule_interblock;
  signed char x_flag_sched_last_insn_heuristic;
  signed char x_flag_sched_pressure;
  signed char x_flag_sched_rank_heuristic;
  signed char x_flag_schedule_speculative;
  signed char x_flag_sched_spec_insn_heuristic;
  signed char x_flag_schedule_speculative_load;
  signed char x_flag_schedule_speculative_load_dangerous;
  signed char x_flag_sched2_use_superblocks;
  signed char x_flag_schedule_fusion;
  signed char x_flag_schedule_insns;
  signed char x_flag_schedule_insns_after_reload;
  signed char x_flag_section_anchors;
  signed char x_flag_sel_sched_pipelining;
  signed char x_flag_sel_sched_pipelining_outer_loops;
  signed char x_flag_sel_sched_reschedule_pipelined;
  signed char x_flag_selective_scheduling;
  signed char x_flag_selective_scheduling2;
  signed char x_flag_short_double;
  signed char x_flag_short_enums;
  signed char x_flag_short_wchar;
  signed char x_flag_shrink_wrap;
  signed char x_flag_signaling_nans;
  signed char x_flag_signed_zeros;
  signed char x_flag_single_precision_constant;
  signed char x_flag_split_ivs_in_unroller;
  signed char x_flag_split_wide_types;
  signed char x_flag_ssa_phiopt;
  signed char x_flag_stdarg_opt;
  signed char x_flag_strict_aliasing;
  signed char x_flag_strict_enums;
  signed char x_flag_strict_overflow;
  signed char x_flag_strict_volatile_bitfields;
  signed char x_flag_thread_jumps;
  signed char x_flag_threadsafe_statics;
  signed char x_flag_tracer;
  signed char x_flag_trapping_math;
  signed char x_flag_trapv;
  signed char x_flag_tree_bit_ccp;
  signed char x_flag_tree_builtin_call_dce;
  signed char x_flag_tree_ccp;
  signed char x_flag_tree_ch;
  signed char x_flag_ssa_coalesce_vars;
  signed char x_flag_tree_copy_prop;
  signed char x_flag_tree_copyrename;
  signed char x_flag_tree_cselim;
  signed char x_flag_tree_dce;
  signed char x_flag_tree_dom;
  signed char x_flag_tree_dse;
  signed char x_flag_tree_forwprop;
  signed char x_flag_tree_fre;
  signed char x_flag_tree_loop_distribute_patterns;
  signed char x_flag_tree_loop_distribution;
  signed char x_flag_tree_loop_if_convert;
  signed char x_flag_tree_loop_if_convert_stores;
  signed char x_flag_tree_loop_im;
  signed char x_flag_tree_loop_ivcanon;
  signed char x_flag_tree_loop_optimize;
  signed char x_flag_tree_loop_vectorize;
  signed char x_flag_tree_live_range_split;
  signed char x_flag_tree_partial_pre;
  signed char x_flag_tree_phiprop;
  signed char x_flag_tree_pre;
  signed char x_flag_tree_pta;
  signed char x_flag_tree_reassoc;
  signed char x_flag_tree_scev_cprop;
  signed char x_flag_tree_sink;
  signed char x_flag_tree_slp_vectorize;
  signed char x_flag_tree_slsr;
  signed char x_flag_tree_sra;
  signed char x_flag_tree_switch_conversion;
  signed char x_flag_tree_tail_merge;
  signed char x_flag_tree_ter;
  signed char x_flag_tree_vectorize;
  signed char x_flag_tree_vrp;
  signed char x_flag_unroll_all_loops;
  signed char x_flag_unroll_loops;
  signed char x_flag_unsafe_loop_optimizations;
  signed char x_flag_unsafe_math_optimizations;
  signed char x_flag_unswitch_loops;
  signed char x_flag_unwind_tables;
  signed char x_flag_var_tracking;
  signed char x_flag_var_tracking_assignments;
  signed char x_flag_var_tracking_assignments_toggle;
  signed char x_flag_var_tracking_uninit;
  signed char x_flag_variable_expansion_in_unroller;
  signed char x_flag_value_profile_transformations;
  signed char x_flag_web;
  signed char x_flag_wrapv;
};

struct tree_optimization_option {
  struct tree_common common;
  struct cl_optimization opts;
  void * optabs;
  struct target_optabs * base_optabs;
};


enum calling_abi
{
  SYSV_ABI = 0,
  MS_ABI = 1
};

enum fpmath_unit
{
  FPMATH_387 = 1,
  FPMATH_SSE = 2
};

enum tls_dialect
{
  TLS_DIALECT_GNU,
  TLS_DIALECT_GNU2,
  TLS_DIALECT_SUN
};

enum cmodel {
  CM_32,
  CM_SMALL,
  CM_KERNEL,
  CM_MEDIUM,
  CM_LARGE,
  CM_SMALL_PIC,
  CM_MEDIUM_PIC,
  CM_LARGE_PIC
};

enum pmode {
  PMODE_SI,
  PMODE_DI
};

enum ix86_align_data {
  ix86_align_data_type_compat,
  ix86_align_data_type_abi,
  ix86_align_data_type_cacheline
};

enum asm_dialect {
  ASM_ATT,
  ASM_INTEL
};

enum ix86_veclibabi {
  ix86_veclibabi_type_none,
  ix86_veclibabi_type_svml,
  ix86_veclibabi_type_acml
};

enum stack_protector_guard {
  SSP_TLS,
  SSP_GLOBAL
};

enum stringop_alg
{
//undef DEF_ENUM
//define DEF_ENUM 

//undef DEF_ALG
//define DEF_ALG(alg,name) alg,

// 1 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/config/i386/stringop.def" 1
// 20 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/config/i386/stringop.def"

no_stringop,

libcall,

rep_prefix_1_byte,

rep_prefix_4_byte,

rep_prefix_8_byte,

loop_1_byte,

loop,

unrolled_loop,

vector_loop,
// 38 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/config/i386/i386-opts.h" 2
last_alg

//undef DEF_ENUM
//undef DEF_ALG
};


struct cl_target_option
{
  long x_ix86_isa_flags_explicit;
  long x_ix86_target_flags_explicit;
  const char *x_ix86_arch_string;
  const char *x_ix86_recip_name;
  const char *x_ix86_tune_ctrl_string;
  const char *x_ix86_tune_memcpy_strategy;
  const char *x_ix86_tune_memset_strategy;
  const char *x_ix86_tune_string;
  long x_ix86_isa_flags;
  enum fpmath_unit x_ix86_fpmath;
  enum asm_dialect x_ix86_asm_dialect;
  enum calling_abi x_ix86_abi;
  enum cmodel x_ix86_cmodel;
  enum ix86_veclibabi x_ix86_veclibabi_type;
  enum pmode x_ix86_pmode;
  enum stack_protector_guard x_ix86_stack_protector_guard;
  enum stringop_alg x_ix86_stringop_alg;
  enum tls_dialect x_ix86_tls_dialect;
  int x_ix86_branch_cost;
  int x_ix86_dump_tunes;
  int x_ix86_force_align_arg_pointer;
  int x_ix86_force_drap;
  int x_ix86_incoming_stack_boundary_arg;
  int x_ix86_preferred_stack_boundary_arg;
  int x_ix86_regparm;
  int x_ix86_section_threshold;
  int x_ix86_sse2avx;
  int x_ix86_tune_no_default;
  int x_recip_mask_explicit;
  int x_recip_mask;
  int x_target_flags;
  unsigned char arch;
  unsigned char arch_specified;
  unsigned char branch_cost;
  unsigned char prefetch_sse;
  unsigned char schedule;
  unsigned char tune;
  unsigned char tune_defaulted;
};

struct target_globals;
struct tree_target_option {
  struct tree_common common;
  struct target_globals *globals;
  struct cl_target_option opts;
};

typedef int alias_set_type;

struct tree_type_common {
  struct tree_common common;
  tree size;
  tree size_unit;
  tree attributes;
  unsigned int uid;

  unsigned int precision : 10;
  unsigned no_force_blk_flag : 1;
  unsigned needs_constructing_flag : 1;
  unsigned transparent_aggr_flag : 1;
  unsigned restrict_flag : 1;
  unsigned contains_placeholder_bits : 2;

  enum machine_mode mode : 8;

  unsigned string_flag : 1;
  unsigned lang_flag_0 : 1;
  unsigned lang_flag_1 : 1;
  unsigned lang_flag_2 : 1;
  unsigned lang_flag_3 : 1;
  unsigned lang_flag_4 : 1;
  unsigned lang_flag_5 : 1;
  unsigned lang_flag_6 : 1;

  unsigned int align;
  alias_set_type alias_set;
  tree pointer_to;
  tree reference_to;
  union tree_type_symtab {
    int address;
    const char * pointer;
    struct die_struct * die;
  } symtab;
  tree canonical;
  tree next_variant;
  tree main_variant;
  tree context;
  tree name;
};

struct tree_type_with_lang_specific {
  struct tree_type_common common;

  struct lang_type *lang_specific;
};

struct tree_type_non_common {
  struct tree_type_with_lang_specific with_lang_specific;
  tree values;
  tree minval;
  tree maxval;
  tree binfo;
};

struct tree_binfo {
  struct tree_common common;

  tree offset;
  tree vtable;
  tree virtuals;
  tree vptr_field;
  vec<tree, va_gc> * base_accesses;
      tree inheritance;
      
      tree vtt_subvtt;
      tree vtt_vptr;
      
      vec<tree, va_gc> base_binfos;
};

struct tree_exp {
  struct tree_typed typed;
  location_t locus;
  tree

    operands[1];
};



struct ssa_use_operand_t {
  struct ssa_use_operand_t* prev;
  struct ssa_use_operand_t* next;





  union { gimple stmt; tree ssa_name; } loc;
  tree * use;
};

struct tree_ssa_name {
  struct tree_typed typed;


  tree var;


  gimple def_stmt;


  union ssa_name_info_type {

    struct ptr_info_def *ptr_info;

    struct range_info_def *range_info;
  }
                                                   info;


  struct ssa_use_operand_t imm_uses;
};

struct phi_arg_d {


  struct ssa_use_operand_t imm_use;
  tree def;
  location_t locus;
};

      enum omp_clause_default_kind {
  OMP_CLAUSE_DEFAULT_UNSPECIFIED,
  OMP_CLAUSE_DEFAULT_SHARED,
  OMP_CLAUSE_DEFAULT_NONE,
  OMP_CLAUSE_DEFAULT_PRIVATE,
  OMP_CLAUSE_DEFAULT_FIRSTPRIVATE,
  OMP_CLAUSE_DEFAULT_LAST
};

      
      typedef gimple gimple_seq;

      enum omp_clause_code {


  OMP_CLAUSE_ERROR = 0,


  OMP_CLAUSE_PRIVATE,


  OMP_CLAUSE_SHARED,


  OMP_CLAUSE_FIRSTPRIVATE,


  OMP_CLAUSE_LASTPRIVATE,
// 234 "/usr/lib/gcc/x86_64-linux-gnu/5/plugin/include/tree-core.h"
  OMP_CLAUSE_REDUCTION,


  OMP_CLAUSE_COPYIN,


  OMP_CLAUSE_COPYPRIVATE,


  OMP_CLAUSE_LINEAR,


  OMP_CLAUSE_ALIGNED,


  OMP_CLAUSE_DEPEND,


  OMP_CLAUSE_UNIFORM,


  OMP_CLAUSE_FROM,


  OMP_CLAUSE_TO,







  OMP_CLAUSE_MAP,



  OMP_CLAUSE__CACHE_,


  OMP_CLAUSE_DEVICE_RESIDENT,


  OMP_CLAUSE_USE_DEVICE,







  OMP_CLAUSE_GANG,


  OMP_CLAUSE_ASYNC,


  OMP_CLAUSE_WAIT,


  OMP_CLAUSE_AUTO,


  OMP_CLAUSE_SEQ,


  OMP_CLAUSE__LOOPTEMP_,


  OMP_CLAUSE_IF,


  OMP_CLAUSE_NUM_THREADS,


  OMP_CLAUSE_SCHEDULE,


  OMP_CLAUSE_NOWAIT,


  OMP_CLAUSE_ORDERED,


  OMP_CLAUSE_DEFAULT,


  OMP_CLAUSE_COLLAPSE,


  OMP_CLAUSE_UNTIED,


  OMP_CLAUSE_FINAL,


  OMP_CLAUSE_MERGEABLE,


  OMP_CLAUSE_DEVICE,


  OMP_CLAUSE_DIST_SCHEDULE,


  OMP_CLAUSE_INBRANCH,


  OMP_CLAUSE_NOTINBRANCH,


  OMP_CLAUSE_NUM_TEAMS,


  OMP_CLAUSE_THREAD_LIMIT,


  OMP_CLAUSE_PROC_BIND,


  OMP_CLAUSE_SAFELEN,


  OMP_CLAUSE_SIMDLEN,


  OMP_CLAUSE_FOR,


  OMP_CLAUSE_PARALLEL,


  OMP_CLAUSE_SECTIONS,


  OMP_CLAUSE_TASKGROUP,


  OMP_CLAUSE__SIMDUID_,



  OMP_CLAUSE__CILK_FOR_COUNT_,


  OMP_CLAUSE_INDEPENDENT,


  OMP_CLAUSE_WORKER,


  OMP_CLAUSE_VECTOR,


  OMP_CLAUSE_NUM_GANGS,


  OMP_CLAUSE_NUM_WORKERS,


  OMP_CLAUSE_VECTOR_LENGTH
};

      enum omp_clause_depend_kind
{
  OMP_CLAUSE_DEPEND_IN,
  OMP_CLAUSE_DEPEND_OUT,
  OMP_CLAUSE_DEPEND_INOUT,
  OMP_CLAUSE_DEPEND_LAST
};

      enum omp_clause_proc_bind_kind
{

  OMP_CLAUSE_PROC_BIND_FALSE = 0,
  OMP_CLAUSE_PROC_BIND_TRUE = 1,
  OMP_CLAUSE_PROC_BIND_MASTER = 2,
  OMP_CLAUSE_PROC_BIND_CLOSE = 3,
  OMP_CLAUSE_PROC_BIND_SPREAD = 4,
  OMP_CLAUSE_PROC_BIND_LAST
};


      enum omp_clause_schedule_kind {
  OMP_CLAUSE_SCHEDULE_STATIC,
  OMP_CLAUSE_SCHEDULE_DYNAMIC,
  OMP_CLAUSE_SCHEDULE_GUIDED,
  OMP_CLAUSE_SCHEDULE_AUTO,
  OMP_CLAUSE_SCHEDULE_RUNTIME,
  OMP_CLAUSE_SCHEDULE_CILKFOR,
  OMP_CLAUSE_SCHEDULE_LAST
};

struct tree_omp_clause {
  struct tree_common common;
  location_t locus;
  enum omp_clause_code code;
  union omp_clause_subcode {
    enum omp_clause_default_kind default_kind;
    enum omp_clause_schedule_kind schedule_kind;
    enum omp_clause_depend_kind depend_kind;

    unsigned char map_kind;
    enum omp_clause_proc_bind_kind proc_bind_kind;
    enum tree_code reduction_code;
  } subcode;



  gimple_seq gimple_reduction_init;
  gimple_seq gimple_reduction_merge;

  tree
    ops[1];
};

struct tree_block {
  struct tree_base base;
  tree chain;

  unsigned abstract_flag : 1;
  unsigned block_num : 31;

  location_t locus;
  location_t end_locus;

  tree vars;
  vec<tree, va_gc> *nonlocalized_vars;

  tree subblocks;
  tree supercontext;
  tree abstract_origin;
  tree fragment_origin;
  tree fragment_chain;
};


  struct tree_constructor {
  struct tree_typed typed;
  vec<constructor_elt, va_gc> *elts;
};

    
union
                                                         tree_node {
  struct tree_base base;
  struct tree_typed typed;
  struct tree_common common;
  struct tree_int_cst int_cst;
  struct tree_real_cst real_cst;
  struct tree_fixed_cst fixed_cst;
  struct tree_vector vector;
  struct tree_string string;
  struct tree_complex complex;
  struct tree_identifier identifier;
  struct tree_decl_minimal decl_minimal;
  struct tree_decl_common decl_common;
  struct tree_decl_with_rtl decl_with_rtl;
  struct tree_decl_non_common
    decl_non_common;
  struct tree_parm_decl parm_decl;
  struct tree_decl_with_vis decl_with_vis;
  struct tree_var_decl var_decl;
  struct tree_field_decl field_decl;
  struct tree_label_decl label_decl;
  struct tree_result_decl result_decl;
  struct tree_const_decl const_decl;
  struct tree_type_decl type_decl;
  struct tree_function_decl function_decl;
  struct tree_translation_unit_decl
    translation_unit_decl;
  struct tree_type_common type_common;
  struct tree_type_with_lang_specific
    type_with_lang_specific;
  struct tree_type_non_common
    type_non_common;
  struct tree_list list;
  struct tree_vec vec;
  struct tree_exp exp;
  struct tree_ssa_name ssa_name;
  struct tree_block block;
  struct tree_binfo binfo;
  struct tree_statement_list stmt_list;
  struct tree_constructor constructor;
  struct tree_omp_clause omp_clause;
  struct tree_optimization_option optimization;
  struct tree_target_option target_option;
};


enum tree_code_class {
  tcc_exceptional,
  tcc_constant,

  tcc_type,
  tcc_declaration,
  tcc_reference,
  tcc_comparison,
  tcc_unary,
  tcc_binary,
  tcc_statement,

  tcc_vl_exp,

  tcc_expression
};

    enum tree_node_kind {
  d_kind,
  t_kind,
  b_kind,
  s_kind,
  r_kind,
  e_kind,
  c_kind,
  id_kind,
  vec_kind,
  binfo_kind,
  ssa_name_kind,
  constr_kind,
  x_kind,
  lang_decl,
  lang_type,
  omp_clause_kind,
  all_kinds
};

    extern const char *get_tree_code_name (enum tree_code);

      //   struct tree_binfo {
      // struct tree_common common;
      
      // tree offset;
      // tree vtable;
      // tree virtuals;
      // tree vptr_field;
      // vec<tree, va_gc> *base_accesses;
      // 	  tree inheritance;
	  
      // 	  tree vtt_subvtt;
      // 	  tree vtt_vptr;
	  
      // 	  vec<tree, va_gc> base_binfos;
      // 	      };
	  

#define TREE_CODE_CLASS_STRING(CLASS)	  tree_code_class_strings[(int) (CLASS)]
    
#define TREE_CODE_CLASS(CODE)	tree_code_type[(int) (CODE)]
    

#define TREE_CODE_LENGTH(CODE)	tree_code_length[(int) (CODE)]

typedef const union tree_node *const_tree;
#define TREE_CODE(NODE) ((enum tree_code) (NODE)->base.code)
#define TREE_CHECK(T,CODE) (T)
#define INTEGER_CST_CHECK(t) TREE_CHECK (t, INTEGER_CST)
#define TREE_INT_CST_EXT_NUNITS(NODE) (INTEGER_CST_CHECK (NODE)->base.u.int_length.extended)
#define HOST_WIDE_INT long
    
#define BINFO_N_BASE_BINFOS(NODE) (BINFO_BASE_BINFOS (NODE)->length ())
#define TREE_VEC_LENGTH(NODE) (TREE_VEC_CHECK (NODE)->base.u.length)
#define TYPE_VECTOR_SUBPARTS(VECTOR_TYPE) (((unsigned HOST_WIDE_INT) 1) << VECTOR_TYPE_CHECK (VECTOR_TYPE)->type_common.precision)
#define BINFO_BASE_BINFOS(NODE) (&TREE_BINFO_CHECK (NODE)->binfo.base_binfos)
#define TREE_VEC_CHECK(t) TREE_CHECK (t, TREE_VEC)
#define TREE_BINFO_CHECK(t) TREE_CHECK (t, TREE_BINFO)
#define TREE_TYPE(NODE) ((NODE)->typed.type)
#define VECTOR_TYPE_CHECK(t) TREE_CHECK (t, VECTOR_TYPE)
#define TREE_STRING_LENGTH(NODE) (STRING_CST_CHECK (NODE)->string.length)

extern unsigned const char omp_clause_num_ops[];



#define OMP_CLAUSE_CODE(NODE) (OMP_CLAUSE_CHECK (NODE))->omp_clause.code
#define STRING_CST_CHECK(t) TREE_CHECK (t, STRING_CST)
#define VL_EXP_OPERAND_LENGTH(NODE) ((int)TREE_INT_CST_LOW (VL_EXP_CHECK (NODE)->exp.operands[0]))
#define OMP_CLAUSE_CHECK(t) TREE_CHECK (t, OMP_CLAUSE)
#define TREE_CLASS_CHECK(T,CODE) (T)
#define TREE_INT_CST_LOW(NODE) ((unsigned HOST_WIDE_INT) TREE_INT_CST_ELT (NODE, 0))
#define VL_EXP_CHECK(T) TREE_CLASS_CHECK (T, tcc_vl_exp)
#define TREE_INT_CST_ELT(NODE,I) TREE_INT_CST_ELT_CHECK (NODE, I)
#define TREE_INT_CST_ELT_CHECK(T,I) ((T)->int_cst.val[I])

extern size_t tree_size (const_tree);
