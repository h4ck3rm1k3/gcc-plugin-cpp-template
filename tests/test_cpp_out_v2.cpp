#include "plugincpp_interface_simple.cpp"
#include "defines.h"

void define_class_CLS_0_double_int() { 
  define_generic_class_name<double_int>("double_int");
}; 
void define_class_CLS_1_tree_base_union_bits() { 
	 define_generic_class_name<tree_base_union_bits>("tree_base_union_bits");
	 define_generic_bitfield<tree_base_union_bits>("lang_flag_0",1,0,0,1);
	 define_generic_bitfield<tree_base_union_bits>("lang_flag_1",1,0,1,1);
	 define_generic_bitfield<tree_base_union_bits>("lang_flag_2",1,0,2,1);
	 define_generic_bitfield<tree_base_union_bits>("lang_flag_3",1,0,3,1);
	 define_generic_bitfield<tree_base_union_bits>("lang_flag_4",1,0,4,1);
	 define_generic_bitfield<tree_base_union_bits>("lang_flag_5",1,0,5,1);
	 define_generic_bitfield<tree_base_union_bits>("lang_flag_6",1,0,6,1);
	 define_generic_bitfield<tree_base_union_bits>("saturating_flag",1,0,7,1);
	 define_generic_bitfield<tree_base_union_bits>("unsigned_flag",1,0,8,1);
	 define_generic_bitfield<tree_base_union_bits>("packed_flag",1,0,9,1);
	 define_generic_bitfield<tree_base_union_bits>("user_align",1,0,10,1);
	 define_generic_bitfield<tree_base_union_bits>("nameless_flag",1,0,11,1);
	 define_generic_bitfield<tree_base_union_bits>("atomic_flag",1,0,12,1);
	 define_generic_bitfield<tree_base_union_bits>("spare0",1,0,13,3);
	 define_generic_bitfield<tree_base_union_bits>("spare1",1,0,16,8);
	 define_generic_bitfield<tree_base_union_bits>("address_space",1,0,24,8);
}; 
void define_class_CLS_2_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 

void define_class_CLS_4_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
};

void define_class_CLS_3_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
         define_class_CLS_4_tree_base();
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
void define_class_CLS_5_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
         define_class_CLS_3_tree_typed();
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
};

void define_class_CLS_8_tree_int_cst() { 
	 define_generic_class_name<tree_int_cst>("tree_int_cst");
void define_class_CLS_9_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_10_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_int_cst::typed,"typed",0,0,0,128);
void define_class_CLS_11_double_int() { 
	 define_generic_class_name<double_int>("double_int");
}; 
	 define_generic_field (&tree_int_cst::int_cst,"int_cst",0,16,0,8);
}; 
void define_class_CLS_12_tree_real_cst() { 
	 define_generic_class_name<tree_real_cst>("tree_real_cst");
void define_class_CLS_13_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_14_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_real_cst::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_real_cst::real_cst_ptr,"real_cst_ptr",0,16,0,64);
}; 
void define_class_CLS_15_tree_fixed_cst() { 
	 define_generic_class_name<tree_fixed_cst>("tree_fixed_cst");
void define_class_CLS_16_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_17_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_fixed_cst::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_fixed_cst::fixed_cst_ptr,"fixed_cst_ptr",0,16,0,64);
}; 
void define_class_CLS_18_tree_string() { 
	 define_generic_class_name<tree_string>("tree_string");
void define_class_CLS_19_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_20_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_string::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_string::length,"length",0,16,0,32);
	 define_generic_field (&tree_string::str,"str",0,16,32,8);
}; 
void define_class_CLS_21_tree_complex() { 
	 define_generic_class_name<tree_complex>("tree_complex");
void define_class_CLS_22_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_23_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_complex::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_complex::real,"real",0,16,0,64);
	 define_generic_field (&tree_complex::imag,"imag",0,16,64,64);
}; 
void define_class_CLS_24_tree_vector() { 
	 define_generic_class_name<tree_vector>("tree_vector");
void define_class_CLS_25_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_26_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_vector::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_vector::elts,"elts",0,16,0,64);
}; 
void define_class_CLS_27_ht_identifier() { 
	 define_generic_class_name<ht_identifier>("ht_identifier");
	 define_generic_field (&ht_identifier::str,"str",0,0,0,64);
	 define_generic_field (&ht_identifier::len,"len",0,0,64,32);
	 define_generic_field (&ht_identifier::hash_value,"hash_value",0,0,96,32);
}; 
void define_class_CLS_28_tree_identifier() { 
	 define_generic_class_name<tree_identifier>("tree_identifier");
void define_class_CLS_29_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_30_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_31_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_identifier::common,"common",0,0,0,192);
void define_class_CLS_32_ht_identifier() { 
	 define_generic_class_name<ht_identifier>("ht_identifier");
	 define_generic_field (&ht_identifier::str,"str",0,0,0,64);
	 define_generic_field (&ht_identifier::len,"len",0,0,64,32);
	 define_generic_field (&ht_identifier::hash_value,"hash_value",0,0,96,32);
}; 
	 define_generic_field (&tree_identifier::id,"id",0,16,64,128);
}; 
void define_class_CLS_33_tree_list() { 
	 define_generic_class_name<tree_list>("tree_list");
void define_class_CLS_34_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_35_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_36_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_list::common,"common",0,0,0,192);
	 define_generic_field (&tree_list::purpose,"purpose",0,16,64,64);
	 define_generic_field (&tree_list::value,"value",0,32,0,64);
}; 
void define_class_CLS_37_tree_vec() { 
	 define_generic_class_name<tree_vec>("tree_vec");
void define_class_CLS_38_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_39_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_40_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_vec::common,"common",0,0,0,192);
	 define_generic_field (&tree_vec::a,"a",0,16,64,64);
}; 
void define_class_CLS_41_constructor_elt() { 
	 define_generic_class_name<constructor_elt>("constructor_elt");
	 define_generic_field (&constructor_elt::index,"index",0,0,0,64);
	 define_generic_field (&constructor_elt::value,"value",0,0,64,64);
}; 
void define_class_CLS_42_vec_constructor_elt() { 
	 define_generic_class_name<vec_constructor_elt>("vec_constructor_elt");
}; 
void define_class_CLS_43_vec_tree() { 
	 define_generic_class_name<vec_tree>("vec_tree");
}; 
void define_class_CLS_44_tree_constructor() { 
	 define_generic_class_name<tree_constructor>("tree_constructor");
void define_class_CLS_45_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_46_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_constructor::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_constructor::elts,"elts",0,16,0,64);
}; 
void define_class_CLS_47_tree_type_common() { 
	 define_generic_class_name<tree_type_common>("tree_type_common");
void define_class_CLS_48_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_49_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_50_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_type_common::common,"common",0,0,0,192);
	 define_generic_field (&tree_type_common::size,"size",0,16,64,64);
	 define_generic_field (&tree_type_common::size_unit,"size_unit",0,32,0,64);
	 define_generic_field (&tree_type_common::attributes,"attributes",0,32,64,64);
	 define_generic_field (&tree_type_common::uid,"uid",0,48,0,32);
	 define_generic_bitfield<tree_type_common>("precision",1,48,32,10);
	 define_generic_bitfield<tree_type_common>("no_force_blk_flag",1,48,42,1);
	 define_generic_bitfield<tree_type_common>("needs_constructing_flag",1,48,43,1);
	 define_generic_bitfield<tree_type_common>("transparent_aggr_flag",1,48,44,1);
	 define_generic_bitfield<tree_type_common>("restrict_flag",1,48,45,1);
	 define_generic_bitfield<tree_type_common>("contains_placeholder_bits",1,48,46,2);
	 define_generic_bitfield<tree_type_common>("mode",1,48,48,8);
	 define_generic_bitfield<tree_type_common>("string_flag",1,48,56,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_0",1,48,57,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_1",1,48,58,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_2",1,48,59,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_3",1,48,60,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_4",1,48,61,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_5",1,48,62,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_6",1,48,63,1);
	 define_generic_field (&tree_type_common::align,"align",0,48,64,32);
	 define_generic_field (&tree_type_common::alias_set,"alias_set",0,48,96,32);
	 define_generic_field (&tree_type_common::pointer_to,"pointer_to",0,64,0,64);
	 define_generic_field (&tree_type_common::reference_to,"reference_to",0,64,64,64);
	 define_generic_field (&tree_type_common::symtab,"symtab",0,80,0,64);
	 define_generic_field (&tree_type_common::canonical,"canonical",0,80,64,64);
	 define_generic_field (&tree_type_common::next_variant,"next_variant",0,96,0,64);
	 define_generic_field (&tree_type_common::main_variant,"main_variant",0,96,64,64);
	 define_generic_field (&tree_type_common::context,"context",0,112,0,64);
	 define_generic_field (&tree_type_common::name,"name",0,112,64,64);
}; 
void define_class_CLS_51_tree_type_with_lang_specific() { 
	 define_generic_class_name<tree_type_with_lang_specific>("tree_type_with_lang_specific");
void define_class_CLS_52_tree_type_common() { 
	 define_generic_class_name<tree_type_common>("tree_type_common");
void define_class_CLS_53_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_54_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_55_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_type_common::common,"common",0,0,0,192);
	 define_generic_field (&tree_type_common::size,"size",0,16,64,64);
	 define_generic_field (&tree_type_common::size_unit,"size_unit",0,32,0,64);
	 define_generic_field (&tree_type_common::attributes,"attributes",0,32,64,64);
	 define_generic_field (&tree_type_common::uid,"uid",0,48,0,32);
	 define_generic_bitfield<tree_type_common>("precision",1,48,32,10);
	 define_generic_bitfield<tree_type_common>("no_force_blk_flag",1,48,42,1);
	 define_generic_bitfield<tree_type_common>("needs_constructing_flag",1,48,43,1);
	 define_generic_bitfield<tree_type_common>("transparent_aggr_flag",1,48,44,1);
	 define_generic_bitfield<tree_type_common>("restrict_flag",1,48,45,1);
	 define_generic_bitfield<tree_type_common>("contains_placeholder_bits",1,48,46,2);
	 define_generic_bitfield<tree_type_common>("mode",1,48,48,8);
	 define_generic_bitfield<tree_type_common>("string_flag",1,48,56,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_0",1,48,57,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_1",1,48,58,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_2",1,48,59,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_3",1,48,60,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_4",1,48,61,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_5",1,48,62,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_6",1,48,63,1);
	 define_generic_field (&tree_type_common::align,"align",0,48,64,32);
	 define_generic_field (&tree_type_common::alias_set,"alias_set",0,48,96,32);
	 define_generic_field (&tree_type_common::pointer_to,"pointer_to",0,64,0,64);
	 define_generic_field (&tree_type_common::reference_to,"reference_to",0,64,64,64);
	 define_generic_field (&tree_type_common::symtab,"symtab",0,80,0,64);
	 define_generic_field (&tree_type_common::canonical,"canonical",0,80,64,64);
	 define_generic_field (&tree_type_common::next_variant,"next_variant",0,96,0,64);
	 define_generic_field (&tree_type_common::main_variant,"main_variant",0,96,64,64);
	 define_generic_field (&tree_type_common::context,"context",0,112,0,64);
	 define_generic_field (&tree_type_common::name,"name",0,112,64,64);
}; 
	 define_generic_field (&tree_type_with_lang_specific::common,"common",0,0,0,1024);
	 define_generic_field (&tree_type_with_lang_specific::lang_specific,"lang_specific",0,128,0,64);
}; 
void define_class_CLS_56_tree_type_non_common() { 
	 define_generic_class_name<tree_type_non_common>("tree_type_non_common");
void define_class_CLS_57_tree_type_with_lang_specific() { 
	 define_generic_class_name<tree_type_with_lang_specific>("tree_type_with_lang_specific");
void define_class_CLS_58_tree_type_common() { 
	 define_generic_class_name<tree_type_common>("tree_type_common");
void define_class_CLS_59_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_60_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_61_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_type_common::common,"common",0,0,0,192);
	 define_generic_field (&tree_type_common::size,"size",0,16,64,64);
	 define_generic_field (&tree_type_common::size_unit,"size_unit",0,32,0,64);
	 define_generic_field (&tree_type_common::attributes,"attributes",0,32,64,64);
	 define_generic_field (&tree_type_common::uid,"uid",0,48,0,32);
	 define_generic_bitfield<tree_type_common>("precision",1,48,32,10);
	 define_generic_bitfield<tree_type_common>("no_force_blk_flag",1,48,42,1);
	 define_generic_bitfield<tree_type_common>("needs_constructing_flag",1,48,43,1);
	 define_generic_bitfield<tree_type_common>("transparent_aggr_flag",1,48,44,1);
	 define_generic_bitfield<tree_type_common>("restrict_flag",1,48,45,1);
	 define_generic_bitfield<tree_type_common>("contains_placeholder_bits",1,48,46,2);
	 define_generic_bitfield<tree_type_common>("mode",1,48,48,8);
	 define_generic_bitfield<tree_type_common>("string_flag",1,48,56,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_0",1,48,57,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_1",1,48,58,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_2",1,48,59,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_3",1,48,60,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_4",1,48,61,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_5",1,48,62,1);
	 define_generic_bitfield<tree_type_common>("lang_flag_6",1,48,63,1);
	 define_generic_field (&tree_type_common::align,"align",0,48,64,32);
	 define_generic_field (&tree_type_common::alias_set,"alias_set",0,48,96,32);
	 define_generic_field (&tree_type_common::pointer_to,"pointer_to",0,64,0,64);
	 define_generic_field (&tree_type_common::reference_to,"reference_to",0,64,64,64);
	 define_generic_field (&tree_type_common::symtab,"symtab",0,80,0,64);
	 define_generic_field (&tree_type_common::canonical,"canonical",0,80,64,64);
	 define_generic_field (&tree_type_common::next_variant,"next_variant",0,96,0,64);
	 define_generic_field (&tree_type_common::main_variant,"main_variant",0,96,64,64);
	 define_generic_field (&tree_type_common::context,"context",0,112,0,64);
	 define_generic_field (&tree_type_common::name,"name",0,112,64,64);
}; 
	 define_generic_field (&tree_type_with_lang_specific::common,"common",0,0,0,1024);
	 define_generic_field (&tree_type_with_lang_specific::lang_specific,"lang_specific",0,128,0,64);
}; 
	 define_generic_field (&tree_type_non_common::with_lang_specific,"with_lang_specific",0,0,0,1088);
	 define_generic_field (&tree_type_non_common::values,"values",0,128,64,64);
	 define_generic_field (&tree_type_non_common::minval,"minval",0,144,0,64);
	 define_generic_field (&tree_type_non_common::maxval,"maxval",0,144,64,64);
	 define_generic_field (&tree_type_non_common::binfo,"binfo",0,160,0,64);
}; 
void define_class_CLS_62_tree_binfo() { 
	 define_generic_class_name<tree_binfo>("tree_binfo");
void define_class_CLS_63_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_64_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_65_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_binfo::common,"common",0,0,0,192);
	 define_generic_field (&tree_binfo::offset,"offset",0,16,64,64);
	 define_generic_field (&tree_binfo::vtable,"vtable",0,32,0,64);
	 define_generic_field (&tree_binfo::virtuals,"virtuals",0,32,64,64);
	 define_generic_field (&tree_binfo::vptr_field,"vptr_field",0,48,0,64);
	 define_generic_field (&tree_binfo::base_accesses,"base_accesses",0,48,64,64);
	 define_generic_field (&tree_binfo::inheritance,"inheritance",0,64,0,64);
	 define_generic_field (&tree_binfo::vtt_subvtt,"vtt_subvtt",0,64,64,64);
	 define_generic_field (&tree_binfo::vtt_vptr,"vtt_vptr",0,80,0,64);
void define_class_CLS_66_vec_tree() { 
	 define_generic_class_name<vec_tree>("vec_tree");
}; 
	 define_generic_field (&tree_binfo::base_binfos,"base_binfos",0,80,64,8);
}; 
void define_class_CLS_67_tree_decl_minimal() { 
	 define_generic_class_name<tree_decl_minimal>("tree_decl_minimal");
void define_class_CLS_68_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_69_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_70_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_decl_minimal::common,"common",0,0,0,192);
	 define_generic_field (&tree_decl_minimal::locus,"locus",0,16,64,32);
	 define_generic_field (&tree_decl_minimal::uid,"uid",0,16,96,32);
	 define_generic_field (&tree_decl_minimal::name,"name",0,32,0,64);
	 define_generic_field (&tree_decl_minimal::context,"context",0,32,64,64);
}; 
void define_class_CLS_71_tree_decl_common() { 
	 define_generic_class_name<tree_decl_common>("tree_decl_common");
void define_class_CLS_72_tree_decl_minimal() { 
	 define_generic_class_name<tree_decl_minimal>("tree_decl_minimal");
void define_class_CLS_73_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_74_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_75_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_decl_minimal::common,"common",0,0,0,192);
	 define_generic_field (&tree_decl_minimal::locus,"locus",0,16,64,32);
	 define_generic_field (&tree_decl_minimal::uid,"uid",0,16,96,32);
	 define_generic_field (&tree_decl_minimal::name,"name",0,32,0,64);
	 define_generic_field (&tree_decl_minimal::context,"context",0,32,64,64);
}; 
	 define_generic_field (&tree_decl_common::common,"common",0,0,0,384);
	 define_generic_field (&tree_decl_common::size,"size",0,48,0,64);
	 define_generic_bitfield<tree_decl_common>("mode",1,48,64,8);
	 define_generic_bitfield<tree_decl_common>("nonlocal_flag",1,48,72,1);
	 define_generic_bitfield<tree_decl_common>("virtual_flag",1,48,73,1);
	 define_generic_bitfield<tree_decl_common>("ignored_flag",1,48,74,1);
	 define_generic_bitfield<tree_decl_common>("abstract_flag",1,48,75,1);
	 define_generic_bitfield<tree_decl_common>("artificial_flag",1,48,76,1);
	 define_generic_bitfield<tree_decl_common>("preserve_flag",1,48,77,1);
	 define_generic_bitfield<tree_decl_common>("debug_expr_is_from",1,48,78,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_0",1,48,79,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_1",1,48,80,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_2",1,48,81,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_3",1,48,82,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_4",1,48,83,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_5",1,48,84,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_6",1,48,85,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_7",1,48,86,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_8",1,48,87,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_0",1,48,88,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_1",1,48,89,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_2",1,48,90,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_3",1,48,91,1);
	 define_generic_bitfield<tree_decl_common>("gimple_reg_flag",1,48,92,1);
	 define_generic_bitfield<tree_decl_common>("decl_by_reference_flag",1,48,93,1);
	 define_generic_bitfield<tree_decl_common>("decl_read_flag",1,48,94,1);
	 define_generic_bitfield<tree_decl_common>("decl_nonshareable_flag",1,48,95,1);
	 define_generic_bitfield<tree_decl_common>("off_align",1,48,96,8);
	 define_generic_field (&tree_decl_common::align,"align",0,64,0,32);
	 define_generic_field (&tree_decl_common::pt_uid,"pt_uid",0,64,32,32);
	 define_generic_field (&tree_decl_common::size_unit,"size_unit",0,64,64,64);
	 define_generic_field (&tree_decl_common::initial,"initial",0,80,0,64);
	 define_generic_field (&tree_decl_common::attributes,"attributes",0,80,64,64);
	 define_generic_field (&tree_decl_common::abstract_origin,"abstract_origin",0,96,0,64);
	 define_generic_field (&tree_decl_common::lang_specific,"lang_specific",0,96,64,64);
}; 
void define_class_CLS_76_tree_decl_with_rtl() { 
	 define_generic_class_name<tree_decl_with_rtl>("tree_decl_with_rtl");
void define_class_CLS_77_tree_decl_common() { 
	 define_generic_class_name<tree_decl_common>("tree_decl_common");
void define_class_CLS_78_tree_decl_minimal() { 
	 define_generic_class_name<tree_decl_minimal>("tree_decl_minimal");
void define_class_CLS_79_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_80_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_81_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_decl_minimal::common,"common",0,0,0,192);
	 define_generic_field (&tree_decl_minimal::locus,"locus",0,16,64,32);
	 define_generic_field (&tree_decl_minimal::uid,"uid",0,16,96,32);
	 define_generic_field (&tree_decl_minimal::name,"name",0,32,0,64);
	 define_generic_field (&tree_decl_minimal::context,"context",0,32,64,64);
}; 
	 define_generic_field (&tree_decl_common::common,"common",0,0,0,384);
	 define_generic_field (&tree_decl_common::size,"size",0,48,0,64);
	 define_generic_bitfield<tree_decl_common>("mode",1,48,64,8);
	 define_generic_bitfield<tree_decl_common>("nonlocal_flag",1,48,72,1);
	 define_generic_bitfield<tree_decl_common>("virtual_flag",1,48,73,1);
	 define_generic_bitfield<tree_decl_common>("ignored_flag",1,48,74,1);
	 define_generic_bitfield<tree_decl_common>("abstract_flag",1,48,75,1);
	 define_generic_bitfield<tree_decl_common>("artificial_flag",1,48,76,1);
	 define_generic_bitfield<tree_decl_common>("preserve_flag",1,48,77,1);
	 define_generic_bitfield<tree_decl_common>("debug_expr_is_from",1,48,78,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_0",1,48,79,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_1",1,48,80,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_2",1,48,81,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_3",1,48,82,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_4",1,48,83,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_5",1,48,84,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_6",1,48,85,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_7",1,48,86,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_8",1,48,87,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_0",1,48,88,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_1",1,48,89,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_2",1,48,90,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_3",1,48,91,1);
	 define_generic_bitfield<tree_decl_common>("gimple_reg_flag",1,48,92,1);
	 define_generic_bitfield<tree_decl_common>("decl_by_reference_flag",1,48,93,1);
	 define_generic_bitfield<tree_decl_common>("decl_read_flag",1,48,94,1);
	 define_generic_bitfield<tree_decl_common>("decl_nonshareable_flag",1,48,95,1);
	 define_generic_bitfield<tree_decl_common>("off_align",1,48,96,8);
	 define_generic_field (&tree_decl_common::align,"align",0,64,0,32);
	 define_generic_field (&tree_decl_common::pt_uid,"pt_uid",0,64,32,32);
	 define_generic_field (&tree_decl_common::size_unit,"size_unit",0,64,64,64);
	 define_generic_field (&tree_decl_common::initial,"initial",0,80,0,64);
	 define_generic_field (&tree_decl_common::attributes,"attributes",0,80,64,64);
	 define_generic_field (&tree_decl_common::abstract_origin,"abstract_origin",0,96,0,64);
	 define_generic_field (&tree_decl_common::lang_specific,"lang_specific",0,96,64,64);
}; 
	 define_generic_field (&tree_decl_with_rtl::common,"common",0,0,0,896);
	 define_generic_field (&tree_decl_with_rtl::rtl,"rtl",0,112,0,64);
}; 
void define_class_CLS_82_tree_field_decl() { 
	 define_generic_class_name<tree_field_decl>("tree_field_decl");
void define_class_CLS_83_tree_decl_common() { 
	 define_generic_class_name<tree_decl_common>("tree_decl_common");
void define_class_CLS_84_tree_decl_minimal() { 
	 define_generic_class_name<tree_decl_minimal>("tree_decl_minimal");
void define_class_CLS_85_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_86_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_87_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_decl_minimal::common,"common",0,0,0,192);
	 define_generic_field (&tree_decl_minimal::locus,"locus",0,16,64,32);
	 define_generic_field (&tree_decl_minimal::uid,"uid",0,16,96,32);
	 define_generic_field (&tree_decl_minimal::name,"name",0,32,0,64);
	 define_generic_field (&tree_decl_minimal::context,"context",0,32,64,64);
}; 
	 define_generic_field (&tree_decl_common::common,"common",0,0,0,384);
	 define_generic_field (&tree_decl_common::size,"size",0,48,0,64);
	 define_generic_bitfield<tree_decl_common>("mode",1,48,64,8);
	 define_generic_bitfield<tree_decl_common>("nonlocal_flag",1,48,72,1);
	 define_generic_bitfield<tree_decl_common>("virtual_flag",1,48,73,1);
	 define_generic_bitfield<tree_decl_common>("ignored_flag",1,48,74,1);
	 define_generic_bitfield<tree_decl_common>("abstract_flag",1,48,75,1);
	 define_generic_bitfield<tree_decl_common>("artificial_flag",1,48,76,1);
	 define_generic_bitfield<tree_decl_common>("preserve_flag",1,48,77,1);
	 define_generic_bitfield<tree_decl_common>("debug_expr_is_from",1,48,78,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_0",1,48,79,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_1",1,48,80,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_2",1,48,81,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_3",1,48,82,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_4",1,48,83,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_5",1,48,84,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_6",1,48,85,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_7",1,48,86,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_8",1,48,87,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_0",1,48,88,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_1",1,48,89,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_2",1,48,90,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_3",1,48,91,1);
	 define_generic_bitfield<tree_decl_common>("gimple_reg_flag",1,48,92,1);
	 define_generic_bitfield<tree_decl_common>("decl_by_reference_flag",1,48,93,1);
	 define_generic_bitfield<tree_decl_common>("decl_read_flag",1,48,94,1);
	 define_generic_bitfield<tree_decl_common>("decl_nonshareable_flag",1,48,95,1);
	 define_generic_bitfield<tree_decl_common>("off_align",1,48,96,8);
	 define_generic_field (&tree_decl_common::align,"align",0,64,0,32);
	 define_generic_field (&tree_decl_common::pt_uid,"pt_uid",0,64,32,32);
	 define_generic_field (&tree_decl_common::size_unit,"size_unit",0,64,64,64);
	 define_generic_field (&tree_decl_common::initial,"initial",0,80,0,64);
	 define_generic_field (&tree_decl_common::attributes,"attributes",0,80,64,64);
	 define_generic_field (&tree_decl_common::abstract_origin,"abstract_origin",0,96,0,64);
	 define_generic_field (&tree_decl_common::lang_specific,"lang_specific",0,96,64,64);
}; 
	 define_generic_field (&tree_field_decl::common,"common",0,0,0,896);
	 define_generic_field (&tree_field_decl::offset,"offset",0,112,0,64);
	 define_generic_field (&tree_field_decl::bit_field_type,"bit_field_type",0,112,64,64);
	 define_generic_field (&tree_field_decl::qualifier,"qualifier",0,128,0,64);
	 define_generic_field (&tree_field_decl::bit_offset,"bit_offset",0,128,64,64);
	 define_generic_field (&tree_field_decl::fcontext,"fcontext",0,144,0,64);
}; 
void define_class_CLS_88_tree_label_decl() { 
	 define_generic_class_name<tree_label_decl>("tree_label_decl");
void define_class_CLS_89_tree_decl_with_rtl() { 
	 define_generic_class_name<tree_decl_with_rtl>("tree_decl_with_rtl");
void define_class_CLS_90_tree_decl_common() { 
	 define_generic_class_name<tree_decl_common>("tree_decl_common");
void define_class_CLS_91_tree_decl_minimal() { 
	 define_generic_class_name<tree_decl_minimal>("tree_decl_minimal");
void define_class_CLS_92_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_93_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_94_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_decl_minimal::common,"common",0,0,0,192);
	 define_generic_field (&tree_decl_minimal::locus,"locus",0,16,64,32);
	 define_generic_field (&tree_decl_minimal::uid,"uid",0,16,96,32);
	 define_generic_field (&tree_decl_minimal::name,"name",0,32,0,64);
	 define_generic_field (&tree_decl_minimal::context,"context",0,32,64,64);
}; 
	 define_generic_field (&tree_decl_common::common,"common",0,0,0,384);
	 define_generic_field (&tree_decl_common::size,"size",0,48,0,64);
	 define_generic_bitfield<tree_decl_common>("mode",1,48,64,8);
	 define_generic_bitfield<tree_decl_common>("nonlocal_flag",1,48,72,1);
	 define_generic_bitfield<tree_decl_common>("virtual_flag",1,48,73,1);
	 define_generic_bitfield<tree_decl_common>("ignored_flag",1,48,74,1);
	 define_generic_bitfield<tree_decl_common>("abstract_flag",1,48,75,1);
	 define_generic_bitfield<tree_decl_common>("artificial_flag",1,48,76,1);
	 define_generic_bitfield<tree_decl_common>("preserve_flag",1,48,77,1);
	 define_generic_bitfield<tree_decl_common>("debug_expr_is_from",1,48,78,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_0",1,48,79,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_1",1,48,80,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_2",1,48,81,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_3",1,48,82,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_4",1,48,83,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_5",1,48,84,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_6",1,48,85,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_7",1,48,86,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_8",1,48,87,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_0",1,48,88,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_1",1,48,89,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_2",1,48,90,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_3",1,48,91,1);
	 define_generic_bitfield<tree_decl_common>("gimple_reg_flag",1,48,92,1);
	 define_generic_bitfield<tree_decl_common>("decl_by_reference_flag",1,48,93,1);
	 define_generic_bitfield<tree_decl_common>("decl_read_flag",1,48,94,1);
	 define_generic_bitfield<tree_decl_common>("decl_nonshareable_flag",1,48,95,1);
	 define_generic_bitfield<tree_decl_common>("off_align",1,48,96,8);
	 define_generic_field (&tree_decl_common::align,"align",0,64,0,32);
	 define_generic_field (&tree_decl_common::pt_uid,"pt_uid",0,64,32,32);
	 define_generic_field (&tree_decl_common::size_unit,"size_unit",0,64,64,64);
	 define_generic_field (&tree_decl_common::initial,"initial",0,80,0,64);
	 define_generic_field (&tree_decl_common::attributes,"attributes",0,80,64,64);
	 define_generic_field (&tree_decl_common::abstract_origin,"abstract_origin",0,96,0,64);
	 define_generic_field (&tree_decl_common::lang_specific,"lang_specific",0,96,64,64);
}; 
	 define_generic_field (&tree_decl_with_rtl::common,"common",0,0,0,896);
	 define_generic_field (&tree_decl_with_rtl::rtl,"rtl",0,112,0,64);
}; 
	 define_generic_field (&tree_label_decl::common,"common",0,0,0,960);
	 define_generic_field (&tree_label_decl::label_decl_uid,"label_decl_uid",0,112,64,32);
	 define_generic_field (&tree_label_decl::eh_landing_pad_nr,"eh_landing_pad_nr",0,112,96,32);
}; 
void define_class_CLS_95_tree_result_decl() { 
	 define_generic_class_name<tree_result_decl>("tree_result_decl");
void define_class_CLS_96_tree_decl_with_rtl() { 
	 define_generic_class_name<tree_decl_with_rtl>("tree_decl_with_rtl");
void define_class_CLS_97_tree_decl_common() { 
	 define_generic_class_name<tree_decl_common>("tree_decl_common");
void define_class_CLS_98_tree_decl_minimal() { 
	 define_generic_class_name<tree_decl_minimal>("tree_decl_minimal");
void define_class_CLS_99_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_100_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_101_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_decl_minimal::common,"common",0,0,0,192);
	 define_generic_field (&tree_decl_minimal::locus,"locus",0,16,64,32);
	 define_generic_field (&tree_decl_minimal::uid,"uid",0,16,96,32);
	 define_generic_field (&tree_decl_minimal::name,"name",0,32,0,64);
	 define_generic_field (&tree_decl_minimal::context,"context",0,32,64,64);
}; 
	 define_generic_field (&tree_decl_common::common,"common",0,0,0,384);
	 define_generic_field (&tree_decl_common::size,"size",0,48,0,64);
	 define_generic_bitfield<tree_decl_common>("mode",1,48,64,8);
	 define_generic_bitfield<tree_decl_common>("nonlocal_flag",1,48,72,1);
	 define_generic_bitfield<tree_decl_common>("virtual_flag",1,48,73,1);
	 define_generic_bitfield<tree_decl_common>("ignored_flag",1,48,74,1);
	 define_generic_bitfield<tree_decl_common>("abstract_flag",1,48,75,1);
	 define_generic_bitfield<tree_decl_common>("artificial_flag",1,48,76,1);
	 define_generic_bitfield<tree_decl_common>("preserve_flag",1,48,77,1);
	 define_generic_bitfield<tree_decl_common>("debug_expr_is_from",1,48,78,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_0",1,48,79,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_1",1,48,80,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_2",1,48,81,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_3",1,48,82,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_4",1,48,83,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_5",1,48,84,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_6",1,48,85,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_7",1,48,86,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_8",1,48,87,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_0",1,48,88,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_1",1,48,89,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_2",1,48,90,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_3",1,48,91,1);
	 define_generic_bitfield<tree_decl_common>("gimple_reg_flag",1,48,92,1);
	 define_generic_bitfield<tree_decl_common>("decl_by_reference_flag",1,48,93,1);
	 define_generic_bitfield<tree_decl_common>("decl_read_flag",1,48,94,1);
	 define_generic_bitfield<tree_decl_common>("decl_nonshareable_flag",1,48,95,1);
	 define_generic_bitfield<tree_decl_common>("off_align",1,48,96,8);
	 define_generic_field (&tree_decl_common::align,"align",0,64,0,32);
	 define_generic_field (&tree_decl_common::pt_uid,"pt_uid",0,64,32,32);
	 define_generic_field (&tree_decl_common::size_unit,"size_unit",0,64,64,64);
	 define_generic_field (&tree_decl_common::initial,"initial",0,80,0,64);
	 define_generic_field (&tree_decl_common::attributes,"attributes",0,80,64,64);
	 define_generic_field (&tree_decl_common::abstract_origin,"abstract_origin",0,96,0,64);
	 define_generic_field (&tree_decl_common::lang_specific,"lang_specific",0,96,64,64);
}; 
	 define_generic_field (&tree_decl_with_rtl::common,"common",0,0,0,896);
	 define_generic_field (&tree_decl_with_rtl::rtl,"rtl",0,112,0,64);
}; 
	 define_generic_field (&tree_result_decl::common,"common",0,0,0,960);
}; 
void define_class_CLS_102_tree_const_decl() { 
	 define_generic_class_name<tree_const_decl>("tree_const_decl");
void define_class_CLS_103_tree_decl_common() { 
	 define_generic_class_name<tree_decl_common>("tree_decl_common");
void define_class_CLS_104_tree_decl_minimal() { 
	 define_generic_class_name<tree_decl_minimal>("tree_decl_minimal");
void define_class_CLS_105_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_106_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_107_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_decl_minimal::common,"common",0,0,0,192);
	 define_generic_field (&tree_decl_minimal::locus,"locus",0,16,64,32);
	 define_generic_field (&tree_decl_minimal::uid,"uid",0,16,96,32);
	 define_generic_field (&tree_decl_minimal::name,"name",0,32,0,64);
	 define_generic_field (&tree_decl_minimal::context,"context",0,32,64,64);
}; 
	 define_generic_field (&tree_decl_common::common,"common",0,0,0,384);
	 define_generic_field (&tree_decl_common::size,"size",0,48,0,64);
	 define_generic_bitfield<tree_decl_common>("mode",1,48,64,8);
	 define_generic_bitfield<tree_decl_common>("nonlocal_flag",1,48,72,1);
	 define_generic_bitfield<tree_decl_common>("virtual_flag",1,48,73,1);
	 define_generic_bitfield<tree_decl_common>("ignored_flag",1,48,74,1);
	 define_generic_bitfield<tree_decl_common>("abstract_flag",1,48,75,1);
	 define_generic_bitfield<tree_decl_common>("artificial_flag",1,48,76,1);
	 define_generic_bitfield<tree_decl_common>("preserve_flag",1,48,77,1);
	 define_generic_bitfield<tree_decl_common>("debug_expr_is_from",1,48,78,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_0",1,48,79,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_1",1,48,80,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_2",1,48,81,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_3",1,48,82,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_4",1,48,83,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_5",1,48,84,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_6",1,48,85,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_7",1,48,86,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_8",1,48,87,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_0",1,48,88,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_1",1,48,89,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_2",1,48,90,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_3",1,48,91,1);
	 define_generic_bitfield<tree_decl_common>("gimple_reg_flag",1,48,92,1);
	 define_generic_bitfield<tree_decl_common>("decl_by_reference_flag",1,48,93,1);
	 define_generic_bitfield<tree_decl_common>("decl_read_flag",1,48,94,1);
	 define_generic_bitfield<tree_decl_common>("decl_nonshareable_flag",1,48,95,1);
	 define_generic_bitfield<tree_decl_common>("off_align",1,48,96,8);
	 define_generic_field (&tree_decl_common::align,"align",0,64,0,32);
	 define_generic_field (&tree_decl_common::pt_uid,"pt_uid",0,64,32,32);
	 define_generic_field (&tree_decl_common::size_unit,"size_unit",0,64,64,64);
	 define_generic_field (&tree_decl_common::initial,"initial",0,80,0,64);
	 define_generic_field (&tree_decl_common::attributes,"attributes",0,80,64,64);
	 define_generic_field (&tree_decl_common::abstract_origin,"abstract_origin",0,96,0,64);
	 define_generic_field (&tree_decl_common::lang_specific,"lang_specific",0,96,64,64);
}; 
	 define_generic_field (&tree_const_decl::common,"common",0,0,0,896);
}; 
void define_class_CLS_108_tree_parm_decl() { 
	 define_generic_class_name<tree_parm_decl>("tree_parm_decl");
void define_class_CLS_109_tree_decl_with_rtl() { 
	 define_generic_class_name<tree_decl_with_rtl>("tree_decl_with_rtl");
void define_class_CLS_110_tree_decl_common() { 
	 define_generic_class_name<tree_decl_common>("tree_decl_common");
void define_class_CLS_111_tree_decl_minimal() { 
	 define_generic_class_name<tree_decl_minimal>("tree_decl_minimal");
void define_class_CLS_112_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_113_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_114_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_decl_minimal::common,"common",0,0,0,192);
	 define_generic_field (&tree_decl_minimal::locus,"locus",0,16,64,32);
	 define_generic_field (&tree_decl_minimal::uid,"uid",0,16,96,32);
	 define_generic_field (&tree_decl_minimal::name,"name",0,32,0,64);
	 define_generic_field (&tree_decl_minimal::context,"context",0,32,64,64);
}; 
	 define_generic_field (&tree_decl_common::common,"common",0,0,0,384);
	 define_generic_field (&tree_decl_common::size,"size",0,48,0,64);
	 define_generic_bitfield<tree_decl_common>("mode",1,48,64,8);
	 define_generic_bitfield<tree_decl_common>("nonlocal_flag",1,48,72,1);
	 define_generic_bitfield<tree_decl_common>("virtual_flag",1,48,73,1);
	 define_generic_bitfield<tree_decl_common>("ignored_flag",1,48,74,1);
	 define_generic_bitfield<tree_decl_common>("abstract_flag",1,48,75,1);
	 define_generic_bitfield<tree_decl_common>("artificial_flag",1,48,76,1);
	 define_generic_bitfield<tree_decl_common>("preserve_flag",1,48,77,1);
	 define_generic_bitfield<tree_decl_common>("debug_expr_is_from",1,48,78,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_0",1,48,79,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_1",1,48,80,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_2",1,48,81,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_3",1,48,82,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_4",1,48,83,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_5",1,48,84,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_6",1,48,85,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_7",1,48,86,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_8",1,48,87,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_0",1,48,88,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_1",1,48,89,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_2",1,48,90,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_3",1,48,91,1);
	 define_generic_bitfield<tree_decl_common>("gimple_reg_flag",1,48,92,1);
	 define_generic_bitfield<tree_decl_common>("decl_by_reference_flag",1,48,93,1);
	 define_generic_bitfield<tree_decl_common>("decl_read_flag",1,48,94,1);
	 define_generic_bitfield<tree_decl_common>("decl_nonshareable_flag",1,48,95,1);
	 define_generic_bitfield<tree_decl_common>("off_align",1,48,96,8);
	 define_generic_field (&tree_decl_common::align,"align",0,64,0,32);
	 define_generic_field (&tree_decl_common::pt_uid,"pt_uid",0,64,32,32);
	 define_generic_field (&tree_decl_common::size_unit,"size_unit",0,64,64,64);
	 define_generic_field (&tree_decl_common::initial,"initial",0,80,0,64);
	 define_generic_field (&tree_decl_common::attributes,"attributes",0,80,64,64);
	 define_generic_field (&tree_decl_common::abstract_origin,"abstract_origin",0,96,0,64);
	 define_generic_field (&tree_decl_common::lang_specific,"lang_specific",0,96,64,64);
}; 
	 define_generic_field (&tree_decl_with_rtl::common,"common",0,0,0,896);
	 define_generic_field (&tree_decl_with_rtl::rtl,"rtl",0,112,0,64);
}; 
	 define_generic_field (&tree_parm_decl::common,"common",0,0,0,960);
	 define_generic_field (&tree_parm_decl::incoming_rtl,"incoming_rtl",0,112,64,64);
}; 
void define_class_CLS_115_tree_decl_with_vis() { 
	 define_generic_class_name<tree_decl_with_vis>("tree_decl_with_vis");
void define_class_CLS_116_tree_decl_with_rtl() { 
	 define_generic_class_name<tree_decl_with_rtl>("tree_decl_with_rtl");
void define_class_CLS_117_tree_decl_common() { 
	 define_generic_class_name<tree_decl_common>("tree_decl_common");
void define_class_CLS_118_tree_decl_minimal() { 
	 define_generic_class_name<tree_decl_minimal>("tree_decl_minimal");
void define_class_CLS_119_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_120_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_121_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_decl_minimal::common,"common",0,0,0,192);
	 define_generic_field (&tree_decl_minimal::locus,"locus",0,16,64,32);
	 define_generic_field (&tree_decl_minimal::uid,"uid",0,16,96,32);
	 define_generic_field (&tree_decl_minimal::name,"name",0,32,0,64);
	 define_generic_field (&tree_decl_minimal::context,"context",0,32,64,64);
}; 
	 define_generic_field (&tree_decl_common::common,"common",0,0,0,384);
	 define_generic_field (&tree_decl_common::size,"size",0,48,0,64);
	 define_generic_bitfield<tree_decl_common>("mode",1,48,64,8);
	 define_generic_bitfield<tree_decl_common>("nonlocal_flag",1,48,72,1);
	 define_generic_bitfield<tree_decl_common>("virtual_flag",1,48,73,1);
	 define_generic_bitfield<tree_decl_common>("ignored_flag",1,48,74,1);
	 define_generic_bitfield<tree_decl_common>("abstract_flag",1,48,75,1);
	 define_generic_bitfield<tree_decl_common>("artificial_flag",1,48,76,1);
	 define_generic_bitfield<tree_decl_common>("preserve_flag",1,48,77,1);
	 define_generic_bitfield<tree_decl_common>("debug_expr_is_from",1,48,78,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_0",1,48,79,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_1",1,48,80,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_2",1,48,81,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_3",1,48,82,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_4",1,48,83,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_5",1,48,84,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_6",1,48,85,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_7",1,48,86,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_8",1,48,87,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_0",1,48,88,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_1",1,48,89,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_2",1,48,90,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_3",1,48,91,1);
	 define_generic_bitfield<tree_decl_common>("gimple_reg_flag",1,48,92,1);
	 define_generic_bitfield<tree_decl_common>("decl_by_reference_flag",1,48,93,1);
	 define_generic_bitfield<tree_decl_common>("decl_read_flag",1,48,94,1);
	 define_generic_bitfield<tree_decl_common>("decl_nonshareable_flag",1,48,95,1);
	 define_generic_bitfield<tree_decl_common>("off_align",1,48,96,8);
	 define_generic_field (&tree_decl_common::align,"align",0,64,0,32);
	 define_generic_field (&tree_decl_common::pt_uid,"pt_uid",0,64,32,32);
	 define_generic_field (&tree_decl_common::size_unit,"size_unit",0,64,64,64);
	 define_generic_field (&tree_decl_common::initial,"initial",0,80,0,64);
	 define_generic_field (&tree_decl_common::attributes,"attributes",0,80,64,64);
	 define_generic_field (&tree_decl_common::abstract_origin,"abstract_origin",0,96,0,64);
	 define_generic_field (&tree_decl_common::lang_specific,"lang_specific",0,96,64,64);
}; 
	 define_generic_field (&tree_decl_with_rtl::common,"common",0,0,0,896);
	 define_generic_field (&tree_decl_with_rtl::rtl,"rtl",0,112,0,64);
}; 
	 define_generic_field (&tree_decl_with_vis::common,"common",0,0,0,960);
	 define_generic_field (&tree_decl_with_vis::assembler_name,"assembler_name",0,112,64,64);
	 define_generic_field (&tree_decl_with_vis::section_name,"section_name",0,128,0,64);
	 define_generic_field (&tree_decl_with_vis::comdat_group,"comdat_group",0,128,64,64);
	 define_generic_bitfield<tree_decl_with_vis>("defer_output",1,144,0,1);
	 define_generic_bitfield<tree_decl_with_vis>("hard_register",1,144,1,1);
	 define_generic_bitfield<tree_decl_with_vis>("common_flag",1,144,2,1);
	 define_generic_bitfield<tree_decl_with_vis>("in_text_section",1,144,3,1);
	 define_generic_bitfield<tree_decl_with_vis>("in_constant_pool",1,144,4,1);
	 define_generic_bitfield<tree_decl_with_vis>("dllimport_flag",1,144,5,1);
	 define_generic_bitfield<tree_decl_with_vis>("weak_flag",1,144,6,1);
	 define_generic_bitfield<tree_decl_with_vis>("implicit_section_name_p",1,144,7,1);
	 define_generic_bitfield<tree_decl_with_vis>("seen_in_bind_expr",1,144,8,1);
	 define_generic_bitfield<tree_decl_with_vis>("comdat_flag",1,144,9,1);
	 define_generic_bitfield<tree_decl_with_vis>("visibility",1,144,10,2);
	 define_generic_bitfield<tree_decl_with_vis>("visibility_specified",1,144,12,1);
	 define_generic_bitfield<tree_decl_with_vis>("tls_model",1,144,13,3);
	 define_generic_bitfield<tree_decl_with_vis>("init_priority_p",1,144,16,1);
	 define_generic_bitfield<tree_decl_with_vis>("shadowed_for_var_p",1,144,17,1);
	 define_generic_bitfield<tree_decl_with_vis>("cxx_constructor",1,144,18,1);
	 define_generic_bitfield<tree_decl_with_vis>("cxx_destructor",1,144,19,1);
	 define_generic_bitfield<tree_decl_with_vis>("final",1,144,20,1);
}; 
void define_class_CLS_122_tree_var_decl() { 
	 define_generic_class_name<tree_var_decl>("tree_var_decl");
void define_class_CLS_123_tree_decl_with_vis() { 
	 define_generic_class_name<tree_decl_with_vis>("tree_decl_with_vis");
void define_class_CLS_124_tree_decl_with_rtl() { 
	 define_generic_class_name<tree_decl_with_rtl>("tree_decl_with_rtl");
void define_class_CLS_125_tree_decl_common() { 
	 define_generic_class_name<tree_decl_common>("tree_decl_common");
void define_class_CLS_126_tree_decl_minimal() { 
	 define_generic_class_name<tree_decl_minimal>("tree_decl_minimal");
void define_class_CLS_127_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_128_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_129_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_decl_minimal::common,"common",0,0,0,192);
	 define_generic_field (&tree_decl_minimal::locus,"locus",0,16,64,32);
	 define_generic_field (&tree_decl_minimal::uid,"uid",0,16,96,32);
	 define_generic_field (&tree_decl_minimal::name,"name",0,32,0,64);
	 define_generic_field (&tree_decl_minimal::context,"context",0,32,64,64);
}; 
	 define_generic_field (&tree_decl_common::common,"common",0,0,0,384);
	 define_generic_field (&tree_decl_common::size,"size",0,48,0,64);
	 define_generic_bitfield<tree_decl_common>("mode",1,48,64,8);
	 define_generic_bitfield<tree_decl_common>("nonlocal_flag",1,48,72,1);
	 define_generic_bitfield<tree_decl_common>("virtual_flag",1,48,73,1);
	 define_generic_bitfield<tree_decl_common>("ignored_flag",1,48,74,1);
	 define_generic_bitfield<tree_decl_common>("abstract_flag",1,48,75,1);
	 define_generic_bitfield<tree_decl_common>("artificial_flag",1,48,76,1);
	 define_generic_bitfield<tree_decl_common>("preserve_flag",1,48,77,1);
	 define_generic_bitfield<tree_decl_common>("debug_expr_is_from",1,48,78,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_0",1,48,79,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_1",1,48,80,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_2",1,48,81,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_3",1,48,82,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_4",1,48,83,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_5",1,48,84,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_6",1,48,85,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_7",1,48,86,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_8",1,48,87,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_0",1,48,88,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_1",1,48,89,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_2",1,48,90,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_3",1,48,91,1);
	 define_generic_bitfield<tree_decl_common>("gimple_reg_flag",1,48,92,1);
	 define_generic_bitfield<tree_decl_common>("decl_by_reference_flag",1,48,93,1);
	 define_generic_bitfield<tree_decl_common>("decl_read_flag",1,48,94,1);
	 define_generic_bitfield<tree_decl_common>("decl_nonshareable_flag",1,48,95,1);
	 define_generic_bitfield<tree_decl_common>("off_align",1,48,96,8);
	 define_generic_field (&tree_decl_common::align,"align",0,64,0,32);
	 define_generic_field (&tree_decl_common::pt_uid,"pt_uid",0,64,32,32);
	 define_generic_field (&tree_decl_common::size_unit,"size_unit",0,64,64,64);
	 define_generic_field (&tree_decl_common::initial,"initial",0,80,0,64);
	 define_generic_field (&tree_decl_common::attributes,"attributes",0,80,64,64);
	 define_generic_field (&tree_decl_common::abstract_origin,"abstract_origin",0,96,0,64);
	 define_generic_field (&tree_decl_common::lang_specific,"lang_specific",0,96,64,64);
}; 
	 define_generic_field (&tree_decl_with_rtl::common,"common",0,0,0,896);
	 define_generic_field (&tree_decl_with_rtl::rtl,"rtl",0,112,0,64);
}; 
	 define_generic_field (&tree_decl_with_vis::common,"common",0,0,0,960);
	 define_generic_field (&tree_decl_with_vis::assembler_name,"assembler_name",0,112,64,64);
	 define_generic_field (&tree_decl_with_vis::section_name,"section_name",0,128,0,64);
	 define_generic_field (&tree_decl_with_vis::comdat_group,"comdat_group",0,128,64,64);
	 define_generic_bitfield<tree_decl_with_vis>("defer_output",1,144,0,1);
	 define_generic_bitfield<tree_decl_with_vis>("hard_register",1,144,1,1);
	 define_generic_bitfield<tree_decl_with_vis>("common_flag",1,144,2,1);
	 define_generic_bitfield<tree_decl_with_vis>("in_text_section",1,144,3,1);
	 define_generic_bitfield<tree_decl_with_vis>("in_constant_pool",1,144,4,1);
	 define_generic_bitfield<tree_decl_with_vis>("dllimport_flag",1,144,5,1);
	 define_generic_bitfield<tree_decl_with_vis>("weak_flag",1,144,6,1);
	 define_generic_bitfield<tree_decl_with_vis>("implicit_section_name_p",1,144,7,1);
	 define_generic_bitfield<tree_decl_with_vis>("seen_in_bind_expr",1,144,8,1);
	 define_generic_bitfield<tree_decl_with_vis>("comdat_flag",1,144,9,1);
	 define_generic_bitfield<tree_decl_with_vis>("visibility",1,144,10,2);
	 define_generic_bitfield<tree_decl_with_vis>("visibility_specified",1,144,12,1);
	 define_generic_bitfield<tree_decl_with_vis>("tls_model",1,144,13,3);
	 define_generic_bitfield<tree_decl_with_vis>("init_priority_p",1,144,16,1);
	 define_generic_bitfield<tree_decl_with_vis>("shadowed_for_var_p",1,144,17,1);
	 define_generic_bitfield<tree_decl_with_vis>("cxx_constructor",1,144,18,1);
	 define_generic_bitfield<tree_decl_with_vis>("cxx_destructor",1,144,19,1);
	 define_generic_bitfield<tree_decl_with_vis>("final",1,144,20,1);
}; 
	 define_generic_field (&tree_var_decl::common,"common",0,0,0,1216);
}; 
void define_class_CLS_130_tree_decl_non_common() { 
	 define_generic_class_name<tree_decl_non_common>("tree_decl_non_common");
void define_class_CLS_131_tree_decl_with_vis() { 
	 define_generic_class_name<tree_decl_with_vis>("tree_decl_with_vis");
void define_class_CLS_132_tree_decl_with_rtl() { 
	 define_generic_class_name<tree_decl_with_rtl>("tree_decl_with_rtl");
void define_class_CLS_133_tree_decl_common() { 
	 define_generic_class_name<tree_decl_common>("tree_decl_common");
void define_class_CLS_134_tree_decl_minimal() { 
	 define_generic_class_name<tree_decl_minimal>("tree_decl_minimal");
void define_class_CLS_135_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_136_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_137_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_decl_minimal::common,"common",0,0,0,192);
	 define_generic_field (&tree_decl_minimal::locus,"locus",0,16,64,32);
	 define_generic_field (&tree_decl_minimal::uid,"uid",0,16,96,32);
	 define_generic_field (&tree_decl_minimal::name,"name",0,32,0,64);
	 define_generic_field (&tree_decl_minimal::context,"context",0,32,64,64);
}; 
	 define_generic_field (&tree_decl_common::common,"common",0,0,0,384);
	 define_generic_field (&tree_decl_common::size,"size",0,48,0,64);
	 define_generic_bitfield<tree_decl_common>("mode",1,48,64,8);
	 define_generic_bitfield<tree_decl_common>("nonlocal_flag",1,48,72,1);
	 define_generic_bitfield<tree_decl_common>("virtual_flag",1,48,73,1);
	 define_generic_bitfield<tree_decl_common>("ignored_flag",1,48,74,1);
	 define_generic_bitfield<tree_decl_common>("abstract_flag",1,48,75,1);
	 define_generic_bitfield<tree_decl_common>("artificial_flag",1,48,76,1);
	 define_generic_bitfield<tree_decl_common>("preserve_flag",1,48,77,1);
	 define_generic_bitfield<tree_decl_common>("debug_expr_is_from",1,48,78,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_0",1,48,79,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_1",1,48,80,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_2",1,48,81,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_3",1,48,82,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_4",1,48,83,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_5",1,48,84,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_6",1,48,85,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_7",1,48,86,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_8",1,48,87,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_0",1,48,88,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_1",1,48,89,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_2",1,48,90,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_3",1,48,91,1);
	 define_generic_bitfield<tree_decl_common>("gimple_reg_flag",1,48,92,1);
	 define_generic_bitfield<tree_decl_common>("decl_by_reference_flag",1,48,93,1);
	 define_generic_bitfield<tree_decl_common>("decl_read_flag",1,48,94,1);
	 define_generic_bitfield<tree_decl_common>("decl_nonshareable_flag",1,48,95,1);
	 define_generic_bitfield<tree_decl_common>("off_align",1,48,96,8);
	 define_generic_field (&tree_decl_common::align,"align",0,64,0,32);
	 define_generic_field (&tree_decl_common::pt_uid,"pt_uid",0,64,32,32);
	 define_generic_field (&tree_decl_common::size_unit,"size_unit",0,64,64,64);
	 define_generic_field (&tree_decl_common::initial,"initial",0,80,0,64);
	 define_generic_field (&tree_decl_common::attributes,"attributes",0,80,64,64);
	 define_generic_field (&tree_decl_common::abstract_origin,"abstract_origin",0,96,0,64);
	 define_generic_field (&tree_decl_common::lang_specific,"lang_specific",0,96,64,64);
}; 
	 define_generic_field (&tree_decl_with_rtl::common,"common",0,0,0,896);
	 define_generic_field (&tree_decl_with_rtl::rtl,"rtl",0,112,0,64);
}; 
	 define_generic_field (&tree_decl_with_vis::common,"common",0,0,0,960);
	 define_generic_field (&tree_decl_with_vis::assembler_name,"assembler_name",0,112,64,64);
	 define_generic_field (&tree_decl_with_vis::section_name,"section_name",0,128,0,64);
	 define_generic_field (&tree_decl_with_vis::comdat_group,"comdat_group",0,128,64,64);
	 define_generic_bitfield<tree_decl_with_vis>("defer_output",1,144,0,1);
	 define_generic_bitfield<tree_decl_with_vis>("hard_register",1,144,1,1);
	 define_generic_bitfield<tree_decl_with_vis>("common_flag",1,144,2,1);
	 define_generic_bitfield<tree_decl_with_vis>("in_text_section",1,144,3,1);
	 define_generic_bitfield<tree_decl_with_vis>("in_constant_pool",1,144,4,1);
	 define_generic_bitfield<tree_decl_with_vis>("dllimport_flag",1,144,5,1);
	 define_generic_bitfield<tree_decl_with_vis>("weak_flag",1,144,6,1);
	 define_generic_bitfield<tree_decl_with_vis>("implicit_section_name_p",1,144,7,1);
	 define_generic_bitfield<tree_decl_with_vis>("seen_in_bind_expr",1,144,8,1);
	 define_generic_bitfield<tree_decl_with_vis>("comdat_flag",1,144,9,1);
	 define_generic_bitfield<tree_decl_with_vis>("visibility",1,144,10,2);
	 define_generic_bitfield<tree_decl_with_vis>("visibility_specified",1,144,12,1);
	 define_generic_bitfield<tree_decl_with_vis>("tls_model",1,144,13,3);
	 define_generic_bitfield<tree_decl_with_vis>("init_priority_p",1,144,16,1);
	 define_generic_bitfield<tree_decl_with_vis>("shadowed_for_var_p",1,144,17,1);
	 define_generic_bitfield<tree_decl_with_vis>("cxx_constructor",1,144,18,1);
	 define_generic_bitfield<tree_decl_with_vis>("cxx_destructor",1,144,19,1);
	 define_generic_bitfield<tree_decl_with_vis>("final",1,144,20,1);
}; 
	 define_generic_field (&tree_decl_non_common::common,"common",0,0,0,1216);
	 define_generic_field (&tree_decl_non_common::saved_tree,"saved_tree",0,144,64,64);
	 define_generic_field (&tree_decl_non_common::arguments,"arguments",0,160,0,64);
	 define_generic_field (&tree_decl_non_common::result,"result",0,160,64,64);
	 define_generic_field (&tree_decl_non_common::vindex,"vindex",0,176,0,64);
}; 
void define_class_CLS_138_tree_function_decl() { 
	 define_generic_class_name<tree_function_decl>("tree_function_decl");
void define_class_CLS_139_tree_decl_non_common() { 
	 define_generic_class_name<tree_decl_non_common>("tree_decl_non_common");
void define_class_CLS_140_tree_decl_with_vis() { 
	 define_generic_class_name<tree_decl_with_vis>("tree_decl_with_vis");
void define_class_CLS_141_tree_decl_with_rtl() { 
	 define_generic_class_name<tree_decl_with_rtl>("tree_decl_with_rtl");
void define_class_CLS_142_tree_decl_common() { 
	 define_generic_class_name<tree_decl_common>("tree_decl_common");
void define_class_CLS_143_tree_decl_minimal() { 
	 define_generic_class_name<tree_decl_minimal>("tree_decl_minimal");
void define_class_CLS_144_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_145_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_146_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_decl_minimal::common,"common",0,0,0,192);
	 define_generic_field (&tree_decl_minimal::locus,"locus",0,16,64,32);
	 define_generic_field (&tree_decl_minimal::uid,"uid",0,16,96,32);
	 define_generic_field (&tree_decl_minimal::name,"name",0,32,0,64);
	 define_generic_field (&tree_decl_minimal::context,"context",0,32,64,64);
}; 
	 define_generic_field (&tree_decl_common::common,"common",0,0,0,384);
	 define_generic_field (&tree_decl_common::size,"size",0,48,0,64);
	 define_generic_bitfield<tree_decl_common>("mode",1,48,64,8);
	 define_generic_bitfield<tree_decl_common>("nonlocal_flag",1,48,72,1);
	 define_generic_bitfield<tree_decl_common>("virtual_flag",1,48,73,1);
	 define_generic_bitfield<tree_decl_common>("ignored_flag",1,48,74,1);
	 define_generic_bitfield<tree_decl_common>("abstract_flag",1,48,75,1);
	 define_generic_bitfield<tree_decl_common>("artificial_flag",1,48,76,1);
	 define_generic_bitfield<tree_decl_common>("preserve_flag",1,48,77,1);
	 define_generic_bitfield<tree_decl_common>("debug_expr_is_from",1,48,78,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_0",1,48,79,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_1",1,48,80,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_2",1,48,81,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_3",1,48,82,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_4",1,48,83,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_5",1,48,84,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_6",1,48,85,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_7",1,48,86,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_8",1,48,87,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_0",1,48,88,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_1",1,48,89,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_2",1,48,90,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_3",1,48,91,1);
	 define_generic_bitfield<tree_decl_common>("gimple_reg_flag",1,48,92,1);
	 define_generic_bitfield<tree_decl_common>("decl_by_reference_flag",1,48,93,1);
	 define_generic_bitfield<tree_decl_common>("decl_read_flag",1,48,94,1);
	 define_generic_bitfield<tree_decl_common>("decl_nonshareable_flag",1,48,95,1);
	 define_generic_bitfield<tree_decl_common>("off_align",1,48,96,8);
	 define_generic_field (&tree_decl_common::align,"align",0,64,0,32);
	 define_generic_field (&tree_decl_common::pt_uid,"pt_uid",0,64,32,32);
	 define_generic_field (&tree_decl_common::size_unit,"size_unit",0,64,64,64);
	 define_generic_field (&tree_decl_common::initial,"initial",0,80,0,64);
	 define_generic_field (&tree_decl_common::attributes,"attributes",0,80,64,64);
	 define_generic_field (&tree_decl_common::abstract_origin,"abstract_origin",0,96,0,64);
	 define_generic_field (&tree_decl_common::lang_specific,"lang_specific",0,96,64,64);
}; 
	 define_generic_field (&tree_decl_with_rtl::common,"common",0,0,0,896);
	 define_generic_field (&tree_decl_with_rtl::rtl,"rtl",0,112,0,64);
}; 
	 define_generic_field (&tree_decl_with_vis::common,"common",0,0,0,960);
	 define_generic_field (&tree_decl_with_vis::assembler_name,"assembler_name",0,112,64,64);
	 define_generic_field (&tree_decl_with_vis::section_name,"section_name",0,128,0,64);
	 define_generic_field (&tree_decl_with_vis::comdat_group,"comdat_group",0,128,64,64);
	 define_generic_bitfield<tree_decl_with_vis>("defer_output",1,144,0,1);
	 define_generic_bitfield<tree_decl_with_vis>("hard_register",1,144,1,1);
	 define_generic_bitfield<tree_decl_with_vis>("common_flag",1,144,2,1);
	 define_generic_bitfield<tree_decl_with_vis>("in_text_section",1,144,3,1);
	 define_generic_bitfield<tree_decl_with_vis>("in_constant_pool",1,144,4,1);
	 define_generic_bitfield<tree_decl_with_vis>("dllimport_flag",1,144,5,1);
	 define_generic_bitfield<tree_decl_with_vis>("weak_flag",1,144,6,1);
	 define_generic_bitfield<tree_decl_with_vis>("implicit_section_name_p",1,144,7,1);
	 define_generic_bitfield<tree_decl_with_vis>("seen_in_bind_expr",1,144,8,1);
	 define_generic_bitfield<tree_decl_with_vis>("comdat_flag",1,144,9,1);
	 define_generic_bitfield<tree_decl_with_vis>("visibility",1,144,10,2);
	 define_generic_bitfield<tree_decl_with_vis>("visibility_specified",1,144,12,1);
	 define_generic_bitfield<tree_decl_with_vis>("tls_model",1,144,13,3);
	 define_generic_bitfield<tree_decl_with_vis>("init_priority_p",1,144,16,1);
	 define_generic_bitfield<tree_decl_with_vis>("shadowed_for_var_p",1,144,17,1);
	 define_generic_bitfield<tree_decl_with_vis>("cxx_constructor",1,144,18,1);
	 define_generic_bitfield<tree_decl_with_vis>("cxx_destructor",1,144,19,1);
	 define_generic_bitfield<tree_decl_with_vis>("final",1,144,20,1);
}; 
	 define_generic_field (&tree_decl_non_common::common,"common",0,0,0,1216);
	 define_generic_field (&tree_decl_non_common::saved_tree,"saved_tree",0,144,64,64);
	 define_generic_field (&tree_decl_non_common::arguments,"arguments",0,160,0,64);
	 define_generic_field (&tree_decl_non_common::result,"result",0,160,64,64);
	 define_generic_field (&tree_decl_non_common::vindex,"vindex",0,176,0,64);
}; 
	 define_generic_field (&tree_function_decl::common,"common",0,0,0,1472);
	 define_generic_field (&tree_function_decl::f,"f",0,176,64,64);
	 define_generic_field (&tree_function_decl::personality,"personality",0,192,0,64);
	 define_generic_field (&tree_function_decl::function_specific_target,"function_specific_target",0,192,64,64);
	 define_generic_field (&tree_function_decl::function_specific_optimization,"function_specific_optimization",0,208,0,64);
	 define_generic_bitfield<tree_function_decl>("function_code",1,208,64,11);
	 define_generic_bitfield<tree_function_decl>("built_in_class",1,208,75,2);
	 define_generic_bitfield<tree_function_decl>("static_ctor_flag",1,208,77,1);
	 define_generic_bitfield<tree_function_decl>("static_dtor_flag",1,208,78,1);
	 define_generic_bitfield<tree_function_decl>("uninlinable",1,208,79,1);
	 define_generic_bitfield<tree_function_decl>("possibly_inlined",1,208,80,1);
	 define_generic_bitfield<tree_function_decl>("novops_flag",1,208,81,1);
	 define_generic_bitfield<tree_function_decl>("returns_twice_flag",1,208,82,1);
	 define_generic_bitfield<tree_function_decl>("malloc_flag",1,208,83,1);
	 define_generic_bitfield<tree_function_decl>("operator_new_flag",1,208,84,1);
	 define_generic_bitfield<tree_function_decl>("declared_inline_flag",1,208,85,1);
	 define_generic_bitfield<tree_function_decl>("regdecl_flag",1,208,86,1);
	 define_generic_bitfield<tree_function_decl>("no_inline_warning_flag",1,208,87,1);
	 define_generic_bitfield<tree_function_decl>("no_instrument_function_entry_exit",1,208,88,1);
	 define_generic_bitfield<tree_function_decl>("no_limit_stack",1,208,89,1);
	 define_generic_bitfield<tree_function_decl>("disregard_inline_limits",1,208,90,1);
	 define_generic_bitfield<tree_function_decl>("pure_flag",1,208,91,1);
	 define_generic_bitfield<tree_function_decl>("looping_const_or_pure_flag",1,208,92,1);
	 define_generic_bitfield<tree_function_decl>("has_debug_args_flag",1,208,93,1);
	 define_generic_bitfield<tree_function_decl>("tm_clone_flag",1,208,94,1);
	 define_generic_bitfield<tree_function_decl>("versioned_function",1,208,95,1);
}; 
void define_class_CLS_147_tree_translation_unit_decl() { 
	 define_generic_class_name<tree_translation_unit_decl>("tree_translation_unit_decl");
void define_class_CLS_148_tree_decl_common() { 
	 define_generic_class_name<tree_decl_common>("tree_decl_common");
void define_class_CLS_149_tree_decl_minimal() { 
	 define_generic_class_name<tree_decl_minimal>("tree_decl_minimal");
void define_class_CLS_150_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_151_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_152_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_decl_minimal::common,"common",0,0,0,192);
	 define_generic_field (&tree_decl_minimal::locus,"locus",0,16,64,32);
	 define_generic_field (&tree_decl_minimal::uid,"uid",0,16,96,32);
	 define_generic_field (&tree_decl_minimal::name,"name",0,32,0,64);
	 define_generic_field (&tree_decl_minimal::context,"context",0,32,64,64);
}; 
	 define_generic_field (&tree_decl_common::common,"common",0,0,0,384);
	 define_generic_field (&tree_decl_common::size,"size",0,48,0,64);
	 define_generic_bitfield<tree_decl_common>("mode",1,48,64,8);
	 define_generic_bitfield<tree_decl_common>("nonlocal_flag",1,48,72,1);
	 define_generic_bitfield<tree_decl_common>("virtual_flag",1,48,73,1);
	 define_generic_bitfield<tree_decl_common>("ignored_flag",1,48,74,1);
	 define_generic_bitfield<tree_decl_common>("abstract_flag",1,48,75,1);
	 define_generic_bitfield<tree_decl_common>("artificial_flag",1,48,76,1);
	 define_generic_bitfield<tree_decl_common>("preserve_flag",1,48,77,1);
	 define_generic_bitfield<tree_decl_common>("debug_expr_is_from",1,48,78,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_0",1,48,79,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_1",1,48,80,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_2",1,48,81,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_3",1,48,82,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_4",1,48,83,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_5",1,48,84,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_6",1,48,85,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_7",1,48,86,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_8",1,48,87,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_0",1,48,88,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_1",1,48,89,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_2",1,48,90,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_3",1,48,91,1);
	 define_generic_bitfield<tree_decl_common>("gimple_reg_flag",1,48,92,1);
	 define_generic_bitfield<tree_decl_common>("decl_by_reference_flag",1,48,93,1);
	 define_generic_bitfield<tree_decl_common>("decl_read_flag",1,48,94,1);
	 define_generic_bitfield<tree_decl_common>("decl_nonshareable_flag",1,48,95,1);
	 define_generic_bitfield<tree_decl_common>("off_align",1,48,96,8);
	 define_generic_field (&tree_decl_common::align,"align",0,64,0,32);
	 define_generic_field (&tree_decl_common::pt_uid,"pt_uid",0,64,32,32);
	 define_generic_field (&tree_decl_common::size_unit,"size_unit",0,64,64,64);
	 define_generic_field (&tree_decl_common::initial,"initial",0,80,0,64);
	 define_generic_field (&tree_decl_common::attributes,"attributes",0,80,64,64);
	 define_generic_field (&tree_decl_common::abstract_origin,"abstract_origin",0,96,0,64);
	 define_generic_field (&tree_decl_common::lang_specific,"lang_specific",0,96,64,64);
}; 
	 define_generic_field (&tree_translation_unit_decl::common,"common",0,0,0,896);
	 define_generic_field (&tree_translation_unit_decl::language,"language",0,112,0,64);
}; 
void define_class_CLS_153_tree_type_decl() { 
	 define_generic_class_name<tree_type_decl>("tree_type_decl");
void define_class_CLS_154_tree_decl_non_common() { 
	 define_generic_class_name<tree_decl_non_common>("tree_decl_non_common");
void define_class_CLS_155_tree_decl_with_vis() { 
	 define_generic_class_name<tree_decl_with_vis>("tree_decl_with_vis");
void define_class_CLS_156_tree_decl_with_rtl() { 
	 define_generic_class_name<tree_decl_with_rtl>("tree_decl_with_rtl");
void define_class_CLS_157_tree_decl_common() { 
	 define_generic_class_name<tree_decl_common>("tree_decl_common");
void define_class_CLS_158_tree_decl_minimal() { 
	 define_generic_class_name<tree_decl_minimal>("tree_decl_minimal");
void define_class_CLS_159_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_160_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_161_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_decl_minimal::common,"common",0,0,0,192);
	 define_generic_field (&tree_decl_minimal::locus,"locus",0,16,64,32);
	 define_generic_field (&tree_decl_minimal::uid,"uid",0,16,96,32);
	 define_generic_field (&tree_decl_minimal::name,"name",0,32,0,64);
	 define_generic_field (&tree_decl_minimal::context,"context",0,32,64,64);
}; 
	 define_generic_field (&tree_decl_common::common,"common",0,0,0,384);
	 define_generic_field (&tree_decl_common::size,"size",0,48,0,64);
	 define_generic_bitfield<tree_decl_common>("mode",1,48,64,8);
	 define_generic_bitfield<tree_decl_common>("nonlocal_flag",1,48,72,1);
	 define_generic_bitfield<tree_decl_common>("virtual_flag",1,48,73,1);
	 define_generic_bitfield<tree_decl_common>("ignored_flag",1,48,74,1);
	 define_generic_bitfield<tree_decl_common>("abstract_flag",1,48,75,1);
	 define_generic_bitfield<tree_decl_common>("artificial_flag",1,48,76,1);
	 define_generic_bitfield<tree_decl_common>("preserve_flag",1,48,77,1);
	 define_generic_bitfield<tree_decl_common>("debug_expr_is_from",1,48,78,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_0",1,48,79,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_1",1,48,80,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_2",1,48,81,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_3",1,48,82,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_4",1,48,83,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_5",1,48,84,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_6",1,48,85,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_7",1,48,86,1);
	 define_generic_bitfield<tree_decl_common>("lang_flag_8",1,48,87,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_0",1,48,88,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_1",1,48,89,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_2",1,48,90,1);
	 define_generic_bitfield<tree_decl_common>("decl_flag_3",1,48,91,1);
	 define_generic_bitfield<tree_decl_common>("gimple_reg_flag",1,48,92,1);
	 define_generic_bitfield<tree_decl_common>("decl_by_reference_flag",1,48,93,1);
	 define_generic_bitfield<tree_decl_common>("decl_read_flag",1,48,94,1);
	 define_generic_bitfield<tree_decl_common>("decl_nonshareable_flag",1,48,95,1);
	 define_generic_bitfield<tree_decl_common>("off_align",1,48,96,8);
	 define_generic_field (&tree_decl_common::align,"align",0,64,0,32);
	 define_generic_field (&tree_decl_common::pt_uid,"pt_uid",0,64,32,32);
	 define_generic_field (&tree_decl_common::size_unit,"size_unit",0,64,64,64);
	 define_generic_field (&tree_decl_common::initial,"initial",0,80,0,64);
	 define_generic_field (&tree_decl_common::attributes,"attributes",0,80,64,64);
	 define_generic_field (&tree_decl_common::abstract_origin,"abstract_origin",0,96,0,64);
	 define_generic_field (&tree_decl_common::lang_specific,"lang_specific",0,96,64,64);
}; 
	 define_generic_field (&tree_decl_with_rtl::common,"common",0,0,0,896);
	 define_generic_field (&tree_decl_with_rtl::rtl,"rtl",0,112,0,64);
}; 
	 define_generic_field (&tree_decl_with_vis::common,"common",0,0,0,960);
	 define_generic_field (&tree_decl_with_vis::assembler_name,"assembler_name",0,112,64,64);
	 define_generic_field (&tree_decl_with_vis::section_name,"section_name",0,128,0,64);
	 define_generic_field (&tree_decl_with_vis::comdat_group,"comdat_group",0,128,64,64);
	 define_generic_bitfield<tree_decl_with_vis>("defer_output",1,144,0,1);
	 define_generic_bitfield<tree_decl_with_vis>("hard_register",1,144,1,1);
	 define_generic_bitfield<tree_decl_with_vis>("common_flag",1,144,2,1);
	 define_generic_bitfield<tree_decl_with_vis>("in_text_section",1,144,3,1);
	 define_generic_bitfield<tree_decl_with_vis>("in_constant_pool",1,144,4,1);
	 define_generic_bitfield<tree_decl_with_vis>("dllimport_flag",1,144,5,1);
	 define_generic_bitfield<tree_decl_with_vis>("weak_flag",1,144,6,1);
	 define_generic_bitfield<tree_decl_with_vis>("implicit_section_name_p",1,144,7,1);
	 define_generic_bitfield<tree_decl_with_vis>("seen_in_bind_expr",1,144,8,1);
	 define_generic_bitfield<tree_decl_with_vis>("comdat_flag",1,144,9,1);
	 define_generic_bitfield<tree_decl_with_vis>("visibility",1,144,10,2);
	 define_generic_bitfield<tree_decl_with_vis>("visibility_specified",1,144,12,1);
	 define_generic_bitfield<tree_decl_with_vis>("tls_model",1,144,13,3);
	 define_generic_bitfield<tree_decl_with_vis>("init_priority_p",1,144,16,1);
	 define_generic_bitfield<tree_decl_with_vis>("shadowed_for_var_p",1,144,17,1);
	 define_generic_bitfield<tree_decl_with_vis>("cxx_constructor",1,144,18,1);
	 define_generic_bitfield<tree_decl_with_vis>("cxx_destructor",1,144,19,1);
	 define_generic_bitfield<tree_decl_with_vis>("final",1,144,20,1);
}; 
	 define_generic_field (&tree_decl_non_common::common,"common",0,0,0,1216);
	 define_generic_field (&tree_decl_non_common::saved_tree,"saved_tree",0,144,64,64);
	 define_generic_field (&tree_decl_non_common::arguments,"arguments",0,160,0,64);
	 define_generic_field (&tree_decl_non_common::result,"result",0,160,64,64);
	 define_generic_field (&tree_decl_non_common::vindex,"vindex",0,176,0,64);
}; 
	 define_generic_field (&tree_type_decl::common,"common",0,0,0,1472);
}; 
void define_class_CLS_162_tree_statement_list_node() { 
	 define_generic_class_name<tree_statement_list_node>("tree_statement_list_node");
	 define_generic_field (&tree_statement_list_node::prev,"prev",0,0,0,64);
	 define_generic_field (&tree_statement_list_node::next,"next",0,0,64,64);
	 define_generic_field (&tree_statement_list_node::stmt,"stmt",0,16,0,64);
}; 
void define_class_CLS_163_tree_statement_list() { 
	 define_generic_class_name<tree_statement_list>("tree_statement_list");
void define_class_CLS_164_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_165_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_statement_list::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_statement_list::head,"head",0,16,0,64);
	 define_generic_field (&tree_statement_list::tail,"tail",0,16,64,64);
}; 
void define_class_CLS_166_cl_optimization() { 
	 define_generic_class_name<cl_optimization>("cl_optimization");
}; 
void define_class_CLS_167_tree_optimization_option() { 
	 define_generic_class_name<tree_optimization_option>("tree_optimization_option");
void define_class_CLS_168_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_169_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_170_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_optimization_option::common,"common",0,0,0,192);
void define_class_CLS_171_cl_optimization() { 
	 define_generic_class_name<cl_optimization>("cl_optimization");
}; 
	 define_generic_field (&tree_optimization_option::opts,"opts",0,16,64,8);
	 define_generic_field (&tree_optimization_option::optabs,"optabs",0,32,0,64);
	 define_generic_field (&tree_optimization_option::base_optabs,"base_optabs",0,32,64,64);
}; 
void define_class_CLS_172_cl_target_option() { 
	 define_generic_class_name<cl_target_option>("cl_target_option");
}; 
void define_class_CLS_173_tree_target_option() { 
	 define_generic_class_name<tree_target_option>("tree_target_option");
void define_class_CLS_174_tree_common() { 
	 define_generic_class_name<tree_common>("tree_common");
void define_class_CLS_175_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_176_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_common::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_common::chain,"chain",0,16,0,64);
}; 
	 define_generic_field (&tree_target_option::common,"common",0,0,0,192);
	 define_generic_field (&tree_target_option::globals,"globals",0,16,64,64);
void define_class_CLS_177_cl_target_option() { 
	 define_generic_class_name<cl_target_option>("cl_target_option");
}; 
	 define_generic_field (&tree_target_option::opts,"opts",0,32,0,8);
}; 
void define_class_CLS_178_tree_exp() { 
	 define_generic_class_name<tree_exp>("tree_exp");
void define_class_CLS_179_tree_typed() { 
	 define_generic_class_name<tree_typed>("tree_typed");
void define_class_CLS_180_tree_base() { 
	 define_generic_class_name<tree_base>("tree_base");
	 define_generic_bitfield<tree_base>("code",1,0,0,16);
	 define_generic_bitfield<tree_base>("side_effects_flag",1,0,16,1);
	 define_generic_bitfield<tree_base>("constant_flag",1,0,17,1);
	 define_generic_bitfield<tree_base>("addressable_flag",1,0,18,1);
	 define_generic_bitfield<tree_base>("volatile_flag",1,0,19,1);
	 define_generic_bitfield<tree_base>("readonly_flag",1,0,20,1);
	 define_generic_bitfield<tree_base>("asm_written_flag",1,0,21,1);
	 define_generic_bitfield<tree_base>("nowarning_flag",1,0,22,1);
	 define_generic_bitfield<tree_base>("visited",1,0,23,1);
	 define_generic_bitfield<tree_base>("used_flag",1,0,24,1);
	 define_generic_bitfield<tree_base>("nothrow_flag",1,0,25,1);
	 define_generic_bitfield<tree_base>("static_flag",1,0,26,1);
	 define_generic_bitfield<tree_base>("public_flag",1,0,27,1);
	 define_generic_bitfield<tree_base>("private_flag",1,0,28,1);
	 define_generic_bitfield<tree_base>("protected_flag",1,0,29,1);
	 define_generic_bitfield<tree_base>("deprecated_flag",1,0,30,1);
	 define_generic_bitfield<tree_base>("default_def_flag",1,0,31,1);
	 define_generic_field (&tree_base::u,"u",0,0,32,32);
}; 
	 define_generic_field (&tree_typed::base,"base",0,0,0,64);
	 define_generic_field (&tree_typed::type,"type",0,0,64,64);
}; 
	 define_generic_field (&tree_exp::typed,"typed",0,0,0,128);
	 define_generic_field (&tree_exp::locus,"locus",0,16,0,32);
	 define_generic_field (&tree_exp::operands,"operands",0,16,64,64);
}; 
void define_class_CLS_181_attribute_spec() { 
	 define_generic_class_name<attribute_spec>("attribute_spec");
	 define_generic_field (&attribute_spec::name,"name",0,0,0,64);
	 define_generic_field (&attribute_spec::min_length,"min_length",0,0,64,32);
	 define_generic_field (&attribute_spec::max_length,"max_length",0,0,96,32);
	 define_generic_field (&attribute_spec::decl_required,"decl_required",0,16,0,8);
	 define_generic_field (&attribute_spec::type_required,"type_required",0,16,8,8);
	 define_generic_field (&attribute_spec::function_type_required,"function_type_required",0,16,16,8);
	 define_generic_field (&attribute_spec::affects_type_identity,"affects_type_identity",0,16,24,8);
}; 
void define_class_CLS_182_record_layout_info_s() { 
	 define_generic_class_name<record_layout_info_s>("record_layout_info_s");
	 define_generic_field (&record_layout_info_s::t,"t",0,0,0,64);
	 define_generic_field (&record_layout_info_s::offset,"offset",0,0,64,64);
	 define_generic_field (&record_layout_info_s::offset_align,"offset_align",0,16,0,32);
	 define_generic_field (&record_layout_info_s::bitpos,"bitpos",0,16,64,64);
	 define_generic_field (&record_layout_info_s::record_align,"record_align",0,32,0,32);
	 define_generic_field (&record_layout_info_s::unpacked_align,"unpacked_align",0,32,32,32);
	 define_generic_field (&record_layout_info_s::prev_field,"prev_field",0,32,64,64);
	 define_generic_field (&record_layout_info_s::pending_statics,"pending_statics",0,48,0,64);
	 define_generic_field (&record_layout_info_s::remaining_in_alignment,"remaining_in_alignment",0,48,64,32);
	 define_generic_field (&record_layout_info_s::packed_maybe_necessary,"packed_maybe_necessary",0,48,96,32);
}; 
void define_class_CLS_183_function_args_iterator() { 
	 define_generic_class_name<function_args_iterator>("function_args_iterator");
	 define_generic_field (&function_args_iterator::next,"next",0,0,0,64);
}; 
void define_class_CLS_184_tree_map_base() { 
	 define_generic_class_name<tree_map_base>("tree_map_base");
	 define_generic_field (&tree_map_base::from,"from",0,0,0,64);
}; 
void define_class_CLS_185_tree_map() { 
	 define_generic_class_name<tree_map>("tree_map");
void define_class_CLS_186_tree_map_base() { 
	 define_generic_class_name<tree_map_base>("tree_map_base");
	 define_generic_field (&tree_map_base::from,"from",0,0,0,64);
}; 
	 define_generic_field (&tree_map::base,"base",0,0,0,64);
	 define_generic_field (&tree_map::hash,"hash",0,0,64,32);
	 define_generic_field (&tree_map::to,"to",0,16,0,64);
}; 
void define_class_CLS_187_tree_decl_map() { 
	 define_generic_class_name<tree_decl_map>("tree_decl_map");
void define_class_CLS_188_tree_map_base() { 
	 define_generic_class_name<tree_map_base>("tree_map_base");
	 define_generic_field (&tree_map_base::from,"from",0,0,0,64);
}; 
	 define_generic_field (&tree_decl_map::base,"base",0,0,0,64);
	 define_generic_field (&tree_decl_map::to,"to",0,0,64,64);
}; 
void define_class_CLS_189_tree_int_map() { 
	 define_generic_class_name<tree_int_map>("tree_int_map");
void define_class_CLS_190_tree_map_base() { 
	 define_generic_class_name<tree_map_base>("tree_map_base");
	 define_generic_field (&tree_map_base::from,"from",0,0,0,64);
}; 
	 define_generic_field (&tree_int_map::base,"base",0,0,0,64);
	 define_generic_field (&tree_int_map::to,"to",0,0,64,32);
}; 
void define_class_CLS_191_tree_priority_map() { 
	 define_generic_class_name<tree_priority_map>("tree_priority_map");
void define_class_CLS_192_tree_map_base() { 
	 define_generic_class_name<tree_map_base>("tree_map_base");
	 define_generic_field (&tree_map_base::from,"from",0,0,0,64);
}; 
	 define_generic_field (&tree_priority_map::base,"base",0,0,0,64);
	 define_generic_field (&tree_priority_map::init,"init",0,0,64,16);
	 define_generic_field (&tree_priority_map::fini,"fini",0,0,80,16);
}; 
void define_class_CLS_193_tree_vec_map() { 
	 define_generic_class_name<tree_vec_map>("tree_vec_map");
void define_class_CLS_194_tree_map_base() { 
	 define_generic_class_name<tree_map_base>("tree_map_base");
	 define_generic_field (&tree_map_base::from,"from",0,0,0,64);
}; 
	 define_generic_field (&tree_vec_map::base,"base",0,0,0,64);
	 define_generic_field (&tree_vec_map::to,"to",0,0,64,64);
}; 
void define_class_CLS_195_call_expr_arg_iterator() { 
	 define_generic_class_name<call_expr_arg_iterator>("call_expr_arg_iterator");
	 define_generic_field (&call_expr_arg_iterator::t,"t",0,0,0,64);
	 define_generic_field (&call_expr_arg_iterator::n,"n",0,0,64,32);
	 define_generic_field (&call_expr_arg_iterator::i,"i",0,0,96,32);
}; 
void define_class_CLS_196_const_call_expr_arg_iterator() { 
	 define_generic_class_name<const_call_expr_arg_iterator>("const_call_expr_arg_iterator");
	 define_generic_field (&const_call_expr_arg_iterator::t,"t",0,0,0,64);
	 define_generic_field (&const_call_expr_arg_iterator::n,"n",0,0,64,32);
	 define_generic_field (&const_call_expr_arg_iterator::i,"i",0,0,96,32);
}; 
void define_class_CLS_197_builtin_info_type() { 
	 define_generic_class_name<builtin_info_type>("builtin_info_type");
	 define_generic_field (&builtin_info_type::decl,"decl",0,0,0,64);
	 define_generic_field (&builtin_info_type::implicit_p,"implicit_p",0,0,64,8);
}; 
