#include <iostream>
#include <vector>

#include <gcc-plugin.h>
#include <coretypes.h>
#include <tree.h>

class CLS_0__IO_FILE{ 
	 generic_class_name <"_IO_FILE",_IO_FILE> the_class_name;
}; 
class CLS_1__IO_FILE{ 
	 generic_class_name <"_IO_FILE",_IO_FILE> the_class_name;
}; 
class CLS_2__IO_FILE{ 
	 generic_class_name <"_IO_FILE",_IO_FILE> the_class_name;
}; 
class CLS_3__IO_jump_t{ 
	 generic_class_name <"_IO_jump_t",_IO_jump_t> the_class_name;
}; 
class CLS_4__IO_FILE{ 
	 generic_class_name <"_IO_FILE",_IO_FILE> the_class_name;
}; 
class CLS_5__IO_marker{ 
	 generic_class_name <"_IO_marker",_IO_marker> the_class_name;
}; 
class CLS_6__IO_FILE{ 
	 generic_class_name <"_IO_FILE",_IO_FILE> the_class_name;
}; 
class CLS_7__IO_marker{ 
	 generic_class_name <"_IO_marker",_IO_marker> the_class_name;
	 generic_field_name <"_next",_IO_marker,_next> _next;
	 generic_field_name <"_sbuf",_IO_marker,_sbuf> _sbuf;
	 generic_field_name <"_pos",_IO_marker,_pos> _pos;
}; 
class CLS_8__IO_marker{ 
	 generic_class_name <"_IO_marker",_IO_marker> the_class_name;
	 generic_field_name <"_next",_IO_marker,_next> _next;
	 generic_field_name <"_sbuf",_IO_marker,_sbuf> _sbuf;
	 generic_field_name <"_pos",_IO_marker,_pos> _pos;
}; 
class CLS_9__IO_FILE{ 
	 generic_class_name <"_IO_FILE",_IO_FILE> the_class_name;
}; 
class CLS_10__IO_FILE{ 
	 generic_class_name <"_IO_FILE",_IO_FILE> the_class_name;
	 generic_field_name <"_flags",_IO_FILE,_flags> _flags;
	 generic_field_name <"_IO_read_ptr",_IO_FILE,_IO_read_ptr> _IO_read_ptr;
	 generic_field_name <"_IO_read_end",_IO_FILE,_IO_read_end> _IO_read_end;
	 generic_field_name <"_IO_read_base",_IO_FILE,_IO_read_base> _IO_read_base;
	 generic_field_name <"_IO_write_base",_IO_FILE,_IO_write_base> _IO_write_base;
	 generic_field_name <"_IO_write_ptr",_IO_FILE,_IO_write_ptr> _IO_write_ptr;
	 generic_field_name <"_IO_write_end",_IO_FILE,_IO_write_end> _IO_write_end;
	 generic_field_name <"_IO_buf_base",_IO_FILE,_IO_buf_base> _IO_buf_base;
	 generic_field_name <"_IO_buf_end",_IO_FILE,_IO_buf_end> _IO_buf_end;
	 generic_field_name <"_IO_save_base",_IO_FILE,_IO_save_base> _IO_save_base;
	 generic_field_name <"_IO_backup_base",_IO_FILE,_IO_backup_base> _IO_backup_base;
	 generic_field_name <"_IO_save_end",_IO_FILE,_IO_save_end> _IO_save_end;
	 generic_field_name <"_markers",_IO_FILE,_markers> _markers;
	 generic_field_name <"_chain",_IO_FILE,_chain> _chain;
	 generic_field_name <"_fileno",_IO_FILE,_fileno> _fileno;
	 generic_field_name <"_flags2",_IO_FILE,_flags2> _flags2;
	 generic_field_name <"_old_offset",_IO_FILE,_old_offset> _old_offset;
	 generic_field_name <"_cur_column",_IO_FILE,_cur_column> _cur_column;
	 generic_field_name <"_vtable_offset",_IO_FILE,_vtable_offset> _vtable_offset;
	 generic_field_name <"_shortbuf",_IO_FILE,_shortbuf> _shortbuf;
	 generic_field_name <"_lock",_IO_FILE,_lock> _lock;
	 generic_field_name <"_offset",_IO_FILE,_offset> _offset;
	 generic_field_name <"__pad1",_IO_FILE,__pad1> __pad1;
	 generic_field_name <"__pad2",_IO_FILE,__pad2> __pad2;
	 generic_field_name <"__pad3",_IO_FILE,__pad3> __pad3;
	 generic_field_name <"__pad4",_IO_FILE,__pad4> __pad4;
	 generic_field_name <"__pad5",_IO_FILE,__pad5> __pad5;
	 generic_field_name <"_mode",_IO_FILE,_mode> _mode;
	 generic_field_name <"_unused2",_IO_FILE,_unused2> _unused2;
}; 
class CLS_11__IO_FILE{ 
	 generic_class_name <"_IO_FILE",_IO_FILE> the_class_name;
	 generic_field_name <"_flags",_IO_FILE,_flags> _flags;
	 generic_field_name <"_IO_read_ptr",_IO_FILE,_IO_read_ptr> _IO_read_ptr;
	 generic_field_name <"_IO_read_end",_IO_FILE,_IO_read_end> _IO_read_end;
	 generic_field_name <"_IO_read_base",_IO_FILE,_IO_read_base> _IO_read_base;
	 generic_field_name <"_IO_write_base",_IO_FILE,_IO_write_base> _IO_write_base;
	 generic_field_name <"_IO_write_ptr",_IO_FILE,_IO_write_ptr> _IO_write_ptr;
	 generic_field_name <"_IO_write_end",_IO_FILE,_IO_write_end> _IO_write_end;
	 generic_field_name <"_IO_buf_base",_IO_FILE,_IO_buf_base> _IO_buf_base;
	 generic_field_name <"_IO_buf_end",_IO_FILE,_IO_buf_end> _IO_buf_end;
	 generic_field_name <"_IO_save_base",_IO_FILE,_IO_save_base> _IO_save_base;
	 generic_field_name <"_IO_backup_base",_IO_FILE,_IO_backup_base> _IO_backup_base;
	 generic_field_name <"_IO_save_end",_IO_FILE,_IO_save_end> _IO_save_end;
	 generic_field_name <"_markers",_IO_FILE,_markers> _markers;
	 generic_field_name <"_chain",_IO_FILE,_chain> _chain;
	 generic_field_name <"_fileno",_IO_FILE,_fileno> _fileno;
	 generic_field_name <"_flags2",_IO_FILE,_flags2> _flags2;
	 generic_field_name <"_old_offset",_IO_FILE,_old_offset> _old_offset;
	 generic_field_name <"_cur_column",_IO_FILE,_cur_column> _cur_column;
	 generic_field_name <"_vtable_offset",_IO_FILE,_vtable_offset> _vtable_offset;
	 generic_field_name <"_shortbuf",_IO_FILE,_shortbuf> _shortbuf;
	 generic_field_name <"_lock",_IO_FILE,_lock> _lock;
	 generic_field_name <"_offset",_IO_FILE,_offset> _offset;
	 generic_field_name <"__pad1",_IO_FILE,__pad1> __pad1;
	 generic_field_name <"__pad2",_IO_FILE,__pad2> __pad2;
	 generic_field_name <"__pad3",_IO_FILE,__pad3> __pad3;
	 generic_field_name <"__pad4",_IO_FILE,__pad4> __pad4;
	 generic_field_name <"__pad5",_IO_FILE,__pad5> __pad5;
	 generic_field_name <"_mode",_IO_FILE,_mode> _mode;
	 generic_field_name <"_unused2",_IO_FILE,_unused2> _unused2;
}; 
class CLS_12__IO_FILE_plus{ 
	 generic_class_name <"_IO_FILE_plus",_IO_FILE_plus> the_class_name;
}; 
class CLS_13__IO_FILE_plus{ 
	 generic_class_name <"_IO_FILE_plus",_IO_FILE_plus> the_class_name;
}; 
class CLS_14__IO_FILE_plus{ 
	 generic_class_name <"_IO_FILE_plus",_IO_FILE_plus> the_class_name;
}; 
class CLS_15__IO_FILE_plus{ 
	 generic_class_name <"_IO_FILE_plus",_IO_FILE_plus> the_class_name;
}; 
class CLS_16__IO_FILE{ 
	 generic_class_name <"_IO_FILE",_IO_FILE> the_class_name;
	 generic_field_name <"_flags",_IO_FILE,_flags> _flags;
	 generic_field_name <"_IO_read_ptr",_IO_FILE,_IO_read_ptr> _IO_read_ptr;
	 generic_field_name <"_IO_read_end",_IO_FILE,_IO_read_end> _IO_read_end;
	 generic_field_name <"_IO_read_base",_IO_FILE,_IO_read_base> _IO_read_base;
	 generic_field_name <"_IO_write_base",_IO_FILE,_IO_write_base> _IO_write_base;
	 generic_field_name <"_IO_write_ptr",_IO_FILE,_IO_write_ptr> _IO_write_ptr;
	 generic_field_name <"_IO_write_end",_IO_FILE,_IO_write_end> _IO_write_end;
	 generic_field_name <"_IO_buf_base",_IO_FILE,_IO_buf_base> _IO_buf_base;
	 generic_field_name <"_IO_buf_end",_IO_FILE,_IO_buf_end> _IO_buf_end;
	 generic_field_name <"_IO_save_base",_IO_FILE,_IO_save_base> _IO_save_base;
	 generic_field_name <"_IO_backup_base",_IO_FILE,_IO_backup_base> _IO_backup_base;
	 generic_field_name <"_IO_save_end",_IO_FILE,_IO_save_end> _IO_save_end;
	 generic_field_name <"_markers",_IO_FILE,_markers> _markers;
	 generic_field_name <"_chain",_IO_FILE,_chain> _chain;
	 generic_field_name <"_fileno",_IO_FILE,_fileno> _fileno;
	 generic_field_name <"_flags2",_IO_FILE,_flags2> _flags2;
	 generic_field_name <"_old_offset",_IO_FILE,_old_offset> _old_offset;
	 generic_field_name <"_cur_column",_IO_FILE,_cur_column> _cur_column;
	 generic_field_name <"_vtable_offset",_IO_FILE,_vtable_offset> _vtable_offset;
	 generic_field_name <"_shortbuf",_IO_FILE,_shortbuf> _shortbuf;
	 generic_field_name <"_lock",_IO_FILE,_lock> _lock;
	 generic_field_name <"_offset",_IO_FILE,_offset> _offset;
	 generic_field_name <"__pad1",_IO_FILE,__pad1> __pad1;
	 generic_field_name <"__pad2",_IO_FILE,__pad2> __pad2;
	 generic_field_name <"__pad3",_IO_FILE,__pad3> __pad3;
	 generic_field_name <"__pad4",_IO_FILE,__pad4> __pad4;
	 generic_field_name <"__pad5",_IO_FILE,__pad5> __pad5;
	 generic_field_name <"_mode",_IO_FILE,_mode> _mode;
	 generic_field_name <"_unused2",_IO_FILE,_unused2> _unused2;
}; 
class CLS_17__IO_FILE{ 
	 generic_class_name <"_IO_FILE",_IO_FILE> the_class_name;
	 generic_field_name <"_flags",_IO_FILE,_flags> _flags;
	 generic_field_name <"_IO_read_ptr",_IO_FILE,_IO_read_ptr> _IO_read_ptr;
	 generic_field_name <"_IO_read_end",_IO_FILE,_IO_read_end> _IO_read_end;
	 generic_field_name <"_IO_read_base",_IO_FILE,_IO_read_base> _IO_read_base;
	 generic_field_name <"_IO_write_base",_IO_FILE,_IO_write_base> _IO_write_base;
	 generic_field_name <"_IO_write_ptr",_IO_FILE,_IO_write_ptr> _IO_write_ptr;
	 generic_field_name <"_IO_write_end",_IO_FILE,_IO_write_end> _IO_write_end;
	 generic_field_name <"_IO_buf_base",_IO_FILE,_IO_buf_base> _IO_buf_base;
	 generic_field_name <"_IO_buf_end",_IO_FILE,_IO_buf_end> _IO_buf_end;
	 generic_field_name <"_IO_save_base",_IO_FILE,_IO_save_base> _IO_save_base;
	 generic_field_name <"_IO_backup_base",_IO_FILE,_IO_backup_base> _IO_backup_base;
	 generic_field_name <"_IO_save_end",_IO_FILE,_IO_save_end> _IO_save_end;
	 generic_field_name <"_markers",_IO_FILE,_markers> _markers;
	 generic_field_name <"_chain",_IO_FILE,_chain> _chain;
	 generic_field_name <"_fileno",_IO_FILE,_fileno> _fileno;
	 generic_field_name <"_flags2",_IO_FILE,_flags2> _flags2;
	 generic_field_name <"_old_offset",_IO_FILE,_old_offset> _old_offset;
	 generic_field_name <"_cur_column",_IO_FILE,_cur_column> _cur_column;
	 generic_field_name <"_vtable_offset",_IO_FILE,_vtable_offset> _vtable_offset;
	 generic_field_name <"_shortbuf",_IO_FILE,_shortbuf> _shortbuf;
	 generic_field_name <"_lock",_IO_FILE,_lock> _lock;
	 generic_field_name <"_offset",_IO_FILE,_offset> _offset;
	 generic_field_name <"__pad1",_IO_FILE,__pad1> __pad1;
	 generic_field_name <"__pad2",_IO_FILE,__pad2> __pad2;
	 generic_field_name <"__pad3",_IO_FILE,__pad3> __pad3;
	 generic_field_name <"__pad4",_IO_FILE,__pad4> __pad4;
	 generic_field_name <"__pad5",_IO_FILE,__pad5> __pad5;
	 generic_field_name <"_mode",_IO_FILE,_mode> _mode;
	 generic_field_name <"_unused2",_IO_FILE,_unused2> _unused2;
}; 
class CLS_18__IO_FILE{ 
	 generic_class_name <"_IO_FILE",_IO_FILE> the_class_name;
	 generic_field_name <"_flags",_IO_FILE,_flags> _flags;
	 generic_field_name <"_IO_read_ptr",_IO_FILE,_IO_read_ptr> _IO_read_ptr;
	 generic_field_name <"_IO_read_end",_IO_FILE,_IO_read_end> _IO_read_end;
	 generic_field_name <"_IO_read_base",_IO_FILE,_IO_read_base> _IO_read_base;
	 generic_field_name <"_IO_write_base",_IO_FILE,_IO_write_base> _IO_write_base;
	 generic_field_name <"_IO_write_ptr",_IO_FILE,_IO_write_ptr> _IO_write_ptr;
	 generic_field_name <"_IO_write_end",_IO_FILE,_IO_write_end> _IO_write_end;
	 generic_field_name <"_IO_buf_base",_IO_FILE,_IO_buf_base> _IO_buf_base;
	 generic_field_name <"_IO_buf_end",_IO_FILE,_IO_buf_end> _IO_buf_end;
	 generic_field_name <"_IO_save_base",_IO_FILE,_IO_save_base> _IO_save_base;
	 generic_field_name <"_IO_backup_base",_IO_FILE,_IO_backup_base> _IO_backup_base;
	 generic_field_name <"_IO_save_end",_IO_FILE,_IO_save_end> _IO_save_end;
	 generic_field_name <"_markers",_IO_FILE,_markers> _markers;
	 generic_field_name <"_chain",_IO_FILE,_chain> _chain;
	 generic_field_name <"_fileno",_IO_FILE,_fileno> _fileno;
	 generic_field_name <"_flags2",_IO_FILE,_flags2> _flags2;
	 generic_field_name <"_old_offset",_IO_FILE,_old_offset> _old_offset;
	 generic_field_name <"_cur_column",_IO_FILE,_cur_column> _cur_column;
	 generic_field_name <"_vtable_offset",_IO_FILE,_vtable_offset> _vtable_offset;
	 generic_field_name <"_shortbuf",_IO_FILE,_shortbuf> _shortbuf;
	 generic_field_name <"_lock",_IO_FILE,_lock> _lock;
	 generic_field_name <"_offset",_IO_FILE,_offset> _offset;
	 generic_field_name <"__pad1",_IO_FILE,__pad1> __pad1;
	 generic_field_name <"__pad2",_IO_FILE,__pad2> __pad2;
	 generic_field_name <"__pad3",_IO_FILE,__pad3> __pad3;
	 generic_field_name <"__pad4",_IO_FILE,__pad4> __pad4;
	 generic_field_name <"__pad5",_IO_FILE,__pad5> __pad5;
	 generic_field_name <"_mode",_IO_FILE,_mode> _mode;
	 generic_field_name <"_unused2",_IO_FILE,_unused2> _unused2;
}; 
class CLS_19___locale_data{ 
	 generic_class_name <"__locale_data",__locale_data> the_class_name;
}; 
class CLS_20___locale_struct{ 
	 generic_class_name <"__locale_struct",__locale_struct> the_class_name;
	 generic_field_name <"__locales",__locale_struct,__locales> __locales;
	 generic_field_name <"__ctype_b",__locale_struct,__ctype_b> __ctype_b;
	 generic_field_name <"__ctype_tolower",__locale_struct,__ctype_tolower> __ctype_tolower;
	 generic_field_name <"__ctype_toupper",__locale_struct,__ctype_toupper> __ctype_toupper;
	 generic_field_name <"__names",__locale_struct,__names> __names;
}; 
class CLS_21_timespec{ 
	 generic_class_name <"timespec",timespec> the_class_name;
	 generic_field_name <"tv_sec",timespec,tv_sec> tv_sec;
	 generic_field_name <"tv_nsec",timespec,tv_nsec> tv_nsec;
}; 
class CLS_22_timeval{ 
	 generic_class_name <"timeval",timeval> the_class_name;
	 generic_field_name <"tv_sec",timeval,tv_sec> tv_sec;
	 generic_field_name <"tv_usec",timeval,tv_usec> tv_usec;
}; 
class CLS_23_timeval{ 
	 generic_class_name <"timeval",timeval> the_class_name;
	 generic_field_name <"tv_sec",timeval,tv_sec> tv_sec;
	 generic_field_name <"tv_usec",timeval,tv_usec> tv_usec;
}; 
class CLS_24_timespec{ 
	 generic_class_name <"timespec",timespec> the_class_name;
	 generic_field_name <"tv_sec",timespec,tv_sec> tv_sec;
	 generic_field_name <"tv_nsec",timespec,tv_nsec> tv_nsec;
}; 
class CLS_25___pthread_internal_list{ 
	 generic_class_name <"__pthread_internal_list",__pthread_internal_list> the_class_name;
}; 
class CLS_26___pthread_internal_list{ 
	 generic_class_name <"__pthread_internal_list",__pthread_internal_list> the_class_name;
}; 
class CLS_27___pthread_internal_list{ 
	 generic_class_name <"__pthread_internal_list",__pthread_internal_list> the_class_name;
	 generic_field_name <"__prev",__pthread_internal_list,__prev> __prev;
	 generic_field_name <"__next",__pthread_internal_list,__next> __next;
}; 
class CLS_28___pthread_mutex_s{ 
	 generic_class_name <"__pthread_mutex_s",__pthread_mutex_s> the_class_name;
	 generic_field_name <"__lock",__pthread_mutex_s,__lock> __lock;
	 generic_field_name <"__count",__pthread_mutex_s,__count> __count;
	 generic_field_name <"__owner",__pthread_mutex_s,__owner> __owner;
	 generic_field_name <"__nusers",__pthread_mutex_s,__nusers> __nusers;
	 generic_field_name <"__kind",__pthread_mutex_s,__kind> __kind;
	 generic_field_name <"__spins",__pthread_mutex_s,__spins> __spins;
	 generic_field_name <"__list",__pthread_mutex_s,__list> __list;
}; 
class CLS_29_random_data{ 
	 generic_class_name <"random_data",random_data> the_class_name;
	 generic_field_name <"fptr",random_data,fptr> fptr;
	 generic_field_name <"rptr",random_data,rptr> rptr;
	 generic_field_name <"state",random_data,state> state;
	 generic_field_name <"rand_type",random_data,rand_type> rand_type;
	 generic_field_name <"rand_deg",random_data,rand_deg> rand_deg;
	 generic_field_name <"rand_sep",random_data,rand_sep> rand_sep;
	 generic_field_name <"end_ptr",random_data,end_ptr> end_ptr;
}; 
class CLS_30_random_data{ 
	 generic_class_name <"random_data",random_data> the_class_name;
	 generic_field_name <"fptr",random_data,fptr> fptr;
	 generic_field_name <"rptr",random_data,rptr> rptr;
	 generic_field_name <"state",random_data,state> state;
	 generic_field_name <"rand_type",random_data,rand_type> rand_type;
	 generic_field_name <"rand_deg",random_data,rand_deg> rand_deg;
	 generic_field_name <"rand_sep",random_data,rand_sep> rand_sep;
	 generic_field_name <"end_ptr",random_data,end_ptr> end_ptr;
}; 
class CLS_31_random_data{ 
	 generic_class_name <"random_data",random_data> the_class_name;
	 generic_field_name <"fptr",random_data,fptr> fptr;
	 generic_field_name <"rptr",random_data,rptr> rptr;
	 generic_field_name <"state",random_data,state> state;
	 generic_field_name <"rand_type",random_data,rand_type> rand_type;
	 generic_field_name <"rand_deg",random_data,rand_deg> rand_deg;
	 generic_field_name <"rand_sep",random_data,rand_sep> rand_sep;
	 generic_field_name <"end_ptr",random_data,end_ptr> end_ptr;
}; 
class CLS_32_random_data{ 
	 generic_class_name <"random_data",random_data> the_class_name;
	 generic_field_name <"fptr",random_data,fptr> fptr;
	 generic_field_name <"rptr",random_data,rptr> rptr;
	 generic_field_name <"state",random_data,state> state;
	 generic_field_name <"rand_type",random_data,rand_type> rand_type;
	 generic_field_name <"rand_deg",random_data,rand_deg> rand_deg;
	 generic_field_name <"rand_sep",random_data,rand_sep> rand_sep;
	 generic_field_name <"end_ptr",random_data,end_ptr> end_ptr;
}; 
class CLS_33_random_data{ 
	 generic_class_name <"random_data",random_data> the_class_name;
	 generic_field_name <"fptr",random_data,fptr> fptr;
	 generic_field_name <"rptr",random_data,rptr> rptr;
	 generic_field_name <"state",random_data,state> state;
	 generic_field_name <"rand_type",random_data,rand_type> rand_type;
	 generic_field_name <"rand_deg",random_data,rand_deg> rand_deg;
	 generic_field_name <"rand_sep",random_data,rand_sep> rand_sep;
	 generic_field_name <"end_ptr",random_data,end_ptr> end_ptr;
}; 
class CLS_34_drand48_data{ 
	 generic_class_name <"drand48_data",drand48_data> the_class_name;
	 generic_field_name <"__x",drand48_data,__x> __x;
	 generic_field_name <"__old_x",drand48_data,__old_x> __old_x;
	 generic_field_name <"__c",drand48_data,__c> __c;
	 generic_field_name <"__init",drand48_data,__init> __init;
	 generic_field_name <"__a",drand48_data,__a> __a;
}; 
class CLS_35_drand48_data{ 
	 generic_class_name <"drand48_data",drand48_data> the_class_name;
	 generic_field_name <"__x",drand48_data,__x> __x;
	 generic_field_name <"__old_x",drand48_data,__old_x> __old_x;
	 generic_field_name <"__c",drand48_data,__c> __c;
	 generic_field_name <"__init",drand48_data,__init> __init;
	 generic_field_name <"__a",drand48_data,__a> __a;
}; 
class CLS_36_drand48_data{ 
	 generic_class_name <"drand48_data",drand48_data> the_class_name;
	 generic_field_name <"__x",drand48_data,__x> __x;
	 generic_field_name <"__old_x",drand48_data,__old_x> __old_x;
	 generic_field_name <"__c",drand48_data,__c> __c;
	 generic_field_name <"__init",drand48_data,__init> __init;
	 generic_field_name <"__a",drand48_data,__a> __a;
}; 
class CLS_37_drand48_data{ 
	 generic_class_name <"drand48_data",drand48_data> the_class_name;
	 generic_field_name <"__x",drand48_data,__x> __x;
	 generic_field_name <"__old_x",drand48_data,__old_x> __old_x;
	 generic_field_name <"__c",drand48_data,__c> __c;
	 generic_field_name <"__init",drand48_data,__init> __init;
	 generic_field_name <"__a",drand48_data,__a> __a;
}; 
class CLS_38_drand48_data{ 
	 generic_class_name <"drand48_data",drand48_data> the_class_name;
	 generic_field_name <"__x",drand48_data,__x> __x;
	 generic_field_name <"__old_x",drand48_data,__old_x> __old_x;
	 generic_field_name <"__c",drand48_data,__c> __c;
	 generic_field_name <"__init",drand48_data,__init> __init;
	 generic_field_name <"__a",drand48_data,__a> __a;
}; 
class CLS_39_drand48_data{ 
	 generic_class_name <"drand48_data",drand48_data> the_class_name;
	 generic_field_name <"__x",drand48_data,__x> __x;
	 generic_field_name <"__old_x",drand48_data,__old_x> __old_x;
	 generic_field_name <"__c",drand48_data,__c> __c;
	 generic_field_name <"__init",drand48_data,__init> __init;
	 generic_field_name <"__a",drand48_data,__a> __a;
}; 
class CLS_40_drand48_data{ 
	 generic_class_name <"drand48_data",drand48_data> the_class_name;
	 generic_field_name <"__x",drand48_data,__x> __x;
	 generic_field_name <"__old_x",drand48_data,__old_x> __old_x;
	 generic_field_name <"__c",drand48_data,__c> __c;
	 generic_field_name <"__init",drand48_data,__init> __init;
	 generic_field_name <"__a",drand48_data,__a> __a;
}; 
class CLS_41_drand48_data{ 
	 generic_class_name <"drand48_data",drand48_data> the_class_name;
	 generic_field_name <"__x",drand48_data,__x> __x;
	 generic_field_name <"__old_x",drand48_data,__old_x> __old_x;
	 generic_field_name <"__c",drand48_data,__c> __c;
	 generic_field_name <"__init",drand48_data,__init> __init;
	 generic_field_name <"__a",drand48_data,__a> __a;
}; 
class CLS_42_drand48_data{ 
	 generic_class_name <"drand48_data",drand48_data> the_class_name;
	 generic_field_name <"__x",drand48_data,__x> __x;
	 generic_field_name <"__old_x",drand48_data,__old_x> __old_x;
	 generic_field_name <"__c",drand48_data,__c> __c;
	 generic_field_name <"__init",drand48_data,__init> __init;
	 generic_field_name <"__a",drand48_data,__a> __a;
}; 
class CLS_43_drand48_data{ 
	 generic_class_name <"drand48_data",drand48_data> the_class_name;
	 generic_field_name <"__x",drand48_data,__x> __x;
	 generic_field_name <"__old_x",drand48_data,__old_x> __old_x;
	 generic_field_name <"__c",drand48_data,__c> __c;
	 generic_field_name <"__init",drand48_data,__init> __init;
	 generic_field_name <"__a",drand48_data,__a> __a;
}; 
class CLS_44_timezone{ 
	 generic_class_name <"timezone",timezone> the_class_name;
	 generic_field_name <"tz_minuteswest",timezone,tz_minuteswest> tz_minuteswest;
	 generic_field_name <"tz_dsttime",timezone,tz_dsttime> tz_dsttime;
}; 
class CLS_45_timezone{ 
	 generic_class_name <"timezone",timezone> the_class_name;
	 generic_field_name <"tz_minuteswest",timezone,tz_minuteswest> tz_minuteswest;
	 generic_field_name <"tz_dsttime",timezone,tz_dsttime> tz_dsttime;
}; 
class CLS_46_timeval{ 
	 generic_class_name <"timeval",timeval> the_class_name;
	 generic_field_name <"tv_sec",timeval,tv_sec> tv_sec;
	 generic_field_name <"tv_usec",timeval,tv_usec> tv_usec;
}; 
class CLS_47_timeval{ 
	 generic_class_name <"timeval",timeval> the_class_name;
	 generic_field_name <"tv_sec",timeval,tv_sec> tv_sec;
	 generic_field_name <"tv_usec",timeval,tv_usec> tv_usec;
}; 
class CLS_48_timezone{ 
	 generic_class_name <"timezone",timezone> the_class_name;
	 generic_field_name <"tz_minuteswest",timezone,tz_minuteswest> tz_minuteswest;
	 generic_field_name <"tz_dsttime",timezone,tz_dsttime> tz_dsttime;
}; 
class CLS_49_timeval{ 
	 generic_class_name <"timeval",timeval> the_class_name;
	 generic_field_name <"tv_sec",timeval,tv_sec> tv_sec;
	 generic_field_name <"tv_usec",timeval,tv_usec> tv_usec;
}; 
class CLS_50_timeval{ 
	 generic_class_name <"timeval",timeval> the_class_name;
	 generic_field_name <"tv_sec",timeval,tv_sec> tv_sec;
	 generic_field_name <"tv_usec",timeval,tv_usec> tv_usec;
}; 
class CLS_51_timeval{ 
	 generic_class_name <"timeval",timeval> the_class_name;
	 generic_field_name <"tv_sec",timeval,tv_sec> tv_sec;
	 generic_field_name <"tv_usec",timeval,tv_usec> tv_usec;
}; 
class CLS_52_timeval{ 
	 generic_class_name <"timeval",timeval> the_class_name;
	 generic_field_name <"tv_sec",timeval,tv_sec> tv_sec;
	 generic_field_name <"tv_usec",timeval,tv_usec> tv_usec;
}; 
class CLS_53_itimerval{ 
	 generic_class_name <"itimerval",itimerval> the_class_name;
	 generic_field_name <"it_interval",itimerval,it_interval> it_interval;
	 generic_field_name <"it_value",itimerval,it_value> it_value;
}; 
class CLS_54_itimerval{ 
	 generic_class_name <"itimerval",itimerval> the_class_name;
	 generic_field_name <"it_interval",itimerval,it_interval> it_interval;
	 generic_field_name <"it_value",itimerval,it_value> it_value;
}; 
class CLS_55_itimerval{ 
	 generic_class_name <"itimerval",itimerval> the_class_name;
	 generic_field_name <"it_interval",itimerval,it_interval> it_interval;
	 generic_field_name <"it_value",itimerval,it_value> it_value;
}; 
class CLS_56_itimerval{ 
	 generic_class_name <"itimerval",itimerval> the_class_name;
	 generic_field_name <"it_interval",itimerval,it_interval> it_interval;
	 generic_field_name <"it_value",itimerval,it_value> it_value;
}; 
class CLS_57_timeval{ 
	 generic_class_name <"timeval",timeval> the_class_name;
	 generic_field_name <"tv_sec",timeval,tv_sec> tv_sec;
	 generic_field_name <"tv_usec",timeval,tv_usec> tv_usec;
}; 
class CLS_58_timeval{ 
	 generic_class_name <"timeval",timeval> the_class_name;
	 generic_field_name <"tv_sec",timeval,tv_sec> tv_sec;
	 generic_field_name <"tv_usec",timeval,tv_usec> tv_usec;
}; 
class CLS_59_timeval{ 
	 generic_class_name <"timeval",timeval> the_class_name;
	 generic_field_name <"tv_sec",timeval,tv_sec> tv_sec;
	 generic_field_name <"tv_usec",timeval,tv_usec> tv_usec;
}; 
class CLS_60_tm{ 
	 generic_class_name <"tm",tm> the_class_name;
	 generic_field_name <"tm_sec",tm,tm_sec> tm_sec;
	 generic_field_name <"tm_min",tm,tm_min> tm_min;
	 generic_field_name <"tm_hour",tm,tm_hour> tm_hour;
	 generic_field_name <"tm_mday",tm,tm_mday> tm_mday;
	 generic_field_name <"tm_mon",tm,tm_mon> tm_mon;
	 generic_field_name <"tm_year",tm,tm_year> tm_year;
	 generic_field_name <"tm_wday",tm,tm_wday> tm_wday;
	 generic_field_name <"tm_yday",tm,tm_yday> tm_yday;
	 generic_field_name <"tm_isdst",tm,tm_isdst> tm_isdst;
	 generic_field_name <"tm_gmtoff",tm,tm_gmtoff> tm_gmtoff;
	 generic_field_name <"tm_zone",tm,tm_zone> tm_zone;
}; 
class CLS_61_timespec{ 
	 generic_class_name <"timespec",timespec> the_class_name;
	 generic_field_name <"tv_sec",timespec,tv_sec> tv_sec;
	 generic_field_name <"tv_nsec",timespec,tv_nsec> tv_nsec;
}; 
class CLS_62_timespec{ 
	 generic_class_name <"timespec",timespec> the_class_name;
	 generic_field_name <"tv_sec",timespec,tv_sec> tv_sec;
	 generic_field_name <"tv_nsec",timespec,tv_nsec> tv_nsec;
}; 
class CLS_63_itimerspec{ 
	 generic_class_name <"itimerspec",itimerspec> the_class_name;
	 generic_field_name <"it_interval",itimerspec,it_interval> it_interval;
	 generic_field_name <"it_value",itimerspec,it_value> it_value;
}; 
class CLS_64_sigevent{ 
	 generic_class_name <"sigevent",sigevent> the_class_name;
}; 
class CLS_65_tm{ 
	 generic_class_name <"tm",tm> the_class_name;
	 generic_field_name <"tm_sec",tm,tm_sec> tm_sec;
	 generic_field_name <"tm_min",tm,tm_min> tm_min;
	 generic_field_name <"tm_hour",tm,tm_hour> tm_hour;
	 generic_field_name <"tm_mday",tm,tm_mday> tm_mday;
	 generic_field_name <"tm_mon",tm,tm_mon> tm_mon;
	 generic_field_name <"tm_year",tm,tm_year> tm_year;
	 generic_field_name <"tm_wday",tm,tm_wday> tm_wday;
	 generic_field_name <"tm_yday",tm,tm_yday> tm_yday;
	 generic_field_name <"tm_isdst",tm,tm_isdst> tm_isdst;
	 generic_field_name <"tm_gmtoff",tm,tm_gmtoff> tm_gmtoff;
	 generic_field_name <"tm_zone",tm,tm_zone> tm_zone;
}; 
class CLS_66_tm{ 
	 generic_class_name <"tm",tm> the_class_name;
	 generic_field_name <"tm_sec",tm,tm_sec> tm_sec;
	 generic_field_name <"tm_min",tm,tm_min> tm_min;
	 generic_field_name <"tm_hour",tm,tm_hour> tm_hour;
	 generic_field_name <"tm_mday",tm,tm_mday> tm_mday;
	 generic_field_name <"tm_mon",tm,tm_mon> tm_mon;
	 generic_field_name <"tm_year",tm,tm_year> tm_year;
	 generic_field_name <"tm_wday",tm,tm_wday> tm_wday;
	 generic_field_name <"tm_yday",tm,tm_yday> tm_yday;
	 generic_field_name <"tm_isdst",tm,tm_isdst> tm_isdst;
	 generic_field_name <"tm_gmtoff",tm,tm_gmtoff> tm_gmtoff;
	 generic_field_name <"tm_zone",tm,tm_zone> tm_zone;
}; 
class CLS_67_tm{ 
	 generic_class_name <"tm",tm> the_class_name;
	 generic_field_name <"tm_sec",tm,tm_sec> tm_sec;
	 generic_field_name <"tm_min",tm,tm_min> tm_min;
	 generic_field_name <"tm_hour",tm,tm_hour> tm_hour;
	 generic_field_name <"tm_mday",tm,tm_mday> tm_mday;
	 generic_field_name <"tm_mon",tm,tm_mon> tm_mon;
	 generic_field_name <"tm_year",tm,tm_year> tm_year;
	 generic_field_name <"tm_wday",tm,tm_wday> tm_wday;
	 generic_field_name <"tm_yday",tm,tm_yday> tm_yday;
	 generic_field_name <"tm_isdst",tm,tm_isdst> tm_isdst;
	 generic_field_name <"tm_gmtoff",tm,tm_gmtoff> tm_gmtoff;
	 generic_field_name <"tm_zone",tm,tm_zone> tm_zone;
}; 
class CLS_68_tm{ 
	 generic_class_name <"tm",tm> the_class_name;
	 generic_field_name <"tm_sec",tm,tm_sec> tm_sec;
	 generic_field_name <"tm_min",tm,tm_min> tm_min;
	 generic_field_name <"tm_hour",tm,tm_hour> tm_hour;
	 generic_field_name <"tm_mday",tm,tm_mday> tm_mday;
	 generic_field_name <"tm_mon",tm,tm_mon> tm_mon;
	 generic_field_name <"tm_year",tm,tm_year> tm_year;
	 generic_field_name <"tm_wday",tm,tm_wday> tm_wday;
	 generic_field_name <"tm_yday",tm,tm_yday> tm_yday;
	 generic_field_name <"tm_isdst",tm,tm_isdst> tm_isdst;
	 generic_field_name <"tm_gmtoff",tm,tm_gmtoff> tm_gmtoff;
	 generic_field_name <"tm_zone",tm,tm_zone> tm_zone;
}; 
class CLS_69_tm{ 
	 generic_class_name <"tm",tm> the_class_name;
	 generic_field_name <"tm_sec",tm,tm_sec> tm_sec;
	 generic_field_name <"tm_min",tm,tm_min> tm_min;
	 generic_field_name <"tm_hour",tm,tm_hour> tm_hour;
	 generic_field_name <"tm_mday",tm,tm_mday> tm_mday;
	 generic_field_name <"tm_mon",tm,tm_mon> tm_mon;
	 generic_field_name <"tm_year",tm,tm_year> tm_year;
	 generic_field_name <"tm_wday",tm,tm_wday> tm_wday;
	 generic_field_name <"tm_yday",tm,tm_yday> tm_yday;
	 generic_field_name <"tm_isdst",tm,tm_isdst> tm_isdst;
	 generic_field_name <"tm_gmtoff",tm,tm_gmtoff> tm_gmtoff;
	 generic_field_name <"tm_zone",tm,tm_zone> tm_zone;
}; 
class CLS_70_tm{ 
	 generic_class_name <"tm",tm> the_class_name;
	 generic_field_name <"tm_sec",tm,tm_sec> tm_sec;
	 generic_field_name <"tm_min",tm,tm_min> tm_min;
	 generic_field_name <"tm_hour",tm,tm_hour> tm_hour;
	 generic_field_name <"tm_mday",tm,tm_mday> tm_mday;
	 generic_field_name <"tm_mon",tm,tm_mon> tm_mon;
	 generic_field_name <"tm_year",tm,tm_year> tm_year;
	 generic_field_name <"tm_wday",tm,tm_wday> tm_wday;
	 generic_field_name <"tm_yday",tm,tm_yday> tm_yday;
	 generic_field_name <"tm_isdst",tm,tm_isdst> tm_isdst;
	 generic_field_name <"tm_gmtoff",tm,tm_gmtoff> tm_gmtoff;
	 generic_field_name <"tm_zone",tm,tm_zone> tm_zone;
}; 
class CLS_71_tm{ 
	 generic_class_name <"tm",tm> the_class_name;
	 generic_field_name <"tm_sec",tm,tm_sec> tm_sec;
	 generic_field_name <"tm_min",tm,tm_min> tm_min;
	 generic_field_name <"tm_hour",tm,tm_hour> tm_hour;
	 generic_field_name <"tm_mday",tm,tm_mday> tm_mday;
	 generic_field_name <"tm_mon",tm,tm_mon> tm_mon;
	 generic_field_name <"tm_year",tm,tm_year> tm_year;
	 generic_field_name <"tm_wday",tm,tm_wday> tm_wday;
	 generic_field_name <"tm_yday",tm,tm_yday> tm_yday;
	 generic_field_name <"tm_isdst",tm,tm_isdst> tm_isdst;
	 generic_field_name <"tm_gmtoff",tm,tm_gmtoff> tm_gmtoff;
	 generic_field_name <"tm_zone",tm,tm_zone> tm_zone;
}; 
class CLS_72_tm{ 
	 generic_class_name <"tm",tm> the_class_name;
	 generic_field_name <"tm_sec",tm,tm_sec> tm_sec;
	 generic_field_name <"tm_min",tm,tm_min> tm_min;
	 generic_field_name <"tm_hour",tm,tm_hour> tm_hour;
	 generic_field_name <"tm_mday",tm,tm_mday> tm_mday;
	 generic_field_name <"tm_mon",tm,tm_mon> tm_mon;
	 generic_field_name <"tm_year",tm,tm_year> tm_year;
	 generic_field_name <"tm_wday",tm,tm_wday> tm_wday;
	 generic_field_name <"tm_yday",tm,tm_yday> tm_yday;
	 generic_field_name <"tm_isdst",tm,tm_isdst> tm_isdst;
	 generic_field_name <"tm_gmtoff",tm,tm_gmtoff> tm_gmtoff;
	 generic_field_name <"tm_zone",tm,tm_zone> tm_zone;
}; 
class CLS_73_tm{ 
	 generic_class_name <"tm",tm> the_class_name;
	 generic_field_name <"tm_sec",tm,tm_sec> tm_sec;
	 generic_field_name <"tm_min",tm,tm_min> tm_min;
	 generic_field_name <"tm_hour",tm,tm_hour> tm_hour;
	 generic_field_name <"tm_mday",tm,tm_mday> tm_mday;
	 generic_field_name <"tm_mon",tm,tm_mon> tm_mon;
	 generic_field_name <"tm_year",tm,tm_year> tm_year;
	 generic_field_name <"tm_wday",tm,tm_wday> tm_wday;
	 generic_field_name <"tm_yday",tm,tm_yday> tm_yday;
	 generic_field_name <"tm_isdst",tm,tm_isdst> tm_isdst;
	 generic_field_name <"tm_gmtoff",tm,tm_gmtoff> tm_gmtoff;
	 generic_field_name <"tm_zone",tm,tm_zone> tm_zone;
}; 
class CLS_74_tm{ 
	 generic_class_name <"tm",tm> the_class_name;
	 generic_field_name <"tm_sec",tm,tm_sec> tm_sec;
	 generic_field_name <"tm_min",tm,tm_min> tm_min;
	 generic_field_name <"tm_hour",tm,tm_hour> tm_hour;
	 generic_field_name <"tm_mday",tm,tm_mday> tm_mday;
	 generic_field_name <"tm_mon",tm,tm_mon> tm_mon;
	 generic_field_name <"tm_year",tm,tm_year> tm_year;
	 generic_field_name <"tm_wday",tm,tm_wday> tm_wday;
	 generic_field_name <"tm_yday",tm,tm_yday> tm_yday;
	 generic_field_name <"tm_isdst",tm,tm_isdst> tm_isdst;
	 generic_field_name <"tm_gmtoff",tm,tm_gmtoff> tm_gmtoff;
	 generic_field_name <"tm_zone",tm,tm_zone> tm_zone;
}; 
class CLS_75_tm{ 
	 generic_class_name <"tm",tm> the_class_name;
	 generic_field_name <"tm_sec",tm,tm_sec> tm_sec;
	 generic_field_name <"tm_min",tm,tm_min> tm_min;
	 generic_field_name <"tm_hour",tm,tm_hour> tm_hour;
	 generic_field_name <"tm_mday",tm,tm_mday> tm_mday;
	 generic_field_name <"tm_mon",tm,tm_mon> tm_mon;
	 generic_field_name <"tm_year",tm,tm_year> tm_year;
	 generic_field_name <"tm_wday",tm,tm_wday> tm_wday;
	 generic_field_name <"tm_yday",tm,tm_yday> tm_yday;
	 generic_field_name <"tm_isdst",tm,tm_isdst> tm_isdst;
	 generic_field_name <"tm_gmtoff",tm,tm_gmtoff> tm_gmtoff;
	 generic_field_name <"tm_zone",tm,tm_zone> tm_zone;
}; 
class CLS_76_tm{ 
	 generic_class_name <"tm",tm> the_class_name;
	 generic_field_name <"tm_sec",tm,tm_sec> tm_sec;
	 generic_field_name <"tm_min",tm,tm_min> tm_min;
	 generic_field_name <"tm_hour",tm,tm_hour> tm_hour;
	 generic_field_name <"tm_mday",tm,tm_mday> tm_mday;
	 generic_field_name <"tm_mon",tm,tm_mon> tm_mon;
	 generic_field_name <"tm_year",tm,tm_year> tm_year;
	 generic_field_name <"tm_wday",tm,tm_wday> tm_wday;
	 generic_field_name <"tm_yday",tm,tm_yday> tm_yday;
	 generic_field_name <"tm_isdst",tm,tm_isdst> tm_isdst;
	 generic_field_name <"tm_gmtoff",tm,tm_gmtoff> tm_gmtoff;
	 generic_field_name <"tm_zone",tm,tm_zone> tm_zone;
}; 
class CLS_77_tm{ 
	 generic_class_name <"tm",tm> the_class_name;
	 generic_field_name <"tm_sec",tm,tm_sec> tm_sec;
	 generic_field_name <"tm_min",tm,tm_min> tm_min;
	 generic_field_name <"tm_hour",tm,tm_hour> tm_hour;
	 generic_field_name <"tm_mday",tm,tm_mday> tm_mday;
	 generic_field_name <"tm_mon",tm,tm_mon> tm_mon;
	 generic_field_name <"tm_year",tm,tm_year> tm_year;
	 generic_field_name <"tm_wday",tm,tm_wday> tm_wday;
	 generic_field_name <"tm_yday",tm,tm_yday> tm_yday;
	 generic_field_name <"tm_isdst",tm,tm_isdst> tm_isdst;
	 generic_field_name <"tm_gmtoff",tm,tm_gmtoff> tm_gmtoff;
	 generic_field_name <"tm_zone",tm,tm_zone> tm_zone;
}; 
class CLS_78_timespec{ 
	 generic_class_name <"timespec",timespec> the_class_name;
	 generic_field_name <"tv_sec",timespec,tv_sec> tv_sec;
	 generic_field_name <"tv_nsec",timespec,tv_nsec> tv_nsec;
}; 
class CLS_79_timespec{ 
	 generic_class_name <"timespec",timespec> the_class_name;
	 generic_field_name <"tv_sec",timespec,tv_sec> tv_sec;
	 generic_field_name <"tv_nsec",timespec,tv_nsec> tv_nsec;
}; 
class CLS_80_timespec{ 
	 generic_class_name <"timespec",timespec> the_class_name;
	 generic_field_name <"tv_sec",timespec,tv_sec> tv_sec;
	 generic_field_name <"tv_nsec",timespec,tv_nsec> tv_nsec;
}; 
class CLS_81_timespec{ 
	 generic_class_name <"timespec",timespec> the_class_name;
	 generic_field_name <"tv_sec",timespec,tv_sec> tv_sec;
	 generic_field_name <"tv_nsec",timespec,tv_nsec> tv_nsec;
}; 
class CLS_82_timespec{ 
	 generic_class_name <"timespec",timespec> the_class_name;
	 generic_field_name <"tv_sec",timespec,tv_sec> tv_sec;
	 generic_field_name <"tv_nsec",timespec,tv_nsec> tv_nsec;
}; 
class CLS_83_timespec{ 
	 generic_class_name <"timespec",timespec> the_class_name;
	 generic_field_name <"tv_sec",timespec,tv_sec> tv_sec;
	 generic_field_name <"tv_nsec",timespec,tv_nsec> tv_nsec;
}; 
class CLS_84_timespec{ 
	 generic_class_name <"timespec",timespec> the_class_name;
	 generic_field_name <"tv_sec",timespec,tv_sec> tv_sec;
	 generic_field_name <"tv_nsec",timespec,tv_nsec> tv_nsec;
}; 
class CLS_85_sigevent{ 
	 generic_class_name <"sigevent",sigevent> the_class_name;
}; 
class CLS_86_itimerspec{ 
	 generic_class_name <"itimerspec",itimerspec> the_class_name;
	 generic_field_name <"it_interval",itimerspec,it_interval> it_interval;
	 generic_field_name <"it_value",itimerspec,it_value> it_value;
}; 
class CLS_87_itimerspec{ 
	 generic_class_name <"itimerspec",itimerspec> the_class_name;
	 generic_field_name <"it_interval",itimerspec,it_interval> it_interval;
	 generic_field_name <"it_value",itimerspec,it_value> it_value;
}; 
class CLS_88_itimerspec{ 
	 generic_class_name <"itimerspec",itimerspec> the_class_name;
	 generic_field_name <"it_interval",itimerspec,it_interval> it_interval;
	 generic_field_name <"it_value",itimerspec,it_value> it_value;
}; 
class CLS_89_flock{ 
	 generic_class_name <"flock",flock> the_class_name;
	 generic_field_name <"l_type",flock,l_type> l_type;
	 generic_field_name <"l_whence",flock,l_whence> l_whence;
	 generic_field_name <"l_start",flock,l_start> l_start;
	 generic_field_name <"l_len",flock,l_len> l_len;
	 generic_field_name <"l_pid",flock,l_pid> l_pid;
}; 
class CLS_90_timespec{ 
	 generic_class_name <"timespec",timespec> the_class_name;
	 generic_field_name <"tv_sec",timespec,tv_sec> tv_sec;
	 generic_field_name <"tv_nsec",timespec,tv_nsec> tv_nsec;
}; 
class CLS_91_timespec{ 
	 generic_class_name <"timespec",timespec> the_class_name;
	 generic_field_name <"tv_sec",timespec,tv_sec> tv_sec;
	 generic_field_name <"tv_nsec",timespec,tv_nsec> tv_nsec;
}; 
class CLS_92_timespec{ 
	 generic_class_name <"timespec",timespec> the_class_name;
	 generic_field_name <"tv_sec",timespec,tv_sec> tv_sec;
	 generic_field_name <"tv_nsec",timespec,tv_nsec> tv_nsec;
}; 
class CLS_93_stat{ 
	 generic_class_name <"stat",stat> the_class_name;
	 generic_field_name <"st_dev",stat,st_dev> st_dev;
	 generic_field_name <"st_ino",stat,st_ino> st_ino;
	 generic_field_name <"st_nlink",stat,st_nlink> st_nlink;
	 generic_field_name <"st_mode",stat,st_mode> st_mode;
	 generic_field_name <"st_uid",stat,st_uid> st_uid;
	 generic_field_name <"st_gid",stat,st_gid> st_gid;
	 generic_field_name <"__pad0",stat,__pad0> __pad0;
	 generic_field_name <"st_rdev",stat,st_rdev> st_rdev;
	 generic_field_name <"st_size",stat,st_size> st_size;
	 generic_field_name <"st_blksize",stat,st_blksize> st_blksize;
	 generic_field_name <"st_blocks",stat,st_blocks> st_blocks;
	 generic_field_name <"st_atim",stat,st_atim> st_atim;
	 generic_field_name <"st_mtim",stat,st_mtim> st_mtim;
	 generic_field_name <"st_ctim",stat,st_ctim> st_ctim;
	 generic_field_name <"__unused",stat,__unused> __unused;
}; 
class CLS_94_siginfo{ 
	 generic_class_name <"siginfo",siginfo> the_class_name;
	 generic_field_name <"si_signo",siginfo,si_signo> si_signo;
	 generic_field_name <"si_errno",siginfo,si_errno> si_errno;
	 generic_field_name <"si_code",siginfo,si_code> si_code;
	 generic_field_name <"_sifields",siginfo,_sifields> _sifields;
}; 
class CLS_95_sigevent{ 
	 generic_class_name <"sigevent",sigevent> the_class_name;
	 generic_field_name <"sigev_value",sigevent,sigev_value> sigev_value;
	 generic_field_name <"sigev_signo",sigevent,sigev_signo> sigev_signo;
	 generic_field_name <"sigev_notify",sigevent,sigev_notify> sigev_notify;
	 generic_field_name <"_sigev_un",sigevent,_sigev_un> _sigev_un;
}; 
class CLS_96_sigaction{ 
	 generic_class_name <"sigaction",sigaction> the_class_name;
	 generic_field_name <"__sigaction_handler",sigaction,__sigaction_handler> __sigaction_handler;
	 generic_field_name <"sa_mask",sigaction,sa_mask> sa_mask;
	 generic_field_name <"sa_flags",sigaction,sa_flags> sa_flags;
	 generic_field_name <"sa_restorer",sigaction,sa_restorer> sa_restorer;
}; 
class CLS_97_sigaction{ 
	 generic_class_name <"sigaction",sigaction> the_class_name;
	 generic_field_name <"__sigaction_handler",sigaction,__sigaction_handler> __sigaction_handler;
	 generic_field_name <"sa_mask",sigaction,sa_mask> sa_mask;
	 generic_field_name <"sa_flags",sigaction,sa_flags> sa_flags;
	 generic_field_name <"sa_restorer",sigaction,sa_restorer> sa_restorer;
}; 
class CLS_98_sigaction{ 
	 generic_class_name <"sigaction",sigaction> the_class_name;
	 generic_field_name <"__sigaction_handler",sigaction,__sigaction_handler> __sigaction_handler;
	 generic_field_name <"sa_mask",sigaction,sa_mask> sa_mask;
	 generic_field_name <"sa_flags",sigaction,sa_flags> sa_flags;
	 generic_field_name <"sa_restorer",sigaction,sa_restorer> sa_restorer;
}; 
class CLS_99_timespec{ 
	 generic_class_name <"timespec",timespec> the_class_name;
	 generic_field_name <"tv_sec",timespec,tv_sec> tv_sec;
	 generic_field_name <"tv_nsec",timespec,tv_nsec> tv_nsec;
}; 
class CLS_100_sigvec{ 
	 generic_class_name <"sigvec",sigvec> the_class_name;
	 generic_field_name <"sv_handler",sigvec,sv_handler> sv_handler;
	 generic_field_name <"sv_mask",sigvec,sv_mask> sv_mask;
	 generic_field_name <"sv_flags",sigvec,sv_flags> sv_flags;
}; 
class CLS_101_sigvec{ 
	 generic_class_name <"sigvec",sigvec> the_class_name;
	 generic_field_name <"sv_handler",sigvec,sv_handler> sv_handler;
	 generic_field_name <"sv_mask",sigvec,sv_mask> sv_mask;
	 generic_field_name <"sv_flags",sigvec,sv_flags> sv_flags;
}; 
class CLS_102_sigvec{ 
	 generic_class_name <"sigvec",sigvec> the_class_name;
	 generic_field_name <"sv_handler",sigvec,sv_handler> sv_handler;
	 generic_field_name <"sv_mask",sigvec,sv_mask> sv_mask;
	 generic_field_name <"sv_flags",sigvec,sv_flags> sv_flags;
}; 
class CLS_103__fpreg{ 
	 generic_class_name <"_fpreg",_fpreg> the_class_name;
	 generic_field_name <"significand",_fpreg,significand> significand;
	 generic_field_name <"exponent",_fpreg,exponent> exponent;
}; 
class CLS_104__fpxreg{ 
	 generic_class_name <"_fpxreg",_fpxreg> the_class_name;
	 generic_field_name <"significand",_fpxreg,significand> significand;
	 generic_field_name <"exponent",_fpxreg,exponent> exponent;
	 generic_field_name <"padding",_fpxreg,padding> padding;
}; 
class CLS_105__xmmreg{ 
	 generic_class_name <"_xmmreg",_xmmreg> the_class_name;
	 generic_field_name <"element",_xmmreg,element> element;
}; 
class CLS_106__fpxreg{ 
	 generic_class_name <"_fpxreg",_fpxreg> the_class_name;
	 generic_field_name <"significand",_fpxreg,significand> significand;
	 generic_field_name <"exponent",_fpxreg,exponent> exponent;
	 generic_field_name <"padding",_fpxreg,padding> padding;
}; 
class CLS_107__xmmreg{ 
	 generic_class_name <"_xmmreg",_xmmreg> the_class_name;
	 generic_field_name <"element",_xmmreg,element> element;
}; 
class CLS_108__fpstate{ 
	 generic_class_name <"_fpstate",_fpstate> the_class_name;
	 generic_field_name <"cwd",_fpstate,cwd> cwd;
	 generic_field_name <"swd",_fpstate,swd> swd;
	 generic_field_name <"ftw",_fpstate,ftw> ftw;
	 generic_field_name <"fop",_fpstate,fop> fop;
	 generic_field_name <"rip",_fpstate,rip> rip;
	 generic_field_name <"rdp",_fpstate,rdp> rdp;
	 generic_field_name <"mxcsr",_fpstate,mxcsr> mxcsr;
	 generic_field_name <"mxcr_mask",_fpstate,mxcr_mask> mxcr_mask;
	 generic_field_name <"_st",_fpstate,_st> _st;
	 generic_field_name <"_xmm",_fpstate,_xmm> _xmm;
	 generic_field_name <"padding",_fpstate,padding> padding;
}; 
class CLS_109__fpstate{ 
	 generic_class_name <"_fpstate",_fpstate> the_class_name;
	 generic_field_name <"cwd",_fpstate,cwd> cwd;
	 generic_field_name <"swd",_fpstate,swd> swd;
	 generic_field_name <"ftw",_fpstate,ftw> ftw;
	 generic_field_name <"fop",_fpstate,fop> fop;
	 generic_field_name <"rip",_fpstate,rip> rip;
	 generic_field_name <"rdp",_fpstate,rdp> rdp;
	 generic_field_name <"mxcsr",_fpstate,mxcsr> mxcsr;
	 generic_field_name <"mxcr_mask",_fpstate,mxcr_mask> mxcr_mask;
	 generic_field_name <"_st",_fpstate,_st> _st;
	 generic_field_name <"_xmm",_fpstate,_xmm> _xmm;
	 generic_field_name <"padding",_fpstate,padding> padding;
}; 
class CLS_110_sigcontext{ 
	 generic_class_name <"sigcontext",sigcontext> the_class_name;
	 generic_field_name <"r8",sigcontext,r8> r8;
	 generic_field_name <"r9",sigcontext,r9> r9;
	 generic_field_name <"r10",sigcontext,r10> r10;
	 generic_field_name <"r11",sigcontext,r11> r11;
	 generic_field_name <"r12",sigcontext,r12> r12;
	 generic_field_name <"r13",sigcontext,r13> r13;
	 generic_field_name <"r14",sigcontext,r14> r14;
	 generic_field_name <"r15",sigcontext,r15> r15;
	 generic_field_name <"rdi",sigcontext,rdi> rdi;
	 generic_field_name <"rsi",sigcontext,rsi> rsi;
	 generic_field_name <"rbp",sigcontext,rbp> rbp;
	 generic_field_name <"rbx",sigcontext,rbx> rbx;
	 generic_field_name <"rdx",sigcontext,rdx> rdx;
	 generic_field_name <"rax",sigcontext,rax> rax;
	 generic_field_name <"rcx",sigcontext,rcx> rcx;
	 generic_field_name <"rsp",sigcontext,rsp> rsp;
	 generic_field_name <"rip",sigcontext,rip> rip;
	 generic_field_name <"eflags",sigcontext,eflags> eflags;
	 generic_field_name <"cs",sigcontext,cs> cs;
	 generic_field_name <"gs",sigcontext,gs> gs;
	 generic_field_name <"fs",sigcontext,fs> fs;
	 generic_field_name <"__pad0",sigcontext,__pad0> __pad0;
	 generic_field_name <"err",sigcontext,err> err;
	 generic_field_name <"trapno",sigcontext,trapno> trapno;
	 generic_field_name <"oldmask",sigcontext,oldmask> oldmask;
	 generic_field_name <"cr2",sigcontext,cr2> cr2;
	 generic_field_name <"fpstate",sigcontext,fpstate> fpstate;
	 generic_field_name <"__reserved1",sigcontext,__reserved1> __reserved1;
}; 
class CLS_111_sigcontext{ 
	 generic_class_name <"sigcontext",sigcontext> the_class_name;
	 generic_field_name <"r8",sigcontext,r8> r8;
	 generic_field_name <"r9",sigcontext,r9> r9;
	 generic_field_name <"r10",sigcontext,r10> r10;
	 generic_field_name <"r11",sigcontext,r11> r11;
	 generic_field_name <"r12",sigcontext,r12> r12;
	 generic_field_name <"r13",sigcontext,r13> r13;
	 generic_field_name <"r14",sigcontext,r14> r14;
	 generic_field_name <"r15",sigcontext,r15> r15;
	 generic_field_name <"rdi",sigcontext,rdi> rdi;
	 generic_field_name <"rsi",sigcontext,rsi> rsi;
	 generic_field_name <"rbp",sigcontext,rbp> rbp;
	 generic_field_name <"rbx",sigcontext,rbx> rbx;
	 generic_field_name <"rdx",sigcontext,rdx> rdx;
	 generic_field_name <"rax",sigcontext,rax> rax;
	 generic_field_name <"rcx",sigcontext,rcx> rcx;
	 generic_field_name <"rsp",sigcontext,rsp> rsp;
	 generic_field_name <"rip",sigcontext,rip> rip;
	 generic_field_name <"eflags",sigcontext,eflags> eflags;
	 generic_field_name <"cs",sigcontext,cs> cs;
	 generic_field_name <"gs",sigcontext,gs> gs;
	 generic_field_name <"fs",sigcontext,fs> fs;
	 generic_field_name <"__pad0",sigcontext,__pad0> __pad0;
	 generic_field_name <"err",sigcontext,err> err;
	 generic_field_name <"trapno",sigcontext,trapno> trapno;
	 generic_field_name <"oldmask",sigcontext,oldmask> oldmask;
	 generic_field_name <"cr2",sigcontext,cr2> cr2;
	 generic_field_name <"fpstate",sigcontext,fpstate> fpstate;
	 generic_field_name <"__reserved1",sigcontext,__reserved1> __reserved1;
}; 
class CLS_112_sigstack{ 
	 generic_class_name <"sigstack",sigstack> the_class_name;
	 generic_field_name <"ss_sp",sigstack,ss_sp> ss_sp;
	 generic_field_name <"ss_onstack",sigstack,ss_onstack> ss_onstack;
}; 
class CLS_113_sigaltstack{ 
	 generic_class_name <"sigaltstack",sigaltstack> the_class_name;
	 generic_field_name <"ss_sp",sigaltstack,ss_sp> ss_sp;
	 generic_field_name <"ss_flags",sigaltstack,ss_flags> ss_flags;
	 generic_field_name <"ss_size",sigaltstack,ss_size> ss_size;
}; 
class CLS_114__libc_fpxreg{ 
	 generic_class_name <"_libc_fpxreg",_libc_fpxreg> the_class_name;
	 generic_field_name <"significand",_libc_fpxreg,significand> significand;
	 generic_field_name <"exponent",_libc_fpxreg,exponent> exponent;
	 generic_field_name <"padding",_libc_fpxreg,padding> padding;
}; 
class CLS_115__libc_xmmreg{ 
	 generic_class_name <"_libc_xmmreg",_libc_xmmreg> the_class_name;
	 generic_field_name <"element",_libc_xmmreg,element> element;
}; 
class CLS_116__libc_fpxreg{ 
	 generic_class_name <"_libc_fpxreg",_libc_fpxreg> the_class_name;
	 generic_field_name <"significand",_libc_fpxreg,significand> significand;
	 generic_field_name <"exponent",_libc_fpxreg,exponent> exponent;
	 generic_field_name <"padding",_libc_fpxreg,padding> padding;
}; 
class CLS_117__libc_xmmreg{ 
	 generic_class_name <"_libc_xmmreg",_libc_xmmreg> the_class_name;
	 generic_field_name <"element",_libc_xmmreg,element> element;
}; 
class CLS_118__libc_fpstate{ 
	 generic_class_name <"_libc_fpstate",_libc_fpstate> the_class_name;
	 generic_field_name <"cwd",_libc_fpstate,cwd> cwd;
	 generic_field_name <"swd",_libc_fpstate,swd> swd;
	 generic_field_name <"ftw",_libc_fpstate,ftw> ftw;
	 generic_field_name <"fop",_libc_fpstate,fop> fop;
	 generic_field_name <"rip",_libc_fpstate,rip> rip;
	 generic_field_name <"rdp",_libc_fpstate,rdp> rdp;
	 generic_field_name <"mxcsr",_libc_fpstate,mxcsr> mxcsr;
	 generic_field_name <"mxcr_mask",_libc_fpstate,mxcr_mask> mxcr_mask;
	 generic_field_name <"_st",_libc_fpstate,_st> _st;
	 generic_field_name <"_xmm",_libc_fpstate,_xmm> _xmm;
	 generic_field_name <"padding",_libc_fpstate,padding> padding;
}; 
class CLS_119__libc_fpstate{ 
	 generic_class_name <"_libc_fpstate",_libc_fpstate> the_class_name;
	 generic_field_name <"cwd",_libc_fpstate,cwd> cwd;
	 generic_field_name <"swd",_libc_fpstate,swd> swd;
	 generic_field_name <"ftw",_libc_fpstate,ftw> ftw;
	 generic_field_name <"fop",_libc_fpstate,fop> fop;
	 generic_field_name <"rip",_libc_fpstate,rip> rip;
	 generic_field_name <"rdp",_libc_fpstate,rdp> rdp;
	 generic_field_name <"mxcsr",_libc_fpstate,mxcsr> mxcsr;
	 generic_field_name <"mxcr_mask",_libc_fpstate,mxcr_mask> mxcr_mask;
	 generic_field_name <"_st",_libc_fpstate,_st> _st;
	 generic_field_name <"_xmm",_libc_fpstate,_xmm> _xmm;
	 generic_field_name <"padding",_libc_fpstate,padding> padding;
}; 
class CLS_120_ucontext{ 
	 generic_class_name <"ucontext",ucontext> the_class_name;
}; 
class CLS_121__libc_fpstate{ 
	 generic_class_name <"_libc_fpstate",_libc_fpstate> the_class_name;
	 generic_field_name <"cwd",_libc_fpstate,cwd> cwd;
	 generic_field_name <"swd",_libc_fpstate,swd> swd;
	 generic_field_name <"ftw",_libc_fpstate,ftw> ftw;
	 generic_field_name <"fop",_libc_fpstate,fop> fop;
	 generic_field_name <"rip",_libc_fpstate,rip> rip;
	 generic_field_name <"rdp",_libc_fpstate,rdp> rdp;
	 generic_field_name <"mxcsr",_libc_fpstate,mxcsr> mxcsr;
	 generic_field_name <"mxcr_mask",_libc_fpstate,mxcr_mask> mxcr_mask;
	 generic_field_name <"_st",_libc_fpstate,_st> _st;
	 generic_field_name <"_xmm",_libc_fpstate,_xmm> _xmm;
	 generic_field_name <"padding",_libc_fpstate,padding> padding;
}; 
class CLS_122_ucontext{ 
	 generic_class_name <"ucontext",ucontext> the_class_name;
	 generic_field_name <"uc_flags",ucontext,uc_flags> uc_flags;
	 generic_field_name <"uc_link",ucontext,uc_link> uc_link;
	 generic_field_name <"uc_stack",ucontext,uc_stack> uc_stack;
	 generic_field_name <"uc_mcontext",ucontext,uc_mcontext> uc_mcontext;
	 generic_field_name <"uc_sigmask",ucontext,uc_sigmask> uc_sigmask;
	 generic_field_name <"__fpregs_mem",ucontext,__fpregs_mem> __fpregs_mem;
}; 
class CLS_123_sigstack{ 
	 generic_class_name <"sigstack",sigstack> the_class_name;
	 generic_field_name <"ss_sp",sigstack,ss_sp> ss_sp;
	 generic_field_name <"ss_onstack",sigstack,ss_onstack> ss_onstack;
}; 
class CLS_124_sigstack{ 
	 generic_class_name <"sigstack",sigstack> the_class_name;
	 generic_field_name <"ss_sp",sigstack,ss_sp> ss_sp;
	 generic_field_name <"ss_onstack",sigstack,ss_onstack> ss_onstack;
}; 
class CLS_125_sigaltstack{ 
	 generic_class_name <"sigaltstack",sigaltstack> the_class_name;
	 generic_field_name <"ss_sp",sigaltstack,ss_sp> ss_sp;
	 generic_field_name <"ss_flags",sigaltstack,ss_flags> ss_flags;
	 generic_field_name <"ss_size",sigaltstack,ss_size> ss_size;
}; 
class CLS_126_sigaltstack{ 
	 generic_class_name <"sigaltstack",sigaltstack> the_class_name;
	 generic_field_name <"ss_sp",sigaltstack,ss_sp> ss_sp;
	 generic_field_name <"ss_flags",sigaltstack,ss_flags> ss_flags;
	 generic_field_name <"ss_size",sigaltstack,ss_size> ss_size;
}; 
class CLS_127_rlimit{ 
	 generic_class_name <"rlimit",rlimit> the_class_name;
	 generic_field_name <"rlim_cur",rlimit,rlim_cur> rlim_cur;
	 generic_field_name <"rlim_max",rlimit,rlim_max> rlim_max;
}; 
class CLS_128_timeval{ 
	 generic_class_name <"timeval",timeval> the_class_name;
	 generic_field_name <"tv_sec",timeval,tv_sec> tv_sec;
	 generic_field_name <"tv_usec",timeval,tv_usec> tv_usec;
}; 
class CLS_129_timeval{ 
	 generic_class_name <"timeval",timeval> the_class_name;
	 generic_field_name <"tv_sec",timeval,tv_sec> tv_sec;
	 generic_field_name <"tv_usec",timeval,tv_usec> tv_usec;
}; 
class CLS_130_rusage{ 
	 generic_class_name <"rusage",rusage> the_class_name;
	 generic_field_name <"ru_utime",rusage,ru_utime> ru_utime;
	 generic_field_name <"ru_stime",rusage,ru_stime> ru_stime;
	 generic_field_name <"ru_maxrss",rusage,ru_maxrss> ru_maxrss;
	 generic_field_name <"ru_ixrss",rusage,ru_ixrss> ru_ixrss;
	 generic_field_name <"ru_idrss",rusage,ru_idrss> ru_idrss;
	 generic_field_name <"ru_isrss",rusage,ru_isrss> ru_isrss;
	 generic_field_name <"ru_minflt",rusage,ru_minflt> ru_minflt;
	 generic_field_name <"ru_majflt",rusage,ru_majflt> ru_majflt;
	 generic_field_name <"ru_nswap",rusage,ru_nswap> ru_nswap;
	 generic_field_name <"ru_inblock",rusage,ru_inblock> ru_inblock;
	 generic_field_name <"ru_oublock",rusage,ru_oublock> ru_oublock;
	 generic_field_name <"ru_msgsnd",rusage,ru_msgsnd> ru_msgsnd;
	 generic_field_name <"ru_msgrcv",rusage,ru_msgrcv> ru_msgrcv;
	 generic_field_name <"ru_nsignals",rusage,ru_nsignals> ru_nsignals;
	 generic_field_name <"ru_nvcsw",rusage,ru_nvcsw> ru_nvcsw;
	 generic_field_name <"ru_nivcsw",rusage,ru_nivcsw> ru_nivcsw;
}; 
class CLS_131_rlimit{ 
	 generic_class_name <"rlimit",rlimit> the_class_name;
	 generic_field_name <"rlim_cur",rlimit,rlim_cur> rlim_cur;
	 generic_field_name <"rlim_max",rlimit,rlim_max> rlim_max;
}; 
class CLS_132_rlimit{ 
	 generic_class_name <"rlimit",rlimit> the_class_name;
	 generic_field_name <"rlim_cur",rlimit,rlim_cur> rlim_cur;
	 generic_field_name <"rlim_max",rlimit,rlim_max> rlim_max;
}; 
class CLS_133_rusage{ 
	 generic_class_name <"rusage",rusage> the_class_name;
	 generic_field_name <"ru_utime",rusage,ru_utime> ru_utime;
	 generic_field_name <"ru_stime",rusage,ru_stime> ru_stime;
	 generic_field_name <"ru_maxrss",rusage,ru_maxrss> ru_maxrss;
	 generic_field_name <"ru_ixrss",rusage,ru_ixrss> ru_ixrss;
	 generic_field_name <"ru_idrss",rusage,ru_idrss> ru_idrss;
	 generic_field_name <"ru_isrss",rusage,ru_isrss> ru_isrss;
	 generic_field_name <"ru_minflt",rusage,ru_minflt> ru_minflt;
	 generic_field_name <"ru_majflt",rusage,ru_majflt> ru_majflt;
	 generic_field_name <"ru_nswap",rusage,ru_nswap> ru_nswap;
	 generic_field_name <"ru_inblock",rusage,ru_inblock> ru_inblock;
	 generic_field_name <"ru_oublock",rusage,ru_oublock> ru_oublock;
	 generic_field_name <"ru_msgsnd",rusage,ru_msgsnd> ru_msgsnd;
	 generic_field_name <"ru_msgrcv",rusage,ru_msgrcv> ru_msgrcv;
	 generic_field_name <"ru_nsignals",rusage,ru_nsignals> ru_nsignals;
	 generic_field_name <"ru_nvcsw",rusage,ru_nvcsw> ru_nvcsw;
	 generic_field_name <"ru_nivcsw",rusage,ru_nivcsw> ru_nivcsw;
}; 
class CLS_134_rusage{ 
	 generic_class_name <"rusage",rusage> the_class_name;
	 generic_field_name <"ru_utime",rusage,ru_utime> ru_utime;
	 generic_field_name <"ru_stime",rusage,ru_stime> ru_stime;
	 generic_field_name <"ru_maxrss",rusage,ru_maxrss> ru_maxrss;
	 generic_field_name <"ru_ixrss",rusage,ru_ixrss> ru_ixrss;
	 generic_field_name <"ru_idrss",rusage,ru_idrss> ru_idrss;
	 generic_field_name <"ru_isrss",rusage,ru_isrss> ru_isrss;
	 generic_field_name <"ru_minflt",rusage,ru_minflt> ru_minflt;
	 generic_field_name <"ru_majflt",rusage,ru_majflt> ru_majflt;
	 generic_field_name <"ru_nswap",rusage,ru_nswap> ru_nswap;
	 generic_field_name <"ru_inblock",rusage,ru_inblock> ru_inblock;
	 generic_field_name <"ru_oublock",rusage,ru_oublock> ru_oublock;
	 generic_field_name <"ru_msgsnd",rusage,ru_msgsnd> ru_msgsnd;
	 generic_field_name <"ru_msgrcv",rusage,ru_msgrcv> ru_msgrcv;
	 generic_field_name <"ru_nsignals",rusage,ru_nsignals> ru_nsignals;
	 generic_field_name <"ru_nvcsw",rusage,ru_nvcsw> ru_nvcsw;
	 generic_field_name <"ru_nivcsw",rusage,ru_nivcsw> ru_nivcsw;
}; 
class CLS_135_rusage{ 
	 generic_class_name <"rusage",rusage> the_class_name;
	 generic_field_name <"ru_utime",rusage,ru_utime> ru_utime;
	 generic_field_name <"ru_stime",rusage,ru_stime> ru_stime;
	 generic_field_name <"ru_maxrss",rusage,ru_maxrss> ru_maxrss;
	 generic_field_name <"ru_ixrss",rusage,ru_ixrss> ru_ixrss;
	 generic_field_name <"ru_idrss",rusage,ru_idrss> ru_idrss;
	 generic_field_name <"ru_isrss",rusage,ru_isrss> ru_isrss;
	 generic_field_name <"ru_minflt",rusage,ru_minflt> ru_minflt;
	 generic_field_name <"ru_majflt",rusage,ru_majflt> ru_majflt;
	 generic_field_name <"ru_nswap",rusage,ru_nswap> ru_nswap;
	 generic_field_name <"ru_inblock",rusage,ru_inblock> ru_inblock;
	 generic_field_name <"ru_oublock",rusage,ru_oublock> ru_oublock;
	 generic_field_name <"ru_msgsnd",rusage,ru_msgsnd> ru_msgsnd;
	 generic_field_name <"ru_msgrcv",rusage,ru_msgrcv> ru_msgrcv;
	 generic_field_name <"ru_nsignals",rusage,ru_nsignals> ru_nsignals;
	 generic_field_name <"ru_nvcsw",rusage,ru_nvcsw> ru_nvcsw;
	 generic_field_name <"ru_nivcsw",rusage,ru_nivcsw> ru_nivcsw;
}; 
class CLS_136_rusage{ 
	 generic_class_name <"rusage",rusage> the_class_name;
	 generic_field_name <"ru_utime",rusage,ru_utime> ru_utime;
	 generic_field_name <"ru_stime",rusage,ru_stime> ru_stime;
	 generic_field_name <"ru_maxrss",rusage,ru_maxrss> ru_maxrss;
	 generic_field_name <"ru_ixrss",rusage,ru_ixrss> ru_ixrss;
	 generic_field_name <"ru_idrss",rusage,ru_idrss> ru_idrss;
	 generic_field_name <"ru_isrss",rusage,ru_isrss> ru_isrss;
	 generic_field_name <"ru_minflt",rusage,ru_minflt> ru_minflt;
	 generic_field_name <"ru_majflt",rusage,ru_majflt> ru_majflt;
	 generic_field_name <"ru_nswap",rusage,ru_nswap> ru_nswap;
	 generic_field_name <"ru_inblock",rusage,ru_inblock> ru_inblock;
	 generic_field_name <"ru_oublock",rusage,ru_oublock> ru_oublock;
	 generic_field_name <"ru_msgsnd",rusage,ru_msgsnd> ru_msgsnd;
	 generic_field_name <"ru_msgrcv",rusage,ru_msgrcv> ru_msgrcv;
	 generic_field_name <"ru_nsignals",rusage,ru_nsignals> ru_nsignals;
	 generic_field_name <"ru_nvcsw",rusage,ru_nvcsw> ru_nvcsw;
	 generic_field_name <"ru_nivcsw",rusage,ru_nivcsw> ru_nivcsw;
}; 
class CLS_137_tms{ 
	 generic_class_name <"tms",tms> the_class_name;
	 generic_field_name <"tms_utime",tms,tms_utime> tms_utime;
	 generic_field_name <"tms_stime",tms,tms_stime> tms_stime;
	 generic_field_name <"tms_cutime",tms,tms_cutime> tms_cutime;
	 generic_field_name <"tms_cstime",tms,tms_cstime> tms_cstime;
}; 
class CLS_138_tms{ 
	 generic_class_name <"tms",tms> the_class_name;
	 generic_field_name <"tms_utime",tms,tms_utime> tms_utime;
	 generic_field_name <"tms_stime",tms,tms_stime> tms_stime;
	 generic_field_name <"tms_cutime",tms,tms_cutime> tms_cutime;
	 generic_field_name <"tms_cstime",tms,tms_cstime> tms_cstime;
}; 
class CLS_139_mallinfo{ 
	 generic_class_name <"mallinfo",mallinfo> the_class_name;
	 generic_field_name <"arena",mallinfo,arena> arena;
	 generic_field_name <"ordblks",mallinfo,ordblks> ordblks;
	 generic_field_name <"smblks",mallinfo,smblks> smblks;
	 generic_field_name <"hblks",mallinfo,hblks> hblks;
	 generic_field_name <"hblkhd",mallinfo,hblkhd> hblkhd;
	 generic_field_name <"usmblks",mallinfo,usmblks> usmblks;
	 generic_field_name <"fsmblks",mallinfo,fsmblks> fsmblks;
	 generic_field_name <"uordblks",mallinfo,uordblks> uordblks;
	 generic_field_name <"fordblks",mallinfo,fordblks> fordblks;
	 generic_field_name <"keepcost",mallinfo,keepcost> keepcost;
}; 
class CLS_140_mallinfo{ 
	 generic_class_name <"mallinfo",mallinfo> the_class_name;
	 generic_field_name <"arena",mallinfo,arena> arena;
	 generic_field_name <"ordblks",mallinfo,ordblks> ordblks;
	 generic_field_name <"smblks",mallinfo,smblks> smblks;
	 generic_field_name <"hblks",mallinfo,hblks> hblks;
	 generic_field_name <"hblkhd",mallinfo,hblkhd> hblkhd;
	 generic_field_name <"usmblks",mallinfo,usmblks> usmblks;
	 generic_field_name <"fsmblks",mallinfo,fsmblks> fsmblks;
	 generic_field_name <"uordblks",mallinfo,uordblks> uordblks;
	 generic_field_name <"fordblks",mallinfo,fordblks> fordblks;
	 generic_field_name <"keepcost",mallinfo,keepcost> keepcost;
}; 
class CLS_141_stat{ 
	 generic_class_name <"stat",stat> the_class_name;
	 generic_field_name <"st_dev",stat,st_dev> st_dev;
	 generic_field_name <"st_ino",stat,st_ino> st_ino;
	 generic_field_name <"st_nlink",stat,st_nlink> st_nlink;
	 generic_field_name <"st_mode",stat,st_mode> st_mode;
	 generic_field_name <"st_uid",stat,st_uid> st_uid;
	 generic_field_name <"st_gid",stat,st_gid> st_gid;
	 generic_field_name <"__pad0",stat,__pad0> __pad0;
	 generic_field_name <"st_rdev",stat,st_rdev> st_rdev;
	 generic_field_name <"st_size",stat,st_size> st_size;
	 generic_field_name <"st_blksize",stat,st_blksize> st_blksize;
	 generic_field_name <"st_blocks",stat,st_blocks> st_blocks;
	 generic_field_name <"st_atim",stat,st_atim> st_atim;
	 generic_field_name <"st_mtim",stat,st_mtim> st_mtim;
	 generic_field_name <"st_ctim",stat,st_ctim> st_ctim;
	 generic_field_name <"__unused",stat,__unused> __unused;
}; 
class CLS_142_stat{ 
	 generic_class_name <"stat",stat> the_class_name;
	 generic_field_name <"st_dev",stat,st_dev> st_dev;
	 generic_field_name <"st_ino",stat,st_ino> st_ino;
	 generic_field_name <"st_nlink",stat,st_nlink> st_nlink;
	 generic_field_name <"st_mode",stat,st_mode> st_mode;
	 generic_field_name <"st_uid",stat,st_uid> st_uid;
	 generic_field_name <"st_gid",stat,st_gid> st_gid;
	 generic_field_name <"__pad0",stat,__pad0> __pad0;
	 generic_field_name <"st_rdev",stat,st_rdev> st_rdev;
	 generic_field_name <"st_size",stat,st_size> st_size;
	 generic_field_name <"st_blksize",stat,st_blksize> st_blksize;
	 generic_field_name <"st_blocks",stat,st_blocks> st_blocks;
	 generic_field_name <"st_atim",stat,st_atim> st_atim;
	 generic_field_name <"st_mtim",stat,st_mtim> st_mtim;
	 generic_field_name <"st_ctim",stat,st_ctim> st_ctim;
	 generic_field_name <"__unused",stat,__unused> __unused;
}; 
class CLS_143_stat{ 
	 generic_class_name <"stat",stat> the_class_name;
	 generic_field_name <"st_dev",stat,st_dev> st_dev;
	 generic_field_name <"st_ino",stat,st_ino> st_ino;
	 generic_field_name <"st_nlink",stat,st_nlink> st_nlink;
	 generic_field_name <"st_mode",stat,st_mode> st_mode;
	 generic_field_name <"st_uid",stat,st_uid> st_uid;
	 generic_field_name <"st_gid",stat,st_gid> st_gid;
	 generic_field_name <"__pad0",stat,__pad0> __pad0;
	 generic_field_name <"st_rdev",stat,st_rdev> st_rdev;
	 generic_field_name <"st_size",stat,st_size> st_size;
	 generic_field_name <"st_blksize",stat,st_blksize> st_blksize;
	 generic_field_name <"st_blocks",stat,st_blocks> st_blocks;
	 generic_field_name <"st_atim",stat,st_atim> st_atim;
	 generic_field_name <"st_mtim",stat,st_mtim> st_mtim;
	 generic_field_name <"st_ctim",stat,st_ctim> st_ctim;
	 generic_field_name <"__unused",stat,__unused> __unused;
}; 
class CLS_144_stat{ 
	 generic_class_name <"stat",stat> the_class_name;
	 generic_field_name <"st_dev",stat,st_dev> st_dev;
	 generic_field_name <"st_ino",stat,st_ino> st_ino;
	 generic_field_name <"st_nlink",stat,st_nlink> st_nlink;
	 generic_field_name <"st_mode",stat,st_mode> st_mode;
	 generic_field_name <"st_uid",stat,st_uid> st_uid;
	 generic_field_name <"st_gid",stat,st_gid> st_gid;
	 generic_field_name <"__pad0",stat,__pad0> __pad0;
	 generic_field_name <"st_rdev",stat,st_rdev> st_rdev;
	 generic_field_name <"st_size",stat,st_size> st_size;
	 generic_field_name <"st_blksize",stat,st_blksize> st_blksize;
	 generic_field_name <"st_blocks",stat,st_blocks> st_blocks;
	 generic_field_name <"st_atim",stat,st_atim> st_atim;
	 generic_field_name <"st_mtim",stat,st_mtim> st_mtim;
	 generic_field_name <"st_ctim",stat,st_ctim> st_ctim;
	 generic_field_name <"__unused",stat,__unused> __unused;
}; 
class CLS_145_timespec{ 
	 generic_class_name <"timespec",timespec> the_class_name;
	 generic_field_name <"tv_sec",timespec,tv_sec> tv_sec;
	 generic_field_name <"tv_nsec",timespec,tv_nsec> tv_nsec;
}; 
class CLS_146_timespec{ 
	 generic_class_name <"timespec",timespec> the_class_name;
	 generic_field_name <"tv_sec",timespec,tv_sec> tv_sec;
	 generic_field_name <"tv_nsec",timespec,tv_nsec> tv_nsec;
}; 
class CLS_147_stat{ 
	 generic_class_name <"stat",stat> the_class_name;
	 generic_field_name <"st_dev",stat,st_dev> st_dev;
	 generic_field_name <"st_ino",stat,st_ino> st_ino;
	 generic_field_name <"st_nlink",stat,st_nlink> st_nlink;
	 generic_field_name <"st_mode",stat,st_mode> st_mode;
	 generic_field_name <"st_uid",stat,st_uid> st_uid;
	 generic_field_name <"st_gid",stat,st_gid> st_gid;
	 generic_field_name <"__pad0",stat,__pad0> __pad0;
	 generic_field_name <"st_rdev",stat,st_rdev> st_rdev;
	 generic_field_name <"st_size",stat,st_size> st_size;
	 generic_field_name <"st_blksize",stat,st_blksize> st_blksize;
	 generic_field_name <"st_blocks",stat,st_blocks> st_blocks;
	 generic_field_name <"st_atim",stat,st_atim> st_atim;
	 generic_field_name <"st_mtim",stat,st_mtim> st_mtim;
	 generic_field_name <"st_ctim",stat,st_ctim> st_ctim;
	 generic_field_name <"__unused",stat,__unused> __unused;
}; 
class CLS_148_stat{ 
	 generic_class_name <"stat",stat> the_class_name;
	 generic_field_name <"st_dev",stat,st_dev> st_dev;
	 generic_field_name <"st_ino",stat,st_ino> st_ino;
	 generic_field_name <"st_nlink",stat,st_nlink> st_nlink;
	 generic_field_name <"st_mode",stat,st_mode> st_mode;
	 generic_field_name <"st_uid",stat,st_uid> st_uid;
	 generic_field_name <"st_gid",stat,st_gid> st_gid;
	 generic_field_name <"__pad0",stat,__pad0> __pad0;
	 generic_field_name <"st_rdev",stat,st_rdev> st_rdev;
	 generic_field_name <"st_size",stat,st_size> st_size;
	 generic_field_name <"st_blksize",stat,st_blksize> st_blksize;
	 generic_field_name <"st_blocks",stat,st_blocks> st_blocks;
	 generic_field_name <"st_atim",stat,st_atim> st_atim;
	 generic_field_name <"st_mtim",stat,st_mtim> st_mtim;
	 generic_field_name <"st_ctim",stat,st_ctim> st_ctim;
	 generic_field_name <"__unused",stat,__unused> __unused;
}; 
class CLS_149_stat{ 
	 generic_class_name <"stat",stat> the_class_name;
	 generic_field_name <"st_dev",stat,st_dev> st_dev;
	 generic_field_name <"st_ino",stat,st_ino> st_ino;
	 generic_field_name <"st_nlink",stat,st_nlink> st_nlink;
	 generic_field_name <"st_mode",stat,st_mode> st_mode;
	 generic_field_name <"st_uid",stat,st_uid> st_uid;
	 generic_field_name <"st_gid",stat,st_gid> st_gid;
	 generic_field_name <"__pad0",stat,__pad0> __pad0;
	 generic_field_name <"st_rdev",stat,st_rdev> st_rdev;
	 generic_field_name <"st_size",stat,st_size> st_size;
	 generic_field_name <"st_blksize",stat,st_blksize> st_blksize;
	 generic_field_name <"st_blocks",stat,st_blocks> st_blocks;
	 generic_field_name <"st_atim",stat,st_atim> st_atim;
	 generic_field_name <"st_mtim",stat,st_mtim> st_mtim;
	 generic_field_name <"st_ctim",stat,st_ctim> st_ctim;
	 generic_field_name <"__unused",stat,__unused> __unused;
}; 
class CLS_150_stat{ 
	 generic_class_name <"stat",stat> the_class_name;
	 generic_field_name <"st_dev",stat,st_dev> st_dev;
	 generic_field_name <"st_ino",stat,st_ino> st_ino;
	 generic_field_name <"st_nlink",stat,st_nlink> st_nlink;
	 generic_field_name <"st_mode",stat,st_mode> st_mode;
	 generic_field_name <"st_uid",stat,st_uid> st_uid;
	 generic_field_name <"st_gid",stat,st_gid> st_gid;
	 generic_field_name <"__pad0",stat,__pad0> __pad0;
	 generic_field_name <"st_rdev",stat,st_rdev> st_rdev;
	 generic_field_name <"st_size",stat,st_size> st_size;
	 generic_field_name <"st_blksize",stat,st_blksize> st_blksize;
	 generic_field_name <"st_blocks",stat,st_blocks> st_blocks;
	 generic_field_name <"st_atim",stat,st_atim> st_atim;
	 generic_field_name <"st_mtim",stat,st_mtim> st_mtim;
	 generic_field_name <"st_ctim",stat,st_ctim> st_ctim;
	 generic_field_name <"__unused",stat,__unused> __unused;
}; 
class CLS_151_pex_obj{ 
	 generic_class_name <"pex_obj",pex_obj> the_class_name;
}; 
class CLS_152_pex_obj{ 
	 generic_class_name <"pex_obj",pex_obj> the_class_name;
}; 
class CLS_153_pex_obj{ 
	 generic_class_name <"pex_obj",pex_obj> the_class_name;
}; 
class CLS_154_pex_obj{ 
	 generic_class_name <"pex_obj",pex_obj> the_class_name;
}; 
class CLS_155_pex_obj{ 
	 generic_class_name <"pex_obj",pex_obj> the_class_name;
}; 
class CLS_156_pex_obj{ 
	 generic_class_name <"pex_obj",pex_obj> the_class_name;
}; 
class CLS_157_pex_obj{ 
	 generic_class_name <"pex_obj",pex_obj> the_class_name;
}; 
class CLS_158_pex_obj{ 
	 generic_class_name <"pex_obj",pex_obj> the_class_name;
}; 
class CLS_159_pex_time{ 
	 generic_class_name <"pex_time",pex_time> the_class_name;
	 generic_field_name <"user_seconds",pex_time,user_seconds> user_seconds;
	 generic_field_name <"user_microseconds",pex_time,user_microseconds> user_microseconds;
	 generic_field_name <"system_seconds",pex_time,system_seconds> system_seconds;
	 generic_field_name <"system_microseconds",pex_time,system_microseconds> system_microseconds;
}; 
class CLS_160_pex_obj{ 
	 generic_class_name <"pex_obj",pex_obj> the_class_name;
}; 
class CLS_161_pex_time{ 
	 generic_class_name <"pex_time",pex_time> the_class_name;
	 generic_field_name <"user_seconds",pex_time,user_seconds> user_seconds;
	 generic_field_name <"user_microseconds",pex_time,user_microseconds> user_microseconds;
	 generic_field_name <"system_seconds",pex_time,system_seconds> system_seconds;
	 generic_field_name <"system_microseconds",pex_time,system_microseconds> system_microseconds;
}; 
class CLS_162_pex_obj{ 
	 generic_class_name <"pex_obj",pex_obj> the_class_name;
}; 
class CLS_163_bitmap_head_def{ 
	 generic_class_name <"bitmap_head_def",bitmap_head_def> the_class_name;
}; 
class CLS_164_bitmap_head_def{ 
	 generic_class_name <"bitmap_head_def",bitmap_head_def> the_class_name;
}; 
class CLS_165_bitmap_head_def{ 
	 generic_class_name <"bitmap_head_def",bitmap_head_def> the_class_name;
}; 
class CLS_166_simple_bitmap_def{ 
	 generic_class_name <"simple_bitmap_def",simple_bitmap_def> the_class_name;
}; 
class CLS_167_simple_bitmap_def{ 
	 generic_class_name <"simple_bitmap_def",simple_bitmap_def> the_class_name;
}; 
class CLS_168_simple_bitmap_def{ 
	 generic_class_name <"simple_bitmap_def",simple_bitmap_def> the_class_name;
}; 
class CLS_169_rtx_def{ 
	 generic_class_name <"rtx_def",rtx_def> the_class_name;
}; 
class CLS_170_rtx_def{ 
	 generic_class_name <"rtx_def",rtx_def> the_class_name;
}; 
class CLS_171_rtx_def{ 
	 generic_class_name <"rtx_def",rtx_def> the_class_name;
}; 
class CLS_172_rtvec_def{ 
	 generic_class_name <"rtvec_def",rtvec_def> the_class_name;
}; 
class CLS_173_rtvec_def{ 
	 generic_class_name <"rtvec_def",rtvec_def> the_class_name;
}; 
class CLS_174_rtvec_def{ 
	 generic_class_name <"rtvec_def",rtvec_def> the_class_name;
}; 
class CLS_175_gcc_options{ 
	 generic_class_name <"gcc_options",gcc_options> the_class_name;
}; 
class CLS_176_cl_target_option{ 
	 generic_class_name <"cl_target_option",cl_target_option> the_class_name;
}; 
class CLS_177_cl_optimization{ 
	 generic_class_name <"cl_optimization",cl_optimization> the_class_name;
}; 
class CLS_178_cl_option{ 
	 generic_class_name <"cl_option",cl_option> the_class_name;
}; 
class CLS_179_cl_decoded_option{ 
	 generic_class_name <"cl_decoded_option",cl_decoded_option> the_class_name;
}; 
class CLS_180_cl_option_handlers{ 
	 generic_class_name <"cl_option_handlers",cl_option_handlers> the_class_name;
}; 
class CLS_181_diagnostic_context{ 
	 generic_class_name <"diagnostic_context",diagnostic_context> the_class_name;
}; 
class CLS_182_diagnostic_context{ 
	 generic_class_name <"diagnostic_context",diagnostic_context> the_class_name;
}; 
class CLS_183_gimple_seq_d{ 
	 generic_class_name <"gimple_seq_d",gimple_seq_d> the_class_name;
}; 
class CLS_184_gimple_seq_d{ 
	 generic_class_name <"gimple_seq_d",gimple_seq_d> the_class_name;
}; 
class CLS_185_gimple_seq_d{ 
	 generic_class_name <"gimple_seq_d",gimple_seq_d> the_class_name;
}; 
class CLS_186_cpp_reader{ 
	 generic_class_name <"cpp_reader",cpp_reader> the_class_name;
}; 
class CLS_187_cpp_token{ 
	 generic_class_name <"cpp_token",cpp_token> the_class_name;
}; 
class CLS_188_edge_def{ 
	 generic_class_name <"edge_def",edge_def> the_class_name;
}; 
class CLS_189_edge_def{ 
	 generic_class_name <"edge_def",edge_def> the_class_name;
}; 
class CLS_190_edge_def{ 
	 generic_class_name <"edge_def",edge_def> the_class_name;
}; 
class CLS_191_basic_block_def{ 
	 generic_class_name <"basic_block_def",basic_block_def> the_class_name;
}; 
class CLS_192_basic_block_def{ 
	 generic_class_name <"basic_block_def",basic_block_def> the_class_name;
}; 
class CLS_193_basic_block_def{ 
	 generic_class_name <"basic_block_def",basic_block_def> the_class_name;
}; 
class CLS_194_htab{ 
	 generic_class_name <"htab",htab> the_class_name;
	 generic_field_name <"hash_f",htab,hash_f> hash_f;
	 generic_field_name <"eq_f",htab,eq_f> eq_f;
	 generic_field_name <"del_f",htab,del_f> del_f;
	 generic_field_name <"entries",htab,entries> entries;
	 generic_field_name <"size",htab,size> size;
	 generic_field_name <"n_elements",htab,n_elements> n_elements;
	 generic_field_name <"n_deleted",htab,n_deleted> n_deleted;
	 generic_field_name <"searches",htab,searches> searches;
	 generic_field_name <"collisions",htab,collisions> collisions;
	 generic_field_name <"alloc_f",htab,alloc_f> alloc_f;
	 generic_field_name <"free_f",htab,free_f> free_f;
	 generic_field_name <"alloc_arg",htab,alloc_arg> alloc_arg;
	 generic_field_name <"alloc_with_arg_f",htab,alloc_with_arg_f> alloc_with_arg_f;
	 generic_field_name <"free_with_arg_f",htab,free_with_arg_f> free_with_arg_f;
	 generic_field_name <"size_prime_index",htab,size_prime_index> size_prime_index;
}; 
class CLS_195_htab{ 
	 generic_class_name <"htab",htab> the_class_name;
	 generic_field_name <"hash_f",htab,hash_f> hash_f;
	 generic_field_name <"eq_f",htab,eq_f> eq_f;
	 generic_field_name <"del_f",htab,del_f> del_f;
	 generic_field_name <"entries",htab,entries> entries;
	 generic_field_name <"size",htab,size> size;
	 generic_field_name <"n_elements",htab,n_elements> n_elements;
	 generic_field_name <"n_deleted",htab,n_deleted> n_deleted;
	 generic_field_name <"searches",htab,searches> searches;
	 generic_field_name <"collisions",htab,collisions> collisions;
	 generic_field_name <"alloc_f",htab,alloc_f> alloc_f;
	 generic_field_name <"free_f",htab,free_f> free_f;
	 generic_field_name <"alloc_arg",htab,alloc_arg> alloc_arg;
	 generic_field_name <"alloc_with_arg_f",htab,alloc_with_arg_f> alloc_with_arg_f;
	 generic_field_name <"free_with_arg_f",htab,free_with_arg_f> free_with_arg_f;
	 generic_field_name <"size_prime_index",htab,size_prime_index> size_prime_index;
}; 
class CLS_196_plugin_argument{ 
	 generic_class_name <"plugin_argument",plugin_argument> the_class_name;
	 generic_field_name <"key",plugin_argument,key> key;
	 generic_field_name <"value",plugin_argument,value> value;
}; 
class CLS_197_plugin_info{ 
	 generic_class_name <"plugin_info",plugin_info> the_class_name;
	 generic_field_name <"version",plugin_info,version> version;
	 generic_field_name <"help",plugin_info,help> help;
}; 
class CLS_198_plugin_gcc_version{ 
	 generic_class_name <"plugin_gcc_version",plugin_gcc_version> the_class_name;
	 generic_field_name <"basever",plugin_gcc_version,basever> basever;
	 generic_field_name <"datestamp",plugin_gcc_version,datestamp> datestamp;
	 generic_field_name <"devphase",plugin_gcc_version,devphase> devphase;
	 generic_field_name <"revision",plugin_gcc_version,revision> revision;
	 generic_field_name <"configuration_arguments",plugin_gcc_version,configuration_arguments> configuration_arguments;
}; 
class CLS_199_plugin_argument{ 
	 generic_class_name <"plugin_argument",plugin_argument> the_class_name;
	 generic_field_name <"key",plugin_argument,key> key;
	 generic_field_name <"value",plugin_argument,value> value;
}; 
class CLS_200_plugin_name_args{ 
	 generic_class_name <"plugin_name_args",plugin_name_args> the_class_name;
	 generic_field_name <"base_name",plugin_name_args,base_name> base_name;
	 generic_field_name <"full_name",plugin_name_args,full_name> full_name;
	 generic_field_name <"argc",plugin_name_args,argc> argc;
	 generic_field_name <"argv",plugin_name_args,argv> argv;
	 generic_field_name <"version",plugin_name_args,version> version;
	 generic_field_name <"help",plugin_name_args,help> help;
}; 
class CLS_201_plugin_gcc_version{ 
	 generic_class_name <"plugin_gcc_version",plugin_gcc_version> the_class_name;
	 generic_field_name <"basever",plugin_gcc_version,basever> basever;
	 generic_field_name <"datestamp",plugin_gcc_version,datestamp> datestamp;
	 generic_field_name <"devphase",plugin_gcc_version,devphase> devphase;
	 generic_field_name <"revision",plugin_gcc_version,revision> revision;
	 generic_field_name <"configuration_arguments",plugin_gcc_version,configuration_arguments> configuration_arguments;
}; 
class CLS_202_plugin_gcc_version{ 
	 generic_class_name <"plugin_gcc_version",plugin_gcc_version> the_class_name;
	 generic_field_name <"basever",plugin_gcc_version,basever> basever;
	 generic_field_name <"datestamp",plugin_gcc_version,datestamp> datestamp;
	 generic_field_name <"devphase",plugin_gcc_version,devphase> devphase;
	 generic_field_name <"revision",plugin_gcc_version,revision> revision;
	 generic_field_name <"configuration_arguments",plugin_gcc_version,configuration_arguments> configuration_arguments;
}; 
class CLS_203_plugin_name_args{ 
	 generic_class_name <"plugin_name_args",plugin_name_args> the_class_name;
	 generic_field_name <"base_name",plugin_name_args,base_name> base_name;
	 generic_field_name <"full_name",plugin_name_args,full_name> full_name;
	 generic_field_name <"argc",plugin_name_args,argc> argc;
	 generic_field_name <"argv",plugin_name_args,argv> argv;
	 generic_field_name <"version",plugin_name_args,version> version;
	 generic_field_name <"help",plugin_name_args,help> help;
}; 
class CLS_204_plugin_gcc_version{ 
	 generic_class_name <"plugin_gcc_version",plugin_gcc_version> the_class_name;
	 generic_field_name <"basever",plugin_gcc_version,basever> basever;
	 generic_field_name <"datestamp",plugin_gcc_version,datestamp> datestamp;
	 generic_field_name <"devphase",plugin_gcc_version,devphase> devphase;
	 generic_field_name <"revision",plugin_gcc_version,revision> revision;
	 generic_field_name <"configuration_arguments",plugin_gcc_version,configuration_arguments> configuration_arguments;
}; 
class CLS_205_plugin_name_args{ 
	 generic_class_name <"plugin_name_args",plugin_name_args> the_class_name;
	 generic_field_name <"base_name",plugin_name_args,base_name> base_name;
	 generic_field_name <"full_name",plugin_name_args,full_name> full_name;
	 generic_field_name <"argc",plugin_name_args,argc> argc;
	 generic_field_name <"argv",plugin_name_args,argv> argv;
	 generic_field_name <"version",plugin_name_args,version> version;
	 generic_field_name <"help",plugin_name_args,help> help;
}; 
class CLS_206_plugin_gcc_version{ 
	 generic_class_name <"plugin_gcc_version",plugin_gcc_version> the_class_name;
	 generic_field_name <"basever",plugin_gcc_version,basever> basever;
	 generic_field_name <"datestamp",plugin_gcc_version,datestamp> datestamp;
	 generic_field_name <"devphase",plugin_gcc_version,devphase> devphase;
	 generic_field_name <"revision",plugin_gcc_version,revision> revision;
	 generic_field_name <"configuration_arguments",plugin_gcc_version,configuration_arguments> configuration_arguments;
}; 
class CLS_207_line_map_ordinary{ 
	 generic_class_name <"line_map_ordinary",line_map_ordinary> the_class_name;
	 generic_field_name <"to_file",line_map_ordinary,to_file> to_file;
	 generic_field_name <"to_line",line_map_ordinary,to_line> to_line;
	 generic_field_name <"included_from",line_map_ordinary,included_from> included_from;
	 generic_field_name <"sysp",line_map_ordinary,sysp> sysp;
	 generic_field_name <"column_bits",line_map_ordinary,column_bits> column_bits;
}; 
class CLS_208_cpp_hashnode{ 
	 generic_class_name <"cpp_hashnode",cpp_hashnode> the_class_name;
}; 
class CLS_209_cpp_hashnode{ 
	 generic_class_name <"cpp_hashnode",cpp_hashnode> the_class_name;
}; 
class CLS_210_line_map_macro{ 
	 generic_class_name <"line_map_macro",line_map_macro> the_class_name;
	 generic_field_name <"macro",line_map_macro,macro> macro;
	 generic_field_name <"n_tokens",line_map_macro,n_tokens> n_tokens;
	 generic_field_name <"macro_locations",line_map_macro,macro_locations> macro_locations;
	 generic_field_name <"expansion",line_map_macro,expansion> expansion;
}; 
class CLS_211_line_map_ordinary{ 
	 generic_class_name <"line_map_ordinary",line_map_ordinary> the_class_name;
	 generic_field_name <"to_file",line_map_ordinary,to_file> to_file;
	 generic_field_name <"to_line",line_map_ordinary,to_line> to_line;
	 generic_field_name <"included_from",line_map_ordinary,included_from> included_from;
	 generic_field_name <"sysp",line_map_ordinary,sysp> sysp;
	 generic_field_name <"column_bits",line_map_ordinary,column_bits> column_bits;
}; 
class CLS_212_line_map_macro{ 
	 generic_class_name <"line_map_macro",line_map_macro> the_class_name;
	 generic_field_name <"macro",line_map_macro,macro> macro;
	 generic_field_name <"n_tokens",line_map_macro,n_tokens> n_tokens;
	 generic_field_name <"macro_locations",line_map_macro,macro_locations> macro_locations;
	 generic_field_name <"expansion",line_map_macro,expansion> expansion;
}; 
class CLS_213_line_map{ 
	 generic_class_name <"line_map",line_map> the_class_name;
	 generic_field_name <"start_location",line_map,start_location> start_location;
	 generic_field_name <"reason",line_map,reason> reason;
	 generic_field_name <"d",line_map,d> d;
}; 
class CLS_214_line_map{ 
	 generic_class_name <"line_map",line_map> the_class_name;
	 generic_field_name <"start_location",line_map,start_location> start_location;
	 generic_field_name <"reason",line_map,reason> reason;
	 generic_field_name <"d",line_map,d> d;
}; 
class CLS_215_maps_info{ 
	 generic_class_name <"maps_info",maps_info> the_class_name;
	 generic_field_name <"maps",maps_info,maps> maps;
	 generic_field_name <"allocated",maps_info,allocated> allocated;
	 generic_field_name <"used",maps_info,used> used;
	 generic_field_name <"cache",maps_info,cache> cache;
}; 
class CLS_216_maps_info{ 
	 generic_class_name <"maps_info",maps_info> the_class_name;
	 generic_field_name <"maps",maps_info,maps> maps;
	 generic_field_name <"allocated",maps_info,allocated> allocated;
	 generic_field_name <"used",maps_info,used> used;
	 generic_field_name <"cache",maps_info,cache> cache;
}; 
class CLS_217_maps_info{ 
	 generic_class_name <"maps_info",maps_info> the_class_name;
	 generic_field_name <"maps",maps_info,maps> maps;
	 generic_field_name <"allocated",maps_info,allocated> allocated;
	 generic_field_name <"used",maps_info,used> used;
	 generic_field_name <"cache",maps_info,cache> cache;
}; 
class CLS_218_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_219_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_220_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_221_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_222_line_map{ 
	 generic_class_name <"line_map",line_map> the_class_name;
	 generic_field_name <"start_location",line_map,start_location> start_location;
	 generic_field_name <"reason",line_map,reason> reason;
	 generic_field_name <"d",line_map,d> d;
}; 
class CLS_223_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_224_line_map{ 
	 generic_class_name <"line_map",line_map> the_class_name;
	 generic_field_name <"start_location",line_map,start_location> start_location;
	 generic_field_name <"reason",line_map,reason> reason;
	 generic_field_name <"d",line_map,d> d;
}; 
class CLS_225_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_226_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_227_line_map{ 
	 generic_class_name <"line_map",line_map> the_class_name;
	 generic_field_name <"start_location",line_map,start_location> start_location;
	 generic_field_name <"reason",line_map,reason> reason;
	 generic_field_name <"d",line_map,d> d;
}; 
class CLS_228_line_map{ 
	 generic_class_name <"line_map",line_map> the_class_name;
	 generic_field_name <"start_location",line_map,start_location> start_location;
	 generic_field_name <"reason",line_map,reason> reason;
	 generic_field_name <"d",line_map,d> d;
}; 
class CLS_229_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_230_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_231_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_232_line_map{ 
	 generic_class_name <"line_map",line_map> the_class_name;
	 generic_field_name <"start_location",line_map,start_location> start_location;
	 generic_field_name <"reason",line_map,reason> reason;
	 generic_field_name <"d",line_map,d> d;
}; 
class CLS_233_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_234_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_235_line_map{ 
	 generic_class_name <"line_map",line_map> the_class_name;
	 generic_field_name <"start_location",line_map,start_location> start_location;
	 generic_field_name <"reason",line_map,reason> reason;
	 generic_field_name <"d",line_map,d> d;
}; 
class CLS_236_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_237_line_map{ 
	 generic_class_name <"line_map",line_map> the_class_name;
	 generic_field_name <"start_location",line_map,start_location> start_location;
	 generic_field_name <"reason",line_map,reason> reason;
	 generic_field_name <"d",line_map,d> d;
}; 
class CLS_238_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_239_line_map{ 
	 generic_class_name <"line_map",line_map> the_class_name;
	 generic_field_name <"start_location",line_map,start_location> start_location;
	 generic_field_name <"reason",line_map,reason> reason;
	 generic_field_name <"d",line_map,d> d;
}; 
class CLS_240_linemap_stats{ 
	 generic_class_name <"linemap_stats",linemap_stats> the_class_name;
	 generic_field_name <"num_ordinary_maps_allocated",linemap_stats,num_ordinary_maps_allocated> num_ordinary_maps_allocated;
	 generic_field_name <"num_ordinary_maps_used",linemap_stats,num_ordinary_maps_used> num_ordinary_maps_used;
	 generic_field_name <"ordinary_maps_allocated_size",linemap_stats,ordinary_maps_allocated_size> ordinary_maps_allocated_size;
	 generic_field_name <"ordinary_maps_used_size",linemap_stats,ordinary_maps_used_size> ordinary_maps_used_size;
	 generic_field_name <"num_expanded_macros",linemap_stats,num_expanded_macros> num_expanded_macros;
	 generic_field_name <"num_macro_tokens",linemap_stats,num_macro_tokens> num_macro_tokens;
	 generic_field_name <"num_macro_maps_used",linemap_stats,num_macro_maps_used> num_macro_maps_used;
	 generic_field_name <"macro_maps_allocated_size",linemap_stats,macro_maps_allocated_size> macro_maps_allocated_size;
	 generic_field_name <"macro_maps_used_size",linemap_stats,macro_maps_used_size> macro_maps_used_size;
	 generic_field_name <"macro_maps_locations_size",linemap_stats,macro_maps_locations_size> macro_maps_locations_size;
	 generic_field_name <"duplicated_macro_maps_locations_size",linemap_stats,duplicated_macro_maps_locations_size> duplicated_macro_maps_locations_size;
}; 
class CLS_241_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_242_linemap_stats{ 
	 generic_class_name <"linemap_stats",linemap_stats> the_class_name;
	 generic_field_name <"num_ordinary_maps_allocated",linemap_stats,num_ordinary_maps_allocated> num_ordinary_maps_allocated;
	 generic_field_name <"num_ordinary_maps_used",linemap_stats,num_ordinary_maps_used> num_ordinary_maps_used;
	 generic_field_name <"ordinary_maps_allocated_size",linemap_stats,ordinary_maps_allocated_size> ordinary_maps_allocated_size;
	 generic_field_name <"ordinary_maps_used_size",linemap_stats,ordinary_maps_used_size> ordinary_maps_used_size;
	 generic_field_name <"num_expanded_macros",linemap_stats,num_expanded_macros> num_expanded_macros;
	 generic_field_name <"num_macro_tokens",linemap_stats,num_macro_tokens> num_macro_tokens;
	 generic_field_name <"num_macro_maps_used",linemap_stats,num_macro_maps_used> num_macro_maps_used;
	 generic_field_name <"macro_maps_allocated_size",linemap_stats,macro_maps_allocated_size> macro_maps_allocated_size;
	 generic_field_name <"macro_maps_used_size",linemap_stats,macro_maps_used_size> macro_maps_used_size;
	 generic_field_name <"macro_maps_locations_size",linemap_stats,macro_maps_locations_size> macro_maps_locations_size;
	 generic_field_name <"duplicated_macro_maps_locations_size",linemap_stats,duplicated_macro_maps_locations_size> duplicated_macro_maps_locations_size;
}; 
class CLS_243_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_244_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_245_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_246_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_247_function{ 
	 generic_class_name <"function",function> the_class_name;
}; 
class CLS_248_function{ 
	 generic_class_name <"function",function> the_class_name;
}; 
class CLS_249_function{ 
	 generic_class_name <"function",function> the_class_name;
}; 
class CLS_250_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_251_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_252_VEC_tree_base{ 
	 generic_class_name <"VEC_tree_base",VEC_tree_base> the_class_name;
	 generic_field_name <"prefix",VEC_tree_base,prefix> prefix;
	 generic_field_name <"vec",VEC_tree_base,vec> vec;
}; 
class CLS_253_VEC_tree_none{ 
	 generic_class_name <"VEC_tree_none",VEC_tree_none> the_class_name;
	 generic_field_name <"base",VEC_tree_none,base> base;
}; 
class CLS_254_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_255_VEC_tree_gc{ 
	 generic_class_name <"VEC_tree_gc",VEC_tree_gc> the_class_name;
	 generic_field_name <"base",VEC_tree_gc,base> base;
}; 
class CLS_256_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_257_VEC_tree_heap{ 
	 generic_class_name <"VEC_tree_heap",VEC_tree_heap> the_class_name;
	 generic_field_name <"base",VEC_tree_heap,base> base;
}; 
class CLS_258_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_259_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_260_VEC_gimple_base{ 
	 generic_class_name <"VEC_gimple_base",VEC_gimple_base> the_class_name;
	 generic_field_name <"prefix",VEC_gimple_base,prefix> prefix;
	 generic_field_name <"vec",VEC_gimple_base,vec> vec;
}; 
class CLS_261_VEC_gimple_none{ 
	 generic_class_name <"VEC_gimple_none",VEC_gimple_none> the_class_name;
	 generic_field_name <"base",VEC_gimple_none,base> base;
}; 
class CLS_262_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_263_VEC_gimple_heap{ 
	 generic_class_name <"VEC_gimple_heap",VEC_gimple_heap> the_class_name;
	 generic_field_name <"base",VEC_gimple_heap,base> base;
}; 
class CLS_264_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_265_VEC_gimple_gc{ 
	 generic_class_name <"VEC_gimple_gc",VEC_gimple_gc> the_class_name;
	 generic_field_name <"base",VEC_gimple_gc,base> base;
}; 
class CLS_266_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_267_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_268_VEC_gimple_p_base{ 
	 generic_class_name <"VEC_gimple_p_base",VEC_gimple_p_base> the_class_name;
	 generic_field_name <"prefix",VEC_gimple_p_base,prefix> prefix;
	 generic_field_name <"vec",VEC_gimple_p_base,vec> vec;
}; 
class CLS_269_VEC_gimple_p_none{ 
	 generic_class_name <"VEC_gimple_p_none",VEC_gimple_p_none> the_class_name;
	 generic_field_name <"base",VEC_gimple_p_none,base> base;
}; 
class CLS_270_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_271_VEC_gimple_p_heap{ 
	 generic_class_name <"VEC_gimple_p_heap",VEC_gimple_p_heap> the_class_name;
	 generic_field_name <"base",VEC_gimple_p_heap,base> base;
}; 
class CLS_272_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_273_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_274_VEC_gimple_seq_base{ 
	 generic_class_name <"VEC_gimple_seq_base",VEC_gimple_seq_base> the_class_name;
	 generic_field_name <"prefix",VEC_gimple_seq_base,prefix> prefix;
	 generic_field_name <"vec",VEC_gimple_seq_base,vec> vec;
}; 
class CLS_275_VEC_gimple_seq_none{ 
	 generic_class_name <"VEC_gimple_seq_none",VEC_gimple_seq_none> the_class_name;
	 generic_field_name <"base",VEC_gimple_seq_none,base> base;
}; 
class CLS_276_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_277_VEC_gimple_seq_gc{ 
	 generic_class_name <"VEC_gimple_seq_gc",VEC_gimple_seq_gc> the_class_name;
	 generic_field_name <"base",VEC_gimple_seq_gc,base> base;
}; 
class CLS_278_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_279_VEC_gimple_seq_heap{ 
	 generic_class_name <"VEC_gimple_seq_heap",VEC_gimple_seq_heap> the_class_name;
	 generic_field_name <"base",VEC_gimple_seq_heap,base> base;
}; 
class CLS_280_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_281_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_282_VEC_rtx_base{ 
	 generic_class_name <"VEC_rtx_base",VEC_rtx_base> the_class_name;
	 generic_field_name <"prefix",VEC_rtx_base,prefix> prefix;
	 generic_field_name <"vec",VEC_rtx_base,vec> vec;
}; 
class CLS_283_VEC_rtx_none{ 
	 generic_class_name <"VEC_rtx_none",VEC_rtx_none> the_class_name;
	 generic_field_name <"base",VEC_rtx_none,base> base;
}; 
class CLS_284_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_285_VEC_rtx_heap{ 
	 generic_class_name <"VEC_rtx_heap",VEC_rtx_heap> the_class_name;
	 generic_field_name <"base",VEC_rtx_heap,base> base;
}; 
class CLS_286_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_287_VEC_rtx_gc{ 
	 generic_class_name <"VEC_rtx_gc",VEC_rtx_gc> the_class_name;
	 generic_field_name <"base",VEC_rtx_gc,base> base;
}; 
class CLS_288_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_289_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_290_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_291_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
}; 
class CLS_292_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_293_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
}; 
class CLS_294_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_295_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_296_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_297_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_298_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_299_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_300_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_301_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_302_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_303_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_304_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_305_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_306_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_307_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_308_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_309_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_310_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_311_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_312_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_313_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_314_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_315_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_316_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_317_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_318_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_319_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_320_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_321_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_322_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_323_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_324_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_325_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_326_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_327_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_328_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_329_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_330_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_331_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_332_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_333_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_334_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_335_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_336_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_337_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_338_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_339_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_340_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_341_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_342_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_343_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_344_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_345_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_346_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_347_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_348_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_349_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_350_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_351_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_352_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_353_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_354_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_355_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_356_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_357_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_358_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_359_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_360_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_361_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_362_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_363_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_364_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_365_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_366_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_367_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_368_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_369_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_370_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_371_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_372_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_373_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_374_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_375_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_376_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_377_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_378_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_379_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_380_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_381_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_382_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_383_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_384_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_385_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_386_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_387_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_388_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_389_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_390_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_391_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_392_real_format{ 
	 generic_class_name <"real_format",real_format> the_class_name;
	 generic_field_name <"encode",real_format,encode> encode;
	 generic_field_name <"decode",real_format,decode> decode;
	 generic_field_name <"b",real_format,b> b;
	 generic_field_name <"p",real_format,p> p;
	 generic_field_name <"pnan",real_format,pnan> pnan;
	 generic_field_name <"emin",real_format,emin> emin;
	 generic_field_name <"emax",real_format,emax> emax;
	 generic_field_name <"signbit_ro",real_format,signbit_ro> signbit_ro;
	 generic_field_name <"signbit_rw",real_format,signbit_rw> signbit_rw;
	 generic_field_name <"round_towards_zero",real_format,round_towards_zero> round_towards_zero;
	 generic_field_name <"has_sign_dependent_rounding",real_format,has_sign_dependent_rounding> has_sign_dependent_rounding;
	 generic_field_name <"has_nans",real_format,has_nans> has_nans;
	 generic_field_name <"has_inf",real_format,has_inf> has_inf;
	 generic_field_name <"has_denorm",real_format,has_denorm> has_denorm;
	 generic_field_name <"has_signed_zero",real_format,has_signed_zero> has_signed_zero;
	 generic_field_name <"qnan_msb_set",real_format,qnan_msb_set> qnan_msb_set;
	 generic_field_name <"canonical_nan_lsbs_set",real_format,canonical_nan_lsbs_set> canonical_nan_lsbs_set;
}; 
class CLS_393_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_394_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_395_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_396_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_397_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_398_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_399_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_400_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_401_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_402_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_403_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_404_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_405_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_406_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_407_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_408_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_409_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_410_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_411_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_412_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_413_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_414_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_415_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_416_gcc_options{ 
	 generic_class_name <"gcc_options",gcc_options> the_class_name;
	 generic_field_name <"x_recip_mask",gcc_options,x_recip_mask> x_recip_mask;
	 generic_field_name <"x_frame_larger_than_size",gcc_options,x_frame_larger_than_size> x_frame_larger_than_size;
	 generic_field_name <"x_ix86_isa_flags",gcc_options,x_ix86_isa_flags> x_ix86_isa_flags;
	 generic_field_name <"x_ix86_isa_flags_explicit",gcc_options,x_ix86_isa_flags_explicit> x_ix86_isa_flags_explicit;
	 generic_field_name <"x_larger_than_size",gcc_options,x_larger_than_size> x_larger_than_size;
	 generic_field_name <"x_exit_after_options",gcc_options,x_exit_after_options> x_exit_after_options;
	 generic_field_name <"x_flag_dump_all_passed",gcc_options,x_flag_dump_all_passed> x_flag_dump_all_passed;
	 generic_field_name <"x_flag_opts_finished",gcc_options,x_flag_opts_finished> x_flag_opts_finished;
	 generic_field_name <"x_flag_stack_usage_info",gcc_options,x_flag_stack_usage_info> x_flag_stack_usage_info;
	 generic_field_name <"x_flag_warn_unused_result",gcc_options,x_flag_warn_unused_result> x_flag_warn_unused_result;
	 generic_field_name <"x_in_lto_p",gcc_options,x_in_lto_p> x_in_lto_p;
	 generic_field_name <"x_use_gnu_debug_info_extensions",gcc_options,x_use_gnu_debug_info_extensions> x_use_gnu_debug_info_extensions;
	 generic_field_name <"x_warn_frame_larger_than",gcc_options,x_warn_frame_larger_than> x_warn_frame_larger_than;
	 generic_field_name <"x_warn_larger_than",gcc_options,x_warn_larger_than> x_warn_larger_than;
	 generic_field_name <"x_help_enum_printed",gcc_options,x_help_enum_printed> x_help_enum_printed;
	 generic_field_name <"x_help_printed",gcc_options,x_help_printed> x_help_printed;
	 generic_field_name <"x_main_input_basename",gcc_options,x_main_input_basename> x_main_input_basename;
	 generic_field_name <"x_main_input_filename",gcc_options,x_main_input_filename> x_main_input_filename;
	 generic_field_name <"x_debug_info_level",gcc_options,x_debug_info_level> x_debug_info_level;
	 generic_field_name <"x_write_symbols",gcc_options,x_write_symbols> x_write_symbols;
	 generic_field_name <"x_debug_struct_generic",gcc_options,x_debug_struct_generic> x_debug_struct_generic;
	 generic_field_name <"x_debug_struct_ordinary",gcc_options,x_debug_struct_ordinary> x_debug_struct_ordinary;
	 generic_field_name <"x_graph_dump_format",gcc_options,x_graph_dump_format> x_graph_dump_format;
	 generic_field_name <"x_flag_stack_check",gcc_options,x_flag_stack_check> x_flag_stack_check;
	 generic_field_name <"x_user_vect_verbosity_level",gcc_options,x_user_vect_verbosity_level> x_user_vect_verbosity_level;
	 generic_field_name <"x_param_values",gcc_options,x_param_values> x_param_values;
	 generic_field_name <"x_flag_complex_method",gcc_options,x_flag_complex_method> x_flag_complex_method;
	 generic_field_name <"x_flag_debug_asm",gcc_options,x_flag_debug_asm> x_flag_debug_asm;
	 generic_field_name <"x_flag_dump_rtl_in_asm",gcc_options,x_flag_dump_rtl_in_asm> x_flag_dump_rtl_in_asm;
	 generic_field_name <"x_flag_evaluation_order",gcc_options,x_flag_evaluation_order> x_flag_evaluation_order;
	 generic_field_name <"x_flag_gen_aux_info",gcc_options,x_flag_gen_aux_info> x_flag_gen_aux_info;
	 generic_field_name <"x_flag_generate_lto",gcc_options,x_flag_generate_lto> x_flag_generate_lto;
	 generic_field_name <"x_flag_print_asm_name",gcc_options,x_flag_print_asm_name> x_flag_print_asm_name;
	 generic_field_name <"x_flag_shlib",gcc_options,x_flag_shlib> x_flag_shlib;
	 generic_field_name <"x_main_input_baselength",gcc_options,x_main_input_baselength> x_main_input_baselength;
	 generic_field_name <"x_optimize",gcc_options,x_optimize> x_optimize;
	 generic_field_name <"x_optimize_fast",gcc_options,x_optimize_fast> x_optimize_fast;
	 generic_field_name <"x_optimize_size",gcc_options,x_optimize_size> x_optimize_size;
	 generic_field_name <"x_recip_mask_explicit",gcc_options,x_recip_mask_explicit> x_recip_mask_explicit;
	 generic_field_name <"x_rtl_dump_and_exit",gcc_options,x_rtl_dump_and_exit> x_rtl_dump_and_exit;
	 generic_field_name <"x_target_flags",gcc_options,x_target_flags> x_target_flags;
	 generic_field_name <"x_help_columns",gcc_options,x_help_columns> x_help_columns;
	 generic_field_name <"x_initial_max_fld_align",gcc_options,x_initial_max_fld_align> x_initial_max_fld_align;
	 generic_field_name <"x_flag_instrument_functions_exclude_files",gcc_options,x_flag_instrument_functions_exclude_files> x_flag_instrument_functions_exclude_files;
	 generic_field_name <"x_flag_instrument_functions_exclude_functions",gcc_options,x_flag_instrument_functions_exclude_functions> x_flag_instrument_functions_exclude_functions;
	 generic_field_name <"x_help_flag",gcc_options,x_help_flag> x_help_flag;
	 generic_field_name <"x_flag_preprocess_only",gcc_options,x_flag_preprocess_only> x_flag_preprocess_only;
	 generic_field_name <"x_warn_abi",gcc_options,x_warn_abi> x_warn_abi;
	 generic_field_name <"x_warn_address",gcc_options,x_warn_address> x_warn_address;
	 generic_field_name <"x_warn_aggregate_return",gcc_options,x_warn_aggregate_return> x_warn_aggregate_return;
	 generic_field_name <"x_warn_array_bounds",gcc_options,x_warn_array_bounds> x_warn_array_bounds;
	 generic_field_name <"x_warn_assign_intercept",gcc_options,x_warn_assign_intercept> x_warn_assign_intercept;
	 generic_field_name <"x_warn_attributes",gcc_options,x_warn_attributes> x_warn_attributes;
	 generic_field_name <"x_warn_bad_function_cast",gcc_options,x_warn_bad_function_cast> x_warn_bad_function_cast;
	 generic_field_name <"x_warn_cxx_compat",gcc_options,x_warn_cxx_compat> x_warn_cxx_compat;
	 generic_field_name <"x_warn_cxx0x_compat",gcc_options,x_warn_cxx0x_compat> x_warn_cxx0x_compat;
	 generic_field_name <"x_warn_cast_align",gcc_options,x_warn_cast_align> x_warn_cast_align;
	 generic_field_name <"x_warn_cast_qual",gcc_options,x_warn_cast_qual> x_warn_cast_qual;
	 generic_field_name <"x_warn_char_subscripts",gcc_options,x_warn_char_subscripts> x_warn_char_subscripts;
	 generic_field_name <"x_warn_clobbered",gcc_options,x_warn_clobbered> x_warn_clobbered;
	 generic_field_name <"x_warn_conversion",gcc_options,x_warn_conversion> x_warn_conversion;
	 generic_field_name <"x_warn_conversion_null",gcc_options,x_warn_conversion_null> x_warn_conversion_null;
	 generic_field_name <"x_warn_coverage_mismatch",gcc_options,x_warn_coverage_mismatch> x_warn_coverage_mismatch;
	 generic_field_name <"x_warn_cpp",gcc_options,x_warn_cpp> x_warn_cpp;
	 generic_field_name <"x_warn_ctor_dtor_privacy",gcc_options,x_warn_ctor_dtor_privacy> x_warn_ctor_dtor_privacy;
	 generic_field_name <"x_warn_declaration_after_statement",gcc_options,x_warn_declaration_after_statement> x_warn_declaration_after_statement;
	 generic_field_name <"x_warn_delnonvdtor",gcc_options,x_warn_delnonvdtor> x_warn_delnonvdtor;
	 generic_field_name <"x_warn_deprecated",gcc_options,x_warn_deprecated> x_warn_deprecated;
	 generic_field_name <"x_warn_deprecated_decl",gcc_options,x_warn_deprecated_decl> x_warn_deprecated_decl;
	 generic_field_name <"x_warn_disabled_optimization",gcc_options,x_warn_disabled_optimization> x_warn_disabled_optimization;
	 generic_field_name <"x_warn_div_by_zero",gcc_options,x_warn_div_by_zero> x_warn_div_by_zero;
	 generic_field_name <"x_warn_double_promotion",gcc_options,x_warn_double_promotion> x_warn_double_promotion;
	 generic_field_name <"x_warn_ecpp",gcc_options,x_warn_ecpp> x_warn_ecpp;
	 generic_field_name <"x_warn_empty_body",gcc_options,x_warn_empty_body> x_warn_empty_body;
	 generic_field_name <"x_warn_enum_compare",gcc_options,x_warn_enum_compare> x_warn_enum_compare;
	 generic_field_name <"x_warnings_are_errors",gcc_options,x_warnings_are_errors> x_warnings_are_errors;
	 generic_field_name <"x_extra_warnings",gcc_options,x_extra_warnings> x_extra_warnings;
	 generic_field_name <"x_flag_extraneous_semicolon",gcc_options,x_flag_extraneous_semicolon> x_flag_extraneous_semicolon;
	 generic_field_name <"x_flag_fatal_errors",gcc_options,x_flag_fatal_errors> x_flag_fatal_errors;
	 generic_field_name <"x_warn_float_equal",gcc_options,x_warn_float_equal> x_warn_float_equal;
	 generic_field_name <"x_warn_format_contains_nul",gcc_options,x_warn_format_contains_nul> x_warn_format_contains_nul;
	 generic_field_name <"x_warn_format_extra_args",gcc_options,x_warn_format_extra_args> x_warn_format_extra_args;
	 generic_field_name <"x_warn_format_nonliteral",gcc_options,x_warn_format_nonliteral> x_warn_format_nonliteral;
	 generic_field_name <"x_warn_format_security",gcc_options,x_warn_format_security> x_warn_format_security;
	 generic_field_name <"x_warn_format_y2k",gcc_options,x_warn_format_y2k> x_warn_format_y2k;
	 generic_field_name <"x_warn_format_zero_length",gcc_options,x_warn_format_zero_length> x_warn_format_zero_length;
	 generic_field_name <"x_warn_free_nonheap_object",gcc_options,x_warn_free_nonheap_object> x_warn_free_nonheap_object;
	 generic_field_name <"x_warn_ignored_qualifiers",gcc_options,x_warn_ignored_qualifiers> x_warn_ignored_qualifiers;
	 generic_field_name <"x_warn_implicit",gcc_options,x_warn_implicit> x_warn_implicit;
	 generic_field_name <"x_warn_implicit_function_declaration",gcc_options,x_warn_implicit_function_declaration> x_warn_implicit_function_declaration;
	 generic_field_name <"x_warn_implicit_int",gcc_options,x_warn_implicit_int> x_warn_implicit_int;
	 generic_field_name <"x_warn_init_self",gcc_options,x_warn_init_self> x_warn_init_self;
	 generic_field_name <"x_warn_inline",gcc_options,x_warn_inline> x_warn_inline;
	 generic_field_name <"x_warn_int_to_pointer_cast",gcc_options,x_warn_int_to_pointer_cast> x_warn_int_to_pointer_cast;
	 generic_field_name <"x_warn_invalid_memory_model",gcc_options,x_warn_invalid_memory_model> x_warn_invalid_memory_model;
	 generic_field_name <"x_warn_invalid_offsetof",gcc_options,x_warn_invalid_offsetof> x_warn_invalid_offsetof;
	 generic_field_name <"x_warn_jump_misses_init",gcc_options,x_warn_jump_misses_init> x_warn_jump_misses_init;
	 generic_field_name <"x_warn_logical_op",gcc_options,x_warn_logical_op> x_warn_logical_op;
	 generic_field_name <"x_warn_long_long",gcc_options,x_warn_long_long> x_warn_long_long;
	 generic_field_name <"x_warn_main",gcc_options,x_warn_main> x_warn_main;
	 generic_field_name <"x_warn_maybe_uninitialized",gcc_options,x_warn_maybe_uninitialized> x_warn_maybe_uninitialized;
	 generic_field_name <"x_warn_missing_braces",gcc_options,x_warn_missing_braces> x_warn_missing_braces;
	 generic_field_name <"x_warn_missing_declarations",gcc_options,x_warn_missing_declarations> x_warn_missing_declarations;
	 generic_field_name <"x_warn_missing_field_initializers",gcc_options,x_warn_missing_field_initializers> x_warn_missing_field_initializers;
	 generic_field_name <"x_warn_missing_format_attribute",gcc_options,x_warn_missing_format_attribute> x_warn_missing_format_attribute;
	 generic_field_name <"x_warn_missing_noreturn",gcc_options,x_warn_missing_noreturn> x_warn_missing_noreturn;
	 generic_field_name <"x_warn_missing_parameter_type",gcc_options,x_warn_missing_parameter_type> x_warn_missing_parameter_type;
	 generic_field_name <"x_warn_missing_prototypes",gcc_options,x_warn_missing_prototypes> x_warn_missing_prototypes;
	 generic_field_name <"x_warn_mudflap",gcc_options,x_warn_mudflap> x_warn_mudflap;
	 generic_field_name <"x_warn_narrowing",gcc_options,x_warn_narrowing> x_warn_narrowing;
	 generic_field_name <"x_warn_nested_externs",gcc_options,x_warn_nested_externs> x_warn_nested_externs;
	 generic_field_name <"x_warn_noexcept",gcc_options,x_warn_noexcept> x_warn_noexcept;
	 generic_field_name <"x_warn_nontemplate_friend",gcc_options,x_warn_nontemplate_friend> x_warn_nontemplate_friend;
	 generic_field_name <"x_warn_nonvdtor",gcc_options,x_warn_nonvdtor> x_warn_nonvdtor;
	 generic_field_name <"x_warn_nonnull",gcc_options,x_warn_nonnull> x_warn_nonnull;
	 generic_field_name <"x_warn_old_style_cast",gcc_options,x_warn_old_style_cast> x_warn_old_style_cast;
	 generic_field_name <"x_warn_old_style_declaration",gcc_options,x_warn_old_style_declaration> x_warn_old_style_declaration;
	 generic_field_name <"x_warn_old_style_definition",gcc_options,x_warn_old_style_definition> x_warn_old_style_definition;
	 generic_field_name <"x_flag_newer",gcc_options,x_flag_newer> x_flag_newer;
	 generic_field_name <"x_warn_overflow",gcc_options,x_warn_overflow> x_warn_overflow;
	 generic_field_name <"x_warn_overlength_strings",gcc_options,x_warn_overlength_strings> x_warn_overlength_strings;
	 generic_field_name <"x_warn_overloaded_virtual",gcc_options,x_warn_overloaded_virtual> x_warn_overloaded_virtual;
	 generic_field_name <"x_warn_override_init",gcc_options,x_warn_override_init> x_warn_override_init;
	 generic_field_name <"x_warn_packed",gcc_options,x_warn_packed> x_warn_packed;
	 generic_field_name <"x_warn_packed_bitfield_compat",gcc_options,x_warn_packed_bitfield_compat> x_warn_packed_bitfield_compat;
	 generic_field_name <"x_warn_padded",gcc_options,x_warn_padded> x_warn_padded;
	 generic_field_name <"x_warn_parentheses",gcc_options,x_warn_parentheses> x_warn_parentheses;
	 generic_field_name <"x_warn_pmf2ptr",gcc_options,x_warn_pmf2ptr> x_warn_pmf2ptr;
	 generic_field_name <"x_warn_pointer_arith",gcc_options,x_warn_pointer_arith> x_warn_pointer_arith;
	 generic_field_name <"x_warn_pointer_sign",gcc_options,x_warn_pointer_sign> x_warn_pointer_sign;
	 generic_field_name <"x_warn_pointer_to_int_cast",gcc_options,x_warn_pointer_to_int_cast> x_warn_pointer_to_int_cast;
	 generic_field_name <"x_warn_pragmas",gcc_options,x_warn_pragmas> x_warn_pragmas;
	 generic_field_name <"x_warn_property_assign_default",gcc_options,x_warn_property_assign_default> x_warn_property_assign_default;
	 generic_field_name <"x_warn_protocol",gcc_options,x_warn_protocol> x_warn_protocol;
	 generic_field_name <"x_warn_psabi",gcc_options,x_warn_psabi> x_warn_psabi;
	 generic_field_name <"x_warn_redundant_decls",gcc_options,x_warn_redundant_decls> x_warn_redundant_decls;
	 generic_field_name <"x_flag_redundant",gcc_options,x_flag_redundant> x_flag_redundant;
	 generic_field_name <"x_warn_reorder",gcc_options,x_warn_reorder> x_warn_reorder;
	 generic_field_name <"x_warn_return_type",gcc_options,x_warn_return_type> x_warn_return_type;
	 generic_field_name <"x_warn_selector",gcc_options,x_warn_selector> x_warn_selector;
	 generic_field_name <"x_warn_sequence_point",gcc_options,x_warn_sequence_point> x_warn_sequence_point;
	 generic_field_name <"x_warn_shadow",gcc_options,x_warn_shadow> x_warn_shadow;
	 generic_field_name <"x_warn_sign_compare",gcc_options,x_warn_sign_compare> x_warn_sign_compare;
	 generic_field_name <"x_warn_sign_conversion",gcc_options,x_warn_sign_conversion> x_warn_sign_conversion;
	 generic_field_name <"x_warn_sign_promo",gcc_options,x_warn_sign_promo> x_warn_sign_promo;
	 generic_field_name <"x_warn_stack_protect",gcc_options,x_warn_stack_protect> x_warn_stack_protect;
	 generic_field_name <"x_warn_stack_usage",gcc_options,x_warn_stack_usage> x_warn_stack_usage;
	 generic_field_name <"x_warn_strict_aliasing",gcc_options,x_warn_strict_aliasing> x_warn_strict_aliasing;
	 generic_field_name <"x_warn_strict_null_sentinel",gcc_options,x_warn_strict_null_sentinel> x_warn_strict_null_sentinel;
	 generic_field_name <"x_warn_strict_overflow",gcc_options,x_warn_strict_overflow> x_warn_strict_overflow;
	 generic_field_name <"x_warn_strict_prototypes",gcc_options,x_warn_strict_prototypes> x_warn_strict_prototypes;
	 generic_field_name <"x_warn_strict_selector_match",gcc_options,x_warn_strict_selector_match> x_warn_strict_selector_match;
	 generic_field_name <"x_warn_suggest_attribute_const",gcc_options,x_warn_suggest_attribute_const> x_warn_suggest_attribute_const;
	 generic_field_name <"x_warn_suggest_attribute_noreturn",gcc_options,x_warn_suggest_attribute_noreturn> x_warn_suggest_attribute_noreturn;
	 generic_field_name <"x_warn_suggest_attribute_pure",gcc_options,x_warn_suggest_attribute_pure> x_warn_suggest_attribute_pure;
	 generic_field_name <"x_warn_switch",gcc_options,x_warn_switch> x_warn_switch;
	 generic_field_name <"x_warn_switch_default",gcc_options,x_warn_switch_default> x_warn_switch_default;
	 generic_field_name <"x_warn_switch_enum",gcc_options,x_warn_switch_enum> x_warn_switch_enum;
	 generic_field_name <"x_warn_sync_nand",gcc_options,x_warn_sync_nand> x_warn_sync_nand;
	 generic_field_name <"x_warn_synth",gcc_options,x_warn_synth> x_warn_synth;
	 generic_field_name <"x_warn_system_headers",gcc_options,x_warn_system_headers> x_warn_system_headers;
	 generic_field_name <"x_warn_traditional",gcc_options,x_warn_traditional> x_warn_traditional;
	 generic_field_name <"x_warn_traditional_conversion",gcc_options,x_warn_traditional_conversion> x_warn_traditional_conversion;
	 generic_field_name <"x_warn_trampolines",gcc_options,x_warn_trampolines> x_warn_trampolines;
	 generic_field_name <"x_warn_type_limits",gcc_options,x_warn_type_limits> x_warn_type_limits;
	 generic_field_name <"x_warn_undeclared_selector",gcc_options,x_warn_undeclared_selector> x_warn_undeclared_selector;
	 generic_field_name <"x_warn_uninitialized",gcc_options,x_warn_uninitialized> x_warn_uninitialized;
	 generic_field_name <"x_warn_unsafe_loop_optimizations",gcc_options,x_warn_unsafe_loop_optimizations> x_warn_unsafe_loop_optimizations;
	 generic_field_name <"x_warn_unsuffixed_float_constants",gcc_options,x_warn_unsuffixed_float_constants> x_warn_unsuffixed_float_constants;
	 generic_field_name <"x_warn_unused",gcc_options,x_warn_unused> x_warn_unused;
	 generic_field_name <"x_warn_unused_but_set_parameter",gcc_options,x_warn_unused_but_set_parameter> x_warn_unused_but_set_parameter;
	 generic_field_name <"x_warn_unused_but_set_variable",gcc_options,x_warn_unused_but_set_variable> x_warn_unused_but_set_variable;
	 generic_field_name <"x_warn_unused_function",gcc_options,x_warn_unused_function> x_warn_unused_function;
	 generic_field_name <"x_warn_unused_label",gcc_options,x_warn_unused_label> x_warn_unused_label;
	 generic_field_name <"x_warn_unused_local_typedefs",gcc_options,x_warn_unused_local_typedefs> x_warn_unused_local_typedefs;
	 generic_field_name <"x_warn_unused_parameter",gcc_options,x_warn_unused_parameter> x_warn_unused_parameter;
	 generic_field_name <"x_warn_unused_result",gcc_options,x_warn_unused_result> x_warn_unused_result;
	 generic_field_name <"x_warn_unused_value",gcc_options,x_warn_unused_value> x_warn_unused_value;
	 generic_field_name <"x_warn_unused_variable",gcc_options,x_warn_unused_variable> x_warn_unused_variable;
	 generic_field_name <"x_warn_vector_operation_performance",gcc_options,x_warn_vector_operation_performance> x_warn_vector_operation_performance;
	 generic_field_name <"x_warn_vla",gcc_options,x_warn_vla> x_warn_vla;
	 generic_field_name <"x_warn_volatile_register_var",gcc_options,x_warn_volatile_register_var> x_warn_volatile_register_var;
	 generic_field_name <"x_warn_write_strings",gcc_options,x_warn_write_strings> x_warn_write_strings;
	 generic_field_name <"x_warn_zero_as_null_pointer_constant",gcc_options,x_warn_zero_as_null_pointer_constant> x_warn_zero_as_null_pointer_constant;
	 generic_field_name <"x_aux_info_file_name",gcc_options,x_aux_info_file_name> x_aux_info_file_name;
	 generic_field_name <"x_aux_base_name",gcc_options,x_aux_base_name> x_aux_base_name;
	 generic_field_name <"x_dump_base_name",gcc_options,x_dump_base_name> x_dump_base_name;
	 generic_field_name <"x_dump_dir_name",gcc_options,x_dump_dir_name> x_dump_dir_name;
	 generic_field_name <"x_flag_pic",gcc_options,x_flag_pic> x_flag_pic;
	 generic_field_name <"x_flag_pie",gcc_options,x_flag_pie> x_flag_pie;
	 generic_field_name <"x_flag_abi_version",gcc_options,x_flag_abi_version> x_flag_abi_version;
	 generic_field_name <"x_flag_access_control",gcc_options,x_flag_access_control> x_flag_access_control;
	 generic_field_name <"x_align_functions",gcc_options,x_align_functions> x_align_functions;
	 generic_field_name <"x_align_jumps",gcc_options,x_align_jumps> x_align_jumps;
	 generic_field_name <"x_align_labels",gcc_options,x_align_labels> x_align_labels;
	 generic_field_name <"x_align_loops",gcc_options,x_align_loops> x_align_loops;
	 generic_field_name <"x_flag_allow_parameterless_variadic_functions",gcc_options,x_flag_allow_parameterless_variadic_functions> x_flag_allow_parameterless_variadic_functions;
	 generic_field_name <"x_flag_no_asm",gcc_options,x_flag_no_asm> x_flag_no_asm;
	 generic_field_name <"x_flag_assert",gcc_options,x_flag_assert> x_flag_assert;
	 generic_field_name <"x_flag_associative_math",gcc_options,x_flag_associative_math> x_flag_associative_math;
	 generic_field_name <"x_flag_asynchronous_unwind_tables",gcc_options,x_flag_asynchronous_unwind_tables> x_flag_asynchronous_unwind_tables;
	 generic_field_name <"x_flag_auto_inc_dec",gcc_options,x_flag_auto_inc_dec> x_flag_auto_inc_dec;
	 generic_field_name <"x_flag_bootstrap_classes",gcc_options,x_flag_bootstrap_classes> x_flag_bootstrap_classes;
	 generic_field_name <"x_flag_bounds_check",gcc_options,x_flag_bounds_check> x_flag_bounds_check;
	 generic_field_name <"x_flag_branch_on_count_reg",gcc_options,x_flag_branch_on_count_reg> x_flag_branch_on_count_reg;
	 generic_field_name <"x_flag_branch_probabilities",gcc_options,x_flag_branch_probabilities> x_flag_branch_probabilities;
	 generic_field_name <"x_flag_branch_target_load_optimize",gcc_options,x_flag_branch_target_load_optimize> x_flag_branch_target_load_optimize;
	 generic_field_name <"x_flag_branch_target_load_optimize2",gcc_options,x_flag_branch_target_load_optimize2> x_flag_branch_target_load_optimize2;
	 generic_field_name <"x_flag_btr_bb_exclusive",gcc_options,x_flag_btr_bb_exclusive> x_flag_btr_bb_exclusive;
	 generic_field_name <"x_flag_building_libgcc",gcc_options,x_flag_building_libgcc> x_flag_building_libgcc;
	 generic_field_name <"x_flag_no_builtin",gcc_options,x_flag_no_builtin> x_flag_no_builtin;
	 generic_field_name <"x_common_deferred_options",gcc_options,x_common_deferred_options> x_common_deferred_options;
	 generic_field_name <"x_flag_caller_saves",gcc_options,x_flag_caller_saves> x_flag_caller_saves;
	 generic_field_name <"x_flag_check_data_deps",gcc_options,x_flag_check_data_deps> x_flag_check_data_deps;
	 generic_field_name <"x_flag_check_new",gcc_options,x_flag_check_new> x_flag_check_new;
	 generic_field_name <"x_flag_check_references",gcc_options,x_flag_check_references> x_flag_check_references;
	 generic_field_name <"x_flag_combine_stack_adjustments",gcc_options,x_flag_combine_stack_adjustments> x_flag_combine_stack_adjustments;
	 generic_field_name <"x_flag_no_common",gcc_options,x_flag_no_common> x_flag_no_common;
	 generic_field_name <"x_flag_compare_debug",gcc_options,x_flag_compare_debug> x_flag_compare_debug;
	 generic_field_name <"x_flag_compare_debug_opt",gcc_options,x_flag_compare_debug_opt> x_flag_compare_debug_opt;
	 generic_field_name <"x_flag_compare_elim_after_reload",gcc_options,x_flag_compare_elim_after_reload> x_flag_compare_elim_after_reload;
	 generic_field_name <"x_flag_conserve_space",gcc_options,x_flag_conserve_space> x_flag_conserve_space;
	 generic_field_name <"x_flag_conserve_stack",gcc_options,x_flag_conserve_stack> x_flag_conserve_stack;
	 generic_field_name <"x_max_constexpr_depth",gcc_options,x_max_constexpr_depth> x_max_constexpr_depth;
	 generic_field_name <"x_flag_cprop_registers",gcc_options,x_flag_cprop_registers> x_flag_cprop_registers;
	 generic_field_name <"x_flag_crossjumping",gcc_options,x_flag_crossjumping> x_flag_crossjumping;
	 generic_field_name <"x_flag_cse_follow_jumps",gcc_options,x_flag_cse_follow_jumps> x_flag_cse_follow_jumps;
	 generic_field_name <"x_flag_cx_fortran_rules",gcc_options,x_flag_cx_fortran_rules> x_flag_cx_fortran_rules;
	 generic_field_name <"x_flag_cx_limited_range",gcc_options,x_flag_cx_limited_range> x_flag_cx_limited_range;
	 generic_field_name <"x_flag_data_sections",gcc_options,x_flag_data_sections> x_flag_data_sections;
	 generic_field_name <"x_flag_dce",gcc_options,x_flag_dce> x_flag_dce;
	 generic_field_name <"x_flag_debug_types_section",gcc_options,x_flag_debug_types_section> x_flag_debug_types_section;
	 generic_field_name <"x_flag_deduce_init_list",gcc_options,x_flag_deduce_init_list> x_flag_deduce_init_list;
	 generic_field_name <"x_flag_defer_pop",gcc_options,x_flag_defer_pop> x_flag_defer_pop;
	 generic_field_name <"x_flag_delayed_branch",gcc_options,x_flag_delayed_branch> x_flag_delayed_branch;
	 generic_field_name <"x_flag_delete_null_pointer_checks",gcc_options,x_flag_delete_null_pointer_checks> x_flag_delete_null_pointer_checks;
	 generic_field_name <"x_flag_devirtualize",gcc_options,x_flag_devirtualize> x_flag_devirtualize;
	 generic_field_name <"x_flag_diagnostics_show_option",gcc_options,x_flag_diagnostics_show_option> x_flag_diagnostics_show_option;
	 generic_field_name <"x_flag_dse",gcc_options,x_flag_dse> x_flag_dse;
	 generic_field_name <"x_flag_dump_final_insns",gcc_options,x_flag_dump_final_insns> x_flag_dump_final_insns;
	 generic_field_name <"x_flag_dump_go_spec",gcc_options,x_flag_dump_go_spec> x_flag_dump_go_spec;
	 generic_field_name <"x_flag_dump_noaddr",gcc_options,x_flag_dump_noaddr> x_flag_dump_noaddr;
	 generic_field_name <"x_flag_dump_passes",gcc_options,x_flag_dump_passes> x_flag_dump_passes;
	 generic_field_name <"x_flag_dump_unnumbered",gcc_options,x_flag_dump_unnumbered> x_flag_dump_unnumbered;
	 generic_field_name <"x_flag_dump_unnumbered_links",gcc_options,x_flag_dump_unnumbered_links> x_flag_dump_unnumbered_links;
	 generic_field_name <"x_flag_dwarf2_cfi_asm",gcc_options,x_flag_dwarf2_cfi_asm> x_flag_dwarf2_cfi_asm;
	 generic_field_name <"x_flag_early_inlining",gcc_options,x_flag_early_inlining> x_flag_early_inlining;
	 generic_field_name <"x_flag_elide_constructors",gcc_options,x_flag_elide_constructors> x_flag_elide_constructors;
	 generic_field_name <"x_flag_eliminate_dwarf2_dups",gcc_options,x_flag_eliminate_dwarf2_dups> x_flag_eliminate_dwarf2_dups;
	 generic_field_name <"x_flag_debug_only_used_symbols",gcc_options,x_flag_debug_only_used_symbols> x_flag_debug_only_used_symbols;
	 generic_field_name <"x_flag_eliminate_unused_debug_types",gcc_options,x_flag_eliminate_unused_debug_types> x_flag_eliminate_unused_debug_types;
	 generic_field_name <"x_flag_emit_class_debug_always",gcc_options,x_flag_emit_class_debug_always> x_flag_emit_class_debug_always;
	 generic_field_name <"x_flag_emit_class_files",gcc_options,x_flag_emit_class_files> x_flag_emit_class_files;
	 generic_field_name <"x_flag_enforce_eh_specs",gcc_options,x_flag_enforce_eh_specs> x_flag_enforce_eh_specs;
	 generic_field_name <"x_flag_exceptions",gcc_options,x_flag_exceptions> x_flag_exceptions;
	 generic_field_name <"x_flag_excess_precision_cmdline",gcc_options,x_flag_excess_precision_cmdline> x_flag_excess_precision_cmdline;
	 generic_field_name <"x_flag_expensive_optimizations",gcc_options,x_flag_expensive_optimizations> x_flag_expensive_optimizations;
	 generic_field_name <"x_flag_fat_lto_objects",gcc_options,x_flag_fat_lto_objects> x_flag_fat_lto_objects;
	 generic_field_name <"x_flag_filelist_file",gcc_options,x_flag_filelist_file> x_flag_filelist_file;
	 generic_field_name <"x_flag_finite_math_only",gcc_options,x_flag_finite_math_only> x_flag_finite_math_only;
	 generic_field_name <"x_flag_float_store",gcc_options,x_flag_float_store> x_flag_float_store;
	 generic_field_name <"x_flag_new_for_scope",gcc_options,x_flag_new_for_scope> x_flag_new_for_scope;
	 generic_field_name <"x_flag_force_classes_archive_check",gcc_options,x_flag_force_classes_archive_check> x_flag_force_classes_archive_check;
	 generic_field_name <"x_flag_forward_propagate",gcc_options,x_flag_forward_propagate> x_flag_forward_propagate;
	 generic_field_name <"x_flag_fp_contract_mode",gcc_options,x_flag_fp_contract_mode> x_flag_fp_contract_mode;
	 generic_field_name <"x_flag_friend_injection",gcc_options,x_flag_friend_injection> x_flag_friend_injection;
	 generic_field_name <"x_flag_no_function_cse",gcc_options,x_flag_no_function_cse> x_flag_no_function_cse;
	 generic_field_name <"x_flag_function_sections",gcc_options,x_flag_function_sections> x_flag_function_sections;
	 generic_field_name <"x_flag_gcse",gcc_options,x_flag_gcse> x_flag_gcse;
	 generic_field_name <"x_flag_gcse_after_reload",gcc_options,x_flag_gcse_after_reload> x_flag_gcse_after_reload;
	 generic_field_name <"x_flag_gcse_las",gcc_options,x_flag_gcse_las> x_flag_gcse_las;
	 generic_field_name <"x_flag_gcse_lm",gcc_options,x_flag_gcse_lm> x_flag_gcse_lm;
	 generic_field_name <"x_flag_gcse_sm",gcc_options,x_flag_gcse_sm> x_flag_gcse_sm;
	 generic_field_name <"x_flag_no_gnu_keywords",gcc_options,x_flag_no_gnu_keywords> x_flag_no_gnu_keywords;
	 generic_field_name <"x_flag_next_runtime",gcc_options,x_flag_next_runtime> x_flag_next_runtime;
	 generic_field_name <"x_flag_tm",gcc_options,x_flag_tm> x_flag_tm;
	 generic_field_name <"x_flag_gnu89_inline",gcc_options,x_flag_gnu89_inline> x_flag_gnu89_inline;
	 generic_field_name <"x_go_check_divide_overflow",gcc_options,x_go_check_divide_overflow> x_go_check_divide_overflow;
	 generic_field_name <"x_go_check_divide_zero",gcc_options,x_go_check_divide_zero> x_go_check_divide_zero;
	 generic_field_name <"x_flag_graphite",gcc_options,x_flag_graphite> x_flag_graphite;
	 generic_field_name <"x_flag_graphite_identity",gcc_options,x_flag_graphite_identity> x_flag_graphite_identity;
	 generic_field_name <"x_flag_guess_branch_prob",gcc_options,x_flag_guess_branch_prob> x_flag_guess_branch_prob;
	 generic_field_name <"x_flag_hash_synchronization",gcc_options,x_flag_hash_synchronization> x_flag_hash_synchronization;
	 generic_field_name <"x_flag_no_ident",gcc_options,x_flag_no_ident> x_flag_no_ident;
	 generic_field_name <"x_flag_if_conversion",gcc_options,x_flag_if_conversion> x_flag_if_conversion;
	 generic_field_name <"x_flag_if_conversion2",gcc_options,x_flag_if_conversion2> x_flag_if_conversion2;
	 generic_field_name <"x_flag_implement_inlines",gcc_options,x_flag_implement_inlines> x_flag_implement_inlines;
	 generic_field_name <"x_flag_implicit_inline_templates",gcc_options,x_flag_implicit_inline_templates> x_flag_implicit_inline_templates;
	 generic_field_name <"x_flag_implicit_templates",gcc_options,x_flag_implicit_templates> x_flag_implicit_templates;
	 generic_field_name <"x_flag_indirect_classes",gcc_options,x_flag_indirect_classes> x_flag_indirect_classes;
	 generic_field_name <"x_flag_indirect_dispatch",gcc_options,x_flag_indirect_dispatch> x_flag_indirect_dispatch;
	 generic_field_name <"x_flag_indirect_inlining",gcc_options,x_flag_indirect_inlining> x_flag_indirect_inlining;
	 generic_field_name <"x_flag_inhibit_size_directive",gcc_options,x_flag_inhibit_size_directive> x_flag_inhibit_size_directive;
	 generic_field_name <"x_flag_no_inline",gcc_options,x_flag_no_inline> x_flag_no_inline;
	 generic_field_name <"x_flag_inline_atomics",gcc_options,x_flag_inline_atomics> x_flag_inline_atomics;
	 generic_field_name <"x_flag_inline_functions",gcc_options,x_flag_inline_functions> x_flag_inline_functions;
	 generic_field_name <"x_flag_inline_functions_called_once",gcc_options,x_flag_inline_functions_called_once> x_flag_inline_functions_called_once;
	 generic_field_name <"x_flag_inline_small_functions",gcc_options,x_flag_inline_small_functions> x_flag_inline_small_functions;
	 generic_field_name <"x_flag_instrument_function_entry_exit",gcc_options,x_flag_instrument_function_entry_exit> x_flag_instrument_function_entry_exit;
	 generic_field_name <"x_flag_ipa_cp",gcc_options,x_flag_ipa_cp> x_flag_ipa_cp;
	 generic_field_name <"x_flag_ipa_cp_clone",gcc_options,x_flag_ipa_cp_clone> x_flag_ipa_cp_clone;
	 generic_field_name <"x_flag_ipa_matrix_reorg",gcc_options,x_flag_ipa_matrix_reorg> x_flag_ipa_matrix_reorg;
	 generic_field_name <"x_flag_ipa_profile",gcc_options,x_flag_ipa_profile> x_flag_ipa_profile;
	 generic_field_name <"x_flag_ipa_pta",gcc_options,x_flag_ipa_pta> x_flag_ipa_pta;
	 generic_field_name <"x_flag_ipa_pure_const",gcc_options,x_flag_ipa_pure_const> x_flag_ipa_pure_const;
	 generic_field_name <"x_flag_ipa_reference",gcc_options,x_flag_ipa_reference> x_flag_ipa_reference;
	 generic_field_name <"x_flag_ipa_sra",gcc_options,x_flag_ipa_sra> x_flag_ipa_sra;
	 generic_field_name <"x_flag_ira_algorithm",gcc_options,x_flag_ira_algorithm> x_flag_ira_algorithm;
	 generic_field_name <"x_flag_ira_loop_pressure",gcc_options,x_flag_ira_loop_pressure> x_flag_ira_loop_pressure;
	 generic_field_name <"x_flag_ira_region",gcc_options,x_flag_ira_region> x_flag_ira_region;
	 generic_field_name <"x_flag_ira_share_save_slots",gcc_options,x_flag_ira_share_save_slots> x_flag_ira_share_save_slots;
	 generic_field_name <"x_flag_ira_share_spill_slots",gcc_options,x_flag_ira_share_spill_slots> x_flag_ira_share_spill_slots;
	 generic_field_name <"x_flag_ira_verbose",gcc_options,x_flag_ira_verbose> x_flag_ira_verbose;
	 generic_field_name <"x_flag_ivopts",gcc_options,x_flag_ivopts> x_flag_ivopts;
	 generic_field_name <"x_flag_jni",gcc_options,x_flag_jni> x_flag_jni;
	 generic_field_name <"x_flag_jump_tables",gcc_options,x_flag_jump_tables> x_flag_jump_tables;
	 generic_field_name <"x_flag_keep_inline_dllexport",gcc_options,x_flag_keep_inline_dllexport> x_flag_keep_inline_dllexport;
	 generic_field_name <"x_flag_keep_inline_functions",gcc_options,x_flag_keep_inline_functions> x_flag_keep_inline_functions;
	 generic_field_name <"x_flag_keep_static_consts",gcc_options,x_flag_keep_static_consts> x_flag_keep_static_consts;
	 generic_field_name <"x_flag_lax_vector_conversions",gcc_options,x_flag_lax_vector_conversions> x_flag_lax_vector_conversions;
	 generic_field_name <"x_flag_leading_underscore",gcc_options,x_flag_leading_underscore> x_flag_leading_underscore;
	 generic_field_name <"x_flag_loop_block",gcc_options,x_flag_loop_block> x_flag_loop_block;
	 generic_field_name <"x_flag_loop_flatten",gcc_options,x_flag_loop_flatten> x_flag_loop_flatten;
	 generic_field_name <"x_flag_loop_interchange",gcc_options,x_flag_loop_interchange> x_flag_loop_interchange;
	 generic_field_name <"x_flag_loop_parallelize_all",gcc_options,x_flag_loop_parallelize_all> x_flag_loop_parallelize_all;
	 generic_field_name <"x_flag_loop_strip_mine",gcc_options,x_flag_loop_strip_mine> x_flag_loop_strip_mine;
	 generic_field_name <"x_flag_lto_compression_level",gcc_options,x_flag_lto_compression_level> x_flag_lto_compression_level;
	 generic_field_name <"x_flag_lto_partition_1to1",gcc_options,x_flag_lto_partition_1to1> x_flag_lto_partition_1to1;
	 generic_field_name <"x_flag_lto_partition_balanced",gcc_options,x_flag_lto_partition_balanced> x_flag_lto_partition_balanced;
	 generic_field_name <"x_flag_lto_partition_none",gcc_options,x_flag_lto_partition_none> x_flag_lto_partition_none;
	 generic_field_name <"x_flag_lto_report",gcc_options,x_flag_lto_report> x_flag_lto_report;
	 generic_field_name <"x_flag_lto",gcc_options,x_flag_lto> x_flag_lto;
	 generic_field_name <"x_flag_ltrans",gcc_options,x_flag_ltrans> x_flag_ltrans;
	 generic_field_name <"x_ltrans_output_list",gcc_options,x_ltrans_output_list> x_ltrans_output_list;
	 generic_field_name <"x_flag_errno_math",gcc_options,x_flag_errno_math> x_flag_errno_math;
	 generic_field_name <"x_flag_max_errors",gcc_options,x_flag_max_errors> x_flag_max_errors;
	 generic_field_name <"x_mem_report",gcc_options,x_mem_report> x_mem_report;
	 generic_field_name <"x_flag_merge_constants",gcc_options,x_flag_merge_constants> x_flag_merge_constants;
	 generic_field_name <"x_flag_merge_debug_strings",gcc_options,x_flag_merge_debug_strings> x_flag_merge_debug_strings;
	 generic_field_name <"x_flag_modulo_sched",gcc_options,x_flag_modulo_sched> x_flag_modulo_sched;
	 generic_field_name <"x_flag_modulo_sched_allow_regmoves",gcc_options,x_flag_modulo_sched_allow_regmoves> x_flag_modulo_sched_allow_regmoves;
	 generic_field_name <"x_flag_move_loop_invariants",gcc_options,x_flag_move_loop_invariants> x_flag_move_loop_invariants;
	 generic_field_name <"x_flag_ms_extensions",gcc_options,x_flag_ms_extensions> x_flag_ms_extensions;
	 generic_field_name <"x_flag_mudflap",gcc_options,x_flag_mudflap> x_flag_mudflap;
	 generic_field_name <"x_flag_mudflap_ignore_reads",gcc_options,x_flag_mudflap_ignore_reads> x_flag_mudflap_ignore_reads;
	 generic_field_name <"x_flag_nil_receivers",gcc_options,x_flag_nil_receivers> x_flag_nil_receivers;
	 generic_field_name <"x_flag_non_call_exceptions",gcc_options,x_flag_non_call_exceptions> x_flag_non_call_exceptions;
	 generic_field_name <"x_flag_no_nonansi_builtin",gcc_options,x_flag_no_nonansi_builtin> x_flag_no_nonansi_builtin;
	 generic_field_name <"x_flag_nothrow_opt",gcc_options,x_flag_nothrow_opt> x_flag_nothrow_opt;
	 generic_field_name <"x_flag_objc_abi",gcc_options,x_flag_objc_abi> x_flag_objc_abi;
	 generic_field_name <"x_flag_objc_call_cxx_cdtors",gcc_options,x_flag_objc_call_cxx_cdtors> x_flag_objc_call_cxx_cdtors;
	 generic_field_name <"x_flag_objc_direct_dispatch",gcc_options,x_flag_objc_direct_dispatch> x_flag_objc_direct_dispatch;
	 generic_field_name <"x_flag_objc_exceptions",gcc_options,x_flag_objc_exceptions> x_flag_objc_exceptions;
	 generic_field_name <"x_flag_objc_gc",gcc_options,x_flag_objc_gc> x_flag_objc_gc;
	 generic_field_name <"x_flag_objc_nilcheck",gcc_options,x_flag_objc_nilcheck> x_flag_objc_nilcheck;
	 generic_field_name <"x_flag_objc_sjlj_exceptions",gcc_options,x_flag_objc_sjlj_exceptions> x_flag_objc_sjlj_exceptions;
	 generic_field_name <"x_flag_objc1_only",gcc_options,x_flag_objc1_only> x_flag_objc1_only;
	 generic_field_name <"x_flag_omit_frame_pointer",gcc_options,x_flag_omit_frame_pointer> x_flag_omit_frame_pointer;
	 generic_field_name <"x_flag_openmp",gcc_options,x_flag_openmp> x_flag_openmp;
	 generic_field_name <"x_flag_regmove",gcc_options,x_flag_regmove> x_flag_regmove;
	 generic_field_name <"x_flag_optimize_sibling_calls",gcc_options,x_flag_optimize_sibling_calls> x_flag_optimize_sibling_calls;
	 generic_field_name <"x_flag_optimize_sci",gcc_options,x_flag_optimize_sci> x_flag_optimize_sci;
	 generic_field_name <"x_flag_optimize_strlen",gcc_options,x_flag_optimize_strlen> x_flag_optimize_strlen;
	 generic_field_name <"x_flag_pack_struct",gcc_options,x_flag_pack_struct> x_flag_pack_struct;
	 generic_field_name <"x_flag_partial_inlining",gcc_options,x_flag_partial_inlining> x_flag_partial_inlining;
	 generic_field_name <"x_flag_pcc_struct_return",gcc_options,x_flag_pcc_struct_return> x_flag_pcc_struct_return;
	 generic_field_name <"x_flag_peel_loops",gcc_options,x_flag_peel_loops> x_flag_peel_loops;
	 generic_field_name <"x_flag_no_peephole",gcc_options,x_flag_no_peephole> x_flag_no_peephole;
	 generic_field_name <"x_flag_peephole2",gcc_options,x_flag_peephole2> x_flag_peephole2;
	 generic_field_name <"x_flag_plan9_extensions",gcc_options,x_flag_plan9_extensions> x_flag_plan9_extensions;
	 generic_field_name <"x_post_ipa_mem_report",gcc_options,x_post_ipa_mem_report> x_post_ipa_mem_report;
	 generic_field_name <"x_pre_ipa_mem_report",gcc_options,x_pre_ipa_mem_report> x_pre_ipa_mem_report;
	 generic_field_name <"x_flag_predictive_commoning",gcc_options,x_flag_predictive_commoning> x_flag_predictive_commoning;
	 generic_field_name <"x_flag_prefetch_loop_arrays",gcc_options,x_flag_prefetch_loop_arrays> x_flag_prefetch_loop_arrays;
	 generic_field_name <"x_flag_pretty_templates",gcc_options,x_flag_pretty_templates> x_flag_pretty_templates;
	 generic_field_name <"x_profile_flag",gcc_options,x_profile_flag> x_profile_flag;
	 generic_field_name <"x_profile_arc_flag",gcc_options,x_profile_arc_flag> x_profile_arc_flag;
	 generic_field_name <"x_flag_profile_correction",gcc_options,x_flag_profile_correction> x_flag_profile_correction;
	 generic_field_name <"x_profile_data_prefix",gcc_options,x_profile_data_prefix> x_profile_data_prefix;
	 generic_field_name <"x_flag_profile_use",gcc_options,x_flag_profile_use> x_flag_profile_use;
	 generic_field_name <"x_flag_profile_values",gcc_options,x_flag_profile_values> x_flag_profile_values;
	 generic_field_name <"x_flag_reciprocal_math",gcc_options,x_flag_reciprocal_math> x_flag_reciprocal_math;
	 generic_field_name <"x_flag_record_gcc_switches",gcc_options,x_flag_record_gcc_switches> x_flag_record_gcc_switches;
	 generic_field_name <"x_flag_reduced_reflection",gcc_options,x_flag_reduced_reflection> x_flag_reduced_reflection;
	 generic_field_name <"x_flag_ree",gcc_options,x_flag_ree> x_flag_ree;
	 generic_field_name <"x_flag_rename_registers",gcc_options,x_flag_rename_registers> x_flag_rename_registers;
	 generic_field_name <"x_flag_reorder_blocks",gcc_options,x_flag_reorder_blocks> x_flag_reorder_blocks;
	 generic_field_name <"x_flag_reorder_blocks_and_partition",gcc_options,x_flag_reorder_blocks_and_partition> x_flag_reorder_blocks_and_partition;
	 generic_field_name <"x_flag_reorder_functions",gcc_options,x_flag_reorder_functions> x_flag_reorder_functions;
	 generic_field_name <"x_flag_replace_objc_classes",gcc_options,x_flag_replace_objc_classes> x_flag_replace_objc_classes;
	 generic_field_name <"x_go_require_return_statement",gcc_options,x_go_require_return_statement> x_go_require_return_statement;
	 generic_field_name <"x_flag_rerun_cse_after_loop",gcc_options,x_flag_rerun_cse_after_loop> x_flag_rerun_cse_after_loop;
	 generic_field_name <"x_flag_resched_modulo_sched",gcc_options,x_flag_resched_modulo_sched> x_flag_resched_modulo_sched;
	 generic_field_name <"x_flag_rounding_math",gcc_options,x_flag_rounding_math> x_flag_rounding_math;
	 generic_field_name <"x_flag_rtti",gcc_options,x_flag_rtti> x_flag_rtti;
	 generic_field_name <"x_flag_sched_critical_path_heuristic",gcc_options,x_flag_sched_critical_path_heuristic> x_flag_sched_critical_path_heuristic;
	 generic_field_name <"x_flag_sched_dep_count_heuristic",gcc_options,x_flag_sched_dep_count_heuristic> x_flag_sched_dep_count_heuristic;
	 generic_field_name <"x_flag_sched_group_heuristic",gcc_options,x_flag_sched_group_heuristic> x_flag_sched_group_heuristic;
	 generic_field_name <"x_flag_schedule_interblock",gcc_options,x_flag_schedule_interblock> x_flag_schedule_interblock;
	 generic_field_name <"x_flag_sched_last_insn_heuristic",gcc_options,x_flag_sched_last_insn_heuristic> x_flag_sched_last_insn_heuristic;
	 generic_field_name <"x_flag_sched_pressure",gcc_options,x_flag_sched_pressure> x_flag_sched_pressure;
	 generic_field_name <"x_flag_sched_pressure_algorithm",gcc_options,x_flag_sched_pressure_algorithm> x_flag_sched_pressure_algorithm;
	 generic_field_name <"x_flag_sched_rank_heuristic",gcc_options,x_flag_sched_rank_heuristic> x_flag_sched_rank_heuristic;
	 generic_field_name <"x_flag_schedule_speculative",gcc_options,x_flag_schedule_speculative> x_flag_schedule_speculative;
	 generic_field_name <"x_flag_sched_spec_insn_heuristic",gcc_options,x_flag_sched_spec_insn_heuristic> x_flag_sched_spec_insn_heuristic;
	 generic_field_name <"x_flag_schedule_speculative_load",gcc_options,x_flag_schedule_speculative_load> x_flag_schedule_speculative_load;
	 generic_field_name <"x_flag_schedule_speculative_load_dangerous",gcc_options,x_flag_schedule_speculative_load_dangerous> x_flag_schedule_speculative_load_dangerous;
	 generic_field_name <"x_flag_sched_stalled_insns",gcc_options,x_flag_sched_stalled_insns> x_flag_sched_stalled_insns;
	 generic_field_name <"x_flag_sched_stalled_insns_dep",gcc_options,x_flag_sched_stalled_insns_dep> x_flag_sched_stalled_insns_dep;
	 generic_field_name <"x_sched_verbose_param",gcc_options,x_sched_verbose_param> x_sched_verbose_param;
	 generic_field_name <"x_flag_sched2_use_superblocks",gcc_options,x_flag_sched2_use_superblocks> x_flag_sched2_use_superblocks;
	 generic_field_name <"x_flag_schedule_insns",gcc_options,x_flag_schedule_insns> x_flag_schedule_insns;
	 generic_field_name <"x_flag_schedule_insns_after_reload",gcc_options,x_flag_schedule_insns_after_reload> x_flag_schedule_insns_after_reload;
	 generic_field_name <"x_flag_section_anchors",gcc_options,x_flag_section_anchors> x_flag_section_anchors;
	 generic_field_name <"x_flag_sel_sched_pipelining",gcc_options,x_flag_sel_sched_pipelining> x_flag_sel_sched_pipelining;
	 generic_field_name <"x_flag_sel_sched_pipelining_outer_loops",gcc_options,x_flag_sel_sched_pipelining_outer_loops> x_flag_sel_sched_pipelining_outer_loops;
	 generic_field_name <"x_flag_sel_sched_reschedule_pipelined",gcc_options,x_flag_sel_sched_reschedule_pipelined> x_flag_sel_sched_reschedule_pipelined;
	 generic_field_name <"x_flag_selective_scheduling",gcc_options,x_flag_selective_scheduling> x_flag_selective_scheduling;
	 generic_field_name <"x_flag_selective_scheduling2",gcc_options,x_flag_selective_scheduling2> x_flag_selective_scheduling2;
	 generic_field_name <"x_flag_short_double",gcc_options,x_flag_short_double> x_flag_short_double;
	 generic_field_name <"x_flag_short_enums",gcc_options,x_flag_short_enums> x_flag_short_enums;
	 generic_field_name <"x_flag_short_wchar",gcc_options,x_flag_short_wchar> x_flag_short_wchar;
	 generic_field_name <"x_flag_show_column",gcc_options,x_flag_show_column> x_flag_show_column;
	 generic_field_name <"x_flag_shrink_wrap",gcc_options,x_flag_shrink_wrap> x_flag_shrink_wrap;
	 generic_field_name <"x_flag_signaling_nans",gcc_options,x_flag_signaling_nans> x_flag_signaling_nans;
	 generic_field_name <"x_flag_signed_bitfields",gcc_options,x_flag_signed_bitfields> x_flag_signed_bitfields;
	 generic_field_name <"x_flag_signed_char",gcc_options,x_flag_signed_char> x_flag_signed_char;
	 generic_field_name <"x_flag_signed_zeros",gcc_options,x_flag_signed_zeros> x_flag_signed_zeros;
	 generic_field_name <"x_flag_single_precision_constant",gcc_options,x_flag_single_precision_constant> x_flag_single_precision_constant;
	 generic_field_name <"x_flag_split_ivs_in_unroller",gcc_options,x_flag_split_ivs_in_unroller> x_flag_split_ivs_in_unroller;
	 generic_field_name <"x_flag_split_stack",gcc_options,x_flag_split_stack> x_flag_split_stack;
	 generic_field_name <"x_flag_split_wide_types",gcc_options,x_flag_split_wide_types> x_flag_split_wide_types;
	 generic_field_name <"x_flag_stack_protect",gcc_options,x_flag_stack_protect> x_flag_stack_protect;
	 generic_field_name <"x_flag_stack_usage",gcc_options,x_flag_stack_usage> x_flag_stack_usage;
	 generic_field_name <"x_flag_detailed_statistics",gcc_options,x_flag_detailed_statistics> x_flag_detailed_statistics;
	 generic_field_name <"x_flag_store_check",gcc_options,x_flag_store_check> x_flag_store_check;
	 generic_field_name <"x_flag_strict_aliasing",gcc_options,x_flag_strict_aliasing> x_flag_strict_aliasing;
	 generic_field_name <"x_flag_strict_enums",gcc_options,x_flag_strict_enums> x_flag_strict_enums;
	 generic_field_name <"x_flag_strict_overflow",gcc_options,x_flag_strict_overflow> x_flag_strict_overflow;
	 generic_field_name <"x_flag_strict_volatile_bitfields",gcc_options,x_flag_strict_volatile_bitfields> x_flag_strict_volatile_bitfields;
	 generic_field_name <"x_flag_syntax_only",gcc_options,x_flag_syntax_only> x_flag_syntax_only;
	 generic_field_name <"x_flag_test_coverage",gcc_options,x_flag_test_coverage> x_flag_test_coverage;
	 generic_field_name <"x_flag_thread_jumps",gcc_options,x_flag_thread_jumps> x_flag_thread_jumps;
	 generic_field_name <"x_flag_threadsafe_statics",gcc_options,x_flag_threadsafe_statics> x_flag_threadsafe_statics;
	 generic_field_name <"x_time_report",gcc_options,x_time_report> x_time_report;
	 generic_field_name <"x_flag_tls_default",gcc_options,x_flag_tls_default> x_flag_tls_default;
	 generic_field_name <"x_flag_toplevel_reorder",gcc_options,x_flag_toplevel_reorder> x_flag_toplevel_reorder;
	 generic_field_name <"x_flag_tracer",gcc_options,x_flag_tracer> x_flag_tracer;
	 generic_field_name <"x_flag_trapping_math",gcc_options,x_flag_trapping_math> x_flag_trapping_math;
	 generic_field_name <"x_flag_trapv",gcc_options,x_flag_trapv> x_flag_trapv;
	 generic_field_name <"x_flag_tree_bit_ccp",gcc_options,x_flag_tree_bit_ccp> x_flag_tree_bit_ccp;
	 generic_field_name <"x_flag_tree_builtin_call_dce",gcc_options,x_flag_tree_builtin_call_dce> x_flag_tree_builtin_call_dce;
	 generic_field_name <"x_flag_tree_ccp",gcc_options,x_flag_tree_ccp> x_flag_tree_ccp;
	 generic_field_name <"x_flag_tree_ch",gcc_options,x_flag_tree_ch> x_flag_tree_ch;
	 generic_field_name <"x_flag_tree_copy_prop",gcc_options,x_flag_tree_copy_prop> x_flag_tree_copy_prop;
	 generic_field_name <"x_flag_tree_copyrename",gcc_options,x_flag_tree_copyrename> x_flag_tree_copyrename;
	 generic_field_name <"x_flag_tree_cselim",gcc_options,x_flag_tree_cselim> x_flag_tree_cselim;
	 generic_field_name <"x_flag_tree_dce",gcc_options,x_flag_tree_dce> x_flag_tree_dce;
	 generic_field_name <"x_flag_tree_dom",gcc_options,x_flag_tree_dom> x_flag_tree_dom;
	 generic_field_name <"x_flag_tree_dse",gcc_options,x_flag_tree_dse> x_flag_tree_dse;
	 generic_field_name <"x_flag_tree_forwprop",gcc_options,x_flag_tree_forwprop> x_flag_tree_forwprop;
	 generic_field_name <"x_flag_tree_fre",gcc_options,x_flag_tree_fre> x_flag_tree_fre;
	 generic_field_name <"x_flag_tree_loop_distribute_patterns",gcc_options,x_flag_tree_loop_distribute_patterns> x_flag_tree_loop_distribute_patterns;
	 generic_field_name <"x_flag_tree_loop_distribution",gcc_options,x_flag_tree_loop_distribution> x_flag_tree_loop_distribution;
	 generic_field_name <"x_flag_tree_loop_if_convert",gcc_options,x_flag_tree_loop_if_convert> x_flag_tree_loop_if_convert;
	 generic_field_name <"x_flag_tree_loop_if_convert_stores",gcc_options,x_flag_tree_loop_if_convert_stores> x_flag_tree_loop_if_convert_stores;
	 generic_field_name <"x_flag_tree_loop_im",gcc_options,x_flag_tree_loop_im> x_flag_tree_loop_im;
	 generic_field_name <"x_flag_tree_loop_ivcanon",gcc_options,x_flag_tree_loop_ivcanon> x_flag_tree_loop_ivcanon;
	 generic_field_name <"x_flag_tree_loop_optimize",gcc_options,x_flag_tree_loop_optimize> x_flag_tree_loop_optimize;
	 generic_field_name <"x_flag_tree_live_range_split",gcc_options,x_flag_tree_live_range_split> x_flag_tree_live_range_split;
	 generic_field_name <"x_flag_tree_parallelize_loops",gcc_options,x_flag_tree_parallelize_loops> x_flag_tree_parallelize_loops;
	 generic_field_name <"x_flag_tree_partial_pre",gcc_options,x_flag_tree_partial_pre> x_flag_tree_partial_pre;
	 generic_field_name <"x_flag_tree_phiprop",gcc_options,x_flag_tree_phiprop> x_flag_tree_phiprop;
	 generic_field_name <"x_flag_tree_pre",gcc_options,x_flag_tree_pre> x_flag_tree_pre;
	 generic_field_name <"x_flag_tree_pta",gcc_options,x_flag_tree_pta> x_flag_tree_pta;
	 generic_field_name <"x_flag_tree_reassoc",gcc_options,x_flag_tree_reassoc> x_flag_tree_reassoc;
	 generic_field_name <"x_flag_tree_scev_cprop",gcc_options,x_flag_tree_scev_cprop> x_flag_tree_scev_cprop;
	 generic_field_name <"x_flag_tree_sink",gcc_options,x_flag_tree_sink> x_flag_tree_sink;
	 generic_field_name <"x_flag_tree_slp_vectorize",gcc_options,x_flag_tree_slp_vectorize> x_flag_tree_slp_vectorize;
	 generic_field_name <"x_flag_tree_sra",gcc_options,x_flag_tree_sra> x_flag_tree_sra;
	 generic_field_name <"x_flag_tree_switch_conversion",gcc_options,x_flag_tree_switch_conversion> x_flag_tree_switch_conversion;
	 generic_field_name <"x_flag_tree_tail_merge",gcc_options,x_flag_tree_tail_merge> x_flag_tree_tail_merge;
	 generic_field_name <"x_flag_tree_ter",gcc_options,x_flag_tree_ter> x_flag_tree_ter;
	 generic_field_name <"x_flag_tree_vect_loop_version",gcc_options,x_flag_tree_vect_loop_version> x_flag_tree_vect_loop_version;
	 generic_field_name <"x_flag_tree_vectorize",gcc_options,x_flag_tree_vectorize> x_flag_tree_vectorize;
	 generic_field_name <"x_flag_tree_vrp",gcc_options,x_flag_tree_vrp> x_flag_tree_vrp;
	 generic_field_name <"x_flag_unit_at_a_time",gcc_options,x_flag_unit_at_a_time> x_flag_unit_at_a_time;
	 generic_field_name <"x_flag_unroll_all_loops",gcc_options,x_flag_unroll_all_loops> x_flag_unroll_all_loops;
	 generic_field_name <"x_flag_unroll_loops",gcc_options,x_flag_unroll_loops> x_flag_unroll_loops;
	 generic_field_name <"x_flag_unsafe_loop_optimizations",gcc_options,x_flag_unsafe_loop_optimizations> x_flag_unsafe_loop_optimizations;
	 generic_field_name <"x_flag_unsafe_math_optimizations",gcc_options,x_flag_unsafe_math_optimizations> x_flag_unsafe_math_optimizations;
	 generic_field_name <"x_flag_unswitch_loops",gcc_options,x_flag_unswitch_loops> x_flag_unswitch_loops;
	 generic_field_name <"x_flag_unwind_tables",gcc_options,x_flag_unwind_tables> x_flag_unwind_tables;
	 generic_field_name <"x_flag_use_atomic_builtins",gcc_options,x_flag_use_atomic_builtins> x_flag_use_atomic_builtins;
	 generic_field_name <"x_flag_use_boehm_gc",gcc_options,x_flag_use_boehm_gc> x_flag_use_boehm_gc;
	 generic_field_name <"x_flag_use_cxa_atexit",gcc_options,x_flag_use_cxa_atexit> x_flag_use_cxa_atexit;
	 generic_field_name <"x_flag_use_cxa_get_exception_ptr",gcc_options,x_flag_use_cxa_get_exception_ptr> x_flag_use_cxa_get_exception_ptr;
	 generic_field_name <"x_flag_use_divide_subroutine",gcc_options,x_flag_use_divide_subroutine> x_flag_use_divide_subroutine;
	 generic_field_name <"x_flag_var_tracking",gcc_options,x_flag_var_tracking> x_flag_var_tracking;
	 generic_field_name <"x_flag_var_tracking_assignments",gcc_options,x_flag_var_tracking_assignments> x_flag_var_tracking_assignments;
	 generic_field_name <"x_flag_var_tracking_assignments_toggle",gcc_options,x_flag_var_tracking_assignments_toggle> x_flag_var_tracking_assignments_toggle;
	 generic_field_name <"x_flag_var_tracking_uninit",gcc_options,x_flag_var_tracking_uninit> x_flag_var_tracking_uninit;
	 generic_field_name <"x_flag_variable_expansion_in_unroller",gcc_options,x_flag_variable_expansion_in_unroller> x_flag_variable_expansion_in_unroller;
	 generic_field_name <"x_flag_vect_cost_model",gcc_options,x_flag_vect_cost_model> x_flag_vect_cost_model;
	 generic_field_name <"x_flag_verbose_asm",gcc_options,x_flag_verbose_asm> x_flag_verbose_asm;
	 generic_field_name <"x_flag_visibility_ms_compat",gcc_options,x_flag_visibility_ms_compat> x_flag_visibility_ms_compat;
	 generic_field_name <"x_default_visibility",gcc_options,x_default_visibility> x_default_visibility;
	 generic_field_name <"x_flag_value_profile_transformations",gcc_options,x_flag_value_profile_transformations> x_flag_value_profile_transformations;
	 generic_field_name <"x_flag_weak",gcc_options,x_flag_weak> x_flag_weak;
	 generic_field_name <"x_flag_web",gcc_options,x_flag_web> x_flag_web;
	 generic_field_name <"x_flag_whole_program",gcc_options,x_flag_whole_program> x_flag_whole_program;
	 generic_field_name <"x_flag_working_directory",gcc_options,x_flag_working_directory> x_flag_working_directory;
	 generic_field_name <"x_flag_wpa",gcc_options,x_flag_wpa> x_flag_wpa;
	 generic_field_name <"x_flag_wrapv",gcc_options,x_flag_wrapv> x_flag_wrapv;
	 generic_field_name <"x_flag_zero_initialized_in_bss",gcc_options,x_flag_zero_initialized_in_bss> x_flag_zero_initialized_in_bss;
	 generic_field_name <"x_flag_zero_link",gcc_options,x_flag_zero_link> x_flag_zero_link;
	 generic_field_name <"x_dwarf_version",gcc_options,x_dwarf_version> x_dwarf_version;
	 generic_field_name <"x_flag_gen_declaration",gcc_options,x_flag_gen_declaration> x_flag_gen_declaration;
	 generic_field_name <"x_dwarf_record_gcc_switches",gcc_options,x_dwarf_record_gcc_switches> x_dwarf_record_gcc_switches;
	 generic_field_name <"x_dwarf_strict",gcc_options,x_dwarf_strict> x_dwarf_strict;
	 generic_field_name <"x_flag_gtoggle",gcc_options,x_flag_gtoggle> x_flag_gtoggle;
	 generic_field_name <"x_imultiarch",gcc_options,x_imultiarch> x_imultiarch;
	 generic_field_name <"x_plugindir_string",gcc_options,x_plugindir_string> x_plugindir_string;
	 generic_field_name <"x_ix86_abi",gcc_options,x_ix86_abi> x_ix86_abi;
	 generic_field_name <"x_flag_android",gcc_options,x_flag_android> x_flag_android;
	 generic_field_name <"x_ix86_arch_string",gcc_options,x_ix86_arch_string> x_ix86_arch_string;
	 generic_field_name <"x_ix86_asm_dialect",gcc_options,x_ix86_asm_dialect> x_ix86_asm_dialect;
	 generic_field_name <"x_linux_libc",gcc_options,x_linux_libc> x_linux_libc;
	 generic_field_name <"x_ix86_branch_cost",gcc_options,x_ix86_branch_cost> x_ix86_branch_cost;
	 generic_field_name <"x_ix86_cmodel",gcc_options,x_ix86_cmodel> x_ix86_cmodel;
	 generic_field_name <"x_flag_dispatch_scheduler",gcc_options,x_flag_dispatch_scheduler> x_flag_dispatch_scheduler;
	 generic_field_name <"x_flag_fentry",gcc_options,x_flag_fentry> x_flag_fentry;
	 generic_field_name <"x_ix86_force_drap",gcc_options,x_ix86_force_drap> x_ix86_force_drap;
	 generic_field_name <"x_ix86_fpmath",gcc_options,x_ix86_fpmath> x_ix86_fpmath;
	 generic_field_name <"x_ix86_incoming_stack_boundary_arg",gcc_options,x_ix86_incoming_stack_boundary_arg> x_ix86_incoming_stack_boundary_arg;
	 generic_field_name <"x_ix86_section_threshold",gcc_options,x_ix86_section_threshold> x_ix86_section_threshold;
	 generic_field_name <"x_ix86_preferred_stack_boundary_arg",gcc_options,x_ix86_preferred_stack_boundary_arg> x_ix86_preferred_stack_boundary_arg;
	 generic_field_name <"x_ix86_recip_name",gcc_options,x_ix86_recip_name> x_ix86_recip_name;
	 generic_field_name <"x_ix86_regparm",gcc_options,x_ix86_regparm> x_ix86_regparm;
	 generic_field_name <"x_ix86_sse2avx",gcc_options,x_ix86_sse2avx> x_ix86_sse2avx;
	 generic_field_name <"x_ix86_force_align_arg_pointer",gcc_options,x_ix86_force_align_arg_pointer> x_ix86_force_align_arg_pointer;
	 generic_field_name <"x_ix86_stringop_alg",gcc_options,x_ix86_stringop_alg> x_ix86_stringop_alg;
	 generic_field_name <"x_ix86_tls_dialect",gcc_options,x_ix86_tls_dialect> x_ix86_tls_dialect;
	 generic_field_name <"x_ix86_tune_string",gcc_options,x_ix86_tune_string> x_ix86_tune_string;
	 generic_field_name <"x_ix86_veclibabi_type",gcc_options,x_ix86_veclibabi_type> x_ix86_veclibabi_type;
	 generic_field_name <"x_asm_file_name",gcc_options,x_asm_file_name> x_asm_file_name;
	 generic_field_name <"x_pass_exit_codes",gcc_options,x_pass_exit_codes> x_pass_exit_codes;
	 generic_field_name <"x_pedantic",gcc_options,x_pedantic> x_pedantic;
	 generic_field_name <"x_flag_pedantic_errors",gcc_options,x_flag_pedantic_errors> x_flag_pedantic_errors;
	 generic_field_name <"x_use_pipes",gcc_options,x_use_pipes> x_use_pipes;
	 generic_field_name <"x_print_file_name",gcc_options,x_print_file_name> x_print_file_name;
	 generic_field_name <"x_print_multi_directory",gcc_options,x_print_multi_directory> x_print_multi_directory;
	 generic_field_name <"x_print_multi_lib",gcc_options,x_print_multi_lib> x_print_multi_lib;
	 generic_field_name <"x_print_multi_os_directory",gcc_options,x_print_multi_os_directory> x_print_multi_os_directory;
	 generic_field_name <"x_print_multiarch",gcc_options,x_print_multiarch> x_print_multiarch;
	 generic_field_name <"x_print_prog_name",gcc_options,x_print_prog_name> x_print_prog_name;
	 generic_field_name <"x_print_search_dirs",gcc_options,x_print_search_dirs> x_print_search_dirs;
	 generic_field_name <"x_print_sysroot",gcc_options,x_print_sysroot> x_print_sysroot;
	 generic_field_name <"x_print_sysroot_headers_suffix",gcc_options,x_print_sysroot_headers_suffix> x_print_sysroot_headers_suffix;
	 generic_field_name <"x_quiet_flag",gcc_options,x_quiet_flag> x_quiet_flag;
	 generic_field_name <"x_report_times",gcc_options,x_report_times> x_report_times;
	 generic_field_name <"x_flag_undef",gcc_options,x_flag_undef> x_flag_undef;
	 generic_field_name <"x_verbose_flag",gcc_options,x_verbose_flag> x_verbose_flag;
	 generic_field_name <"x_version_flag",gcc_options,x_version_flag> x_version_flag;
	 generic_field_name <"x_inhibit_warnings",gcc_options,x_inhibit_warnings> x_inhibit_warnings;
	 generic_field_name <"x_wrapper_string",gcc_options,x_wrapper_string> x_wrapper_string;
	 generic_field_name <"x_VAR_malign_functions_",gcc_options,x_VAR_malign_functions_> x_VAR_malign_functions_;
	 generic_field_name <"x_VAR_malign_jumps_",gcc_options,x_VAR_malign_jumps_> x_VAR_malign_jumps_;
	 generic_field_name <"x_VAR_malign_loops_",gcc_options,x_VAR_malign_loops_> x_VAR_malign_loops_;
	 generic_field_name <"x_VAR_mpc32",gcc_options,x_VAR_mpc32> x_VAR_mpc32;
	 generic_field_name <"x_VAR_mpc64",gcc_options,x_VAR_mpc64> x_VAR_mpc64;
	 generic_field_name <"x_VAR_mpc80",gcc_options,x_VAR_mpc80> x_VAR_mpc80;
	 generic_field_name <"frontend_set_flag_associative_math",gcc_options,frontend_set_flag_associative_math> frontend_set_flag_associative_math;
	 generic_field_name <"frontend_set_flag_cx_limited_range",gcc_options,frontend_set_flag_cx_limited_range> frontend_set_flag_cx_limited_range;
	 generic_field_name <"frontend_set_flag_finite_math_only",gcc_options,frontend_set_flag_finite_math_only> frontend_set_flag_finite_math_only;
	 generic_field_name <"frontend_set_flag_errno_math",gcc_options,frontend_set_flag_errno_math> frontend_set_flag_errno_math;
	 generic_field_name <"frontend_set_flag_reciprocal_math",gcc_options,frontend_set_flag_reciprocal_math> frontend_set_flag_reciprocal_math;
	 generic_field_name <"frontend_set_flag_rounding_math",gcc_options,frontend_set_flag_rounding_math> frontend_set_flag_rounding_math;
	 generic_field_name <"frontend_set_flag_signaling_nans",gcc_options,frontend_set_flag_signaling_nans> frontend_set_flag_signaling_nans;
	 generic_field_name <"frontend_set_flag_signed_zeros",gcc_options,frontend_set_flag_signed_zeros> frontend_set_flag_signed_zeros;
	 generic_field_name <"frontend_set_flag_trapping_math",gcc_options,frontend_set_flag_trapping_math> frontend_set_flag_trapping_math;
	 generic_field_name <"frontend_set_flag_unsafe_math_optimizations",gcc_options,frontend_set_flag_unsafe_math_optimizations> frontend_set_flag_unsafe_math_optimizations;
}; 
class CLS_417_gcc_options{ 
	 generic_class_name <"gcc_options",gcc_options> the_class_name;
	 generic_field_name <"x_recip_mask",gcc_options,x_recip_mask> x_recip_mask;
	 generic_field_name <"x_frame_larger_than_size",gcc_options,x_frame_larger_than_size> x_frame_larger_than_size;
	 generic_field_name <"x_ix86_isa_flags",gcc_options,x_ix86_isa_flags> x_ix86_isa_flags;
	 generic_field_name <"x_ix86_isa_flags_explicit",gcc_options,x_ix86_isa_flags_explicit> x_ix86_isa_flags_explicit;
	 generic_field_name <"x_larger_than_size",gcc_options,x_larger_than_size> x_larger_than_size;
	 generic_field_name <"x_exit_after_options",gcc_options,x_exit_after_options> x_exit_after_options;
	 generic_field_name <"x_flag_dump_all_passed",gcc_options,x_flag_dump_all_passed> x_flag_dump_all_passed;
	 generic_field_name <"x_flag_opts_finished",gcc_options,x_flag_opts_finished> x_flag_opts_finished;
	 generic_field_name <"x_flag_stack_usage_info",gcc_options,x_flag_stack_usage_info> x_flag_stack_usage_info;
	 generic_field_name <"x_flag_warn_unused_result",gcc_options,x_flag_warn_unused_result> x_flag_warn_unused_result;
	 generic_field_name <"x_in_lto_p",gcc_options,x_in_lto_p> x_in_lto_p;
	 generic_field_name <"x_use_gnu_debug_info_extensions",gcc_options,x_use_gnu_debug_info_extensions> x_use_gnu_debug_info_extensions;
	 generic_field_name <"x_warn_frame_larger_than",gcc_options,x_warn_frame_larger_than> x_warn_frame_larger_than;
	 generic_field_name <"x_warn_larger_than",gcc_options,x_warn_larger_than> x_warn_larger_than;
	 generic_field_name <"x_help_enum_printed",gcc_options,x_help_enum_printed> x_help_enum_printed;
	 generic_field_name <"x_help_printed",gcc_options,x_help_printed> x_help_printed;
	 generic_field_name <"x_main_input_basename",gcc_options,x_main_input_basename> x_main_input_basename;
	 generic_field_name <"x_main_input_filename",gcc_options,x_main_input_filename> x_main_input_filename;
	 generic_field_name <"x_debug_info_level",gcc_options,x_debug_info_level> x_debug_info_level;
	 generic_field_name <"x_write_symbols",gcc_options,x_write_symbols> x_write_symbols;
	 generic_field_name <"x_debug_struct_generic",gcc_options,x_debug_struct_generic> x_debug_struct_generic;
	 generic_field_name <"x_debug_struct_ordinary",gcc_options,x_debug_struct_ordinary> x_debug_struct_ordinary;
	 generic_field_name <"x_graph_dump_format",gcc_options,x_graph_dump_format> x_graph_dump_format;
	 generic_field_name <"x_flag_stack_check",gcc_options,x_flag_stack_check> x_flag_stack_check;
	 generic_field_name <"x_user_vect_verbosity_level",gcc_options,x_user_vect_verbosity_level> x_user_vect_verbosity_level;
	 generic_field_name <"x_param_values",gcc_options,x_param_values> x_param_values;
	 generic_field_name <"x_flag_complex_method",gcc_options,x_flag_complex_method> x_flag_complex_method;
	 generic_field_name <"x_flag_debug_asm",gcc_options,x_flag_debug_asm> x_flag_debug_asm;
	 generic_field_name <"x_flag_dump_rtl_in_asm",gcc_options,x_flag_dump_rtl_in_asm> x_flag_dump_rtl_in_asm;
	 generic_field_name <"x_flag_evaluation_order",gcc_options,x_flag_evaluation_order> x_flag_evaluation_order;
	 generic_field_name <"x_flag_gen_aux_info",gcc_options,x_flag_gen_aux_info> x_flag_gen_aux_info;
	 generic_field_name <"x_flag_generate_lto",gcc_options,x_flag_generate_lto> x_flag_generate_lto;
	 generic_field_name <"x_flag_print_asm_name",gcc_options,x_flag_print_asm_name> x_flag_print_asm_name;
	 generic_field_name <"x_flag_shlib",gcc_options,x_flag_shlib> x_flag_shlib;
	 generic_field_name <"x_main_input_baselength",gcc_options,x_main_input_baselength> x_main_input_baselength;
	 generic_field_name <"x_optimize",gcc_options,x_optimize> x_optimize;
	 generic_field_name <"x_optimize_fast",gcc_options,x_optimize_fast> x_optimize_fast;
	 generic_field_name <"x_optimize_size",gcc_options,x_optimize_size> x_optimize_size;
	 generic_field_name <"x_recip_mask_explicit",gcc_options,x_recip_mask_explicit> x_recip_mask_explicit;
	 generic_field_name <"x_rtl_dump_and_exit",gcc_options,x_rtl_dump_and_exit> x_rtl_dump_and_exit;
	 generic_field_name <"x_target_flags",gcc_options,x_target_flags> x_target_flags;
	 generic_field_name <"x_help_columns",gcc_options,x_help_columns> x_help_columns;
	 generic_field_name <"x_initial_max_fld_align",gcc_options,x_initial_max_fld_align> x_initial_max_fld_align;
	 generic_field_name <"x_flag_instrument_functions_exclude_files",gcc_options,x_flag_instrument_functions_exclude_files> x_flag_instrument_functions_exclude_files;
	 generic_field_name <"x_flag_instrument_functions_exclude_functions",gcc_options,x_flag_instrument_functions_exclude_functions> x_flag_instrument_functions_exclude_functions;
	 generic_field_name <"x_help_flag",gcc_options,x_help_flag> x_help_flag;
	 generic_field_name <"x_flag_preprocess_only",gcc_options,x_flag_preprocess_only> x_flag_preprocess_only;
	 generic_field_name <"x_warn_abi",gcc_options,x_warn_abi> x_warn_abi;
	 generic_field_name <"x_warn_address",gcc_options,x_warn_address> x_warn_address;
	 generic_field_name <"x_warn_aggregate_return",gcc_options,x_warn_aggregate_return> x_warn_aggregate_return;
	 generic_field_name <"x_warn_array_bounds",gcc_options,x_warn_array_bounds> x_warn_array_bounds;
	 generic_field_name <"x_warn_assign_intercept",gcc_options,x_warn_assign_intercept> x_warn_assign_intercept;
	 generic_field_name <"x_warn_attributes",gcc_options,x_warn_attributes> x_warn_attributes;
	 generic_field_name <"x_warn_bad_function_cast",gcc_options,x_warn_bad_function_cast> x_warn_bad_function_cast;
	 generic_field_name <"x_warn_cxx_compat",gcc_options,x_warn_cxx_compat> x_warn_cxx_compat;
	 generic_field_name <"x_warn_cxx0x_compat",gcc_options,x_warn_cxx0x_compat> x_warn_cxx0x_compat;
	 generic_field_name <"x_warn_cast_align",gcc_options,x_warn_cast_align> x_warn_cast_align;
	 generic_field_name <"x_warn_cast_qual",gcc_options,x_warn_cast_qual> x_warn_cast_qual;
	 generic_field_name <"x_warn_char_subscripts",gcc_options,x_warn_char_subscripts> x_warn_char_subscripts;
	 generic_field_name <"x_warn_clobbered",gcc_options,x_warn_clobbered> x_warn_clobbered;
	 generic_field_name <"x_warn_conversion",gcc_options,x_warn_conversion> x_warn_conversion;
	 generic_field_name <"x_warn_conversion_null",gcc_options,x_warn_conversion_null> x_warn_conversion_null;
	 generic_field_name <"x_warn_coverage_mismatch",gcc_options,x_warn_coverage_mismatch> x_warn_coverage_mismatch;
	 generic_field_name <"x_warn_cpp",gcc_options,x_warn_cpp> x_warn_cpp;
	 generic_field_name <"x_warn_ctor_dtor_privacy",gcc_options,x_warn_ctor_dtor_privacy> x_warn_ctor_dtor_privacy;
	 generic_field_name <"x_warn_declaration_after_statement",gcc_options,x_warn_declaration_after_statement> x_warn_declaration_after_statement;
	 generic_field_name <"x_warn_delnonvdtor",gcc_options,x_warn_delnonvdtor> x_warn_delnonvdtor;
	 generic_field_name <"x_warn_deprecated",gcc_options,x_warn_deprecated> x_warn_deprecated;
	 generic_field_name <"x_warn_deprecated_decl",gcc_options,x_warn_deprecated_decl> x_warn_deprecated_decl;
	 generic_field_name <"x_warn_disabled_optimization",gcc_options,x_warn_disabled_optimization> x_warn_disabled_optimization;
	 generic_field_name <"x_warn_div_by_zero",gcc_options,x_warn_div_by_zero> x_warn_div_by_zero;
	 generic_field_name <"x_warn_double_promotion",gcc_options,x_warn_double_promotion> x_warn_double_promotion;
	 generic_field_name <"x_warn_ecpp",gcc_options,x_warn_ecpp> x_warn_ecpp;
	 generic_field_name <"x_warn_empty_body",gcc_options,x_warn_empty_body> x_warn_empty_body;
	 generic_field_name <"x_warn_enum_compare",gcc_options,x_warn_enum_compare> x_warn_enum_compare;
	 generic_field_name <"x_warnings_are_errors",gcc_options,x_warnings_are_errors> x_warnings_are_errors;
	 generic_field_name <"x_extra_warnings",gcc_options,x_extra_warnings> x_extra_warnings;
	 generic_field_name <"x_flag_extraneous_semicolon",gcc_options,x_flag_extraneous_semicolon> x_flag_extraneous_semicolon;
	 generic_field_name <"x_flag_fatal_errors",gcc_options,x_flag_fatal_errors> x_flag_fatal_errors;
	 generic_field_name <"x_warn_float_equal",gcc_options,x_warn_float_equal> x_warn_float_equal;
	 generic_field_name <"x_warn_format_contains_nul",gcc_options,x_warn_format_contains_nul> x_warn_format_contains_nul;
	 generic_field_name <"x_warn_format_extra_args",gcc_options,x_warn_format_extra_args> x_warn_format_extra_args;
	 generic_field_name <"x_warn_format_nonliteral",gcc_options,x_warn_format_nonliteral> x_warn_format_nonliteral;
	 generic_field_name <"x_warn_format_security",gcc_options,x_warn_format_security> x_warn_format_security;
	 generic_field_name <"x_warn_format_y2k",gcc_options,x_warn_format_y2k> x_warn_format_y2k;
	 generic_field_name <"x_warn_format_zero_length",gcc_options,x_warn_format_zero_length> x_warn_format_zero_length;
	 generic_field_name <"x_warn_free_nonheap_object",gcc_options,x_warn_free_nonheap_object> x_warn_free_nonheap_object;
	 generic_field_name <"x_warn_ignored_qualifiers",gcc_options,x_warn_ignored_qualifiers> x_warn_ignored_qualifiers;
	 generic_field_name <"x_warn_implicit",gcc_options,x_warn_implicit> x_warn_implicit;
	 generic_field_name <"x_warn_implicit_function_declaration",gcc_options,x_warn_implicit_function_declaration> x_warn_implicit_function_declaration;
	 generic_field_name <"x_warn_implicit_int",gcc_options,x_warn_implicit_int> x_warn_implicit_int;
	 generic_field_name <"x_warn_init_self",gcc_options,x_warn_init_self> x_warn_init_self;
	 generic_field_name <"x_warn_inline",gcc_options,x_warn_inline> x_warn_inline;
	 generic_field_name <"x_warn_int_to_pointer_cast",gcc_options,x_warn_int_to_pointer_cast> x_warn_int_to_pointer_cast;
	 generic_field_name <"x_warn_invalid_memory_model",gcc_options,x_warn_invalid_memory_model> x_warn_invalid_memory_model;
	 generic_field_name <"x_warn_invalid_offsetof",gcc_options,x_warn_invalid_offsetof> x_warn_invalid_offsetof;
	 generic_field_name <"x_warn_jump_misses_init",gcc_options,x_warn_jump_misses_init> x_warn_jump_misses_init;
	 generic_field_name <"x_warn_logical_op",gcc_options,x_warn_logical_op> x_warn_logical_op;
	 generic_field_name <"x_warn_long_long",gcc_options,x_warn_long_long> x_warn_long_long;
	 generic_field_name <"x_warn_main",gcc_options,x_warn_main> x_warn_main;
	 generic_field_name <"x_warn_maybe_uninitialized",gcc_options,x_warn_maybe_uninitialized> x_warn_maybe_uninitialized;
	 generic_field_name <"x_warn_missing_braces",gcc_options,x_warn_missing_braces> x_warn_missing_braces;
	 generic_field_name <"x_warn_missing_declarations",gcc_options,x_warn_missing_declarations> x_warn_missing_declarations;
	 generic_field_name <"x_warn_missing_field_initializers",gcc_options,x_warn_missing_field_initializers> x_warn_missing_field_initializers;
	 generic_field_name <"x_warn_missing_format_attribute",gcc_options,x_warn_missing_format_attribute> x_warn_missing_format_attribute;
	 generic_field_name <"x_warn_missing_noreturn",gcc_options,x_warn_missing_noreturn> x_warn_missing_noreturn;
	 generic_field_name <"x_warn_missing_parameter_type",gcc_options,x_warn_missing_parameter_type> x_warn_missing_parameter_type;
	 generic_field_name <"x_warn_missing_prototypes",gcc_options,x_warn_missing_prototypes> x_warn_missing_prototypes;
	 generic_field_name <"x_warn_mudflap",gcc_options,x_warn_mudflap> x_warn_mudflap;
	 generic_field_name <"x_warn_narrowing",gcc_options,x_warn_narrowing> x_warn_narrowing;
	 generic_field_name <"x_warn_nested_externs",gcc_options,x_warn_nested_externs> x_warn_nested_externs;
	 generic_field_name <"x_warn_noexcept",gcc_options,x_warn_noexcept> x_warn_noexcept;
	 generic_field_name <"x_warn_nontemplate_friend",gcc_options,x_warn_nontemplate_friend> x_warn_nontemplate_friend;
	 generic_field_name <"x_warn_nonvdtor",gcc_options,x_warn_nonvdtor> x_warn_nonvdtor;
	 generic_field_name <"x_warn_nonnull",gcc_options,x_warn_nonnull> x_warn_nonnull;
	 generic_field_name <"x_warn_old_style_cast",gcc_options,x_warn_old_style_cast> x_warn_old_style_cast;
	 generic_field_name <"x_warn_old_style_declaration",gcc_options,x_warn_old_style_declaration> x_warn_old_style_declaration;
	 generic_field_name <"x_warn_old_style_definition",gcc_options,x_warn_old_style_definition> x_warn_old_style_definition;
	 generic_field_name <"x_flag_newer",gcc_options,x_flag_newer> x_flag_newer;
	 generic_field_name <"x_warn_overflow",gcc_options,x_warn_overflow> x_warn_overflow;
	 generic_field_name <"x_warn_overlength_strings",gcc_options,x_warn_overlength_strings> x_warn_overlength_strings;
	 generic_field_name <"x_warn_overloaded_virtual",gcc_options,x_warn_overloaded_virtual> x_warn_overloaded_virtual;
	 generic_field_name <"x_warn_override_init",gcc_options,x_warn_override_init> x_warn_override_init;
	 generic_field_name <"x_warn_packed",gcc_options,x_warn_packed> x_warn_packed;
	 generic_field_name <"x_warn_packed_bitfield_compat",gcc_options,x_warn_packed_bitfield_compat> x_warn_packed_bitfield_compat;
	 generic_field_name <"x_warn_padded",gcc_options,x_warn_padded> x_warn_padded;
	 generic_field_name <"x_warn_parentheses",gcc_options,x_warn_parentheses> x_warn_parentheses;
	 generic_field_name <"x_warn_pmf2ptr",gcc_options,x_warn_pmf2ptr> x_warn_pmf2ptr;
	 generic_field_name <"x_warn_pointer_arith",gcc_options,x_warn_pointer_arith> x_warn_pointer_arith;
	 generic_field_name <"x_warn_pointer_sign",gcc_options,x_warn_pointer_sign> x_warn_pointer_sign;
	 generic_field_name <"x_warn_pointer_to_int_cast",gcc_options,x_warn_pointer_to_int_cast> x_warn_pointer_to_int_cast;
	 generic_field_name <"x_warn_pragmas",gcc_options,x_warn_pragmas> x_warn_pragmas;
	 generic_field_name <"x_warn_property_assign_default",gcc_options,x_warn_property_assign_default> x_warn_property_assign_default;
	 generic_field_name <"x_warn_protocol",gcc_options,x_warn_protocol> x_warn_protocol;
	 generic_field_name <"x_warn_psabi",gcc_options,x_warn_psabi> x_warn_psabi;
	 generic_field_name <"x_warn_redundant_decls",gcc_options,x_warn_redundant_decls> x_warn_redundant_decls;
	 generic_field_name <"x_flag_redundant",gcc_options,x_flag_redundant> x_flag_redundant;
	 generic_field_name <"x_warn_reorder",gcc_options,x_warn_reorder> x_warn_reorder;
	 generic_field_name <"x_warn_return_type",gcc_options,x_warn_return_type> x_warn_return_type;
	 generic_field_name <"x_warn_selector",gcc_options,x_warn_selector> x_warn_selector;
	 generic_field_name <"x_warn_sequence_point",gcc_options,x_warn_sequence_point> x_warn_sequence_point;
	 generic_field_name <"x_warn_shadow",gcc_options,x_warn_shadow> x_warn_shadow;
	 generic_field_name <"x_warn_sign_compare",gcc_options,x_warn_sign_compare> x_warn_sign_compare;
	 generic_field_name <"x_warn_sign_conversion",gcc_options,x_warn_sign_conversion> x_warn_sign_conversion;
	 generic_field_name <"x_warn_sign_promo",gcc_options,x_warn_sign_promo> x_warn_sign_promo;
	 generic_field_name <"x_warn_stack_protect",gcc_options,x_warn_stack_protect> x_warn_stack_protect;
	 generic_field_name <"x_warn_stack_usage",gcc_options,x_warn_stack_usage> x_warn_stack_usage;
	 generic_field_name <"x_warn_strict_aliasing",gcc_options,x_warn_strict_aliasing> x_warn_strict_aliasing;
	 generic_field_name <"x_warn_strict_null_sentinel",gcc_options,x_warn_strict_null_sentinel> x_warn_strict_null_sentinel;
	 generic_field_name <"x_warn_strict_overflow",gcc_options,x_warn_strict_overflow> x_warn_strict_overflow;
	 generic_field_name <"x_warn_strict_prototypes",gcc_options,x_warn_strict_prototypes> x_warn_strict_prototypes;
	 generic_field_name <"x_warn_strict_selector_match",gcc_options,x_warn_strict_selector_match> x_warn_strict_selector_match;
	 generic_field_name <"x_warn_suggest_attribute_const",gcc_options,x_warn_suggest_attribute_const> x_warn_suggest_attribute_const;
	 generic_field_name <"x_warn_suggest_attribute_noreturn",gcc_options,x_warn_suggest_attribute_noreturn> x_warn_suggest_attribute_noreturn;
	 generic_field_name <"x_warn_suggest_attribute_pure",gcc_options,x_warn_suggest_attribute_pure> x_warn_suggest_attribute_pure;
	 generic_field_name <"x_warn_switch",gcc_options,x_warn_switch> x_warn_switch;
	 generic_field_name <"x_warn_switch_default",gcc_options,x_warn_switch_default> x_warn_switch_default;
	 generic_field_name <"x_warn_switch_enum",gcc_options,x_warn_switch_enum> x_warn_switch_enum;
	 generic_field_name <"x_warn_sync_nand",gcc_options,x_warn_sync_nand> x_warn_sync_nand;
	 generic_field_name <"x_warn_synth",gcc_options,x_warn_synth> x_warn_synth;
	 generic_field_name <"x_warn_system_headers",gcc_options,x_warn_system_headers> x_warn_system_headers;
	 generic_field_name <"x_warn_traditional",gcc_options,x_warn_traditional> x_warn_traditional;
	 generic_field_name <"x_warn_traditional_conversion",gcc_options,x_warn_traditional_conversion> x_warn_traditional_conversion;
	 generic_field_name <"x_warn_trampolines",gcc_options,x_warn_trampolines> x_warn_trampolines;
	 generic_field_name <"x_warn_type_limits",gcc_options,x_warn_type_limits> x_warn_type_limits;
	 generic_field_name <"x_warn_undeclared_selector",gcc_options,x_warn_undeclared_selector> x_warn_undeclared_selector;
	 generic_field_name <"x_warn_uninitialized",gcc_options,x_warn_uninitialized> x_warn_uninitialized;
	 generic_field_name <"x_warn_unsafe_loop_optimizations",gcc_options,x_warn_unsafe_loop_optimizations> x_warn_unsafe_loop_optimizations;
	 generic_field_name <"x_warn_unsuffixed_float_constants",gcc_options,x_warn_unsuffixed_float_constants> x_warn_unsuffixed_float_constants;
	 generic_field_name <"x_warn_unused",gcc_options,x_warn_unused> x_warn_unused;
	 generic_field_name <"x_warn_unused_but_set_parameter",gcc_options,x_warn_unused_but_set_parameter> x_warn_unused_but_set_parameter;
	 generic_field_name <"x_warn_unused_but_set_variable",gcc_options,x_warn_unused_but_set_variable> x_warn_unused_but_set_variable;
	 generic_field_name <"x_warn_unused_function",gcc_options,x_warn_unused_function> x_warn_unused_function;
	 generic_field_name <"x_warn_unused_label",gcc_options,x_warn_unused_label> x_warn_unused_label;
	 generic_field_name <"x_warn_unused_local_typedefs",gcc_options,x_warn_unused_local_typedefs> x_warn_unused_local_typedefs;
	 generic_field_name <"x_warn_unused_parameter",gcc_options,x_warn_unused_parameter> x_warn_unused_parameter;
	 generic_field_name <"x_warn_unused_result",gcc_options,x_warn_unused_result> x_warn_unused_result;
	 generic_field_name <"x_warn_unused_value",gcc_options,x_warn_unused_value> x_warn_unused_value;
	 generic_field_name <"x_warn_unused_variable",gcc_options,x_warn_unused_variable> x_warn_unused_variable;
	 generic_field_name <"x_warn_vector_operation_performance",gcc_options,x_warn_vector_operation_performance> x_warn_vector_operation_performance;
	 generic_field_name <"x_warn_vla",gcc_options,x_warn_vla> x_warn_vla;
	 generic_field_name <"x_warn_volatile_register_var",gcc_options,x_warn_volatile_register_var> x_warn_volatile_register_var;
	 generic_field_name <"x_warn_write_strings",gcc_options,x_warn_write_strings> x_warn_write_strings;
	 generic_field_name <"x_warn_zero_as_null_pointer_constant",gcc_options,x_warn_zero_as_null_pointer_constant> x_warn_zero_as_null_pointer_constant;
	 generic_field_name <"x_aux_info_file_name",gcc_options,x_aux_info_file_name> x_aux_info_file_name;
	 generic_field_name <"x_aux_base_name",gcc_options,x_aux_base_name> x_aux_base_name;
	 generic_field_name <"x_dump_base_name",gcc_options,x_dump_base_name> x_dump_base_name;
	 generic_field_name <"x_dump_dir_name",gcc_options,x_dump_dir_name> x_dump_dir_name;
	 generic_field_name <"x_flag_pic",gcc_options,x_flag_pic> x_flag_pic;
	 generic_field_name <"x_flag_pie",gcc_options,x_flag_pie> x_flag_pie;
	 generic_field_name <"x_flag_abi_version",gcc_options,x_flag_abi_version> x_flag_abi_version;
	 generic_field_name <"x_flag_access_control",gcc_options,x_flag_access_control> x_flag_access_control;
	 generic_field_name <"x_align_functions",gcc_options,x_align_functions> x_align_functions;
	 generic_field_name <"x_align_jumps",gcc_options,x_align_jumps> x_align_jumps;
	 generic_field_name <"x_align_labels",gcc_options,x_align_labels> x_align_labels;
	 generic_field_name <"x_align_loops",gcc_options,x_align_loops> x_align_loops;
	 generic_field_name <"x_flag_allow_parameterless_variadic_functions",gcc_options,x_flag_allow_parameterless_variadic_functions> x_flag_allow_parameterless_variadic_functions;
	 generic_field_name <"x_flag_no_asm",gcc_options,x_flag_no_asm> x_flag_no_asm;
	 generic_field_name <"x_flag_assert",gcc_options,x_flag_assert> x_flag_assert;
	 generic_field_name <"x_flag_associative_math",gcc_options,x_flag_associative_math> x_flag_associative_math;
	 generic_field_name <"x_flag_asynchronous_unwind_tables",gcc_options,x_flag_asynchronous_unwind_tables> x_flag_asynchronous_unwind_tables;
	 generic_field_name <"x_flag_auto_inc_dec",gcc_options,x_flag_auto_inc_dec> x_flag_auto_inc_dec;
	 generic_field_name <"x_flag_bootstrap_classes",gcc_options,x_flag_bootstrap_classes> x_flag_bootstrap_classes;
	 generic_field_name <"x_flag_bounds_check",gcc_options,x_flag_bounds_check> x_flag_bounds_check;
	 generic_field_name <"x_flag_branch_on_count_reg",gcc_options,x_flag_branch_on_count_reg> x_flag_branch_on_count_reg;
	 generic_field_name <"x_flag_branch_probabilities",gcc_options,x_flag_branch_probabilities> x_flag_branch_probabilities;
	 generic_field_name <"x_flag_branch_target_load_optimize",gcc_options,x_flag_branch_target_load_optimize> x_flag_branch_target_load_optimize;
	 generic_field_name <"x_flag_branch_target_load_optimize2",gcc_options,x_flag_branch_target_load_optimize2> x_flag_branch_target_load_optimize2;
	 generic_field_name <"x_flag_btr_bb_exclusive",gcc_options,x_flag_btr_bb_exclusive> x_flag_btr_bb_exclusive;
	 generic_field_name <"x_flag_building_libgcc",gcc_options,x_flag_building_libgcc> x_flag_building_libgcc;
	 generic_field_name <"x_flag_no_builtin",gcc_options,x_flag_no_builtin> x_flag_no_builtin;
	 generic_field_name <"x_common_deferred_options",gcc_options,x_common_deferred_options> x_common_deferred_options;
	 generic_field_name <"x_flag_caller_saves",gcc_options,x_flag_caller_saves> x_flag_caller_saves;
	 generic_field_name <"x_flag_check_data_deps",gcc_options,x_flag_check_data_deps> x_flag_check_data_deps;
	 generic_field_name <"x_flag_check_new",gcc_options,x_flag_check_new> x_flag_check_new;
	 generic_field_name <"x_flag_check_references",gcc_options,x_flag_check_references> x_flag_check_references;
	 generic_field_name <"x_flag_combine_stack_adjustments",gcc_options,x_flag_combine_stack_adjustments> x_flag_combine_stack_adjustments;
	 generic_field_name <"x_flag_no_common",gcc_options,x_flag_no_common> x_flag_no_common;
	 generic_field_name <"x_flag_compare_debug",gcc_options,x_flag_compare_debug> x_flag_compare_debug;
	 generic_field_name <"x_flag_compare_debug_opt",gcc_options,x_flag_compare_debug_opt> x_flag_compare_debug_opt;
	 generic_field_name <"x_flag_compare_elim_after_reload",gcc_options,x_flag_compare_elim_after_reload> x_flag_compare_elim_after_reload;
	 generic_field_name <"x_flag_conserve_space",gcc_options,x_flag_conserve_space> x_flag_conserve_space;
	 generic_field_name <"x_flag_conserve_stack",gcc_options,x_flag_conserve_stack> x_flag_conserve_stack;
	 generic_field_name <"x_max_constexpr_depth",gcc_options,x_max_constexpr_depth> x_max_constexpr_depth;
	 generic_field_name <"x_flag_cprop_registers",gcc_options,x_flag_cprop_registers> x_flag_cprop_registers;
	 generic_field_name <"x_flag_crossjumping",gcc_options,x_flag_crossjumping> x_flag_crossjumping;
	 generic_field_name <"x_flag_cse_follow_jumps",gcc_options,x_flag_cse_follow_jumps> x_flag_cse_follow_jumps;
	 generic_field_name <"x_flag_cx_fortran_rules",gcc_options,x_flag_cx_fortran_rules> x_flag_cx_fortran_rules;
	 generic_field_name <"x_flag_cx_limited_range",gcc_options,x_flag_cx_limited_range> x_flag_cx_limited_range;
	 generic_field_name <"x_flag_data_sections",gcc_options,x_flag_data_sections> x_flag_data_sections;
	 generic_field_name <"x_flag_dce",gcc_options,x_flag_dce> x_flag_dce;
	 generic_field_name <"x_flag_debug_types_section",gcc_options,x_flag_debug_types_section> x_flag_debug_types_section;
	 generic_field_name <"x_flag_deduce_init_list",gcc_options,x_flag_deduce_init_list> x_flag_deduce_init_list;
	 generic_field_name <"x_flag_defer_pop",gcc_options,x_flag_defer_pop> x_flag_defer_pop;
	 generic_field_name <"x_flag_delayed_branch",gcc_options,x_flag_delayed_branch> x_flag_delayed_branch;
	 generic_field_name <"x_flag_delete_null_pointer_checks",gcc_options,x_flag_delete_null_pointer_checks> x_flag_delete_null_pointer_checks;
	 generic_field_name <"x_flag_devirtualize",gcc_options,x_flag_devirtualize> x_flag_devirtualize;
	 generic_field_name <"x_flag_diagnostics_show_option",gcc_options,x_flag_diagnostics_show_option> x_flag_diagnostics_show_option;
	 generic_field_name <"x_flag_dse",gcc_options,x_flag_dse> x_flag_dse;
	 generic_field_name <"x_flag_dump_final_insns",gcc_options,x_flag_dump_final_insns> x_flag_dump_final_insns;
	 generic_field_name <"x_flag_dump_go_spec",gcc_options,x_flag_dump_go_spec> x_flag_dump_go_spec;
	 generic_field_name <"x_flag_dump_noaddr",gcc_options,x_flag_dump_noaddr> x_flag_dump_noaddr;
	 generic_field_name <"x_flag_dump_passes",gcc_options,x_flag_dump_passes> x_flag_dump_passes;
	 generic_field_name <"x_flag_dump_unnumbered",gcc_options,x_flag_dump_unnumbered> x_flag_dump_unnumbered;
	 generic_field_name <"x_flag_dump_unnumbered_links",gcc_options,x_flag_dump_unnumbered_links> x_flag_dump_unnumbered_links;
	 generic_field_name <"x_flag_dwarf2_cfi_asm",gcc_options,x_flag_dwarf2_cfi_asm> x_flag_dwarf2_cfi_asm;
	 generic_field_name <"x_flag_early_inlining",gcc_options,x_flag_early_inlining> x_flag_early_inlining;
	 generic_field_name <"x_flag_elide_constructors",gcc_options,x_flag_elide_constructors> x_flag_elide_constructors;
	 generic_field_name <"x_flag_eliminate_dwarf2_dups",gcc_options,x_flag_eliminate_dwarf2_dups> x_flag_eliminate_dwarf2_dups;
	 generic_field_name <"x_flag_debug_only_used_symbols",gcc_options,x_flag_debug_only_used_symbols> x_flag_debug_only_used_symbols;
	 generic_field_name <"x_flag_eliminate_unused_debug_types",gcc_options,x_flag_eliminate_unused_debug_types> x_flag_eliminate_unused_debug_types;
	 generic_field_name <"x_flag_emit_class_debug_always",gcc_options,x_flag_emit_class_debug_always> x_flag_emit_class_debug_always;
	 generic_field_name <"x_flag_emit_class_files",gcc_options,x_flag_emit_class_files> x_flag_emit_class_files;
	 generic_field_name <"x_flag_enforce_eh_specs",gcc_options,x_flag_enforce_eh_specs> x_flag_enforce_eh_specs;
	 generic_field_name <"x_flag_exceptions",gcc_options,x_flag_exceptions> x_flag_exceptions;
	 generic_field_name <"x_flag_excess_precision_cmdline",gcc_options,x_flag_excess_precision_cmdline> x_flag_excess_precision_cmdline;
	 generic_field_name <"x_flag_expensive_optimizations",gcc_options,x_flag_expensive_optimizations> x_flag_expensive_optimizations;
	 generic_field_name <"x_flag_fat_lto_objects",gcc_options,x_flag_fat_lto_objects> x_flag_fat_lto_objects;
	 generic_field_name <"x_flag_filelist_file",gcc_options,x_flag_filelist_file> x_flag_filelist_file;
	 generic_field_name <"x_flag_finite_math_only",gcc_options,x_flag_finite_math_only> x_flag_finite_math_only;
	 generic_field_name <"x_flag_float_store",gcc_options,x_flag_float_store> x_flag_float_store;
	 generic_field_name <"x_flag_new_for_scope",gcc_options,x_flag_new_for_scope> x_flag_new_for_scope;
	 generic_field_name <"x_flag_force_classes_archive_check",gcc_options,x_flag_force_classes_archive_check> x_flag_force_classes_archive_check;
	 generic_field_name <"x_flag_forward_propagate",gcc_options,x_flag_forward_propagate> x_flag_forward_propagate;
	 generic_field_name <"x_flag_fp_contract_mode",gcc_options,x_flag_fp_contract_mode> x_flag_fp_contract_mode;
	 generic_field_name <"x_flag_friend_injection",gcc_options,x_flag_friend_injection> x_flag_friend_injection;
	 generic_field_name <"x_flag_no_function_cse",gcc_options,x_flag_no_function_cse> x_flag_no_function_cse;
	 generic_field_name <"x_flag_function_sections",gcc_options,x_flag_function_sections> x_flag_function_sections;
	 generic_field_name <"x_flag_gcse",gcc_options,x_flag_gcse> x_flag_gcse;
	 generic_field_name <"x_flag_gcse_after_reload",gcc_options,x_flag_gcse_after_reload> x_flag_gcse_after_reload;
	 generic_field_name <"x_flag_gcse_las",gcc_options,x_flag_gcse_las> x_flag_gcse_las;
	 generic_field_name <"x_flag_gcse_lm",gcc_options,x_flag_gcse_lm> x_flag_gcse_lm;
	 generic_field_name <"x_flag_gcse_sm",gcc_options,x_flag_gcse_sm> x_flag_gcse_sm;
	 generic_field_name <"x_flag_no_gnu_keywords",gcc_options,x_flag_no_gnu_keywords> x_flag_no_gnu_keywords;
	 generic_field_name <"x_flag_next_runtime",gcc_options,x_flag_next_runtime> x_flag_next_runtime;
	 generic_field_name <"x_flag_tm",gcc_options,x_flag_tm> x_flag_tm;
	 generic_field_name <"x_flag_gnu89_inline",gcc_options,x_flag_gnu89_inline> x_flag_gnu89_inline;
	 generic_field_name <"x_go_check_divide_overflow",gcc_options,x_go_check_divide_overflow> x_go_check_divide_overflow;
	 generic_field_name <"x_go_check_divide_zero",gcc_options,x_go_check_divide_zero> x_go_check_divide_zero;
	 generic_field_name <"x_flag_graphite",gcc_options,x_flag_graphite> x_flag_graphite;
	 generic_field_name <"x_flag_graphite_identity",gcc_options,x_flag_graphite_identity> x_flag_graphite_identity;
	 generic_field_name <"x_flag_guess_branch_prob",gcc_options,x_flag_guess_branch_prob> x_flag_guess_branch_prob;
	 generic_field_name <"x_flag_hash_synchronization",gcc_options,x_flag_hash_synchronization> x_flag_hash_synchronization;
	 generic_field_name <"x_flag_no_ident",gcc_options,x_flag_no_ident> x_flag_no_ident;
	 generic_field_name <"x_flag_if_conversion",gcc_options,x_flag_if_conversion> x_flag_if_conversion;
	 generic_field_name <"x_flag_if_conversion2",gcc_options,x_flag_if_conversion2> x_flag_if_conversion2;
	 generic_field_name <"x_flag_implement_inlines",gcc_options,x_flag_implement_inlines> x_flag_implement_inlines;
	 generic_field_name <"x_flag_implicit_inline_templates",gcc_options,x_flag_implicit_inline_templates> x_flag_implicit_inline_templates;
	 generic_field_name <"x_flag_implicit_templates",gcc_options,x_flag_implicit_templates> x_flag_implicit_templates;
	 generic_field_name <"x_flag_indirect_classes",gcc_options,x_flag_indirect_classes> x_flag_indirect_classes;
	 generic_field_name <"x_flag_indirect_dispatch",gcc_options,x_flag_indirect_dispatch> x_flag_indirect_dispatch;
	 generic_field_name <"x_flag_indirect_inlining",gcc_options,x_flag_indirect_inlining> x_flag_indirect_inlining;
	 generic_field_name <"x_flag_inhibit_size_directive",gcc_options,x_flag_inhibit_size_directive> x_flag_inhibit_size_directive;
	 generic_field_name <"x_flag_no_inline",gcc_options,x_flag_no_inline> x_flag_no_inline;
	 generic_field_name <"x_flag_inline_atomics",gcc_options,x_flag_inline_atomics> x_flag_inline_atomics;
	 generic_field_name <"x_flag_inline_functions",gcc_options,x_flag_inline_functions> x_flag_inline_functions;
	 generic_field_name <"x_flag_inline_functions_called_once",gcc_options,x_flag_inline_functions_called_once> x_flag_inline_functions_called_once;
	 generic_field_name <"x_flag_inline_small_functions",gcc_options,x_flag_inline_small_functions> x_flag_inline_small_functions;
	 generic_field_name <"x_flag_instrument_function_entry_exit",gcc_options,x_flag_instrument_function_entry_exit> x_flag_instrument_function_entry_exit;
	 generic_field_name <"x_flag_ipa_cp",gcc_options,x_flag_ipa_cp> x_flag_ipa_cp;
	 generic_field_name <"x_flag_ipa_cp_clone",gcc_options,x_flag_ipa_cp_clone> x_flag_ipa_cp_clone;
	 generic_field_name <"x_flag_ipa_matrix_reorg",gcc_options,x_flag_ipa_matrix_reorg> x_flag_ipa_matrix_reorg;
	 generic_field_name <"x_flag_ipa_profile",gcc_options,x_flag_ipa_profile> x_flag_ipa_profile;
	 generic_field_name <"x_flag_ipa_pta",gcc_options,x_flag_ipa_pta> x_flag_ipa_pta;
	 generic_field_name <"x_flag_ipa_pure_const",gcc_options,x_flag_ipa_pure_const> x_flag_ipa_pure_const;
	 generic_field_name <"x_flag_ipa_reference",gcc_options,x_flag_ipa_reference> x_flag_ipa_reference;
	 generic_field_name <"x_flag_ipa_sra",gcc_options,x_flag_ipa_sra> x_flag_ipa_sra;
	 generic_field_name <"x_flag_ira_algorithm",gcc_options,x_flag_ira_algorithm> x_flag_ira_algorithm;
	 generic_field_name <"x_flag_ira_loop_pressure",gcc_options,x_flag_ira_loop_pressure> x_flag_ira_loop_pressure;
	 generic_field_name <"x_flag_ira_region",gcc_options,x_flag_ira_region> x_flag_ira_region;
	 generic_field_name <"x_flag_ira_share_save_slots",gcc_options,x_flag_ira_share_save_slots> x_flag_ira_share_save_slots;
	 generic_field_name <"x_flag_ira_share_spill_slots",gcc_options,x_flag_ira_share_spill_slots> x_flag_ira_share_spill_slots;
	 generic_field_name <"x_flag_ira_verbose",gcc_options,x_flag_ira_verbose> x_flag_ira_verbose;
	 generic_field_name <"x_flag_ivopts",gcc_options,x_flag_ivopts> x_flag_ivopts;
	 generic_field_name <"x_flag_jni",gcc_options,x_flag_jni> x_flag_jni;
	 generic_field_name <"x_flag_jump_tables",gcc_options,x_flag_jump_tables> x_flag_jump_tables;
	 generic_field_name <"x_flag_keep_inline_dllexport",gcc_options,x_flag_keep_inline_dllexport> x_flag_keep_inline_dllexport;
	 generic_field_name <"x_flag_keep_inline_functions",gcc_options,x_flag_keep_inline_functions> x_flag_keep_inline_functions;
	 generic_field_name <"x_flag_keep_static_consts",gcc_options,x_flag_keep_static_consts> x_flag_keep_static_consts;
	 generic_field_name <"x_flag_lax_vector_conversions",gcc_options,x_flag_lax_vector_conversions> x_flag_lax_vector_conversions;
	 generic_field_name <"x_flag_leading_underscore",gcc_options,x_flag_leading_underscore> x_flag_leading_underscore;
	 generic_field_name <"x_flag_loop_block",gcc_options,x_flag_loop_block> x_flag_loop_block;
	 generic_field_name <"x_flag_loop_flatten",gcc_options,x_flag_loop_flatten> x_flag_loop_flatten;
	 generic_field_name <"x_flag_loop_interchange",gcc_options,x_flag_loop_interchange> x_flag_loop_interchange;
	 generic_field_name <"x_flag_loop_parallelize_all",gcc_options,x_flag_loop_parallelize_all> x_flag_loop_parallelize_all;
	 generic_field_name <"x_flag_loop_strip_mine",gcc_options,x_flag_loop_strip_mine> x_flag_loop_strip_mine;
	 generic_field_name <"x_flag_lto_compression_level",gcc_options,x_flag_lto_compression_level> x_flag_lto_compression_level;
	 generic_field_name <"x_flag_lto_partition_1to1",gcc_options,x_flag_lto_partition_1to1> x_flag_lto_partition_1to1;
	 generic_field_name <"x_flag_lto_partition_balanced",gcc_options,x_flag_lto_partition_balanced> x_flag_lto_partition_balanced;
	 generic_field_name <"x_flag_lto_partition_none",gcc_options,x_flag_lto_partition_none> x_flag_lto_partition_none;
	 generic_field_name <"x_flag_lto_report",gcc_options,x_flag_lto_report> x_flag_lto_report;
	 generic_field_name <"x_flag_lto",gcc_options,x_flag_lto> x_flag_lto;
	 generic_field_name <"x_flag_ltrans",gcc_options,x_flag_ltrans> x_flag_ltrans;
	 generic_field_name <"x_ltrans_output_list",gcc_options,x_ltrans_output_list> x_ltrans_output_list;
	 generic_field_name <"x_flag_errno_math",gcc_options,x_flag_errno_math> x_flag_errno_math;
	 generic_field_name <"x_flag_max_errors",gcc_options,x_flag_max_errors> x_flag_max_errors;
	 generic_field_name <"x_mem_report",gcc_options,x_mem_report> x_mem_report;
	 generic_field_name <"x_flag_merge_constants",gcc_options,x_flag_merge_constants> x_flag_merge_constants;
	 generic_field_name <"x_flag_merge_debug_strings",gcc_options,x_flag_merge_debug_strings> x_flag_merge_debug_strings;
	 generic_field_name <"x_flag_modulo_sched",gcc_options,x_flag_modulo_sched> x_flag_modulo_sched;
	 generic_field_name <"x_flag_modulo_sched_allow_regmoves",gcc_options,x_flag_modulo_sched_allow_regmoves> x_flag_modulo_sched_allow_regmoves;
	 generic_field_name <"x_flag_move_loop_invariants",gcc_options,x_flag_move_loop_invariants> x_flag_move_loop_invariants;
	 generic_field_name <"x_flag_ms_extensions",gcc_options,x_flag_ms_extensions> x_flag_ms_extensions;
	 generic_field_name <"x_flag_mudflap",gcc_options,x_flag_mudflap> x_flag_mudflap;
	 generic_field_name <"x_flag_mudflap_ignore_reads",gcc_options,x_flag_mudflap_ignore_reads> x_flag_mudflap_ignore_reads;
	 generic_field_name <"x_flag_nil_receivers",gcc_options,x_flag_nil_receivers> x_flag_nil_receivers;
	 generic_field_name <"x_flag_non_call_exceptions",gcc_options,x_flag_non_call_exceptions> x_flag_non_call_exceptions;
	 generic_field_name <"x_flag_no_nonansi_builtin",gcc_options,x_flag_no_nonansi_builtin> x_flag_no_nonansi_builtin;
	 generic_field_name <"x_flag_nothrow_opt",gcc_options,x_flag_nothrow_opt> x_flag_nothrow_opt;
	 generic_field_name <"x_flag_objc_abi",gcc_options,x_flag_objc_abi> x_flag_objc_abi;
	 generic_field_name <"x_flag_objc_call_cxx_cdtors",gcc_options,x_flag_objc_call_cxx_cdtors> x_flag_objc_call_cxx_cdtors;
	 generic_field_name <"x_flag_objc_direct_dispatch",gcc_options,x_flag_objc_direct_dispatch> x_flag_objc_direct_dispatch;
	 generic_field_name <"x_flag_objc_exceptions",gcc_options,x_flag_objc_exceptions> x_flag_objc_exceptions;
	 generic_field_name <"x_flag_objc_gc",gcc_options,x_flag_objc_gc> x_flag_objc_gc;
	 generic_field_name <"x_flag_objc_nilcheck",gcc_options,x_flag_objc_nilcheck> x_flag_objc_nilcheck;
	 generic_field_name <"x_flag_objc_sjlj_exceptions",gcc_options,x_flag_objc_sjlj_exceptions> x_flag_objc_sjlj_exceptions;
	 generic_field_name <"x_flag_objc1_only",gcc_options,x_flag_objc1_only> x_flag_objc1_only;
	 generic_field_name <"x_flag_omit_frame_pointer",gcc_options,x_flag_omit_frame_pointer> x_flag_omit_frame_pointer;
	 generic_field_name <"x_flag_openmp",gcc_options,x_flag_openmp> x_flag_openmp;
	 generic_field_name <"x_flag_regmove",gcc_options,x_flag_regmove> x_flag_regmove;
	 generic_field_name <"x_flag_optimize_sibling_calls",gcc_options,x_flag_optimize_sibling_calls> x_flag_optimize_sibling_calls;
	 generic_field_name <"x_flag_optimize_sci",gcc_options,x_flag_optimize_sci> x_flag_optimize_sci;
	 generic_field_name <"x_flag_optimize_strlen",gcc_options,x_flag_optimize_strlen> x_flag_optimize_strlen;
	 generic_field_name <"x_flag_pack_struct",gcc_options,x_flag_pack_struct> x_flag_pack_struct;
	 generic_field_name <"x_flag_partial_inlining",gcc_options,x_flag_partial_inlining> x_flag_partial_inlining;
	 generic_field_name <"x_flag_pcc_struct_return",gcc_options,x_flag_pcc_struct_return> x_flag_pcc_struct_return;
	 generic_field_name <"x_flag_peel_loops",gcc_options,x_flag_peel_loops> x_flag_peel_loops;
	 generic_field_name <"x_flag_no_peephole",gcc_options,x_flag_no_peephole> x_flag_no_peephole;
	 generic_field_name <"x_flag_peephole2",gcc_options,x_flag_peephole2> x_flag_peephole2;
	 generic_field_name <"x_flag_plan9_extensions",gcc_options,x_flag_plan9_extensions> x_flag_plan9_extensions;
	 generic_field_name <"x_post_ipa_mem_report",gcc_options,x_post_ipa_mem_report> x_post_ipa_mem_report;
	 generic_field_name <"x_pre_ipa_mem_report",gcc_options,x_pre_ipa_mem_report> x_pre_ipa_mem_report;
	 generic_field_name <"x_flag_predictive_commoning",gcc_options,x_flag_predictive_commoning> x_flag_predictive_commoning;
	 generic_field_name <"x_flag_prefetch_loop_arrays",gcc_options,x_flag_prefetch_loop_arrays> x_flag_prefetch_loop_arrays;
	 generic_field_name <"x_flag_pretty_templates",gcc_options,x_flag_pretty_templates> x_flag_pretty_templates;
	 generic_field_name <"x_profile_flag",gcc_options,x_profile_flag> x_profile_flag;
	 generic_field_name <"x_profile_arc_flag",gcc_options,x_profile_arc_flag> x_profile_arc_flag;
	 generic_field_name <"x_flag_profile_correction",gcc_options,x_flag_profile_correction> x_flag_profile_correction;
	 generic_field_name <"x_profile_data_prefix",gcc_options,x_profile_data_prefix> x_profile_data_prefix;
	 generic_field_name <"x_flag_profile_use",gcc_options,x_flag_profile_use> x_flag_profile_use;
	 generic_field_name <"x_flag_profile_values",gcc_options,x_flag_profile_values> x_flag_profile_values;
	 generic_field_name <"x_flag_reciprocal_math",gcc_options,x_flag_reciprocal_math> x_flag_reciprocal_math;
	 generic_field_name <"x_flag_record_gcc_switches",gcc_options,x_flag_record_gcc_switches> x_flag_record_gcc_switches;
	 generic_field_name <"x_flag_reduced_reflection",gcc_options,x_flag_reduced_reflection> x_flag_reduced_reflection;
	 generic_field_name <"x_flag_ree",gcc_options,x_flag_ree> x_flag_ree;
	 generic_field_name <"x_flag_rename_registers",gcc_options,x_flag_rename_registers> x_flag_rename_registers;
	 generic_field_name <"x_flag_reorder_blocks",gcc_options,x_flag_reorder_blocks> x_flag_reorder_blocks;
	 generic_field_name <"x_flag_reorder_blocks_and_partition",gcc_options,x_flag_reorder_blocks_and_partition> x_flag_reorder_blocks_and_partition;
	 generic_field_name <"x_flag_reorder_functions",gcc_options,x_flag_reorder_functions> x_flag_reorder_functions;
	 generic_field_name <"x_flag_replace_objc_classes",gcc_options,x_flag_replace_objc_classes> x_flag_replace_objc_classes;
	 generic_field_name <"x_go_require_return_statement",gcc_options,x_go_require_return_statement> x_go_require_return_statement;
	 generic_field_name <"x_flag_rerun_cse_after_loop",gcc_options,x_flag_rerun_cse_after_loop> x_flag_rerun_cse_after_loop;
	 generic_field_name <"x_flag_resched_modulo_sched",gcc_options,x_flag_resched_modulo_sched> x_flag_resched_modulo_sched;
	 generic_field_name <"x_flag_rounding_math",gcc_options,x_flag_rounding_math> x_flag_rounding_math;
	 generic_field_name <"x_flag_rtti",gcc_options,x_flag_rtti> x_flag_rtti;
	 generic_field_name <"x_flag_sched_critical_path_heuristic",gcc_options,x_flag_sched_critical_path_heuristic> x_flag_sched_critical_path_heuristic;
	 generic_field_name <"x_flag_sched_dep_count_heuristic",gcc_options,x_flag_sched_dep_count_heuristic> x_flag_sched_dep_count_heuristic;
	 generic_field_name <"x_flag_sched_group_heuristic",gcc_options,x_flag_sched_group_heuristic> x_flag_sched_group_heuristic;
	 generic_field_name <"x_flag_schedule_interblock",gcc_options,x_flag_schedule_interblock> x_flag_schedule_interblock;
	 generic_field_name <"x_flag_sched_last_insn_heuristic",gcc_options,x_flag_sched_last_insn_heuristic> x_flag_sched_last_insn_heuristic;
	 generic_field_name <"x_flag_sched_pressure",gcc_options,x_flag_sched_pressure> x_flag_sched_pressure;
	 generic_field_name <"x_flag_sched_pressure_algorithm",gcc_options,x_flag_sched_pressure_algorithm> x_flag_sched_pressure_algorithm;
	 generic_field_name <"x_flag_sched_rank_heuristic",gcc_options,x_flag_sched_rank_heuristic> x_flag_sched_rank_heuristic;
	 generic_field_name <"x_flag_schedule_speculative",gcc_options,x_flag_schedule_speculative> x_flag_schedule_speculative;
	 generic_field_name <"x_flag_sched_spec_insn_heuristic",gcc_options,x_flag_sched_spec_insn_heuristic> x_flag_sched_spec_insn_heuristic;
	 generic_field_name <"x_flag_schedule_speculative_load",gcc_options,x_flag_schedule_speculative_load> x_flag_schedule_speculative_load;
	 generic_field_name <"x_flag_schedule_speculative_load_dangerous",gcc_options,x_flag_schedule_speculative_load_dangerous> x_flag_schedule_speculative_load_dangerous;
	 generic_field_name <"x_flag_sched_stalled_insns",gcc_options,x_flag_sched_stalled_insns> x_flag_sched_stalled_insns;
	 generic_field_name <"x_flag_sched_stalled_insns_dep",gcc_options,x_flag_sched_stalled_insns_dep> x_flag_sched_stalled_insns_dep;
	 generic_field_name <"x_sched_verbose_param",gcc_options,x_sched_verbose_param> x_sched_verbose_param;
	 generic_field_name <"x_flag_sched2_use_superblocks",gcc_options,x_flag_sched2_use_superblocks> x_flag_sched2_use_superblocks;
	 generic_field_name <"x_flag_schedule_insns",gcc_options,x_flag_schedule_insns> x_flag_schedule_insns;
	 generic_field_name <"x_flag_schedule_insns_after_reload",gcc_options,x_flag_schedule_insns_after_reload> x_flag_schedule_insns_after_reload;
	 generic_field_name <"x_flag_section_anchors",gcc_options,x_flag_section_anchors> x_flag_section_anchors;
	 generic_field_name <"x_flag_sel_sched_pipelining",gcc_options,x_flag_sel_sched_pipelining> x_flag_sel_sched_pipelining;
	 generic_field_name <"x_flag_sel_sched_pipelining_outer_loops",gcc_options,x_flag_sel_sched_pipelining_outer_loops> x_flag_sel_sched_pipelining_outer_loops;
	 generic_field_name <"x_flag_sel_sched_reschedule_pipelined",gcc_options,x_flag_sel_sched_reschedule_pipelined> x_flag_sel_sched_reschedule_pipelined;
	 generic_field_name <"x_flag_selective_scheduling",gcc_options,x_flag_selective_scheduling> x_flag_selective_scheduling;
	 generic_field_name <"x_flag_selective_scheduling2",gcc_options,x_flag_selective_scheduling2> x_flag_selective_scheduling2;
	 generic_field_name <"x_flag_short_double",gcc_options,x_flag_short_double> x_flag_short_double;
	 generic_field_name <"x_flag_short_enums",gcc_options,x_flag_short_enums> x_flag_short_enums;
	 generic_field_name <"x_flag_short_wchar",gcc_options,x_flag_short_wchar> x_flag_short_wchar;
	 generic_field_name <"x_flag_show_column",gcc_options,x_flag_show_column> x_flag_show_column;
	 generic_field_name <"x_flag_shrink_wrap",gcc_options,x_flag_shrink_wrap> x_flag_shrink_wrap;
	 generic_field_name <"x_flag_signaling_nans",gcc_options,x_flag_signaling_nans> x_flag_signaling_nans;
	 generic_field_name <"x_flag_signed_bitfields",gcc_options,x_flag_signed_bitfields> x_flag_signed_bitfields;
	 generic_field_name <"x_flag_signed_char",gcc_options,x_flag_signed_char> x_flag_signed_char;
	 generic_field_name <"x_flag_signed_zeros",gcc_options,x_flag_signed_zeros> x_flag_signed_zeros;
	 generic_field_name <"x_flag_single_precision_constant",gcc_options,x_flag_single_precision_constant> x_flag_single_precision_constant;
	 generic_field_name <"x_flag_split_ivs_in_unroller",gcc_options,x_flag_split_ivs_in_unroller> x_flag_split_ivs_in_unroller;
	 generic_field_name <"x_flag_split_stack",gcc_options,x_flag_split_stack> x_flag_split_stack;
	 generic_field_name <"x_flag_split_wide_types",gcc_options,x_flag_split_wide_types> x_flag_split_wide_types;
	 generic_field_name <"x_flag_stack_protect",gcc_options,x_flag_stack_protect> x_flag_stack_protect;
	 generic_field_name <"x_flag_stack_usage",gcc_options,x_flag_stack_usage> x_flag_stack_usage;
	 generic_field_name <"x_flag_detailed_statistics",gcc_options,x_flag_detailed_statistics> x_flag_detailed_statistics;
	 generic_field_name <"x_flag_store_check",gcc_options,x_flag_store_check> x_flag_store_check;
	 generic_field_name <"x_flag_strict_aliasing",gcc_options,x_flag_strict_aliasing> x_flag_strict_aliasing;
	 generic_field_name <"x_flag_strict_enums",gcc_options,x_flag_strict_enums> x_flag_strict_enums;
	 generic_field_name <"x_flag_strict_overflow",gcc_options,x_flag_strict_overflow> x_flag_strict_overflow;
	 generic_field_name <"x_flag_strict_volatile_bitfields",gcc_options,x_flag_strict_volatile_bitfields> x_flag_strict_volatile_bitfields;
	 generic_field_name <"x_flag_syntax_only",gcc_options,x_flag_syntax_only> x_flag_syntax_only;
	 generic_field_name <"x_flag_test_coverage",gcc_options,x_flag_test_coverage> x_flag_test_coverage;
	 generic_field_name <"x_flag_thread_jumps",gcc_options,x_flag_thread_jumps> x_flag_thread_jumps;
	 generic_field_name <"x_flag_threadsafe_statics",gcc_options,x_flag_threadsafe_statics> x_flag_threadsafe_statics;
	 generic_field_name <"x_time_report",gcc_options,x_time_report> x_time_report;
	 generic_field_name <"x_flag_tls_default",gcc_options,x_flag_tls_default> x_flag_tls_default;
	 generic_field_name <"x_flag_toplevel_reorder",gcc_options,x_flag_toplevel_reorder> x_flag_toplevel_reorder;
	 generic_field_name <"x_flag_tracer",gcc_options,x_flag_tracer> x_flag_tracer;
	 generic_field_name <"x_flag_trapping_math",gcc_options,x_flag_trapping_math> x_flag_trapping_math;
	 generic_field_name <"x_flag_trapv",gcc_options,x_flag_trapv> x_flag_trapv;
	 generic_field_name <"x_flag_tree_bit_ccp",gcc_options,x_flag_tree_bit_ccp> x_flag_tree_bit_ccp;
	 generic_field_name <"x_flag_tree_builtin_call_dce",gcc_options,x_flag_tree_builtin_call_dce> x_flag_tree_builtin_call_dce;
	 generic_field_name <"x_flag_tree_ccp",gcc_options,x_flag_tree_ccp> x_flag_tree_ccp;
	 generic_field_name <"x_flag_tree_ch",gcc_options,x_flag_tree_ch> x_flag_tree_ch;
	 generic_field_name <"x_flag_tree_copy_prop",gcc_options,x_flag_tree_copy_prop> x_flag_tree_copy_prop;
	 generic_field_name <"x_flag_tree_copyrename",gcc_options,x_flag_tree_copyrename> x_flag_tree_copyrename;
	 generic_field_name <"x_flag_tree_cselim",gcc_options,x_flag_tree_cselim> x_flag_tree_cselim;
	 generic_field_name <"x_flag_tree_dce",gcc_options,x_flag_tree_dce> x_flag_tree_dce;
	 generic_field_name <"x_flag_tree_dom",gcc_options,x_flag_tree_dom> x_flag_tree_dom;
	 generic_field_name <"x_flag_tree_dse",gcc_options,x_flag_tree_dse> x_flag_tree_dse;
	 generic_field_name <"x_flag_tree_forwprop",gcc_options,x_flag_tree_forwprop> x_flag_tree_forwprop;
	 generic_field_name <"x_flag_tree_fre",gcc_options,x_flag_tree_fre> x_flag_tree_fre;
	 generic_field_name <"x_flag_tree_loop_distribute_patterns",gcc_options,x_flag_tree_loop_distribute_patterns> x_flag_tree_loop_distribute_patterns;
	 generic_field_name <"x_flag_tree_loop_distribution",gcc_options,x_flag_tree_loop_distribution> x_flag_tree_loop_distribution;
	 generic_field_name <"x_flag_tree_loop_if_convert",gcc_options,x_flag_tree_loop_if_convert> x_flag_tree_loop_if_convert;
	 generic_field_name <"x_flag_tree_loop_if_convert_stores",gcc_options,x_flag_tree_loop_if_convert_stores> x_flag_tree_loop_if_convert_stores;
	 generic_field_name <"x_flag_tree_loop_im",gcc_options,x_flag_tree_loop_im> x_flag_tree_loop_im;
	 generic_field_name <"x_flag_tree_loop_ivcanon",gcc_options,x_flag_tree_loop_ivcanon> x_flag_tree_loop_ivcanon;
	 generic_field_name <"x_flag_tree_loop_optimize",gcc_options,x_flag_tree_loop_optimize> x_flag_tree_loop_optimize;
	 generic_field_name <"x_flag_tree_live_range_split",gcc_options,x_flag_tree_live_range_split> x_flag_tree_live_range_split;
	 generic_field_name <"x_flag_tree_parallelize_loops",gcc_options,x_flag_tree_parallelize_loops> x_flag_tree_parallelize_loops;
	 generic_field_name <"x_flag_tree_partial_pre",gcc_options,x_flag_tree_partial_pre> x_flag_tree_partial_pre;
	 generic_field_name <"x_flag_tree_phiprop",gcc_options,x_flag_tree_phiprop> x_flag_tree_phiprop;
	 generic_field_name <"x_flag_tree_pre",gcc_options,x_flag_tree_pre> x_flag_tree_pre;
	 generic_field_name <"x_flag_tree_pta",gcc_options,x_flag_tree_pta> x_flag_tree_pta;
	 generic_field_name <"x_flag_tree_reassoc",gcc_options,x_flag_tree_reassoc> x_flag_tree_reassoc;
	 generic_field_name <"x_flag_tree_scev_cprop",gcc_options,x_flag_tree_scev_cprop> x_flag_tree_scev_cprop;
	 generic_field_name <"x_flag_tree_sink",gcc_options,x_flag_tree_sink> x_flag_tree_sink;
	 generic_field_name <"x_flag_tree_slp_vectorize",gcc_options,x_flag_tree_slp_vectorize> x_flag_tree_slp_vectorize;
	 generic_field_name <"x_flag_tree_sra",gcc_options,x_flag_tree_sra> x_flag_tree_sra;
	 generic_field_name <"x_flag_tree_switch_conversion",gcc_options,x_flag_tree_switch_conversion> x_flag_tree_switch_conversion;
	 generic_field_name <"x_flag_tree_tail_merge",gcc_options,x_flag_tree_tail_merge> x_flag_tree_tail_merge;
	 generic_field_name <"x_flag_tree_ter",gcc_options,x_flag_tree_ter> x_flag_tree_ter;
	 generic_field_name <"x_flag_tree_vect_loop_version",gcc_options,x_flag_tree_vect_loop_version> x_flag_tree_vect_loop_version;
	 generic_field_name <"x_flag_tree_vectorize",gcc_options,x_flag_tree_vectorize> x_flag_tree_vectorize;
	 generic_field_name <"x_flag_tree_vrp",gcc_options,x_flag_tree_vrp> x_flag_tree_vrp;
	 generic_field_name <"x_flag_unit_at_a_time",gcc_options,x_flag_unit_at_a_time> x_flag_unit_at_a_time;
	 generic_field_name <"x_flag_unroll_all_loops",gcc_options,x_flag_unroll_all_loops> x_flag_unroll_all_loops;
	 generic_field_name <"x_flag_unroll_loops",gcc_options,x_flag_unroll_loops> x_flag_unroll_loops;
	 generic_field_name <"x_flag_unsafe_loop_optimizations",gcc_options,x_flag_unsafe_loop_optimizations> x_flag_unsafe_loop_optimizations;
	 generic_field_name <"x_flag_unsafe_math_optimizations",gcc_options,x_flag_unsafe_math_optimizations> x_flag_unsafe_math_optimizations;
	 generic_field_name <"x_flag_unswitch_loops",gcc_options,x_flag_unswitch_loops> x_flag_unswitch_loops;
	 generic_field_name <"x_flag_unwind_tables",gcc_options,x_flag_unwind_tables> x_flag_unwind_tables;
	 generic_field_name <"x_flag_use_atomic_builtins",gcc_options,x_flag_use_atomic_builtins> x_flag_use_atomic_builtins;
	 generic_field_name <"x_flag_use_boehm_gc",gcc_options,x_flag_use_boehm_gc> x_flag_use_boehm_gc;
	 generic_field_name <"x_flag_use_cxa_atexit",gcc_options,x_flag_use_cxa_atexit> x_flag_use_cxa_atexit;
	 generic_field_name <"x_flag_use_cxa_get_exception_ptr",gcc_options,x_flag_use_cxa_get_exception_ptr> x_flag_use_cxa_get_exception_ptr;
	 generic_field_name <"x_flag_use_divide_subroutine",gcc_options,x_flag_use_divide_subroutine> x_flag_use_divide_subroutine;
	 generic_field_name <"x_flag_var_tracking",gcc_options,x_flag_var_tracking> x_flag_var_tracking;
	 generic_field_name <"x_flag_var_tracking_assignments",gcc_options,x_flag_var_tracking_assignments> x_flag_var_tracking_assignments;
	 generic_field_name <"x_flag_var_tracking_assignments_toggle",gcc_options,x_flag_var_tracking_assignments_toggle> x_flag_var_tracking_assignments_toggle;
	 generic_field_name <"x_flag_var_tracking_uninit",gcc_options,x_flag_var_tracking_uninit> x_flag_var_tracking_uninit;
	 generic_field_name <"x_flag_variable_expansion_in_unroller",gcc_options,x_flag_variable_expansion_in_unroller> x_flag_variable_expansion_in_unroller;
	 generic_field_name <"x_flag_vect_cost_model",gcc_options,x_flag_vect_cost_model> x_flag_vect_cost_model;
	 generic_field_name <"x_flag_verbose_asm",gcc_options,x_flag_verbose_asm> x_flag_verbose_asm;
	 generic_field_name <"x_flag_visibility_ms_compat",gcc_options,x_flag_visibility_ms_compat> x_flag_visibility_ms_compat;
	 generic_field_name <"x_default_visibility",gcc_options,x_default_visibility> x_default_visibility;
	 generic_field_name <"x_flag_value_profile_transformations",gcc_options,x_flag_value_profile_transformations> x_flag_value_profile_transformations;
	 generic_field_name <"x_flag_weak",gcc_options,x_flag_weak> x_flag_weak;
	 generic_field_name <"x_flag_web",gcc_options,x_flag_web> x_flag_web;
	 generic_field_name <"x_flag_whole_program",gcc_options,x_flag_whole_program> x_flag_whole_program;
	 generic_field_name <"x_flag_working_directory",gcc_options,x_flag_working_directory> x_flag_working_directory;
	 generic_field_name <"x_flag_wpa",gcc_options,x_flag_wpa> x_flag_wpa;
	 generic_field_name <"x_flag_wrapv",gcc_options,x_flag_wrapv> x_flag_wrapv;
	 generic_field_name <"x_flag_zero_initialized_in_bss",gcc_options,x_flag_zero_initialized_in_bss> x_flag_zero_initialized_in_bss;
	 generic_field_name <"x_flag_zero_link",gcc_options,x_flag_zero_link> x_flag_zero_link;
	 generic_field_name <"x_dwarf_version",gcc_options,x_dwarf_version> x_dwarf_version;
	 generic_field_name <"x_flag_gen_declaration",gcc_options,x_flag_gen_declaration> x_flag_gen_declaration;
	 generic_field_name <"x_dwarf_record_gcc_switches",gcc_options,x_dwarf_record_gcc_switches> x_dwarf_record_gcc_switches;
	 generic_field_name <"x_dwarf_strict",gcc_options,x_dwarf_strict> x_dwarf_strict;
	 generic_field_name <"x_flag_gtoggle",gcc_options,x_flag_gtoggle> x_flag_gtoggle;
	 generic_field_name <"x_imultiarch",gcc_options,x_imultiarch> x_imultiarch;
	 generic_field_name <"x_plugindir_string",gcc_options,x_plugindir_string> x_plugindir_string;
	 generic_field_name <"x_ix86_abi",gcc_options,x_ix86_abi> x_ix86_abi;
	 generic_field_name <"x_flag_android",gcc_options,x_flag_android> x_flag_android;
	 generic_field_name <"x_ix86_arch_string",gcc_options,x_ix86_arch_string> x_ix86_arch_string;
	 generic_field_name <"x_ix86_asm_dialect",gcc_options,x_ix86_asm_dialect> x_ix86_asm_dialect;
	 generic_field_name <"x_linux_libc",gcc_options,x_linux_libc> x_linux_libc;
	 generic_field_name <"x_ix86_branch_cost",gcc_options,x_ix86_branch_cost> x_ix86_branch_cost;
	 generic_field_name <"x_ix86_cmodel",gcc_options,x_ix86_cmodel> x_ix86_cmodel;
	 generic_field_name <"x_flag_dispatch_scheduler",gcc_options,x_flag_dispatch_scheduler> x_flag_dispatch_scheduler;
	 generic_field_name <"x_flag_fentry",gcc_options,x_flag_fentry> x_flag_fentry;
	 generic_field_name <"x_ix86_force_drap",gcc_options,x_ix86_force_drap> x_ix86_force_drap;
	 generic_field_name <"x_ix86_fpmath",gcc_options,x_ix86_fpmath> x_ix86_fpmath;
	 generic_field_name <"x_ix86_incoming_stack_boundary_arg",gcc_options,x_ix86_incoming_stack_boundary_arg> x_ix86_incoming_stack_boundary_arg;
	 generic_field_name <"x_ix86_section_threshold",gcc_options,x_ix86_section_threshold> x_ix86_section_threshold;
	 generic_field_name <"x_ix86_preferred_stack_boundary_arg",gcc_options,x_ix86_preferred_stack_boundary_arg> x_ix86_preferred_stack_boundary_arg;
	 generic_field_name <"x_ix86_recip_name",gcc_options,x_ix86_recip_name> x_ix86_recip_name;
	 generic_field_name <"x_ix86_regparm",gcc_options,x_ix86_regparm> x_ix86_regparm;
	 generic_field_name <"x_ix86_sse2avx",gcc_options,x_ix86_sse2avx> x_ix86_sse2avx;
	 generic_field_name <"x_ix86_force_align_arg_pointer",gcc_options,x_ix86_force_align_arg_pointer> x_ix86_force_align_arg_pointer;
	 generic_field_name <"x_ix86_stringop_alg",gcc_options,x_ix86_stringop_alg> x_ix86_stringop_alg;
	 generic_field_name <"x_ix86_tls_dialect",gcc_options,x_ix86_tls_dialect> x_ix86_tls_dialect;
	 generic_field_name <"x_ix86_tune_string",gcc_options,x_ix86_tune_string> x_ix86_tune_string;
	 generic_field_name <"x_ix86_veclibabi_type",gcc_options,x_ix86_veclibabi_type> x_ix86_veclibabi_type;
	 generic_field_name <"x_asm_file_name",gcc_options,x_asm_file_name> x_asm_file_name;
	 generic_field_name <"x_pass_exit_codes",gcc_options,x_pass_exit_codes> x_pass_exit_codes;
	 generic_field_name <"x_pedantic",gcc_options,x_pedantic> x_pedantic;
	 generic_field_name <"x_flag_pedantic_errors",gcc_options,x_flag_pedantic_errors> x_flag_pedantic_errors;
	 generic_field_name <"x_use_pipes",gcc_options,x_use_pipes> x_use_pipes;
	 generic_field_name <"x_print_file_name",gcc_options,x_print_file_name> x_print_file_name;
	 generic_field_name <"x_print_multi_directory",gcc_options,x_print_multi_directory> x_print_multi_directory;
	 generic_field_name <"x_print_multi_lib",gcc_options,x_print_multi_lib> x_print_multi_lib;
	 generic_field_name <"x_print_multi_os_directory",gcc_options,x_print_multi_os_directory> x_print_multi_os_directory;
	 generic_field_name <"x_print_multiarch",gcc_options,x_print_multiarch> x_print_multiarch;
	 generic_field_name <"x_print_prog_name",gcc_options,x_print_prog_name> x_print_prog_name;
	 generic_field_name <"x_print_search_dirs",gcc_options,x_print_search_dirs> x_print_search_dirs;
	 generic_field_name <"x_print_sysroot",gcc_options,x_print_sysroot> x_print_sysroot;
	 generic_field_name <"x_print_sysroot_headers_suffix",gcc_options,x_print_sysroot_headers_suffix> x_print_sysroot_headers_suffix;
	 generic_field_name <"x_quiet_flag",gcc_options,x_quiet_flag> x_quiet_flag;
	 generic_field_name <"x_report_times",gcc_options,x_report_times> x_report_times;
	 generic_field_name <"x_flag_undef",gcc_options,x_flag_undef> x_flag_undef;
	 generic_field_name <"x_verbose_flag",gcc_options,x_verbose_flag> x_verbose_flag;
	 generic_field_name <"x_version_flag",gcc_options,x_version_flag> x_version_flag;
	 generic_field_name <"x_inhibit_warnings",gcc_options,x_inhibit_warnings> x_inhibit_warnings;
	 generic_field_name <"x_wrapper_string",gcc_options,x_wrapper_string> x_wrapper_string;
	 generic_field_name <"x_VAR_malign_functions_",gcc_options,x_VAR_malign_functions_> x_VAR_malign_functions_;
	 generic_field_name <"x_VAR_malign_jumps_",gcc_options,x_VAR_malign_jumps_> x_VAR_malign_jumps_;
	 generic_field_name <"x_VAR_malign_loops_",gcc_options,x_VAR_malign_loops_> x_VAR_malign_loops_;
	 generic_field_name <"x_VAR_mpc32",gcc_options,x_VAR_mpc32> x_VAR_mpc32;
	 generic_field_name <"x_VAR_mpc64",gcc_options,x_VAR_mpc64> x_VAR_mpc64;
	 generic_field_name <"x_VAR_mpc80",gcc_options,x_VAR_mpc80> x_VAR_mpc80;
	 generic_field_name <"frontend_set_flag_associative_math",gcc_options,frontend_set_flag_associative_math> frontend_set_flag_associative_math;
	 generic_field_name <"frontend_set_flag_cx_limited_range",gcc_options,frontend_set_flag_cx_limited_range> frontend_set_flag_cx_limited_range;
	 generic_field_name <"frontend_set_flag_finite_math_only",gcc_options,frontend_set_flag_finite_math_only> frontend_set_flag_finite_math_only;
	 generic_field_name <"frontend_set_flag_errno_math",gcc_options,frontend_set_flag_errno_math> frontend_set_flag_errno_math;
	 generic_field_name <"frontend_set_flag_reciprocal_math",gcc_options,frontend_set_flag_reciprocal_math> frontend_set_flag_reciprocal_math;
	 generic_field_name <"frontend_set_flag_rounding_math",gcc_options,frontend_set_flag_rounding_math> frontend_set_flag_rounding_math;
	 generic_field_name <"frontend_set_flag_signaling_nans",gcc_options,frontend_set_flag_signaling_nans> frontend_set_flag_signaling_nans;
	 generic_field_name <"frontend_set_flag_signed_zeros",gcc_options,frontend_set_flag_signed_zeros> frontend_set_flag_signed_zeros;
	 generic_field_name <"frontend_set_flag_trapping_math",gcc_options,frontend_set_flag_trapping_math> frontend_set_flag_trapping_math;
	 generic_field_name <"frontend_set_flag_unsafe_math_optimizations",gcc_options,frontend_set_flag_unsafe_math_optimizations> frontend_set_flag_unsafe_math_optimizations;
}; 
class CLS_418_gcc_options{ 
	 generic_class_name <"gcc_options",gcc_options> the_class_name;
	 generic_field_name <"x_recip_mask",gcc_options,x_recip_mask> x_recip_mask;
	 generic_field_name <"x_frame_larger_than_size",gcc_options,x_frame_larger_than_size> x_frame_larger_than_size;
	 generic_field_name <"x_ix86_isa_flags",gcc_options,x_ix86_isa_flags> x_ix86_isa_flags;
	 generic_field_name <"x_ix86_isa_flags_explicit",gcc_options,x_ix86_isa_flags_explicit> x_ix86_isa_flags_explicit;
	 generic_field_name <"x_larger_than_size",gcc_options,x_larger_than_size> x_larger_than_size;
	 generic_field_name <"x_exit_after_options",gcc_options,x_exit_after_options> x_exit_after_options;
	 generic_field_name <"x_flag_dump_all_passed",gcc_options,x_flag_dump_all_passed> x_flag_dump_all_passed;
	 generic_field_name <"x_flag_opts_finished",gcc_options,x_flag_opts_finished> x_flag_opts_finished;
	 generic_field_name <"x_flag_stack_usage_info",gcc_options,x_flag_stack_usage_info> x_flag_stack_usage_info;
	 generic_field_name <"x_flag_warn_unused_result",gcc_options,x_flag_warn_unused_result> x_flag_warn_unused_result;
	 generic_field_name <"x_in_lto_p",gcc_options,x_in_lto_p> x_in_lto_p;
	 generic_field_name <"x_use_gnu_debug_info_extensions",gcc_options,x_use_gnu_debug_info_extensions> x_use_gnu_debug_info_extensions;
	 generic_field_name <"x_warn_frame_larger_than",gcc_options,x_warn_frame_larger_than> x_warn_frame_larger_than;
	 generic_field_name <"x_warn_larger_than",gcc_options,x_warn_larger_than> x_warn_larger_than;
	 generic_field_name <"x_help_enum_printed",gcc_options,x_help_enum_printed> x_help_enum_printed;
	 generic_field_name <"x_help_printed",gcc_options,x_help_printed> x_help_printed;
	 generic_field_name <"x_main_input_basename",gcc_options,x_main_input_basename> x_main_input_basename;
	 generic_field_name <"x_main_input_filename",gcc_options,x_main_input_filename> x_main_input_filename;
	 generic_field_name <"x_debug_info_level",gcc_options,x_debug_info_level> x_debug_info_level;
	 generic_field_name <"x_write_symbols",gcc_options,x_write_symbols> x_write_symbols;
	 generic_field_name <"x_debug_struct_generic",gcc_options,x_debug_struct_generic> x_debug_struct_generic;
	 generic_field_name <"x_debug_struct_ordinary",gcc_options,x_debug_struct_ordinary> x_debug_struct_ordinary;
	 generic_field_name <"x_graph_dump_format",gcc_options,x_graph_dump_format> x_graph_dump_format;
	 generic_field_name <"x_flag_stack_check",gcc_options,x_flag_stack_check> x_flag_stack_check;
	 generic_field_name <"x_user_vect_verbosity_level",gcc_options,x_user_vect_verbosity_level> x_user_vect_verbosity_level;
	 generic_field_name <"x_param_values",gcc_options,x_param_values> x_param_values;
	 generic_field_name <"x_flag_complex_method",gcc_options,x_flag_complex_method> x_flag_complex_method;
	 generic_field_name <"x_flag_debug_asm",gcc_options,x_flag_debug_asm> x_flag_debug_asm;
	 generic_field_name <"x_flag_dump_rtl_in_asm",gcc_options,x_flag_dump_rtl_in_asm> x_flag_dump_rtl_in_asm;
	 generic_field_name <"x_flag_evaluation_order",gcc_options,x_flag_evaluation_order> x_flag_evaluation_order;
	 generic_field_name <"x_flag_gen_aux_info",gcc_options,x_flag_gen_aux_info> x_flag_gen_aux_info;
	 generic_field_name <"x_flag_generate_lto",gcc_options,x_flag_generate_lto> x_flag_generate_lto;
	 generic_field_name <"x_flag_print_asm_name",gcc_options,x_flag_print_asm_name> x_flag_print_asm_name;
	 generic_field_name <"x_flag_shlib",gcc_options,x_flag_shlib> x_flag_shlib;
	 generic_field_name <"x_main_input_baselength",gcc_options,x_main_input_baselength> x_main_input_baselength;
	 generic_field_name <"x_optimize",gcc_options,x_optimize> x_optimize;
	 generic_field_name <"x_optimize_fast",gcc_options,x_optimize_fast> x_optimize_fast;
	 generic_field_name <"x_optimize_size",gcc_options,x_optimize_size> x_optimize_size;
	 generic_field_name <"x_recip_mask_explicit",gcc_options,x_recip_mask_explicit> x_recip_mask_explicit;
	 generic_field_name <"x_rtl_dump_and_exit",gcc_options,x_rtl_dump_and_exit> x_rtl_dump_and_exit;
	 generic_field_name <"x_target_flags",gcc_options,x_target_flags> x_target_flags;
	 generic_field_name <"x_help_columns",gcc_options,x_help_columns> x_help_columns;
	 generic_field_name <"x_initial_max_fld_align",gcc_options,x_initial_max_fld_align> x_initial_max_fld_align;
	 generic_field_name <"x_flag_instrument_functions_exclude_files",gcc_options,x_flag_instrument_functions_exclude_files> x_flag_instrument_functions_exclude_files;
	 generic_field_name <"x_flag_instrument_functions_exclude_functions",gcc_options,x_flag_instrument_functions_exclude_functions> x_flag_instrument_functions_exclude_functions;
	 generic_field_name <"x_help_flag",gcc_options,x_help_flag> x_help_flag;
	 generic_field_name <"x_flag_preprocess_only",gcc_options,x_flag_preprocess_only> x_flag_preprocess_only;
	 generic_field_name <"x_warn_abi",gcc_options,x_warn_abi> x_warn_abi;
	 generic_field_name <"x_warn_address",gcc_options,x_warn_address> x_warn_address;
	 generic_field_name <"x_warn_aggregate_return",gcc_options,x_warn_aggregate_return> x_warn_aggregate_return;
	 generic_field_name <"x_warn_array_bounds",gcc_options,x_warn_array_bounds> x_warn_array_bounds;
	 generic_field_name <"x_warn_assign_intercept",gcc_options,x_warn_assign_intercept> x_warn_assign_intercept;
	 generic_field_name <"x_warn_attributes",gcc_options,x_warn_attributes> x_warn_attributes;
	 generic_field_name <"x_warn_bad_function_cast",gcc_options,x_warn_bad_function_cast> x_warn_bad_function_cast;
	 generic_field_name <"x_warn_cxx_compat",gcc_options,x_warn_cxx_compat> x_warn_cxx_compat;
	 generic_field_name <"x_warn_cxx0x_compat",gcc_options,x_warn_cxx0x_compat> x_warn_cxx0x_compat;
	 generic_field_name <"x_warn_cast_align",gcc_options,x_warn_cast_align> x_warn_cast_align;
	 generic_field_name <"x_warn_cast_qual",gcc_options,x_warn_cast_qual> x_warn_cast_qual;
	 generic_field_name <"x_warn_char_subscripts",gcc_options,x_warn_char_subscripts> x_warn_char_subscripts;
	 generic_field_name <"x_warn_clobbered",gcc_options,x_warn_clobbered> x_warn_clobbered;
	 generic_field_name <"x_warn_conversion",gcc_options,x_warn_conversion> x_warn_conversion;
	 generic_field_name <"x_warn_conversion_null",gcc_options,x_warn_conversion_null> x_warn_conversion_null;
	 generic_field_name <"x_warn_coverage_mismatch",gcc_options,x_warn_coverage_mismatch> x_warn_coverage_mismatch;
	 generic_field_name <"x_warn_cpp",gcc_options,x_warn_cpp> x_warn_cpp;
	 generic_field_name <"x_warn_ctor_dtor_privacy",gcc_options,x_warn_ctor_dtor_privacy> x_warn_ctor_dtor_privacy;
	 generic_field_name <"x_warn_declaration_after_statement",gcc_options,x_warn_declaration_after_statement> x_warn_declaration_after_statement;
	 generic_field_name <"x_warn_delnonvdtor",gcc_options,x_warn_delnonvdtor> x_warn_delnonvdtor;
	 generic_field_name <"x_warn_deprecated",gcc_options,x_warn_deprecated> x_warn_deprecated;
	 generic_field_name <"x_warn_deprecated_decl",gcc_options,x_warn_deprecated_decl> x_warn_deprecated_decl;
	 generic_field_name <"x_warn_disabled_optimization",gcc_options,x_warn_disabled_optimization> x_warn_disabled_optimization;
	 generic_field_name <"x_warn_div_by_zero",gcc_options,x_warn_div_by_zero> x_warn_div_by_zero;
	 generic_field_name <"x_warn_double_promotion",gcc_options,x_warn_double_promotion> x_warn_double_promotion;
	 generic_field_name <"x_warn_ecpp",gcc_options,x_warn_ecpp> x_warn_ecpp;
	 generic_field_name <"x_warn_empty_body",gcc_options,x_warn_empty_body> x_warn_empty_body;
	 generic_field_name <"x_warn_enum_compare",gcc_options,x_warn_enum_compare> x_warn_enum_compare;
	 generic_field_name <"x_warnings_are_errors",gcc_options,x_warnings_are_errors> x_warnings_are_errors;
	 generic_field_name <"x_extra_warnings",gcc_options,x_extra_warnings> x_extra_warnings;
	 generic_field_name <"x_flag_extraneous_semicolon",gcc_options,x_flag_extraneous_semicolon> x_flag_extraneous_semicolon;
	 generic_field_name <"x_flag_fatal_errors",gcc_options,x_flag_fatal_errors> x_flag_fatal_errors;
	 generic_field_name <"x_warn_float_equal",gcc_options,x_warn_float_equal> x_warn_float_equal;
	 generic_field_name <"x_warn_format_contains_nul",gcc_options,x_warn_format_contains_nul> x_warn_format_contains_nul;
	 generic_field_name <"x_warn_format_extra_args",gcc_options,x_warn_format_extra_args> x_warn_format_extra_args;
	 generic_field_name <"x_warn_format_nonliteral",gcc_options,x_warn_format_nonliteral> x_warn_format_nonliteral;
	 generic_field_name <"x_warn_format_security",gcc_options,x_warn_format_security> x_warn_format_security;
	 generic_field_name <"x_warn_format_y2k",gcc_options,x_warn_format_y2k> x_warn_format_y2k;
	 generic_field_name <"x_warn_format_zero_length",gcc_options,x_warn_format_zero_length> x_warn_format_zero_length;
	 generic_field_name <"x_warn_free_nonheap_object",gcc_options,x_warn_free_nonheap_object> x_warn_free_nonheap_object;
	 generic_field_name <"x_warn_ignored_qualifiers",gcc_options,x_warn_ignored_qualifiers> x_warn_ignored_qualifiers;
	 generic_field_name <"x_warn_implicit",gcc_options,x_warn_implicit> x_warn_implicit;
	 generic_field_name <"x_warn_implicit_function_declaration",gcc_options,x_warn_implicit_function_declaration> x_warn_implicit_function_declaration;
	 generic_field_name <"x_warn_implicit_int",gcc_options,x_warn_implicit_int> x_warn_implicit_int;
	 generic_field_name <"x_warn_init_self",gcc_options,x_warn_init_self> x_warn_init_self;
	 generic_field_name <"x_warn_inline",gcc_options,x_warn_inline> x_warn_inline;
	 generic_field_name <"x_warn_int_to_pointer_cast",gcc_options,x_warn_int_to_pointer_cast> x_warn_int_to_pointer_cast;
	 generic_field_name <"x_warn_invalid_memory_model",gcc_options,x_warn_invalid_memory_model> x_warn_invalid_memory_model;
	 generic_field_name <"x_warn_invalid_offsetof",gcc_options,x_warn_invalid_offsetof> x_warn_invalid_offsetof;
	 generic_field_name <"x_warn_jump_misses_init",gcc_options,x_warn_jump_misses_init> x_warn_jump_misses_init;
	 generic_field_name <"x_warn_logical_op",gcc_options,x_warn_logical_op> x_warn_logical_op;
	 generic_field_name <"x_warn_long_long",gcc_options,x_warn_long_long> x_warn_long_long;
	 generic_field_name <"x_warn_main",gcc_options,x_warn_main> x_warn_main;
	 generic_field_name <"x_warn_maybe_uninitialized",gcc_options,x_warn_maybe_uninitialized> x_warn_maybe_uninitialized;
	 generic_field_name <"x_warn_missing_braces",gcc_options,x_warn_missing_braces> x_warn_missing_braces;
	 generic_field_name <"x_warn_missing_declarations",gcc_options,x_warn_missing_declarations> x_warn_missing_declarations;
	 generic_field_name <"x_warn_missing_field_initializers",gcc_options,x_warn_missing_field_initializers> x_warn_missing_field_initializers;
	 generic_field_name <"x_warn_missing_format_attribute",gcc_options,x_warn_missing_format_attribute> x_warn_missing_format_attribute;
	 generic_field_name <"x_warn_missing_noreturn",gcc_options,x_warn_missing_noreturn> x_warn_missing_noreturn;
	 generic_field_name <"x_warn_missing_parameter_type",gcc_options,x_warn_missing_parameter_type> x_warn_missing_parameter_type;
	 generic_field_name <"x_warn_missing_prototypes",gcc_options,x_warn_missing_prototypes> x_warn_missing_prototypes;
	 generic_field_name <"x_warn_mudflap",gcc_options,x_warn_mudflap> x_warn_mudflap;
	 generic_field_name <"x_warn_narrowing",gcc_options,x_warn_narrowing> x_warn_narrowing;
	 generic_field_name <"x_warn_nested_externs",gcc_options,x_warn_nested_externs> x_warn_nested_externs;
	 generic_field_name <"x_warn_noexcept",gcc_options,x_warn_noexcept> x_warn_noexcept;
	 generic_field_name <"x_warn_nontemplate_friend",gcc_options,x_warn_nontemplate_friend> x_warn_nontemplate_friend;
	 generic_field_name <"x_warn_nonvdtor",gcc_options,x_warn_nonvdtor> x_warn_nonvdtor;
	 generic_field_name <"x_warn_nonnull",gcc_options,x_warn_nonnull> x_warn_nonnull;
	 generic_field_name <"x_warn_old_style_cast",gcc_options,x_warn_old_style_cast> x_warn_old_style_cast;
	 generic_field_name <"x_warn_old_style_declaration",gcc_options,x_warn_old_style_declaration> x_warn_old_style_declaration;
	 generic_field_name <"x_warn_old_style_definition",gcc_options,x_warn_old_style_definition> x_warn_old_style_definition;
	 generic_field_name <"x_flag_newer",gcc_options,x_flag_newer> x_flag_newer;
	 generic_field_name <"x_warn_overflow",gcc_options,x_warn_overflow> x_warn_overflow;
	 generic_field_name <"x_warn_overlength_strings",gcc_options,x_warn_overlength_strings> x_warn_overlength_strings;
	 generic_field_name <"x_warn_overloaded_virtual",gcc_options,x_warn_overloaded_virtual> x_warn_overloaded_virtual;
	 generic_field_name <"x_warn_override_init",gcc_options,x_warn_override_init> x_warn_override_init;
	 generic_field_name <"x_warn_packed",gcc_options,x_warn_packed> x_warn_packed;
	 generic_field_name <"x_warn_packed_bitfield_compat",gcc_options,x_warn_packed_bitfield_compat> x_warn_packed_bitfield_compat;
	 generic_field_name <"x_warn_padded",gcc_options,x_warn_padded> x_warn_padded;
	 generic_field_name <"x_warn_parentheses",gcc_options,x_warn_parentheses> x_warn_parentheses;
	 generic_field_name <"x_warn_pmf2ptr",gcc_options,x_warn_pmf2ptr> x_warn_pmf2ptr;
	 generic_field_name <"x_warn_pointer_arith",gcc_options,x_warn_pointer_arith> x_warn_pointer_arith;
	 generic_field_name <"x_warn_pointer_sign",gcc_options,x_warn_pointer_sign> x_warn_pointer_sign;
	 generic_field_name <"x_warn_pointer_to_int_cast",gcc_options,x_warn_pointer_to_int_cast> x_warn_pointer_to_int_cast;
	 generic_field_name <"x_warn_pragmas",gcc_options,x_warn_pragmas> x_warn_pragmas;
	 generic_field_name <"x_warn_property_assign_default",gcc_options,x_warn_property_assign_default> x_warn_property_assign_default;
	 generic_field_name <"x_warn_protocol",gcc_options,x_warn_protocol> x_warn_protocol;
	 generic_field_name <"x_warn_psabi",gcc_options,x_warn_psabi> x_warn_psabi;
	 generic_field_name <"x_warn_redundant_decls",gcc_options,x_warn_redundant_decls> x_warn_redundant_decls;
	 generic_field_name <"x_flag_redundant",gcc_options,x_flag_redundant> x_flag_redundant;
	 generic_field_name <"x_warn_reorder",gcc_options,x_warn_reorder> x_warn_reorder;
	 generic_field_name <"x_warn_return_type",gcc_options,x_warn_return_type> x_warn_return_type;
	 generic_field_name <"x_warn_selector",gcc_options,x_warn_selector> x_warn_selector;
	 generic_field_name <"x_warn_sequence_point",gcc_options,x_warn_sequence_point> x_warn_sequence_point;
	 generic_field_name <"x_warn_shadow",gcc_options,x_warn_shadow> x_warn_shadow;
	 generic_field_name <"x_warn_sign_compare",gcc_options,x_warn_sign_compare> x_warn_sign_compare;
	 generic_field_name <"x_warn_sign_conversion",gcc_options,x_warn_sign_conversion> x_warn_sign_conversion;
	 generic_field_name <"x_warn_sign_promo",gcc_options,x_warn_sign_promo> x_warn_sign_promo;
	 generic_field_name <"x_warn_stack_protect",gcc_options,x_warn_stack_protect> x_warn_stack_protect;
	 generic_field_name <"x_warn_stack_usage",gcc_options,x_warn_stack_usage> x_warn_stack_usage;
	 generic_field_name <"x_warn_strict_aliasing",gcc_options,x_warn_strict_aliasing> x_warn_strict_aliasing;
	 generic_field_name <"x_warn_strict_null_sentinel",gcc_options,x_warn_strict_null_sentinel> x_warn_strict_null_sentinel;
	 generic_field_name <"x_warn_strict_overflow",gcc_options,x_warn_strict_overflow> x_warn_strict_overflow;
	 generic_field_name <"x_warn_strict_prototypes",gcc_options,x_warn_strict_prototypes> x_warn_strict_prototypes;
	 generic_field_name <"x_warn_strict_selector_match",gcc_options,x_warn_strict_selector_match> x_warn_strict_selector_match;
	 generic_field_name <"x_warn_suggest_attribute_const",gcc_options,x_warn_suggest_attribute_const> x_warn_suggest_attribute_const;
	 generic_field_name <"x_warn_suggest_attribute_noreturn",gcc_options,x_warn_suggest_attribute_noreturn> x_warn_suggest_attribute_noreturn;
	 generic_field_name <"x_warn_suggest_attribute_pure",gcc_options,x_warn_suggest_attribute_pure> x_warn_suggest_attribute_pure;
	 generic_field_name <"x_warn_switch",gcc_options,x_warn_switch> x_warn_switch;
	 generic_field_name <"x_warn_switch_default",gcc_options,x_warn_switch_default> x_warn_switch_default;
	 generic_field_name <"x_warn_switch_enum",gcc_options,x_warn_switch_enum> x_warn_switch_enum;
	 generic_field_name <"x_warn_sync_nand",gcc_options,x_warn_sync_nand> x_warn_sync_nand;
	 generic_field_name <"x_warn_synth",gcc_options,x_warn_synth> x_warn_synth;
	 generic_field_name <"x_warn_system_headers",gcc_options,x_warn_system_headers> x_warn_system_headers;
	 generic_field_name <"x_warn_traditional",gcc_options,x_warn_traditional> x_warn_traditional;
	 generic_field_name <"x_warn_traditional_conversion",gcc_options,x_warn_traditional_conversion> x_warn_traditional_conversion;
	 generic_field_name <"x_warn_trampolines",gcc_options,x_warn_trampolines> x_warn_trampolines;
	 generic_field_name <"x_warn_type_limits",gcc_options,x_warn_type_limits> x_warn_type_limits;
	 generic_field_name <"x_warn_undeclared_selector",gcc_options,x_warn_undeclared_selector> x_warn_undeclared_selector;
	 generic_field_name <"x_warn_uninitialized",gcc_options,x_warn_uninitialized> x_warn_uninitialized;
	 generic_field_name <"x_warn_unsafe_loop_optimizations",gcc_options,x_warn_unsafe_loop_optimizations> x_warn_unsafe_loop_optimizations;
	 generic_field_name <"x_warn_unsuffixed_float_constants",gcc_options,x_warn_unsuffixed_float_constants> x_warn_unsuffixed_float_constants;
	 generic_field_name <"x_warn_unused",gcc_options,x_warn_unused> x_warn_unused;
	 generic_field_name <"x_warn_unused_but_set_parameter",gcc_options,x_warn_unused_but_set_parameter> x_warn_unused_but_set_parameter;
	 generic_field_name <"x_warn_unused_but_set_variable",gcc_options,x_warn_unused_but_set_variable> x_warn_unused_but_set_variable;
	 generic_field_name <"x_warn_unused_function",gcc_options,x_warn_unused_function> x_warn_unused_function;
	 generic_field_name <"x_warn_unused_label",gcc_options,x_warn_unused_label> x_warn_unused_label;
	 generic_field_name <"x_warn_unused_local_typedefs",gcc_options,x_warn_unused_local_typedefs> x_warn_unused_local_typedefs;
	 generic_field_name <"x_warn_unused_parameter",gcc_options,x_warn_unused_parameter> x_warn_unused_parameter;
	 generic_field_name <"x_warn_unused_result",gcc_options,x_warn_unused_result> x_warn_unused_result;
	 generic_field_name <"x_warn_unused_value",gcc_options,x_warn_unused_value> x_warn_unused_value;
	 generic_field_name <"x_warn_unused_variable",gcc_options,x_warn_unused_variable> x_warn_unused_variable;
	 generic_field_name <"x_warn_vector_operation_performance",gcc_options,x_warn_vector_operation_performance> x_warn_vector_operation_performance;
	 generic_field_name <"x_warn_vla",gcc_options,x_warn_vla> x_warn_vla;
	 generic_field_name <"x_warn_volatile_register_var",gcc_options,x_warn_volatile_register_var> x_warn_volatile_register_var;
	 generic_field_name <"x_warn_write_strings",gcc_options,x_warn_write_strings> x_warn_write_strings;
	 generic_field_name <"x_warn_zero_as_null_pointer_constant",gcc_options,x_warn_zero_as_null_pointer_constant> x_warn_zero_as_null_pointer_constant;
	 generic_field_name <"x_aux_info_file_name",gcc_options,x_aux_info_file_name> x_aux_info_file_name;
	 generic_field_name <"x_aux_base_name",gcc_options,x_aux_base_name> x_aux_base_name;
	 generic_field_name <"x_dump_base_name",gcc_options,x_dump_base_name> x_dump_base_name;
	 generic_field_name <"x_dump_dir_name",gcc_options,x_dump_dir_name> x_dump_dir_name;
	 generic_field_name <"x_flag_pic",gcc_options,x_flag_pic> x_flag_pic;
	 generic_field_name <"x_flag_pie",gcc_options,x_flag_pie> x_flag_pie;
	 generic_field_name <"x_flag_abi_version",gcc_options,x_flag_abi_version> x_flag_abi_version;
	 generic_field_name <"x_flag_access_control",gcc_options,x_flag_access_control> x_flag_access_control;
	 generic_field_name <"x_align_functions",gcc_options,x_align_functions> x_align_functions;
	 generic_field_name <"x_align_jumps",gcc_options,x_align_jumps> x_align_jumps;
	 generic_field_name <"x_align_labels",gcc_options,x_align_labels> x_align_labels;
	 generic_field_name <"x_align_loops",gcc_options,x_align_loops> x_align_loops;
	 generic_field_name <"x_flag_allow_parameterless_variadic_functions",gcc_options,x_flag_allow_parameterless_variadic_functions> x_flag_allow_parameterless_variadic_functions;
	 generic_field_name <"x_flag_no_asm",gcc_options,x_flag_no_asm> x_flag_no_asm;
	 generic_field_name <"x_flag_assert",gcc_options,x_flag_assert> x_flag_assert;
	 generic_field_name <"x_flag_associative_math",gcc_options,x_flag_associative_math> x_flag_associative_math;
	 generic_field_name <"x_flag_asynchronous_unwind_tables",gcc_options,x_flag_asynchronous_unwind_tables> x_flag_asynchronous_unwind_tables;
	 generic_field_name <"x_flag_auto_inc_dec",gcc_options,x_flag_auto_inc_dec> x_flag_auto_inc_dec;
	 generic_field_name <"x_flag_bootstrap_classes",gcc_options,x_flag_bootstrap_classes> x_flag_bootstrap_classes;
	 generic_field_name <"x_flag_bounds_check",gcc_options,x_flag_bounds_check> x_flag_bounds_check;
	 generic_field_name <"x_flag_branch_on_count_reg",gcc_options,x_flag_branch_on_count_reg> x_flag_branch_on_count_reg;
	 generic_field_name <"x_flag_branch_probabilities",gcc_options,x_flag_branch_probabilities> x_flag_branch_probabilities;
	 generic_field_name <"x_flag_branch_target_load_optimize",gcc_options,x_flag_branch_target_load_optimize> x_flag_branch_target_load_optimize;
	 generic_field_name <"x_flag_branch_target_load_optimize2",gcc_options,x_flag_branch_target_load_optimize2> x_flag_branch_target_load_optimize2;
	 generic_field_name <"x_flag_btr_bb_exclusive",gcc_options,x_flag_btr_bb_exclusive> x_flag_btr_bb_exclusive;
	 generic_field_name <"x_flag_building_libgcc",gcc_options,x_flag_building_libgcc> x_flag_building_libgcc;
	 generic_field_name <"x_flag_no_builtin",gcc_options,x_flag_no_builtin> x_flag_no_builtin;
	 generic_field_name <"x_common_deferred_options",gcc_options,x_common_deferred_options> x_common_deferred_options;
	 generic_field_name <"x_flag_caller_saves",gcc_options,x_flag_caller_saves> x_flag_caller_saves;
	 generic_field_name <"x_flag_check_data_deps",gcc_options,x_flag_check_data_deps> x_flag_check_data_deps;
	 generic_field_name <"x_flag_check_new",gcc_options,x_flag_check_new> x_flag_check_new;
	 generic_field_name <"x_flag_check_references",gcc_options,x_flag_check_references> x_flag_check_references;
	 generic_field_name <"x_flag_combine_stack_adjustments",gcc_options,x_flag_combine_stack_adjustments> x_flag_combine_stack_adjustments;
	 generic_field_name <"x_flag_no_common",gcc_options,x_flag_no_common> x_flag_no_common;
	 generic_field_name <"x_flag_compare_debug",gcc_options,x_flag_compare_debug> x_flag_compare_debug;
	 generic_field_name <"x_flag_compare_debug_opt",gcc_options,x_flag_compare_debug_opt> x_flag_compare_debug_opt;
	 generic_field_name <"x_flag_compare_elim_after_reload",gcc_options,x_flag_compare_elim_after_reload> x_flag_compare_elim_after_reload;
	 generic_field_name <"x_flag_conserve_space",gcc_options,x_flag_conserve_space> x_flag_conserve_space;
	 generic_field_name <"x_flag_conserve_stack",gcc_options,x_flag_conserve_stack> x_flag_conserve_stack;
	 generic_field_name <"x_max_constexpr_depth",gcc_options,x_max_constexpr_depth> x_max_constexpr_depth;
	 generic_field_name <"x_flag_cprop_registers",gcc_options,x_flag_cprop_registers> x_flag_cprop_registers;
	 generic_field_name <"x_flag_crossjumping",gcc_options,x_flag_crossjumping> x_flag_crossjumping;
	 generic_field_name <"x_flag_cse_follow_jumps",gcc_options,x_flag_cse_follow_jumps> x_flag_cse_follow_jumps;
	 generic_field_name <"x_flag_cx_fortran_rules",gcc_options,x_flag_cx_fortran_rules> x_flag_cx_fortran_rules;
	 generic_field_name <"x_flag_cx_limited_range",gcc_options,x_flag_cx_limited_range> x_flag_cx_limited_range;
	 generic_field_name <"x_flag_data_sections",gcc_options,x_flag_data_sections> x_flag_data_sections;
	 generic_field_name <"x_flag_dce",gcc_options,x_flag_dce> x_flag_dce;
	 generic_field_name <"x_flag_debug_types_section",gcc_options,x_flag_debug_types_section> x_flag_debug_types_section;
	 generic_field_name <"x_flag_deduce_init_list",gcc_options,x_flag_deduce_init_list> x_flag_deduce_init_list;
	 generic_field_name <"x_flag_defer_pop",gcc_options,x_flag_defer_pop> x_flag_defer_pop;
	 generic_field_name <"x_flag_delayed_branch",gcc_options,x_flag_delayed_branch> x_flag_delayed_branch;
	 generic_field_name <"x_flag_delete_null_pointer_checks",gcc_options,x_flag_delete_null_pointer_checks> x_flag_delete_null_pointer_checks;
	 generic_field_name <"x_flag_devirtualize",gcc_options,x_flag_devirtualize> x_flag_devirtualize;
	 generic_field_name <"x_flag_diagnostics_show_option",gcc_options,x_flag_diagnostics_show_option> x_flag_diagnostics_show_option;
	 generic_field_name <"x_flag_dse",gcc_options,x_flag_dse> x_flag_dse;
	 generic_field_name <"x_flag_dump_final_insns",gcc_options,x_flag_dump_final_insns> x_flag_dump_final_insns;
	 generic_field_name <"x_flag_dump_go_spec",gcc_options,x_flag_dump_go_spec> x_flag_dump_go_spec;
	 generic_field_name <"x_flag_dump_noaddr",gcc_options,x_flag_dump_noaddr> x_flag_dump_noaddr;
	 generic_field_name <"x_flag_dump_passes",gcc_options,x_flag_dump_passes> x_flag_dump_passes;
	 generic_field_name <"x_flag_dump_unnumbered",gcc_options,x_flag_dump_unnumbered> x_flag_dump_unnumbered;
	 generic_field_name <"x_flag_dump_unnumbered_links",gcc_options,x_flag_dump_unnumbered_links> x_flag_dump_unnumbered_links;
	 generic_field_name <"x_flag_dwarf2_cfi_asm",gcc_options,x_flag_dwarf2_cfi_asm> x_flag_dwarf2_cfi_asm;
	 generic_field_name <"x_flag_early_inlining",gcc_options,x_flag_early_inlining> x_flag_early_inlining;
	 generic_field_name <"x_flag_elide_constructors",gcc_options,x_flag_elide_constructors> x_flag_elide_constructors;
	 generic_field_name <"x_flag_eliminate_dwarf2_dups",gcc_options,x_flag_eliminate_dwarf2_dups> x_flag_eliminate_dwarf2_dups;
	 generic_field_name <"x_flag_debug_only_used_symbols",gcc_options,x_flag_debug_only_used_symbols> x_flag_debug_only_used_symbols;
	 generic_field_name <"x_flag_eliminate_unused_debug_types",gcc_options,x_flag_eliminate_unused_debug_types> x_flag_eliminate_unused_debug_types;
	 generic_field_name <"x_flag_emit_class_debug_always",gcc_options,x_flag_emit_class_debug_always> x_flag_emit_class_debug_always;
	 generic_field_name <"x_flag_emit_class_files",gcc_options,x_flag_emit_class_files> x_flag_emit_class_files;
	 generic_field_name <"x_flag_enforce_eh_specs",gcc_options,x_flag_enforce_eh_specs> x_flag_enforce_eh_specs;
	 generic_field_name <"x_flag_exceptions",gcc_options,x_flag_exceptions> x_flag_exceptions;
	 generic_field_name <"x_flag_excess_precision_cmdline",gcc_options,x_flag_excess_precision_cmdline> x_flag_excess_precision_cmdline;
	 generic_field_name <"x_flag_expensive_optimizations",gcc_options,x_flag_expensive_optimizations> x_flag_expensive_optimizations;
	 generic_field_name <"x_flag_fat_lto_objects",gcc_options,x_flag_fat_lto_objects> x_flag_fat_lto_objects;
	 generic_field_name <"x_flag_filelist_file",gcc_options,x_flag_filelist_file> x_flag_filelist_file;
	 generic_field_name <"x_flag_finite_math_only",gcc_options,x_flag_finite_math_only> x_flag_finite_math_only;
	 generic_field_name <"x_flag_float_store",gcc_options,x_flag_float_store> x_flag_float_store;
	 generic_field_name <"x_flag_new_for_scope",gcc_options,x_flag_new_for_scope> x_flag_new_for_scope;
	 generic_field_name <"x_flag_force_classes_archive_check",gcc_options,x_flag_force_classes_archive_check> x_flag_force_classes_archive_check;
	 generic_field_name <"x_flag_forward_propagate",gcc_options,x_flag_forward_propagate> x_flag_forward_propagate;
	 generic_field_name <"x_flag_fp_contract_mode",gcc_options,x_flag_fp_contract_mode> x_flag_fp_contract_mode;
	 generic_field_name <"x_flag_friend_injection",gcc_options,x_flag_friend_injection> x_flag_friend_injection;
	 generic_field_name <"x_flag_no_function_cse",gcc_options,x_flag_no_function_cse> x_flag_no_function_cse;
	 generic_field_name <"x_flag_function_sections",gcc_options,x_flag_function_sections> x_flag_function_sections;
	 generic_field_name <"x_flag_gcse",gcc_options,x_flag_gcse> x_flag_gcse;
	 generic_field_name <"x_flag_gcse_after_reload",gcc_options,x_flag_gcse_after_reload> x_flag_gcse_after_reload;
	 generic_field_name <"x_flag_gcse_las",gcc_options,x_flag_gcse_las> x_flag_gcse_las;
	 generic_field_name <"x_flag_gcse_lm",gcc_options,x_flag_gcse_lm> x_flag_gcse_lm;
	 generic_field_name <"x_flag_gcse_sm",gcc_options,x_flag_gcse_sm> x_flag_gcse_sm;
	 generic_field_name <"x_flag_no_gnu_keywords",gcc_options,x_flag_no_gnu_keywords> x_flag_no_gnu_keywords;
	 generic_field_name <"x_flag_next_runtime",gcc_options,x_flag_next_runtime> x_flag_next_runtime;
	 generic_field_name <"x_flag_tm",gcc_options,x_flag_tm> x_flag_tm;
	 generic_field_name <"x_flag_gnu89_inline",gcc_options,x_flag_gnu89_inline> x_flag_gnu89_inline;
	 generic_field_name <"x_go_check_divide_overflow",gcc_options,x_go_check_divide_overflow> x_go_check_divide_overflow;
	 generic_field_name <"x_go_check_divide_zero",gcc_options,x_go_check_divide_zero> x_go_check_divide_zero;
	 generic_field_name <"x_flag_graphite",gcc_options,x_flag_graphite> x_flag_graphite;
	 generic_field_name <"x_flag_graphite_identity",gcc_options,x_flag_graphite_identity> x_flag_graphite_identity;
	 generic_field_name <"x_flag_guess_branch_prob",gcc_options,x_flag_guess_branch_prob> x_flag_guess_branch_prob;
	 generic_field_name <"x_flag_hash_synchronization",gcc_options,x_flag_hash_synchronization> x_flag_hash_synchronization;
	 generic_field_name <"x_flag_no_ident",gcc_options,x_flag_no_ident> x_flag_no_ident;
	 generic_field_name <"x_flag_if_conversion",gcc_options,x_flag_if_conversion> x_flag_if_conversion;
	 generic_field_name <"x_flag_if_conversion2",gcc_options,x_flag_if_conversion2> x_flag_if_conversion2;
	 generic_field_name <"x_flag_implement_inlines",gcc_options,x_flag_implement_inlines> x_flag_implement_inlines;
	 generic_field_name <"x_flag_implicit_inline_templates",gcc_options,x_flag_implicit_inline_templates> x_flag_implicit_inline_templates;
	 generic_field_name <"x_flag_implicit_templates",gcc_options,x_flag_implicit_templates> x_flag_implicit_templates;
	 generic_field_name <"x_flag_indirect_classes",gcc_options,x_flag_indirect_classes> x_flag_indirect_classes;
	 generic_field_name <"x_flag_indirect_dispatch",gcc_options,x_flag_indirect_dispatch> x_flag_indirect_dispatch;
	 generic_field_name <"x_flag_indirect_inlining",gcc_options,x_flag_indirect_inlining> x_flag_indirect_inlining;
	 generic_field_name <"x_flag_inhibit_size_directive",gcc_options,x_flag_inhibit_size_directive> x_flag_inhibit_size_directive;
	 generic_field_name <"x_flag_no_inline",gcc_options,x_flag_no_inline> x_flag_no_inline;
	 generic_field_name <"x_flag_inline_atomics",gcc_options,x_flag_inline_atomics> x_flag_inline_atomics;
	 generic_field_name <"x_flag_inline_functions",gcc_options,x_flag_inline_functions> x_flag_inline_functions;
	 generic_field_name <"x_flag_inline_functions_called_once",gcc_options,x_flag_inline_functions_called_once> x_flag_inline_functions_called_once;
	 generic_field_name <"x_flag_inline_small_functions",gcc_options,x_flag_inline_small_functions> x_flag_inline_small_functions;
	 generic_field_name <"x_flag_instrument_function_entry_exit",gcc_options,x_flag_instrument_function_entry_exit> x_flag_instrument_function_entry_exit;
	 generic_field_name <"x_flag_ipa_cp",gcc_options,x_flag_ipa_cp> x_flag_ipa_cp;
	 generic_field_name <"x_flag_ipa_cp_clone",gcc_options,x_flag_ipa_cp_clone> x_flag_ipa_cp_clone;
	 generic_field_name <"x_flag_ipa_matrix_reorg",gcc_options,x_flag_ipa_matrix_reorg> x_flag_ipa_matrix_reorg;
	 generic_field_name <"x_flag_ipa_profile",gcc_options,x_flag_ipa_profile> x_flag_ipa_profile;
	 generic_field_name <"x_flag_ipa_pta",gcc_options,x_flag_ipa_pta> x_flag_ipa_pta;
	 generic_field_name <"x_flag_ipa_pure_const",gcc_options,x_flag_ipa_pure_const> x_flag_ipa_pure_const;
	 generic_field_name <"x_flag_ipa_reference",gcc_options,x_flag_ipa_reference> x_flag_ipa_reference;
	 generic_field_name <"x_flag_ipa_sra",gcc_options,x_flag_ipa_sra> x_flag_ipa_sra;
	 generic_field_name <"x_flag_ira_algorithm",gcc_options,x_flag_ira_algorithm> x_flag_ira_algorithm;
	 generic_field_name <"x_flag_ira_loop_pressure",gcc_options,x_flag_ira_loop_pressure> x_flag_ira_loop_pressure;
	 generic_field_name <"x_flag_ira_region",gcc_options,x_flag_ira_region> x_flag_ira_region;
	 generic_field_name <"x_flag_ira_share_save_slots",gcc_options,x_flag_ira_share_save_slots> x_flag_ira_share_save_slots;
	 generic_field_name <"x_flag_ira_share_spill_slots",gcc_options,x_flag_ira_share_spill_slots> x_flag_ira_share_spill_slots;
	 generic_field_name <"x_flag_ira_verbose",gcc_options,x_flag_ira_verbose> x_flag_ira_verbose;
	 generic_field_name <"x_flag_ivopts",gcc_options,x_flag_ivopts> x_flag_ivopts;
	 generic_field_name <"x_flag_jni",gcc_options,x_flag_jni> x_flag_jni;
	 generic_field_name <"x_flag_jump_tables",gcc_options,x_flag_jump_tables> x_flag_jump_tables;
	 generic_field_name <"x_flag_keep_inline_dllexport",gcc_options,x_flag_keep_inline_dllexport> x_flag_keep_inline_dllexport;
	 generic_field_name <"x_flag_keep_inline_functions",gcc_options,x_flag_keep_inline_functions> x_flag_keep_inline_functions;
	 generic_field_name <"x_flag_keep_static_consts",gcc_options,x_flag_keep_static_consts> x_flag_keep_static_consts;
	 generic_field_name <"x_flag_lax_vector_conversions",gcc_options,x_flag_lax_vector_conversions> x_flag_lax_vector_conversions;
	 generic_field_name <"x_flag_leading_underscore",gcc_options,x_flag_leading_underscore> x_flag_leading_underscore;
	 generic_field_name <"x_flag_loop_block",gcc_options,x_flag_loop_block> x_flag_loop_block;
	 generic_field_name <"x_flag_loop_flatten",gcc_options,x_flag_loop_flatten> x_flag_loop_flatten;
	 generic_field_name <"x_flag_loop_interchange",gcc_options,x_flag_loop_interchange> x_flag_loop_interchange;
	 generic_field_name <"x_flag_loop_parallelize_all",gcc_options,x_flag_loop_parallelize_all> x_flag_loop_parallelize_all;
	 generic_field_name <"x_flag_loop_strip_mine",gcc_options,x_flag_loop_strip_mine> x_flag_loop_strip_mine;
	 generic_field_name <"x_flag_lto_compression_level",gcc_options,x_flag_lto_compression_level> x_flag_lto_compression_level;
	 generic_field_name <"x_flag_lto_partition_1to1",gcc_options,x_flag_lto_partition_1to1> x_flag_lto_partition_1to1;
	 generic_field_name <"x_flag_lto_partition_balanced",gcc_options,x_flag_lto_partition_balanced> x_flag_lto_partition_balanced;
	 generic_field_name <"x_flag_lto_partition_none",gcc_options,x_flag_lto_partition_none> x_flag_lto_partition_none;
	 generic_field_name <"x_flag_lto_report",gcc_options,x_flag_lto_report> x_flag_lto_report;
	 generic_field_name <"x_flag_lto",gcc_options,x_flag_lto> x_flag_lto;
	 generic_field_name <"x_flag_ltrans",gcc_options,x_flag_ltrans> x_flag_ltrans;
	 generic_field_name <"x_ltrans_output_list",gcc_options,x_ltrans_output_list> x_ltrans_output_list;
	 generic_field_name <"x_flag_errno_math",gcc_options,x_flag_errno_math> x_flag_errno_math;
	 generic_field_name <"x_flag_max_errors",gcc_options,x_flag_max_errors> x_flag_max_errors;
	 generic_field_name <"x_mem_report",gcc_options,x_mem_report> x_mem_report;
	 generic_field_name <"x_flag_merge_constants",gcc_options,x_flag_merge_constants> x_flag_merge_constants;
	 generic_field_name <"x_flag_merge_debug_strings",gcc_options,x_flag_merge_debug_strings> x_flag_merge_debug_strings;
	 generic_field_name <"x_flag_modulo_sched",gcc_options,x_flag_modulo_sched> x_flag_modulo_sched;
	 generic_field_name <"x_flag_modulo_sched_allow_regmoves",gcc_options,x_flag_modulo_sched_allow_regmoves> x_flag_modulo_sched_allow_regmoves;
	 generic_field_name <"x_flag_move_loop_invariants",gcc_options,x_flag_move_loop_invariants> x_flag_move_loop_invariants;
	 generic_field_name <"x_flag_ms_extensions",gcc_options,x_flag_ms_extensions> x_flag_ms_extensions;
	 generic_field_name <"x_flag_mudflap",gcc_options,x_flag_mudflap> x_flag_mudflap;
	 generic_field_name <"x_flag_mudflap_ignore_reads",gcc_options,x_flag_mudflap_ignore_reads> x_flag_mudflap_ignore_reads;
	 generic_field_name <"x_flag_nil_receivers",gcc_options,x_flag_nil_receivers> x_flag_nil_receivers;
	 generic_field_name <"x_flag_non_call_exceptions",gcc_options,x_flag_non_call_exceptions> x_flag_non_call_exceptions;
	 generic_field_name <"x_flag_no_nonansi_builtin",gcc_options,x_flag_no_nonansi_builtin> x_flag_no_nonansi_builtin;
	 generic_field_name <"x_flag_nothrow_opt",gcc_options,x_flag_nothrow_opt> x_flag_nothrow_opt;
	 generic_field_name <"x_flag_objc_abi",gcc_options,x_flag_objc_abi> x_flag_objc_abi;
	 generic_field_name <"x_flag_objc_call_cxx_cdtors",gcc_options,x_flag_objc_call_cxx_cdtors> x_flag_objc_call_cxx_cdtors;
	 generic_field_name <"x_flag_objc_direct_dispatch",gcc_options,x_flag_objc_direct_dispatch> x_flag_objc_direct_dispatch;
	 generic_field_name <"x_flag_objc_exceptions",gcc_options,x_flag_objc_exceptions> x_flag_objc_exceptions;
	 generic_field_name <"x_flag_objc_gc",gcc_options,x_flag_objc_gc> x_flag_objc_gc;
	 generic_field_name <"x_flag_objc_nilcheck",gcc_options,x_flag_objc_nilcheck> x_flag_objc_nilcheck;
	 generic_field_name <"x_flag_objc_sjlj_exceptions",gcc_options,x_flag_objc_sjlj_exceptions> x_flag_objc_sjlj_exceptions;
	 generic_field_name <"x_flag_objc1_only",gcc_options,x_flag_objc1_only> x_flag_objc1_only;
	 generic_field_name <"x_flag_omit_frame_pointer",gcc_options,x_flag_omit_frame_pointer> x_flag_omit_frame_pointer;
	 generic_field_name <"x_flag_openmp",gcc_options,x_flag_openmp> x_flag_openmp;
	 generic_field_name <"x_flag_regmove",gcc_options,x_flag_regmove> x_flag_regmove;
	 generic_field_name <"x_flag_optimize_sibling_calls",gcc_options,x_flag_optimize_sibling_calls> x_flag_optimize_sibling_calls;
	 generic_field_name <"x_flag_optimize_sci",gcc_options,x_flag_optimize_sci> x_flag_optimize_sci;
	 generic_field_name <"x_flag_optimize_strlen",gcc_options,x_flag_optimize_strlen> x_flag_optimize_strlen;
	 generic_field_name <"x_flag_pack_struct",gcc_options,x_flag_pack_struct> x_flag_pack_struct;
	 generic_field_name <"x_flag_partial_inlining",gcc_options,x_flag_partial_inlining> x_flag_partial_inlining;
	 generic_field_name <"x_flag_pcc_struct_return",gcc_options,x_flag_pcc_struct_return> x_flag_pcc_struct_return;
	 generic_field_name <"x_flag_peel_loops",gcc_options,x_flag_peel_loops> x_flag_peel_loops;
	 generic_field_name <"x_flag_no_peephole",gcc_options,x_flag_no_peephole> x_flag_no_peephole;
	 generic_field_name <"x_flag_peephole2",gcc_options,x_flag_peephole2> x_flag_peephole2;
	 generic_field_name <"x_flag_plan9_extensions",gcc_options,x_flag_plan9_extensions> x_flag_plan9_extensions;
	 generic_field_name <"x_post_ipa_mem_report",gcc_options,x_post_ipa_mem_report> x_post_ipa_mem_report;
	 generic_field_name <"x_pre_ipa_mem_report",gcc_options,x_pre_ipa_mem_report> x_pre_ipa_mem_report;
	 generic_field_name <"x_flag_predictive_commoning",gcc_options,x_flag_predictive_commoning> x_flag_predictive_commoning;
	 generic_field_name <"x_flag_prefetch_loop_arrays",gcc_options,x_flag_prefetch_loop_arrays> x_flag_prefetch_loop_arrays;
	 generic_field_name <"x_flag_pretty_templates",gcc_options,x_flag_pretty_templates> x_flag_pretty_templates;
	 generic_field_name <"x_profile_flag",gcc_options,x_profile_flag> x_profile_flag;
	 generic_field_name <"x_profile_arc_flag",gcc_options,x_profile_arc_flag> x_profile_arc_flag;
	 generic_field_name <"x_flag_profile_correction",gcc_options,x_flag_profile_correction> x_flag_profile_correction;
	 generic_field_name <"x_profile_data_prefix",gcc_options,x_profile_data_prefix> x_profile_data_prefix;
	 generic_field_name <"x_flag_profile_use",gcc_options,x_flag_profile_use> x_flag_profile_use;
	 generic_field_name <"x_flag_profile_values",gcc_options,x_flag_profile_values> x_flag_profile_values;
	 generic_field_name <"x_flag_reciprocal_math",gcc_options,x_flag_reciprocal_math> x_flag_reciprocal_math;
	 generic_field_name <"x_flag_record_gcc_switches",gcc_options,x_flag_record_gcc_switches> x_flag_record_gcc_switches;
	 generic_field_name <"x_flag_reduced_reflection",gcc_options,x_flag_reduced_reflection> x_flag_reduced_reflection;
	 generic_field_name <"x_flag_ree",gcc_options,x_flag_ree> x_flag_ree;
	 generic_field_name <"x_flag_rename_registers",gcc_options,x_flag_rename_registers> x_flag_rename_registers;
	 generic_field_name <"x_flag_reorder_blocks",gcc_options,x_flag_reorder_blocks> x_flag_reorder_blocks;
	 generic_field_name <"x_flag_reorder_blocks_and_partition",gcc_options,x_flag_reorder_blocks_and_partition> x_flag_reorder_blocks_and_partition;
	 generic_field_name <"x_flag_reorder_functions",gcc_options,x_flag_reorder_functions> x_flag_reorder_functions;
	 generic_field_name <"x_flag_replace_objc_classes",gcc_options,x_flag_replace_objc_classes> x_flag_replace_objc_classes;
	 generic_field_name <"x_go_require_return_statement",gcc_options,x_go_require_return_statement> x_go_require_return_statement;
	 generic_field_name <"x_flag_rerun_cse_after_loop",gcc_options,x_flag_rerun_cse_after_loop> x_flag_rerun_cse_after_loop;
	 generic_field_name <"x_flag_resched_modulo_sched",gcc_options,x_flag_resched_modulo_sched> x_flag_resched_modulo_sched;
	 generic_field_name <"x_flag_rounding_math",gcc_options,x_flag_rounding_math> x_flag_rounding_math;
	 generic_field_name <"x_flag_rtti",gcc_options,x_flag_rtti> x_flag_rtti;
	 generic_field_name <"x_flag_sched_critical_path_heuristic",gcc_options,x_flag_sched_critical_path_heuristic> x_flag_sched_critical_path_heuristic;
	 generic_field_name <"x_flag_sched_dep_count_heuristic",gcc_options,x_flag_sched_dep_count_heuristic> x_flag_sched_dep_count_heuristic;
	 generic_field_name <"x_flag_sched_group_heuristic",gcc_options,x_flag_sched_group_heuristic> x_flag_sched_group_heuristic;
	 generic_field_name <"x_flag_schedule_interblock",gcc_options,x_flag_schedule_interblock> x_flag_schedule_interblock;
	 generic_field_name <"x_flag_sched_last_insn_heuristic",gcc_options,x_flag_sched_last_insn_heuristic> x_flag_sched_last_insn_heuristic;
	 generic_field_name <"x_flag_sched_pressure",gcc_options,x_flag_sched_pressure> x_flag_sched_pressure;
	 generic_field_name <"x_flag_sched_pressure_algorithm",gcc_options,x_flag_sched_pressure_algorithm> x_flag_sched_pressure_algorithm;
	 generic_field_name <"x_flag_sched_rank_heuristic",gcc_options,x_flag_sched_rank_heuristic> x_flag_sched_rank_heuristic;
	 generic_field_name <"x_flag_schedule_speculative",gcc_options,x_flag_schedule_speculative> x_flag_schedule_speculative;
	 generic_field_name <"x_flag_sched_spec_insn_heuristic",gcc_options,x_flag_sched_spec_insn_heuristic> x_flag_sched_spec_insn_heuristic;
	 generic_field_name <"x_flag_schedule_speculative_load",gcc_options,x_flag_schedule_speculative_load> x_flag_schedule_speculative_load;
	 generic_field_name <"x_flag_schedule_speculative_load_dangerous",gcc_options,x_flag_schedule_speculative_load_dangerous> x_flag_schedule_speculative_load_dangerous;
	 generic_field_name <"x_flag_sched_stalled_insns",gcc_options,x_flag_sched_stalled_insns> x_flag_sched_stalled_insns;
	 generic_field_name <"x_flag_sched_stalled_insns_dep",gcc_options,x_flag_sched_stalled_insns_dep> x_flag_sched_stalled_insns_dep;
	 generic_field_name <"x_sched_verbose_param",gcc_options,x_sched_verbose_param> x_sched_verbose_param;
	 generic_field_name <"x_flag_sched2_use_superblocks",gcc_options,x_flag_sched2_use_superblocks> x_flag_sched2_use_superblocks;
	 generic_field_name <"x_flag_schedule_insns",gcc_options,x_flag_schedule_insns> x_flag_schedule_insns;
	 generic_field_name <"x_flag_schedule_insns_after_reload",gcc_options,x_flag_schedule_insns_after_reload> x_flag_schedule_insns_after_reload;
	 generic_field_name <"x_flag_section_anchors",gcc_options,x_flag_section_anchors> x_flag_section_anchors;
	 generic_field_name <"x_flag_sel_sched_pipelining",gcc_options,x_flag_sel_sched_pipelining> x_flag_sel_sched_pipelining;
	 generic_field_name <"x_flag_sel_sched_pipelining_outer_loops",gcc_options,x_flag_sel_sched_pipelining_outer_loops> x_flag_sel_sched_pipelining_outer_loops;
	 generic_field_name <"x_flag_sel_sched_reschedule_pipelined",gcc_options,x_flag_sel_sched_reschedule_pipelined> x_flag_sel_sched_reschedule_pipelined;
	 generic_field_name <"x_flag_selective_scheduling",gcc_options,x_flag_selective_scheduling> x_flag_selective_scheduling;
	 generic_field_name <"x_flag_selective_scheduling2",gcc_options,x_flag_selective_scheduling2> x_flag_selective_scheduling2;
	 generic_field_name <"x_flag_short_double",gcc_options,x_flag_short_double> x_flag_short_double;
	 generic_field_name <"x_flag_short_enums",gcc_options,x_flag_short_enums> x_flag_short_enums;
	 generic_field_name <"x_flag_short_wchar",gcc_options,x_flag_short_wchar> x_flag_short_wchar;
	 generic_field_name <"x_flag_show_column",gcc_options,x_flag_show_column> x_flag_show_column;
	 generic_field_name <"x_flag_shrink_wrap",gcc_options,x_flag_shrink_wrap> x_flag_shrink_wrap;
	 generic_field_name <"x_flag_signaling_nans",gcc_options,x_flag_signaling_nans> x_flag_signaling_nans;
	 generic_field_name <"x_flag_signed_bitfields",gcc_options,x_flag_signed_bitfields> x_flag_signed_bitfields;
	 generic_field_name <"x_flag_signed_char",gcc_options,x_flag_signed_char> x_flag_signed_char;
	 generic_field_name <"x_flag_signed_zeros",gcc_options,x_flag_signed_zeros> x_flag_signed_zeros;
	 generic_field_name <"x_flag_single_precision_constant",gcc_options,x_flag_single_precision_constant> x_flag_single_precision_constant;
	 generic_field_name <"x_flag_split_ivs_in_unroller",gcc_options,x_flag_split_ivs_in_unroller> x_flag_split_ivs_in_unroller;
	 generic_field_name <"x_flag_split_stack",gcc_options,x_flag_split_stack> x_flag_split_stack;
	 generic_field_name <"x_flag_split_wide_types",gcc_options,x_flag_split_wide_types> x_flag_split_wide_types;
	 generic_field_name <"x_flag_stack_protect",gcc_options,x_flag_stack_protect> x_flag_stack_protect;
	 generic_field_name <"x_flag_stack_usage",gcc_options,x_flag_stack_usage> x_flag_stack_usage;
	 generic_field_name <"x_flag_detailed_statistics",gcc_options,x_flag_detailed_statistics> x_flag_detailed_statistics;
	 generic_field_name <"x_flag_store_check",gcc_options,x_flag_store_check> x_flag_store_check;
	 generic_field_name <"x_flag_strict_aliasing",gcc_options,x_flag_strict_aliasing> x_flag_strict_aliasing;
	 generic_field_name <"x_flag_strict_enums",gcc_options,x_flag_strict_enums> x_flag_strict_enums;
	 generic_field_name <"x_flag_strict_overflow",gcc_options,x_flag_strict_overflow> x_flag_strict_overflow;
	 generic_field_name <"x_flag_strict_volatile_bitfields",gcc_options,x_flag_strict_volatile_bitfields> x_flag_strict_volatile_bitfields;
	 generic_field_name <"x_flag_syntax_only",gcc_options,x_flag_syntax_only> x_flag_syntax_only;
	 generic_field_name <"x_flag_test_coverage",gcc_options,x_flag_test_coverage> x_flag_test_coverage;
	 generic_field_name <"x_flag_thread_jumps",gcc_options,x_flag_thread_jumps> x_flag_thread_jumps;
	 generic_field_name <"x_flag_threadsafe_statics",gcc_options,x_flag_threadsafe_statics> x_flag_threadsafe_statics;
	 generic_field_name <"x_time_report",gcc_options,x_time_report> x_time_report;
	 generic_field_name <"x_flag_tls_default",gcc_options,x_flag_tls_default> x_flag_tls_default;
	 generic_field_name <"x_flag_toplevel_reorder",gcc_options,x_flag_toplevel_reorder> x_flag_toplevel_reorder;
	 generic_field_name <"x_flag_tracer",gcc_options,x_flag_tracer> x_flag_tracer;
	 generic_field_name <"x_flag_trapping_math",gcc_options,x_flag_trapping_math> x_flag_trapping_math;
	 generic_field_name <"x_flag_trapv",gcc_options,x_flag_trapv> x_flag_trapv;
	 generic_field_name <"x_flag_tree_bit_ccp",gcc_options,x_flag_tree_bit_ccp> x_flag_tree_bit_ccp;
	 generic_field_name <"x_flag_tree_builtin_call_dce",gcc_options,x_flag_tree_builtin_call_dce> x_flag_tree_builtin_call_dce;
	 generic_field_name <"x_flag_tree_ccp",gcc_options,x_flag_tree_ccp> x_flag_tree_ccp;
	 generic_field_name <"x_flag_tree_ch",gcc_options,x_flag_tree_ch> x_flag_tree_ch;
	 generic_field_name <"x_flag_tree_copy_prop",gcc_options,x_flag_tree_copy_prop> x_flag_tree_copy_prop;
	 generic_field_name <"x_flag_tree_copyrename",gcc_options,x_flag_tree_copyrename> x_flag_tree_copyrename;
	 generic_field_name <"x_flag_tree_cselim",gcc_options,x_flag_tree_cselim> x_flag_tree_cselim;
	 generic_field_name <"x_flag_tree_dce",gcc_options,x_flag_tree_dce> x_flag_tree_dce;
	 generic_field_name <"x_flag_tree_dom",gcc_options,x_flag_tree_dom> x_flag_tree_dom;
	 generic_field_name <"x_flag_tree_dse",gcc_options,x_flag_tree_dse> x_flag_tree_dse;
	 generic_field_name <"x_flag_tree_forwprop",gcc_options,x_flag_tree_forwprop> x_flag_tree_forwprop;
	 generic_field_name <"x_flag_tree_fre",gcc_options,x_flag_tree_fre> x_flag_tree_fre;
	 generic_field_name <"x_flag_tree_loop_distribute_patterns",gcc_options,x_flag_tree_loop_distribute_patterns> x_flag_tree_loop_distribute_patterns;
	 generic_field_name <"x_flag_tree_loop_distribution",gcc_options,x_flag_tree_loop_distribution> x_flag_tree_loop_distribution;
	 generic_field_name <"x_flag_tree_loop_if_convert",gcc_options,x_flag_tree_loop_if_convert> x_flag_tree_loop_if_convert;
	 generic_field_name <"x_flag_tree_loop_if_convert_stores",gcc_options,x_flag_tree_loop_if_convert_stores> x_flag_tree_loop_if_convert_stores;
	 generic_field_name <"x_flag_tree_loop_im",gcc_options,x_flag_tree_loop_im> x_flag_tree_loop_im;
	 generic_field_name <"x_flag_tree_loop_ivcanon",gcc_options,x_flag_tree_loop_ivcanon> x_flag_tree_loop_ivcanon;
	 generic_field_name <"x_flag_tree_loop_optimize",gcc_options,x_flag_tree_loop_optimize> x_flag_tree_loop_optimize;
	 generic_field_name <"x_flag_tree_live_range_split",gcc_options,x_flag_tree_live_range_split> x_flag_tree_live_range_split;
	 generic_field_name <"x_flag_tree_parallelize_loops",gcc_options,x_flag_tree_parallelize_loops> x_flag_tree_parallelize_loops;
	 generic_field_name <"x_flag_tree_partial_pre",gcc_options,x_flag_tree_partial_pre> x_flag_tree_partial_pre;
	 generic_field_name <"x_flag_tree_phiprop",gcc_options,x_flag_tree_phiprop> x_flag_tree_phiprop;
	 generic_field_name <"x_flag_tree_pre",gcc_options,x_flag_tree_pre> x_flag_tree_pre;
	 generic_field_name <"x_flag_tree_pta",gcc_options,x_flag_tree_pta> x_flag_tree_pta;
	 generic_field_name <"x_flag_tree_reassoc",gcc_options,x_flag_tree_reassoc> x_flag_tree_reassoc;
	 generic_field_name <"x_flag_tree_scev_cprop",gcc_options,x_flag_tree_scev_cprop> x_flag_tree_scev_cprop;
	 generic_field_name <"x_flag_tree_sink",gcc_options,x_flag_tree_sink> x_flag_tree_sink;
	 generic_field_name <"x_flag_tree_slp_vectorize",gcc_options,x_flag_tree_slp_vectorize> x_flag_tree_slp_vectorize;
	 generic_field_name <"x_flag_tree_sra",gcc_options,x_flag_tree_sra> x_flag_tree_sra;
	 generic_field_name <"x_flag_tree_switch_conversion",gcc_options,x_flag_tree_switch_conversion> x_flag_tree_switch_conversion;
	 generic_field_name <"x_flag_tree_tail_merge",gcc_options,x_flag_tree_tail_merge> x_flag_tree_tail_merge;
	 generic_field_name <"x_flag_tree_ter",gcc_options,x_flag_tree_ter> x_flag_tree_ter;
	 generic_field_name <"x_flag_tree_vect_loop_version",gcc_options,x_flag_tree_vect_loop_version> x_flag_tree_vect_loop_version;
	 generic_field_name <"x_flag_tree_vectorize",gcc_options,x_flag_tree_vectorize> x_flag_tree_vectorize;
	 generic_field_name <"x_flag_tree_vrp",gcc_options,x_flag_tree_vrp> x_flag_tree_vrp;
	 generic_field_name <"x_flag_unit_at_a_time",gcc_options,x_flag_unit_at_a_time> x_flag_unit_at_a_time;
	 generic_field_name <"x_flag_unroll_all_loops",gcc_options,x_flag_unroll_all_loops> x_flag_unroll_all_loops;
	 generic_field_name <"x_flag_unroll_loops",gcc_options,x_flag_unroll_loops> x_flag_unroll_loops;
	 generic_field_name <"x_flag_unsafe_loop_optimizations",gcc_options,x_flag_unsafe_loop_optimizations> x_flag_unsafe_loop_optimizations;
	 generic_field_name <"x_flag_unsafe_math_optimizations",gcc_options,x_flag_unsafe_math_optimizations> x_flag_unsafe_math_optimizations;
	 generic_field_name <"x_flag_unswitch_loops",gcc_options,x_flag_unswitch_loops> x_flag_unswitch_loops;
	 generic_field_name <"x_flag_unwind_tables",gcc_options,x_flag_unwind_tables> x_flag_unwind_tables;
	 generic_field_name <"x_flag_use_atomic_builtins",gcc_options,x_flag_use_atomic_builtins> x_flag_use_atomic_builtins;
	 generic_field_name <"x_flag_use_boehm_gc",gcc_options,x_flag_use_boehm_gc> x_flag_use_boehm_gc;
	 generic_field_name <"x_flag_use_cxa_atexit",gcc_options,x_flag_use_cxa_atexit> x_flag_use_cxa_atexit;
	 generic_field_name <"x_flag_use_cxa_get_exception_ptr",gcc_options,x_flag_use_cxa_get_exception_ptr> x_flag_use_cxa_get_exception_ptr;
	 generic_field_name <"x_flag_use_divide_subroutine",gcc_options,x_flag_use_divide_subroutine> x_flag_use_divide_subroutine;
	 generic_field_name <"x_flag_var_tracking",gcc_options,x_flag_var_tracking> x_flag_var_tracking;
	 generic_field_name <"x_flag_var_tracking_assignments",gcc_options,x_flag_var_tracking_assignments> x_flag_var_tracking_assignments;
	 generic_field_name <"x_flag_var_tracking_assignments_toggle",gcc_options,x_flag_var_tracking_assignments_toggle> x_flag_var_tracking_assignments_toggle;
	 generic_field_name <"x_flag_var_tracking_uninit",gcc_options,x_flag_var_tracking_uninit> x_flag_var_tracking_uninit;
	 generic_field_name <"x_flag_variable_expansion_in_unroller",gcc_options,x_flag_variable_expansion_in_unroller> x_flag_variable_expansion_in_unroller;
	 generic_field_name <"x_flag_vect_cost_model",gcc_options,x_flag_vect_cost_model> x_flag_vect_cost_model;
	 generic_field_name <"x_flag_verbose_asm",gcc_options,x_flag_verbose_asm> x_flag_verbose_asm;
	 generic_field_name <"x_flag_visibility_ms_compat",gcc_options,x_flag_visibility_ms_compat> x_flag_visibility_ms_compat;
	 generic_field_name <"x_default_visibility",gcc_options,x_default_visibility> x_default_visibility;
	 generic_field_name <"x_flag_value_profile_transformations",gcc_options,x_flag_value_profile_transformations> x_flag_value_profile_transformations;
	 generic_field_name <"x_flag_weak",gcc_options,x_flag_weak> x_flag_weak;
	 generic_field_name <"x_flag_web",gcc_options,x_flag_web> x_flag_web;
	 generic_field_name <"x_flag_whole_program",gcc_options,x_flag_whole_program> x_flag_whole_program;
	 generic_field_name <"x_flag_working_directory",gcc_options,x_flag_working_directory> x_flag_working_directory;
	 generic_field_name <"x_flag_wpa",gcc_options,x_flag_wpa> x_flag_wpa;
	 generic_field_name <"x_flag_wrapv",gcc_options,x_flag_wrapv> x_flag_wrapv;
	 generic_field_name <"x_flag_zero_initialized_in_bss",gcc_options,x_flag_zero_initialized_in_bss> x_flag_zero_initialized_in_bss;
	 generic_field_name <"x_flag_zero_link",gcc_options,x_flag_zero_link> x_flag_zero_link;
	 generic_field_name <"x_dwarf_version",gcc_options,x_dwarf_version> x_dwarf_version;
	 generic_field_name <"x_flag_gen_declaration",gcc_options,x_flag_gen_declaration> x_flag_gen_declaration;
	 generic_field_name <"x_dwarf_record_gcc_switches",gcc_options,x_dwarf_record_gcc_switches> x_dwarf_record_gcc_switches;
	 generic_field_name <"x_dwarf_strict",gcc_options,x_dwarf_strict> x_dwarf_strict;
	 generic_field_name <"x_flag_gtoggle",gcc_options,x_flag_gtoggle> x_flag_gtoggle;
	 generic_field_name <"x_imultiarch",gcc_options,x_imultiarch> x_imultiarch;
	 generic_field_name <"x_plugindir_string",gcc_options,x_plugindir_string> x_plugindir_string;
	 generic_field_name <"x_ix86_abi",gcc_options,x_ix86_abi> x_ix86_abi;
	 generic_field_name <"x_flag_android",gcc_options,x_flag_android> x_flag_android;
	 generic_field_name <"x_ix86_arch_string",gcc_options,x_ix86_arch_string> x_ix86_arch_string;
	 generic_field_name <"x_ix86_asm_dialect",gcc_options,x_ix86_asm_dialect> x_ix86_asm_dialect;
	 generic_field_name <"x_linux_libc",gcc_options,x_linux_libc> x_linux_libc;
	 generic_field_name <"x_ix86_branch_cost",gcc_options,x_ix86_branch_cost> x_ix86_branch_cost;
	 generic_field_name <"x_ix86_cmodel",gcc_options,x_ix86_cmodel> x_ix86_cmodel;
	 generic_field_name <"x_flag_dispatch_scheduler",gcc_options,x_flag_dispatch_scheduler> x_flag_dispatch_scheduler;
	 generic_field_name <"x_flag_fentry",gcc_options,x_flag_fentry> x_flag_fentry;
	 generic_field_name <"x_ix86_force_drap",gcc_options,x_ix86_force_drap> x_ix86_force_drap;
	 generic_field_name <"x_ix86_fpmath",gcc_options,x_ix86_fpmath> x_ix86_fpmath;
	 generic_field_name <"x_ix86_incoming_stack_boundary_arg",gcc_options,x_ix86_incoming_stack_boundary_arg> x_ix86_incoming_stack_boundary_arg;
	 generic_field_name <"x_ix86_section_threshold",gcc_options,x_ix86_section_threshold> x_ix86_section_threshold;
	 generic_field_name <"x_ix86_preferred_stack_boundary_arg",gcc_options,x_ix86_preferred_stack_boundary_arg> x_ix86_preferred_stack_boundary_arg;
	 generic_field_name <"x_ix86_recip_name",gcc_options,x_ix86_recip_name> x_ix86_recip_name;
	 generic_field_name <"x_ix86_regparm",gcc_options,x_ix86_regparm> x_ix86_regparm;
	 generic_field_name <"x_ix86_sse2avx",gcc_options,x_ix86_sse2avx> x_ix86_sse2avx;
	 generic_field_name <"x_ix86_force_align_arg_pointer",gcc_options,x_ix86_force_align_arg_pointer> x_ix86_force_align_arg_pointer;
	 generic_field_name <"x_ix86_stringop_alg",gcc_options,x_ix86_stringop_alg> x_ix86_stringop_alg;
	 generic_field_name <"x_ix86_tls_dialect",gcc_options,x_ix86_tls_dialect> x_ix86_tls_dialect;
	 generic_field_name <"x_ix86_tune_string",gcc_options,x_ix86_tune_string> x_ix86_tune_string;
	 generic_field_name <"x_ix86_veclibabi_type",gcc_options,x_ix86_veclibabi_type> x_ix86_veclibabi_type;
	 generic_field_name <"x_asm_file_name",gcc_options,x_asm_file_name> x_asm_file_name;
	 generic_field_name <"x_pass_exit_codes",gcc_options,x_pass_exit_codes> x_pass_exit_codes;
	 generic_field_name <"x_pedantic",gcc_options,x_pedantic> x_pedantic;
	 generic_field_name <"x_flag_pedantic_errors",gcc_options,x_flag_pedantic_errors> x_flag_pedantic_errors;
	 generic_field_name <"x_use_pipes",gcc_options,x_use_pipes> x_use_pipes;
	 generic_field_name <"x_print_file_name",gcc_options,x_print_file_name> x_print_file_name;
	 generic_field_name <"x_print_multi_directory",gcc_options,x_print_multi_directory> x_print_multi_directory;
	 generic_field_name <"x_print_multi_lib",gcc_options,x_print_multi_lib> x_print_multi_lib;
	 generic_field_name <"x_print_multi_os_directory",gcc_options,x_print_multi_os_directory> x_print_multi_os_directory;
	 generic_field_name <"x_print_multiarch",gcc_options,x_print_multiarch> x_print_multiarch;
	 generic_field_name <"x_print_prog_name",gcc_options,x_print_prog_name> x_print_prog_name;
	 generic_field_name <"x_print_search_dirs",gcc_options,x_print_search_dirs> x_print_search_dirs;
	 generic_field_name <"x_print_sysroot",gcc_options,x_print_sysroot> x_print_sysroot;
	 generic_field_name <"x_print_sysroot_headers_suffix",gcc_options,x_print_sysroot_headers_suffix> x_print_sysroot_headers_suffix;
	 generic_field_name <"x_quiet_flag",gcc_options,x_quiet_flag> x_quiet_flag;
	 generic_field_name <"x_report_times",gcc_options,x_report_times> x_report_times;
	 generic_field_name <"x_flag_undef",gcc_options,x_flag_undef> x_flag_undef;
	 generic_field_name <"x_verbose_flag",gcc_options,x_verbose_flag> x_verbose_flag;
	 generic_field_name <"x_version_flag",gcc_options,x_version_flag> x_version_flag;
	 generic_field_name <"x_inhibit_warnings",gcc_options,x_inhibit_warnings> x_inhibit_warnings;
	 generic_field_name <"x_wrapper_string",gcc_options,x_wrapper_string> x_wrapper_string;
	 generic_field_name <"x_VAR_malign_functions_",gcc_options,x_VAR_malign_functions_> x_VAR_malign_functions_;
	 generic_field_name <"x_VAR_malign_jumps_",gcc_options,x_VAR_malign_jumps_> x_VAR_malign_jumps_;
	 generic_field_name <"x_VAR_malign_loops_",gcc_options,x_VAR_malign_loops_> x_VAR_malign_loops_;
	 generic_field_name <"x_VAR_mpc32",gcc_options,x_VAR_mpc32> x_VAR_mpc32;
	 generic_field_name <"x_VAR_mpc64",gcc_options,x_VAR_mpc64> x_VAR_mpc64;
	 generic_field_name <"x_VAR_mpc80",gcc_options,x_VAR_mpc80> x_VAR_mpc80;
	 generic_field_name <"frontend_set_flag_associative_math",gcc_options,frontend_set_flag_associative_math> frontend_set_flag_associative_math;
	 generic_field_name <"frontend_set_flag_cx_limited_range",gcc_options,frontend_set_flag_cx_limited_range> frontend_set_flag_cx_limited_range;
	 generic_field_name <"frontend_set_flag_finite_math_only",gcc_options,frontend_set_flag_finite_math_only> frontend_set_flag_finite_math_only;
	 generic_field_name <"frontend_set_flag_errno_math",gcc_options,frontend_set_flag_errno_math> frontend_set_flag_errno_math;
	 generic_field_name <"frontend_set_flag_reciprocal_math",gcc_options,frontend_set_flag_reciprocal_math> frontend_set_flag_reciprocal_math;
	 generic_field_name <"frontend_set_flag_rounding_math",gcc_options,frontend_set_flag_rounding_math> frontend_set_flag_rounding_math;
	 generic_field_name <"frontend_set_flag_signaling_nans",gcc_options,frontend_set_flag_signaling_nans> frontend_set_flag_signaling_nans;
	 generic_field_name <"frontend_set_flag_signed_zeros",gcc_options,frontend_set_flag_signed_zeros> frontend_set_flag_signed_zeros;
	 generic_field_name <"frontend_set_flag_trapping_math",gcc_options,frontend_set_flag_trapping_math> frontend_set_flag_trapping_math;
	 generic_field_name <"frontend_set_flag_unsafe_math_optimizations",gcc_options,frontend_set_flag_unsafe_math_optimizations> frontend_set_flag_unsafe_math_optimizations;
}; 
class CLS_419_gcc_options{ 
	 generic_class_name <"gcc_options",gcc_options> the_class_name;
	 generic_field_name <"x_recip_mask",gcc_options,x_recip_mask> x_recip_mask;
	 generic_field_name <"x_frame_larger_than_size",gcc_options,x_frame_larger_than_size> x_frame_larger_than_size;
	 generic_field_name <"x_ix86_isa_flags",gcc_options,x_ix86_isa_flags> x_ix86_isa_flags;
	 generic_field_name <"x_ix86_isa_flags_explicit",gcc_options,x_ix86_isa_flags_explicit> x_ix86_isa_flags_explicit;
	 generic_field_name <"x_larger_than_size",gcc_options,x_larger_than_size> x_larger_than_size;
	 generic_field_name <"x_exit_after_options",gcc_options,x_exit_after_options> x_exit_after_options;
	 generic_field_name <"x_flag_dump_all_passed",gcc_options,x_flag_dump_all_passed> x_flag_dump_all_passed;
	 generic_field_name <"x_flag_opts_finished",gcc_options,x_flag_opts_finished> x_flag_opts_finished;
	 generic_field_name <"x_flag_stack_usage_info",gcc_options,x_flag_stack_usage_info> x_flag_stack_usage_info;
	 generic_field_name <"x_flag_warn_unused_result",gcc_options,x_flag_warn_unused_result> x_flag_warn_unused_result;
	 generic_field_name <"x_in_lto_p",gcc_options,x_in_lto_p> x_in_lto_p;
	 generic_field_name <"x_use_gnu_debug_info_extensions",gcc_options,x_use_gnu_debug_info_extensions> x_use_gnu_debug_info_extensions;
	 generic_field_name <"x_warn_frame_larger_than",gcc_options,x_warn_frame_larger_than> x_warn_frame_larger_than;
	 generic_field_name <"x_warn_larger_than",gcc_options,x_warn_larger_than> x_warn_larger_than;
	 generic_field_name <"x_help_enum_printed",gcc_options,x_help_enum_printed> x_help_enum_printed;
	 generic_field_name <"x_help_printed",gcc_options,x_help_printed> x_help_printed;
	 generic_field_name <"x_main_input_basename",gcc_options,x_main_input_basename> x_main_input_basename;
	 generic_field_name <"x_main_input_filename",gcc_options,x_main_input_filename> x_main_input_filename;
	 generic_field_name <"x_debug_info_level",gcc_options,x_debug_info_level> x_debug_info_level;
	 generic_field_name <"x_write_symbols",gcc_options,x_write_symbols> x_write_symbols;
	 generic_field_name <"x_debug_struct_generic",gcc_options,x_debug_struct_generic> x_debug_struct_generic;
	 generic_field_name <"x_debug_struct_ordinary",gcc_options,x_debug_struct_ordinary> x_debug_struct_ordinary;
	 generic_field_name <"x_graph_dump_format",gcc_options,x_graph_dump_format> x_graph_dump_format;
	 generic_field_name <"x_flag_stack_check",gcc_options,x_flag_stack_check> x_flag_stack_check;
	 generic_field_name <"x_user_vect_verbosity_level",gcc_options,x_user_vect_verbosity_level> x_user_vect_verbosity_level;
	 generic_field_name <"x_param_values",gcc_options,x_param_values> x_param_values;
	 generic_field_name <"x_flag_complex_method",gcc_options,x_flag_complex_method> x_flag_complex_method;
	 generic_field_name <"x_flag_debug_asm",gcc_options,x_flag_debug_asm> x_flag_debug_asm;
	 generic_field_name <"x_flag_dump_rtl_in_asm",gcc_options,x_flag_dump_rtl_in_asm> x_flag_dump_rtl_in_asm;
	 generic_field_name <"x_flag_evaluation_order",gcc_options,x_flag_evaluation_order> x_flag_evaluation_order;
	 generic_field_name <"x_flag_gen_aux_info",gcc_options,x_flag_gen_aux_info> x_flag_gen_aux_info;
	 generic_field_name <"x_flag_generate_lto",gcc_options,x_flag_generate_lto> x_flag_generate_lto;
	 generic_field_name <"x_flag_print_asm_name",gcc_options,x_flag_print_asm_name> x_flag_print_asm_name;
	 generic_field_name <"x_flag_shlib",gcc_options,x_flag_shlib> x_flag_shlib;
	 generic_field_name <"x_main_input_baselength",gcc_options,x_main_input_baselength> x_main_input_baselength;
	 generic_field_name <"x_optimize",gcc_options,x_optimize> x_optimize;
	 generic_field_name <"x_optimize_fast",gcc_options,x_optimize_fast> x_optimize_fast;
	 generic_field_name <"x_optimize_size",gcc_options,x_optimize_size> x_optimize_size;
	 generic_field_name <"x_recip_mask_explicit",gcc_options,x_recip_mask_explicit> x_recip_mask_explicit;
	 generic_field_name <"x_rtl_dump_and_exit",gcc_options,x_rtl_dump_and_exit> x_rtl_dump_and_exit;
	 generic_field_name <"x_target_flags",gcc_options,x_target_flags> x_target_flags;
	 generic_field_name <"x_help_columns",gcc_options,x_help_columns> x_help_columns;
	 generic_field_name <"x_initial_max_fld_align",gcc_options,x_initial_max_fld_align> x_initial_max_fld_align;
	 generic_field_name <"x_flag_instrument_functions_exclude_files",gcc_options,x_flag_instrument_functions_exclude_files> x_flag_instrument_functions_exclude_files;
	 generic_field_name <"x_flag_instrument_functions_exclude_functions",gcc_options,x_flag_instrument_functions_exclude_functions> x_flag_instrument_functions_exclude_functions;
	 generic_field_name <"x_help_flag",gcc_options,x_help_flag> x_help_flag;
	 generic_field_name <"x_flag_preprocess_only",gcc_options,x_flag_preprocess_only> x_flag_preprocess_only;
	 generic_field_name <"x_warn_abi",gcc_options,x_warn_abi> x_warn_abi;
	 generic_field_name <"x_warn_address",gcc_options,x_warn_address> x_warn_address;
	 generic_field_name <"x_warn_aggregate_return",gcc_options,x_warn_aggregate_return> x_warn_aggregate_return;
	 generic_field_name <"x_warn_array_bounds",gcc_options,x_warn_array_bounds> x_warn_array_bounds;
	 generic_field_name <"x_warn_assign_intercept",gcc_options,x_warn_assign_intercept> x_warn_assign_intercept;
	 generic_field_name <"x_warn_attributes",gcc_options,x_warn_attributes> x_warn_attributes;
	 generic_field_name <"x_warn_bad_function_cast",gcc_options,x_warn_bad_function_cast> x_warn_bad_function_cast;
	 generic_field_name <"x_warn_cxx_compat",gcc_options,x_warn_cxx_compat> x_warn_cxx_compat;
	 generic_field_name <"x_warn_cxx0x_compat",gcc_options,x_warn_cxx0x_compat> x_warn_cxx0x_compat;
	 generic_field_name <"x_warn_cast_align",gcc_options,x_warn_cast_align> x_warn_cast_align;
	 generic_field_name <"x_warn_cast_qual",gcc_options,x_warn_cast_qual> x_warn_cast_qual;
	 generic_field_name <"x_warn_char_subscripts",gcc_options,x_warn_char_subscripts> x_warn_char_subscripts;
	 generic_field_name <"x_warn_clobbered",gcc_options,x_warn_clobbered> x_warn_clobbered;
	 generic_field_name <"x_warn_conversion",gcc_options,x_warn_conversion> x_warn_conversion;
	 generic_field_name <"x_warn_conversion_null",gcc_options,x_warn_conversion_null> x_warn_conversion_null;
	 generic_field_name <"x_warn_coverage_mismatch",gcc_options,x_warn_coverage_mismatch> x_warn_coverage_mismatch;
	 generic_field_name <"x_warn_cpp",gcc_options,x_warn_cpp> x_warn_cpp;
	 generic_field_name <"x_warn_ctor_dtor_privacy",gcc_options,x_warn_ctor_dtor_privacy> x_warn_ctor_dtor_privacy;
	 generic_field_name <"x_warn_declaration_after_statement",gcc_options,x_warn_declaration_after_statement> x_warn_declaration_after_statement;
	 generic_field_name <"x_warn_delnonvdtor",gcc_options,x_warn_delnonvdtor> x_warn_delnonvdtor;
	 generic_field_name <"x_warn_deprecated",gcc_options,x_warn_deprecated> x_warn_deprecated;
	 generic_field_name <"x_warn_deprecated_decl",gcc_options,x_warn_deprecated_decl> x_warn_deprecated_decl;
	 generic_field_name <"x_warn_disabled_optimization",gcc_options,x_warn_disabled_optimization> x_warn_disabled_optimization;
	 generic_field_name <"x_warn_div_by_zero",gcc_options,x_warn_div_by_zero> x_warn_div_by_zero;
	 generic_field_name <"x_warn_double_promotion",gcc_options,x_warn_double_promotion> x_warn_double_promotion;
	 generic_field_name <"x_warn_ecpp",gcc_options,x_warn_ecpp> x_warn_ecpp;
	 generic_field_name <"x_warn_empty_body",gcc_options,x_warn_empty_body> x_warn_empty_body;
	 generic_field_name <"x_warn_enum_compare",gcc_options,x_warn_enum_compare> x_warn_enum_compare;
	 generic_field_name <"x_warnings_are_errors",gcc_options,x_warnings_are_errors> x_warnings_are_errors;
	 generic_field_name <"x_extra_warnings",gcc_options,x_extra_warnings> x_extra_warnings;
	 generic_field_name <"x_flag_extraneous_semicolon",gcc_options,x_flag_extraneous_semicolon> x_flag_extraneous_semicolon;
	 generic_field_name <"x_flag_fatal_errors",gcc_options,x_flag_fatal_errors> x_flag_fatal_errors;
	 generic_field_name <"x_warn_float_equal",gcc_options,x_warn_float_equal> x_warn_float_equal;
	 generic_field_name <"x_warn_format_contains_nul",gcc_options,x_warn_format_contains_nul> x_warn_format_contains_nul;
	 generic_field_name <"x_warn_format_extra_args",gcc_options,x_warn_format_extra_args> x_warn_format_extra_args;
	 generic_field_name <"x_warn_format_nonliteral",gcc_options,x_warn_format_nonliteral> x_warn_format_nonliteral;
	 generic_field_name <"x_warn_format_security",gcc_options,x_warn_format_security> x_warn_format_security;
	 generic_field_name <"x_warn_format_y2k",gcc_options,x_warn_format_y2k> x_warn_format_y2k;
	 generic_field_name <"x_warn_format_zero_length",gcc_options,x_warn_format_zero_length> x_warn_format_zero_length;
	 generic_field_name <"x_warn_free_nonheap_object",gcc_options,x_warn_free_nonheap_object> x_warn_free_nonheap_object;
	 generic_field_name <"x_warn_ignored_qualifiers",gcc_options,x_warn_ignored_qualifiers> x_warn_ignored_qualifiers;
	 generic_field_name <"x_warn_implicit",gcc_options,x_warn_implicit> x_warn_implicit;
	 generic_field_name <"x_warn_implicit_function_declaration",gcc_options,x_warn_implicit_function_declaration> x_warn_implicit_function_declaration;
	 generic_field_name <"x_warn_implicit_int",gcc_options,x_warn_implicit_int> x_warn_implicit_int;
	 generic_field_name <"x_warn_init_self",gcc_options,x_warn_init_self> x_warn_init_self;
	 generic_field_name <"x_warn_inline",gcc_options,x_warn_inline> x_warn_inline;
	 generic_field_name <"x_warn_int_to_pointer_cast",gcc_options,x_warn_int_to_pointer_cast> x_warn_int_to_pointer_cast;
	 generic_field_name <"x_warn_invalid_memory_model",gcc_options,x_warn_invalid_memory_model> x_warn_invalid_memory_model;
	 generic_field_name <"x_warn_invalid_offsetof",gcc_options,x_warn_invalid_offsetof> x_warn_invalid_offsetof;
	 generic_field_name <"x_warn_jump_misses_init",gcc_options,x_warn_jump_misses_init> x_warn_jump_misses_init;
	 generic_field_name <"x_warn_logical_op",gcc_options,x_warn_logical_op> x_warn_logical_op;
	 generic_field_name <"x_warn_long_long",gcc_options,x_warn_long_long> x_warn_long_long;
	 generic_field_name <"x_warn_main",gcc_options,x_warn_main> x_warn_main;
	 generic_field_name <"x_warn_maybe_uninitialized",gcc_options,x_warn_maybe_uninitialized> x_warn_maybe_uninitialized;
	 generic_field_name <"x_warn_missing_braces",gcc_options,x_warn_missing_braces> x_warn_missing_braces;
	 generic_field_name <"x_warn_missing_declarations",gcc_options,x_warn_missing_declarations> x_warn_missing_declarations;
	 generic_field_name <"x_warn_missing_field_initializers",gcc_options,x_warn_missing_field_initializers> x_warn_missing_field_initializers;
	 generic_field_name <"x_warn_missing_format_attribute",gcc_options,x_warn_missing_format_attribute> x_warn_missing_format_attribute;
	 generic_field_name <"x_warn_missing_noreturn",gcc_options,x_warn_missing_noreturn> x_warn_missing_noreturn;
	 generic_field_name <"x_warn_missing_parameter_type",gcc_options,x_warn_missing_parameter_type> x_warn_missing_parameter_type;
	 generic_field_name <"x_warn_missing_prototypes",gcc_options,x_warn_missing_prototypes> x_warn_missing_prototypes;
	 generic_field_name <"x_warn_mudflap",gcc_options,x_warn_mudflap> x_warn_mudflap;
	 generic_field_name <"x_warn_narrowing",gcc_options,x_warn_narrowing> x_warn_narrowing;
	 generic_field_name <"x_warn_nested_externs",gcc_options,x_warn_nested_externs> x_warn_nested_externs;
	 generic_field_name <"x_warn_noexcept",gcc_options,x_warn_noexcept> x_warn_noexcept;
	 generic_field_name <"x_warn_nontemplate_friend",gcc_options,x_warn_nontemplate_friend> x_warn_nontemplate_friend;
	 generic_field_name <"x_warn_nonvdtor",gcc_options,x_warn_nonvdtor> x_warn_nonvdtor;
	 generic_field_name <"x_warn_nonnull",gcc_options,x_warn_nonnull> x_warn_nonnull;
	 generic_field_name <"x_warn_old_style_cast",gcc_options,x_warn_old_style_cast> x_warn_old_style_cast;
	 generic_field_name <"x_warn_old_style_declaration",gcc_options,x_warn_old_style_declaration> x_warn_old_style_declaration;
	 generic_field_name <"x_warn_old_style_definition",gcc_options,x_warn_old_style_definition> x_warn_old_style_definition;
	 generic_field_name <"x_flag_newer",gcc_options,x_flag_newer> x_flag_newer;
	 generic_field_name <"x_warn_overflow",gcc_options,x_warn_overflow> x_warn_overflow;
	 generic_field_name <"x_warn_overlength_strings",gcc_options,x_warn_overlength_strings> x_warn_overlength_strings;
	 generic_field_name <"x_warn_overloaded_virtual",gcc_options,x_warn_overloaded_virtual> x_warn_overloaded_virtual;
	 generic_field_name <"x_warn_override_init",gcc_options,x_warn_override_init> x_warn_override_init;
	 generic_field_name <"x_warn_packed",gcc_options,x_warn_packed> x_warn_packed;
	 generic_field_name <"x_warn_packed_bitfield_compat",gcc_options,x_warn_packed_bitfield_compat> x_warn_packed_bitfield_compat;
	 generic_field_name <"x_warn_padded",gcc_options,x_warn_padded> x_warn_padded;
	 generic_field_name <"x_warn_parentheses",gcc_options,x_warn_parentheses> x_warn_parentheses;
	 generic_field_name <"x_warn_pmf2ptr",gcc_options,x_warn_pmf2ptr> x_warn_pmf2ptr;
	 generic_field_name <"x_warn_pointer_arith",gcc_options,x_warn_pointer_arith> x_warn_pointer_arith;
	 generic_field_name <"x_warn_pointer_sign",gcc_options,x_warn_pointer_sign> x_warn_pointer_sign;
	 generic_field_name <"x_warn_pointer_to_int_cast",gcc_options,x_warn_pointer_to_int_cast> x_warn_pointer_to_int_cast;
	 generic_field_name <"x_warn_pragmas",gcc_options,x_warn_pragmas> x_warn_pragmas;
	 generic_field_name <"x_warn_property_assign_default",gcc_options,x_warn_property_assign_default> x_warn_property_assign_default;
	 generic_field_name <"x_warn_protocol",gcc_options,x_warn_protocol> x_warn_protocol;
	 generic_field_name <"x_warn_psabi",gcc_options,x_warn_psabi> x_warn_psabi;
	 generic_field_name <"x_warn_redundant_decls",gcc_options,x_warn_redundant_decls> x_warn_redundant_decls;
	 generic_field_name <"x_flag_redundant",gcc_options,x_flag_redundant> x_flag_redundant;
	 generic_field_name <"x_warn_reorder",gcc_options,x_warn_reorder> x_warn_reorder;
	 generic_field_name <"x_warn_return_type",gcc_options,x_warn_return_type> x_warn_return_type;
	 generic_field_name <"x_warn_selector",gcc_options,x_warn_selector> x_warn_selector;
	 generic_field_name <"x_warn_sequence_point",gcc_options,x_warn_sequence_point> x_warn_sequence_point;
	 generic_field_name <"x_warn_shadow",gcc_options,x_warn_shadow> x_warn_shadow;
	 generic_field_name <"x_warn_sign_compare",gcc_options,x_warn_sign_compare> x_warn_sign_compare;
	 generic_field_name <"x_warn_sign_conversion",gcc_options,x_warn_sign_conversion> x_warn_sign_conversion;
	 generic_field_name <"x_warn_sign_promo",gcc_options,x_warn_sign_promo> x_warn_sign_promo;
	 generic_field_name <"x_warn_stack_protect",gcc_options,x_warn_stack_protect> x_warn_stack_protect;
	 generic_field_name <"x_warn_stack_usage",gcc_options,x_warn_stack_usage> x_warn_stack_usage;
	 generic_field_name <"x_warn_strict_aliasing",gcc_options,x_warn_strict_aliasing> x_warn_strict_aliasing;
	 generic_field_name <"x_warn_strict_null_sentinel",gcc_options,x_warn_strict_null_sentinel> x_warn_strict_null_sentinel;
	 generic_field_name <"x_warn_strict_overflow",gcc_options,x_warn_strict_overflow> x_warn_strict_overflow;
	 generic_field_name <"x_warn_strict_prototypes",gcc_options,x_warn_strict_prototypes> x_warn_strict_prototypes;
	 generic_field_name <"x_warn_strict_selector_match",gcc_options,x_warn_strict_selector_match> x_warn_strict_selector_match;
	 generic_field_name <"x_warn_suggest_attribute_const",gcc_options,x_warn_suggest_attribute_const> x_warn_suggest_attribute_const;
	 generic_field_name <"x_warn_suggest_attribute_noreturn",gcc_options,x_warn_suggest_attribute_noreturn> x_warn_suggest_attribute_noreturn;
	 generic_field_name <"x_warn_suggest_attribute_pure",gcc_options,x_warn_suggest_attribute_pure> x_warn_suggest_attribute_pure;
	 generic_field_name <"x_warn_switch",gcc_options,x_warn_switch> x_warn_switch;
	 generic_field_name <"x_warn_switch_default",gcc_options,x_warn_switch_default> x_warn_switch_default;
	 generic_field_name <"x_warn_switch_enum",gcc_options,x_warn_switch_enum> x_warn_switch_enum;
	 generic_field_name <"x_warn_sync_nand",gcc_options,x_warn_sync_nand> x_warn_sync_nand;
	 generic_field_name <"x_warn_synth",gcc_options,x_warn_synth> x_warn_synth;
	 generic_field_name <"x_warn_system_headers",gcc_options,x_warn_system_headers> x_warn_system_headers;
	 generic_field_name <"x_warn_traditional",gcc_options,x_warn_traditional> x_warn_traditional;
	 generic_field_name <"x_warn_traditional_conversion",gcc_options,x_warn_traditional_conversion> x_warn_traditional_conversion;
	 generic_field_name <"x_warn_trampolines",gcc_options,x_warn_trampolines> x_warn_trampolines;
	 generic_field_name <"x_warn_type_limits",gcc_options,x_warn_type_limits> x_warn_type_limits;
	 generic_field_name <"x_warn_undeclared_selector",gcc_options,x_warn_undeclared_selector> x_warn_undeclared_selector;
	 generic_field_name <"x_warn_uninitialized",gcc_options,x_warn_uninitialized> x_warn_uninitialized;
	 generic_field_name <"x_warn_unsafe_loop_optimizations",gcc_options,x_warn_unsafe_loop_optimizations> x_warn_unsafe_loop_optimizations;
	 generic_field_name <"x_warn_unsuffixed_float_constants",gcc_options,x_warn_unsuffixed_float_constants> x_warn_unsuffixed_float_constants;
	 generic_field_name <"x_warn_unused",gcc_options,x_warn_unused> x_warn_unused;
	 generic_field_name <"x_warn_unused_but_set_parameter",gcc_options,x_warn_unused_but_set_parameter> x_warn_unused_but_set_parameter;
	 generic_field_name <"x_warn_unused_but_set_variable",gcc_options,x_warn_unused_but_set_variable> x_warn_unused_but_set_variable;
	 generic_field_name <"x_warn_unused_function",gcc_options,x_warn_unused_function> x_warn_unused_function;
	 generic_field_name <"x_warn_unused_label",gcc_options,x_warn_unused_label> x_warn_unused_label;
	 generic_field_name <"x_warn_unused_local_typedefs",gcc_options,x_warn_unused_local_typedefs> x_warn_unused_local_typedefs;
	 generic_field_name <"x_warn_unused_parameter",gcc_options,x_warn_unused_parameter> x_warn_unused_parameter;
	 generic_field_name <"x_warn_unused_result",gcc_options,x_warn_unused_result> x_warn_unused_result;
	 generic_field_name <"x_warn_unused_value",gcc_options,x_warn_unused_value> x_warn_unused_value;
	 generic_field_name <"x_warn_unused_variable",gcc_options,x_warn_unused_variable> x_warn_unused_variable;
	 generic_field_name <"x_warn_vector_operation_performance",gcc_options,x_warn_vector_operation_performance> x_warn_vector_operation_performance;
	 generic_field_name <"x_warn_vla",gcc_options,x_warn_vla> x_warn_vla;
	 generic_field_name <"x_warn_volatile_register_var",gcc_options,x_warn_volatile_register_var> x_warn_volatile_register_var;
	 generic_field_name <"x_warn_write_strings",gcc_options,x_warn_write_strings> x_warn_write_strings;
	 generic_field_name <"x_warn_zero_as_null_pointer_constant",gcc_options,x_warn_zero_as_null_pointer_constant> x_warn_zero_as_null_pointer_constant;
	 generic_field_name <"x_aux_info_file_name",gcc_options,x_aux_info_file_name> x_aux_info_file_name;
	 generic_field_name <"x_aux_base_name",gcc_options,x_aux_base_name> x_aux_base_name;
	 generic_field_name <"x_dump_base_name",gcc_options,x_dump_base_name> x_dump_base_name;
	 generic_field_name <"x_dump_dir_name",gcc_options,x_dump_dir_name> x_dump_dir_name;
	 generic_field_name <"x_flag_pic",gcc_options,x_flag_pic> x_flag_pic;
	 generic_field_name <"x_flag_pie",gcc_options,x_flag_pie> x_flag_pie;
	 generic_field_name <"x_flag_abi_version",gcc_options,x_flag_abi_version> x_flag_abi_version;
	 generic_field_name <"x_flag_access_control",gcc_options,x_flag_access_control> x_flag_access_control;
	 generic_field_name <"x_align_functions",gcc_options,x_align_functions> x_align_functions;
	 generic_field_name <"x_align_jumps",gcc_options,x_align_jumps> x_align_jumps;
	 generic_field_name <"x_align_labels",gcc_options,x_align_labels> x_align_labels;
	 generic_field_name <"x_align_loops",gcc_options,x_align_loops> x_align_loops;
	 generic_field_name <"x_flag_allow_parameterless_variadic_functions",gcc_options,x_flag_allow_parameterless_variadic_functions> x_flag_allow_parameterless_variadic_functions;
	 generic_field_name <"x_flag_no_asm",gcc_options,x_flag_no_asm> x_flag_no_asm;
	 generic_field_name <"x_flag_assert",gcc_options,x_flag_assert> x_flag_assert;
	 generic_field_name <"x_flag_associative_math",gcc_options,x_flag_associative_math> x_flag_associative_math;
	 generic_field_name <"x_flag_asynchronous_unwind_tables",gcc_options,x_flag_asynchronous_unwind_tables> x_flag_asynchronous_unwind_tables;
	 generic_field_name <"x_flag_auto_inc_dec",gcc_options,x_flag_auto_inc_dec> x_flag_auto_inc_dec;
	 generic_field_name <"x_flag_bootstrap_classes",gcc_options,x_flag_bootstrap_classes> x_flag_bootstrap_classes;
	 generic_field_name <"x_flag_bounds_check",gcc_options,x_flag_bounds_check> x_flag_bounds_check;
	 generic_field_name <"x_flag_branch_on_count_reg",gcc_options,x_flag_branch_on_count_reg> x_flag_branch_on_count_reg;
	 generic_field_name <"x_flag_branch_probabilities",gcc_options,x_flag_branch_probabilities> x_flag_branch_probabilities;
	 generic_field_name <"x_flag_branch_target_load_optimize",gcc_options,x_flag_branch_target_load_optimize> x_flag_branch_target_load_optimize;
	 generic_field_name <"x_flag_branch_target_load_optimize2",gcc_options,x_flag_branch_target_load_optimize2> x_flag_branch_target_load_optimize2;
	 generic_field_name <"x_flag_btr_bb_exclusive",gcc_options,x_flag_btr_bb_exclusive> x_flag_btr_bb_exclusive;
	 generic_field_name <"x_flag_building_libgcc",gcc_options,x_flag_building_libgcc> x_flag_building_libgcc;
	 generic_field_name <"x_flag_no_builtin",gcc_options,x_flag_no_builtin> x_flag_no_builtin;
	 generic_field_name <"x_common_deferred_options",gcc_options,x_common_deferred_options> x_common_deferred_options;
	 generic_field_name <"x_flag_caller_saves",gcc_options,x_flag_caller_saves> x_flag_caller_saves;
	 generic_field_name <"x_flag_check_data_deps",gcc_options,x_flag_check_data_deps> x_flag_check_data_deps;
	 generic_field_name <"x_flag_check_new",gcc_options,x_flag_check_new> x_flag_check_new;
	 generic_field_name <"x_flag_check_references",gcc_options,x_flag_check_references> x_flag_check_references;
	 generic_field_name <"x_flag_combine_stack_adjustments",gcc_options,x_flag_combine_stack_adjustments> x_flag_combine_stack_adjustments;
	 generic_field_name <"x_flag_no_common",gcc_options,x_flag_no_common> x_flag_no_common;
	 generic_field_name <"x_flag_compare_debug",gcc_options,x_flag_compare_debug> x_flag_compare_debug;
	 generic_field_name <"x_flag_compare_debug_opt",gcc_options,x_flag_compare_debug_opt> x_flag_compare_debug_opt;
	 generic_field_name <"x_flag_compare_elim_after_reload",gcc_options,x_flag_compare_elim_after_reload> x_flag_compare_elim_after_reload;
	 generic_field_name <"x_flag_conserve_space",gcc_options,x_flag_conserve_space> x_flag_conserve_space;
	 generic_field_name <"x_flag_conserve_stack",gcc_options,x_flag_conserve_stack> x_flag_conserve_stack;
	 generic_field_name <"x_max_constexpr_depth",gcc_options,x_max_constexpr_depth> x_max_constexpr_depth;
	 generic_field_name <"x_flag_cprop_registers",gcc_options,x_flag_cprop_registers> x_flag_cprop_registers;
	 generic_field_name <"x_flag_crossjumping",gcc_options,x_flag_crossjumping> x_flag_crossjumping;
	 generic_field_name <"x_flag_cse_follow_jumps",gcc_options,x_flag_cse_follow_jumps> x_flag_cse_follow_jumps;
	 generic_field_name <"x_flag_cx_fortran_rules",gcc_options,x_flag_cx_fortran_rules> x_flag_cx_fortran_rules;
	 generic_field_name <"x_flag_cx_limited_range",gcc_options,x_flag_cx_limited_range> x_flag_cx_limited_range;
	 generic_field_name <"x_flag_data_sections",gcc_options,x_flag_data_sections> x_flag_data_sections;
	 generic_field_name <"x_flag_dce",gcc_options,x_flag_dce> x_flag_dce;
	 generic_field_name <"x_flag_debug_types_section",gcc_options,x_flag_debug_types_section> x_flag_debug_types_section;
	 generic_field_name <"x_flag_deduce_init_list",gcc_options,x_flag_deduce_init_list> x_flag_deduce_init_list;
	 generic_field_name <"x_flag_defer_pop",gcc_options,x_flag_defer_pop> x_flag_defer_pop;
	 generic_field_name <"x_flag_delayed_branch",gcc_options,x_flag_delayed_branch> x_flag_delayed_branch;
	 generic_field_name <"x_flag_delete_null_pointer_checks",gcc_options,x_flag_delete_null_pointer_checks> x_flag_delete_null_pointer_checks;
	 generic_field_name <"x_flag_devirtualize",gcc_options,x_flag_devirtualize> x_flag_devirtualize;
	 generic_field_name <"x_flag_diagnostics_show_option",gcc_options,x_flag_diagnostics_show_option> x_flag_diagnostics_show_option;
	 generic_field_name <"x_flag_dse",gcc_options,x_flag_dse> x_flag_dse;
	 generic_field_name <"x_flag_dump_final_insns",gcc_options,x_flag_dump_final_insns> x_flag_dump_final_insns;
	 generic_field_name <"x_flag_dump_go_spec",gcc_options,x_flag_dump_go_spec> x_flag_dump_go_spec;
	 generic_field_name <"x_flag_dump_noaddr",gcc_options,x_flag_dump_noaddr> x_flag_dump_noaddr;
	 generic_field_name <"x_flag_dump_passes",gcc_options,x_flag_dump_passes> x_flag_dump_passes;
	 generic_field_name <"x_flag_dump_unnumbered",gcc_options,x_flag_dump_unnumbered> x_flag_dump_unnumbered;
	 generic_field_name <"x_flag_dump_unnumbered_links",gcc_options,x_flag_dump_unnumbered_links> x_flag_dump_unnumbered_links;
	 generic_field_name <"x_flag_dwarf2_cfi_asm",gcc_options,x_flag_dwarf2_cfi_asm> x_flag_dwarf2_cfi_asm;
	 generic_field_name <"x_flag_early_inlining",gcc_options,x_flag_early_inlining> x_flag_early_inlining;
	 generic_field_name <"x_flag_elide_constructors",gcc_options,x_flag_elide_constructors> x_flag_elide_constructors;
	 generic_field_name <"x_flag_eliminate_dwarf2_dups",gcc_options,x_flag_eliminate_dwarf2_dups> x_flag_eliminate_dwarf2_dups;
	 generic_field_name <"x_flag_debug_only_used_symbols",gcc_options,x_flag_debug_only_used_symbols> x_flag_debug_only_used_symbols;
	 generic_field_name <"x_flag_eliminate_unused_debug_types",gcc_options,x_flag_eliminate_unused_debug_types> x_flag_eliminate_unused_debug_types;
	 generic_field_name <"x_flag_emit_class_debug_always",gcc_options,x_flag_emit_class_debug_always> x_flag_emit_class_debug_always;
	 generic_field_name <"x_flag_emit_class_files",gcc_options,x_flag_emit_class_files> x_flag_emit_class_files;
	 generic_field_name <"x_flag_enforce_eh_specs",gcc_options,x_flag_enforce_eh_specs> x_flag_enforce_eh_specs;
	 generic_field_name <"x_flag_exceptions",gcc_options,x_flag_exceptions> x_flag_exceptions;
	 generic_field_name <"x_flag_excess_precision_cmdline",gcc_options,x_flag_excess_precision_cmdline> x_flag_excess_precision_cmdline;
	 generic_field_name <"x_flag_expensive_optimizations",gcc_options,x_flag_expensive_optimizations> x_flag_expensive_optimizations;
	 generic_field_name <"x_flag_fat_lto_objects",gcc_options,x_flag_fat_lto_objects> x_flag_fat_lto_objects;
	 generic_field_name <"x_flag_filelist_file",gcc_options,x_flag_filelist_file> x_flag_filelist_file;
	 generic_field_name <"x_flag_finite_math_only",gcc_options,x_flag_finite_math_only> x_flag_finite_math_only;
	 generic_field_name <"x_flag_float_store",gcc_options,x_flag_float_store> x_flag_float_store;
	 generic_field_name <"x_flag_new_for_scope",gcc_options,x_flag_new_for_scope> x_flag_new_for_scope;
	 generic_field_name <"x_flag_force_classes_archive_check",gcc_options,x_flag_force_classes_archive_check> x_flag_force_classes_archive_check;
	 generic_field_name <"x_flag_forward_propagate",gcc_options,x_flag_forward_propagate> x_flag_forward_propagate;
	 generic_field_name <"x_flag_fp_contract_mode",gcc_options,x_flag_fp_contract_mode> x_flag_fp_contract_mode;
	 generic_field_name <"x_flag_friend_injection",gcc_options,x_flag_friend_injection> x_flag_friend_injection;
	 generic_field_name <"x_flag_no_function_cse",gcc_options,x_flag_no_function_cse> x_flag_no_function_cse;
	 generic_field_name <"x_flag_function_sections",gcc_options,x_flag_function_sections> x_flag_function_sections;
	 generic_field_name <"x_flag_gcse",gcc_options,x_flag_gcse> x_flag_gcse;
	 generic_field_name <"x_flag_gcse_after_reload",gcc_options,x_flag_gcse_after_reload> x_flag_gcse_after_reload;
	 generic_field_name <"x_flag_gcse_las",gcc_options,x_flag_gcse_las> x_flag_gcse_las;
	 generic_field_name <"x_flag_gcse_lm",gcc_options,x_flag_gcse_lm> x_flag_gcse_lm;
	 generic_field_name <"x_flag_gcse_sm",gcc_options,x_flag_gcse_sm> x_flag_gcse_sm;
	 generic_field_name <"x_flag_no_gnu_keywords",gcc_options,x_flag_no_gnu_keywords> x_flag_no_gnu_keywords;
	 generic_field_name <"x_flag_next_runtime",gcc_options,x_flag_next_runtime> x_flag_next_runtime;
	 generic_field_name <"x_flag_tm",gcc_options,x_flag_tm> x_flag_tm;
	 generic_field_name <"x_flag_gnu89_inline",gcc_options,x_flag_gnu89_inline> x_flag_gnu89_inline;
	 generic_field_name <"x_go_check_divide_overflow",gcc_options,x_go_check_divide_overflow> x_go_check_divide_overflow;
	 generic_field_name <"x_go_check_divide_zero",gcc_options,x_go_check_divide_zero> x_go_check_divide_zero;
	 generic_field_name <"x_flag_graphite",gcc_options,x_flag_graphite> x_flag_graphite;
	 generic_field_name <"x_flag_graphite_identity",gcc_options,x_flag_graphite_identity> x_flag_graphite_identity;
	 generic_field_name <"x_flag_guess_branch_prob",gcc_options,x_flag_guess_branch_prob> x_flag_guess_branch_prob;
	 generic_field_name <"x_flag_hash_synchronization",gcc_options,x_flag_hash_synchronization> x_flag_hash_synchronization;
	 generic_field_name <"x_flag_no_ident",gcc_options,x_flag_no_ident> x_flag_no_ident;
	 generic_field_name <"x_flag_if_conversion",gcc_options,x_flag_if_conversion> x_flag_if_conversion;
	 generic_field_name <"x_flag_if_conversion2",gcc_options,x_flag_if_conversion2> x_flag_if_conversion2;
	 generic_field_name <"x_flag_implement_inlines",gcc_options,x_flag_implement_inlines> x_flag_implement_inlines;
	 generic_field_name <"x_flag_implicit_inline_templates",gcc_options,x_flag_implicit_inline_templates> x_flag_implicit_inline_templates;
	 generic_field_name <"x_flag_implicit_templates",gcc_options,x_flag_implicit_templates> x_flag_implicit_templates;
	 generic_field_name <"x_flag_indirect_classes",gcc_options,x_flag_indirect_classes> x_flag_indirect_classes;
	 generic_field_name <"x_flag_indirect_dispatch",gcc_options,x_flag_indirect_dispatch> x_flag_indirect_dispatch;
	 generic_field_name <"x_flag_indirect_inlining",gcc_options,x_flag_indirect_inlining> x_flag_indirect_inlining;
	 generic_field_name <"x_flag_inhibit_size_directive",gcc_options,x_flag_inhibit_size_directive> x_flag_inhibit_size_directive;
	 generic_field_name <"x_flag_no_inline",gcc_options,x_flag_no_inline> x_flag_no_inline;
	 generic_field_name <"x_flag_inline_atomics",gcc_options,x_flag_inline_atomics> x_flag_inline_atomics;
	 generic_field_name <"x_flag_inline_functions",gcc_options,x_flag_inline_functions> x_flag_inline_functions;
	 generic_field_name <"x_flag_inline_functions_called_once",gcc_options,x_flag_inline_functions_called_once> x_flag_inline_functions_called_once;
	 generic_field_name <"x_flag_inline_small_functions",gcc_options,x_flag_inline_small_functions> x_flag_inline_small_functions;
	 generic_field_name <"x_flag_instrument_function_entry_exit",gcc_options,x_flag_instrument_function_entry_exit> x_flag_instrument_function_entry_exit;
	 generic_field_name <"x_flag_ipa_cp",gcc_options,x_flag_ipa_cp> x_flag_ipa_cp;
	 generic_field_name <"x_flag_ipa_cp_clone",gcc_options,x_flag_ipa_cp_clone> x_flag_ipa_cp_clone;
	 generic_field_name <"x_flag_ipa_matrix_reorg",gcc_options,x_flag_ipa_matrix_reorg> x_flag_ipa_matrix_reorg;
	 generic_field_name <"x_flag_ipa_profile",gcc_options,x_flag_ipa_profile> x_flag_ipa_profile;
	 generic_field_name <"x_flag_ipa_pta",gcc_options,x_flag_ipa_pta> x_flag_ipa_pta;
	 generic_field_name <"x_flag_ipa_pure_const",gcc_options,x_flag_ipa_pure_const> x_flag_ipa_pure_const;
	 generic_field_name <"x_flag_ipa_reference",gcc_options,x_flag_ipa_reference> x_flag_ipa_reference;
	 generic_field_name <"x_flag_ipa_sra",gcc_options,x_flag_ipa_sra> x_flag_ipa_sra;
	 generic_field_name <"x_flag_ira_algorithm",gcc_options,x_flag_ira_algorithm> x_flag_ira_algorithm;
	 generic_field_name <"x_flag_ira_loop_pressure",gcc_options,x_flag_ira_loop_pressure> x_flag_ira_loop_pressure;
	 generic_field_name <"x_flag_ira_region",gcc_options,x_flag_ira_region> x_flag_ira_region;
	 generic_field_name <"x_flag_ira_share_save_slots",gcc_options,x_flag_ira_share_save_slots> x_flag_ira_share_save_slots;
	 generic_field_name <"x_flag_ira_share_spill_slots",gcc_options,x_flag_ira_share_spill_slots> x_flag_ira_share_spill_slots;
	 generic_field_name <"x_flag_ira_verbose",gcc_options,x_flag_ira_verbose> x_flag_ira_verbose;
	 generic_field_name <"x_flag_ivopts",gcc_options,x_flag_ivopts> x_flag_ivopts;
	 generic_field_name <"x_flag_jni",gcc_options,x_flag_jni> x_flag_jni;
	 generic_field_name <"x_flag_jump_tables",gcc_options,x_flag_jump_tables> x_flag_jump_tables;
	 generic_field_name <"x_flag_keep_inline_dllexport",gcc_options,x_flag_keep_inline_dllexport> x_flag_keep_inline_dllexport;
	 generic_field_name <"x_flag_keep_inline_functions",gcc_options,x_flag_keep_inline_functions> x_flag_keep_inline_functions;
	 generic_field_name <"x_flag_keep_static_consts",gcc_options,x_flag_keep_static_consts> x_flag_keep_static_consts;
	 generic_field_name <"x_flag_lax_vector_conversions",gcc_options,x_flag_lax_vector_conversions> x_flag_lax_vector_conversions;
	 generic_field_name <"x_flag_leading_underscore",gcc_options,x_flag_leading_underscore> x_flag_leading_underscore;
	 generic_field_name <"x_flag_loop_block",gcc_options,x_flag_loop_block> x_flag_loop_block;
	 generic_field_name <"x_flag_loop_flatten",gcc_options,x_flag_loop_flatten> x_flag_loop_flatten;
	 generic_field_name <"x_flag_loop_interchange",gcc_options,x_flag_loop_interchange> x_flag_loop_interchange;
	 generic_field_name <"x_flag_loop_parallelize_all",gcc_options,x_flag_loop_parallelize_all> x_flag_loop_parallelize_all;
	 generic_field_name <"x_flag_loop_strip_mine",gcc_options,x_flag_loop_strip_mine> x_flag_loop_strip_mine;
	 generic_field_name <"x_flag_lto_compression_level",gcc_options,x_flag_lto_compression_level> x_flag_lto_compression_level;
	 generic_field_name <"x_flag_lto_partition_1to1",gcc_options,x_flag_lto_partition_1to1> x_flag_lto_partition_1to1;
	 generic_field_name <"x_flag_lto_partition_balanced",gcc_options,x_flag_lto_partition_balanced> x_flag_lto_partition_balanced;
	 generic_field_name <"x_flag_lto_partition_none",gcc_options,x_flag_lto_partition_none> x_flag_lto_partition_none;
	 generic_field_name <"x_flag_lto_report",gcc_options,x_flag_lto_report> x_flag_lto_report;
	 generic_field_name <"x_flag_lto",gcc_options,x_flag_lto> x_flag_lto;
	 generic_field_name <"x_flag_ltrans",gcc_options,x_flag_ltrans> x_flag_ltrans;
	 generic_field_name <"x_ltrans_output_list",gcc_options,x_ltrans_output_list> x_ltrans_output_list;
	 generic_field_name <"x_flag_errno_math",gcc_options,x_flag_errno_math> x_flag_errno_math;
	 generic_field_name <"x_flag_max_errors",gcc_options,x_flag_max_errors> x_flag_max_errors;
	 generic_field_name <"x_mem_report",gcc_options,x_mem_report> x_mem_report;
	 generic_field_name <"x_flag_merge_constants",gcc_options,x_flag_merge_constants> x_flag_merge_constants;
	 generic_field_name <"x_flag_merge_debug_strings",gcc_options,x_flag_merge_debug_strings> x_flag_merge_debug_strings;
	 generic_field_name <"x_flag_modulo_sched",gcc_options,x_flag_modulo_sched> x_flag_modulo_sched;
	 generic_field_name <"x_flag_modulo_sched_allow_regmoves",gcc_options,x_flag_modulo_sched_allow_regmoves> x_flag_modulo_sched_allow_regmoves;
	 generic_field_name <"x_flag_move_loop_invariants",gcc_options,x_flag_move_loop_invariants> x_flag_move_loop_invariants;
	 generic_field_name <"x_flag_ms_extensions",gcc_options,x_flag_ms_extensions> x_flag_ms_extensions;
	 generic_field_name <"x_flag_mudflap",gcc_options,x_flag_mudflap> x_flag_mudflap;
	 generic_field_name <"x_flag_mudflap_ignore_reads",gcc_options,x_flag_mudflap_ignore_reads> x_flag_mudflap_ignore_reads;
	 generic_field_name <"x_flag_nil_receivers",gcc_options,x_flag_nil_receivers> x_flag_nil_receivers;
	 generic_field_name <"x_flag_non_call_exceptions",gcc_options,x_flag_non_call_exceptions> x_flag_non_call_exceptions;
	 generic_field_name <"x_flag_no_nonansi_builtin",gcc_options,x_flag_no_nonansi_builtin> x_flag_no_nonansi_builtin;
	 generic_field_name <"x_flag_nothrow_opt",gcc_options,x_flag_nothrow_opt> x_flag_nothrow_opt;
	 generic_field_name <"x_flag_objc_abi",gcc_options,x_flag_objc_abi> x_flag_objc_abi;
	 generic_field_name <"x_flag_objc_call_cxx_cdtors",gcc_options,x_flag_objc_call_cxx_cdtors> x_flag_objc_call_cxx_cdtors;
	 generic_field_name <"x_flag_objc_direct_dispatch",gcc_options,x_flag_objc_direct_dispatch> x_flag_objc_direct_dispatch;
	 generic_field_name <"x_flag_objc_exceptions",gcc_options,x_flag_objc_exceptions> x_flag_objc_exceptions;
	 generic_field_name <"x_flag_objc_gc",gcc_options,x_flag_objc_gc> x_flag_objc_gc;
	 generic_field_name <"x_flag_objc_nilcheck",gcc_options,x_flag_objc_nilcheck> x_flag_objc_nilcheck;
	 generic_field_name <"x_flag_objc_sjlj_exceptions",gcc_options,x_flag_objc_sjlj_exceptions> x_flag_objc_sjlj_exceptions;
	 generic_field_name <"x_flag_objc1_only",gcc_options,x_flag_objc1_only> x_flag_objc1_only;
	 generic_field_name <"x_flag_omit_frame_pointer",gcc_options,x_flag_omit_frame_pointer> x_flag_omit_frame_pointer;
	 generic_field_name <"x_flag_openmp",gcc_options,x_flag_openmp> x_flag_openmp;
	 generic_field_name <"x_flag_regmove",gcc_options,x_flag_regmove> x_flag_regmove;
	 generic_field_name <"x_flag_optimize_sibling_calls",gcc_options,x_flag_optimize_sibling_calls> x_flag_optimize_sibling_calls;
	 generic_field_name <"x_flag_optimize_sci",gcc_options,x_flag_optimize_sci> x_flag_optimize_sci;
	 generic_field_name <"x_flag_optimize_strlen",gcc_options,x_flag_optimize_strlen> x_flag_optimize_strlen;
	 generic_field_name <"x_flag_pack_struct",gcc_options,x_flag_pack_struct> x_flag_pack_struct;
	 generic_field_name <"x_flag_partial_inlining",gcc_options,x_flag_partial_inlining> x_flag_partial_inlining;
	 generic_field_name <"x_flag_pcc_struct_return",gcc_options,x_flag_pcc_struct_return> x_flag_pcc_struct_return;
	 generic_field_name <"x_flag_peel_loops",gcc_options,x_flag_peel_loops> x_flag_peel_loops;
	 generic_field_name <"x_flag_no_peephole",gcc_options,x_flag_no_peephole> x_flag_no_peephole;
	 generic_field_name <"x_flag_peephole2",gcc_options,x_flag_peephole2> x_flag_peephole2;
	 generic_field_name <"x_flag_plan9_extensions",gcc_options,x_flag_plan9_extensions> x_flag_plan9_extensions;
	 generic_field_name <"x_post_ipa_mem_report",gcc_options,x_post_ipa_mem_report> x_post_ipa_mem_report;
	 generic_field_name <"x_pre_ipa_mem_report",gcc_options,x_pre_ipa_mem_report> x_pre_ipa_mem_report;
	 generic_field_name <"x_flag_predictive_commoning",gcc_options,x_flag_predictive_commoning> x_flag_predictive_commoning;
	 generic_field_name <"x_flag_prefetch_loop_arrays",gcc_options,x_flag_prefetch_loop_arrays> x_flag_prefetch_loop_arrays;
	 generic_field_name <"x_flag_pretty_templates",gcc_options,x_flag_pretty_templates> x_flag_pretty_templates;
	 generic_field_name <"x_profile_flag",gcc_options,x_profile_flag> x_profile_flag;
	 generic_field_name <"x_profile_arc_flag",gcc_options,x_profile_arc_flag> x_profile_arc_flag;
	 generic_field_name <"x_flag_profile_correction",gcc_options,x_flag_profile_correction> x_flag_profile_correction;
	 generic_field_name <"x_profile_data_prefix",gcc_options,x_profile_data_prefix> x_profile_data_prefix;
	 generic_field_name <"x_flag_profile_use",gcc_options,x_flag_profile_use> x_flag_profile_use;
	 generic_field_name <"x_flag_profile_values",gcc_options,x_flag_profile_values> x_flag_profile_values;
	 generic_field_name <"x_flag_reciprocal_math",gcc_options,x_flag_reciprocal_math> x_flag_reciprocal_math;
	 generic_field_name <"x_flag_record_gcc_switches",gcc_options,x_flag_record_gcc_switches> x_flag_record_gcc_switches;
	 generic_field_name <"x_flag_reduced_reflection",gcc_options,x_flag_reduced_reflection> x_flag_reduced_reflection;
	 generic_field_name <"x_flag_ree",gcc_options,x_flag_ree> x_flag_ree;
	 generic_field_name <"x_flag_rename_registers",gcc_options,x_flag_rename_registers> x_flag_rename_registers;
	 generic_field_name <"x_flag_reorder_blocks",gcc_options,x_flag_reorder_blocks> x_flag_reorder_blocks;
	 generic_field_name <"x_flag_reorder_blocks_and_partition",gcc_options,x_flag_reorder_blocks_and_partition> x_flag_reorder_blocks_and_partition;
	 generic_field_name <"x_flag_reorder_functions",gcc_options,x_flag_reorder_functions> x_flag_reorder_functions;
	 generic_field_name <"x_flag_replace_objc_classes",gcc_options,x_flag_replace_objc_classes> x_flag_replace_objc_classes;
	 generic_field_name <"x_go_require_return_statement",gcc_options,x_go_require_return_statement> x_go_require_return_statement;
	 generic_field_name <"x_flag_rerun_cse_after_loop",gcc_options,x_flag_rerun_cse_after_loop> x_flag_rerun_cse_after_loop;
	 generic_field_name <"x_flag_resched_modulo_sched",gcc_options,x_flag_resched_modulo_sched> x_flag_resched_modulo_sched;
	 generic_field_name <"x_flag_rounding_math",gcc_options,x_flag_rounding_math> x_flag_rounding_math;
	 generic_field_name <"x_flag_rtti",gcc_options,x_flag_rtti> x_flag_rtti;
	 generic_field_name <"x_flag_sched_critical_path_heuristic",gcc_options,x_flag_sched_critical_path_heuristic> x_flag_sched_critical_path_heuristic;
	 generic_field_name <"x_flag_sched_dep_count_heuristic",gcc_options,x_flag_sched_dep_count_heuristic> x_flag_sched_dep_count_heuristic;
	 generic_field_name <"x_flag_sched_group_heuristic",gcc_options,x_flag_sched_group_heuristic> x_flag_sched_group_heuristic;
	 generic_field_name <"x_flag_schedule_interblock",gcc_options,x_flag_schedule_interblock> x_flag_schedule_interblock;
	 generic_field_name <"x_flag_sched_last_insn_heuristic",gcc_options,x_flag_sched_last_insn_heuristic> x_flag_sched_last_insn_heuristic;
	 generic_field_name <"x_flag_sched_pressure",gcc_options,x_flag_sched_pressure> x_flag_sched_pressure;
	 generic_field_name <"x_flag_sched_pressure_algorithm",gcc_options,x_flag_sched_pressure_algorithm> x_flag_sched_pressure_algorithm;
	 generic_field_name <"x_flag_sched_rank_heuristic",gcc_options,x_flag_sched_rank_heuristic> x_flag_sched_rank_heuristic;
	 generic_field_name <"x_flag_schedule_speculative",gcc_options,x_flag_schedule_speculative> x_flag_schedule_speculative;
	 generic_field_name <"x_flag_sched_spec_insn_heuristic",gcc_options,x_flag_sched_spec_insn_heuristic> x_flag_sched_spec_insn_heuristic;
	 generic_field_name <"x_flag_schedule_speculative_load",gcc_options,x_flag_schedule_speculative_load> x_flag_schedule_speculative_load;
	 generic_field_name <"x_flag_schedule_speculative_load_dangerous",gcc_options,x_flag_schedule_speculative_load_dangerous> x_flag_schedule_speculative_load_dangerous;
	 generic_field_name <"x_flag_sched_stalled_insns",gcc_options,x_flag_sched_stalled_insns> x_flag_sched_stalled_insns;
	 generic_field_name <"x_flag_sched_stalled_insns_dep",gcc_options,x_flag_sched_stalled_insns_dep> x_flag_sched_stalled_insns_dep;
	 generic_field_name <"x_sched_verbose_param",gcc_options,x_sched_verbose_param> x_sched_verbose_param;
	 generic_field_name <"x_flag_sched2_use_superblocks",gcc_options,x_flag_sched2_use_superblocks> x_flag_sched2_use_superblocks;
	 generic_field_name <"x_flag_schedule_insns",gcc_options,x_flag_schedule_insns> x_flag_schedule_insns;
	 generic_field_name <"x_flag_schedule_insns_after_reload",gcc_options,x_flag_schedule_insns_after_reload> x_flag_schedule_insns_after_reload;
	 generic_field_name <"x_flag_section_anchors",gcc_options,x_flag_section_anchors> x_flag_section_anchors;
	 generic_field_name <"x_flag_sel_sched_pipelining",gcc_options,x_flag_sel_sched_pipelining> x_flag_sel_sched_pipelining;
	 generic_field_name <"x_flag_sel_sched_pipelining_outer_loops",gcc_options,x_flag_sel_sched_pipelining_outer_loops> x_flag_sel_sched_pipelining_outer_loops;
	 generic_field_name <"x_flag_sel_sched_reschedule_pipelined",gcc_options,x_flag_sel_sched_reschedule_pipelined> x_flag_sel_sched_reschedule_pipelined;
	 generic_field_name <"x_flag_selective_scheduling",gcc_options,x_flag_selective_scheduling> x_flag_selective_scheduling;
	 generic_field_name <"x_flag_selective_scheduling2",gcc_options,x_flag_selective_scheduling2> x_flag_selective_scheduling2;
	 generic_field_name <"x_flag_short_double",gcc_options,x_flag_short_double> x_flag_short_double;
	 generic_field_name <"x_flag_short_enums",gcc_options,x_flag_short_enums> x_flag_short_enums;
	 generic_field_name <"x_flag_short_wchar",gcc_options,x_flag_short_wchar> x_flag_short_wchar;
	 generic_field_name <"x_flag_show_column",gcc_options,x_flag_show_column> x_flag_show_column;
	 generic_field_name <"x_flag_shrink_wrap",gcc_options,x_flag_shrink_wrap> x_flag_shrink_wrap;
	 generic_field_name <"x_flag_signaling_nans",gcc_options,x_flag_signaling_nans> x_flag_signaling_nans;
	 generic_field_name <"x_flag_signed_bitfields",gcc_options,x_flag_signed_bitfields> x_flag_signed_bitfields;
	 generic_field_name <"x_flag_signed_char",gcc_options,x_flag_signed_char> x_flag_signed_char;
	 generic_field_name <"x_flag_signed_zeros",gcc_options,x_flag_signed_zeros> x_flag_signed_zeros;
	 generic_field_name <"x_flag_single_precision_constant",gcc_options,x_flag_single_precision_constant> x_flag_single_precision_constant;
	 generic_field_name <"x_flag_split_ivs_in_unroller",gcc_options,x_flag_split_ivs_in_unroller> x_flag_split_ivs_in_unroller;
	 generic_field_name <"x_flag_split_stack",gcc_options,x_flag_split_stack> x_flag_split_stack;
	 generic_field_name <"x_flag_split_wide_types",gcc_options,x_flag_split_wide_types> x_flag_split_wide_types;
	 generic_field_name <"x_flag_stack_protect",gcc_options,x_flag_stack_protect> x_flag_stack_protect;
	 generic_field_name <"x_flag_stack_usage",gcc_options,x_flag_stack_usage> x_flag_stack_usage;
	 generic_field_name <"x_flag_detailed_statistics",gcc_options,x_flag_detailed_statistics> x_flag_detailed_statistics;
	 generic_field_name <"x_flag_store_check",gcc_options,x_flag_store_check> x_flag_store_check;
	 generic_field_name <"x_flag_strict_aliasing",gcc_options,x_flag_strict_aliasing> x_flag_strict_aliasing;
	 generic_field_name <"x_flag_strict_enums",gcc_options,x_flag_strict_enums> x_flag_strict_enums;
	 generic_field_name <"x_flag_strict_overflow",gcc_options,x_flag_strict_overflow> x_flag_strict_overflow;
	 generic_field_name <"x_flag_strict_volatile_bitfields",gcc_options,x_flag_strict_volatile_bitfields> x_flag_strict_volatile_bitfields;
	 generic_field_name <"x_flag_syntax_only",gcc_options,x_flag_syntax_only> x_flag_syntax_only;
	 generic_field_name <"x_flag_test_coverage",gcc_options,x_flag_test_coverage> x_flag_test_coverage;
	 generic_field_name <"x_flag_thread_jumps",gcc_options,x_flag_thread_jumps> x_flag_thread_jumps;
	 generic_field_name <"x_flag_threadsafe_statics",gcc_options,x_flag_threadsafe_statics> x_flag_threadsafe_statics;
	 generic_field_name <"x_time_report",gcc_options,x_time_report> x_time_report;
	 generic_field_name <"x_flag_tls_default",gcc_options,x_flag_tls_default> x_flag_tls_default;
	 generic_field_name <"x_flag_toplevel_reorder",gcc_options,x_flag_toplevel_reorder> x_flag_toplevel_reorder;
	 generic_field_name <"x_flag_tracer",gcc_options,x_flag_tracer> x_flag_tracer;
	 generic_field_name <"x_flag_trapping_math",gcc_options,x_flag_trapping_math> x_flag_trapping_math;
	 generic_field_name <"x_flag_trapv",gcc_options,x_flag_trapv> x_flag_trapv;
	 generic_field_name <"x_flag_tree_bit_ccp",gcc_options,x_flag_tree_bit_ccp> x_flag_tree_bit_ccp;
	 generic_field_name <"x_flag_tree_builtin_call_dce",gcc_options,x_flag_tree_builtin_call_dce> x_flag_tree_builtin_call_dce;
	 generic_field_name <"x_flag_tree_ccp",gcc_options,x_flag_tree_ccp> x_flag_tree_ccp;
	 generic_field_name <"x_flag_tree_ch",gcc_options,x_flag_tree_ch> x_flag_tree_ch;
	 generic_field_name <"x_flag_tree_copy_prop",gcc_options,x_flag_tree_copy_prop> x_flag_tree_copy_prop;
	 generic_field_name <"x_flag_tree_copyrename",gcc_options,x_flag_tree_copyrename> x_flag_tree_copyrename;
	 generic_field_name <"x_flag_tree_cselim",gcc_options,x_flag_tree_cselim> x_flag_tree_cselim;
	 generic_field_name <"x_flag_tree_dce",gcc_options,x_flag_tree_dce> x_flag_tree_dce;
	 generic_field_name <"x_flag_tree_dom",gcc_options,x_flag_tree_dom> x_flag_tree_dom;
	 generic_field_name <"x_flag_tree_dse",gcc_options,x_flag_tree_dse> x_flag_tree_dse;
	 generic_field_name <"x_flag_tree_forwprop",gcc_options,x_flag_tree_forwprop> x_flag_tree_forwprop;
	 generic_field_name <"x_flag_tree_fre",gcc_options,x_flag_tree_fre> x_flag_tree_fre;
	 generic_field_name <"x_flag_tree_loop_distribute_patterns",gcc_options,x_flag_tree_loop_distribute_patterns> x_flag_tree_loop_distribute_patterns;
	 generic_field_name <"x_flag_tree_loop_distribution",gcc_options,x_flag_tree_loop_distribution> x_flag_tree_loop_distribution;
	 generic_field_name <"x_flag_tree_loop_if_convert",gcc_options,x_flag_tree_loop_if_convert> x_flag_tree_loop_if_convert;
	 generic_field_name <"x_flag_tree_loop_if_convert_stores",gcc_options,x_flag_tree_loop_if_convert_stores> x_flag_tree_loop_if_convert_stores;
	 generic_field_name <"x_flag_tree_loop_im",gcc_options,x_flag_tree_loop_im> x_flag_tree_loop_im;
	 generic_field_name <"x_flag_tree_loop_ivcanon",gcc_options,x_flag_tree_loop_ivcanon> x_flag_tree_loop_ivcanon;
	 generic_field_name <"x_flag_tree_loop_optimize",gcc_options,x_flag_tree_loop_optimize> x_flag_tree_loop_optimize;
	 generic_field_name <"x_flag_tree_live_range_split",gcc_options,x_flag_tree_live_range_split> x_flag_tree_live_range_split;
	 generic_field_name <"x_flag_tree_parallelize_loops",gcc_options,x_flag_tree_parallelize_loops> x_flag_tree_parallelize_loops;
	 generic_field_name <"x_flag_tree_partial_pre",gcc_options,x_flag_tree_partial_pre> x_flag_tree_partial_pre;
	 generic_field_name <"x_flag_tree_phiprop",gcc_options,x_flag_tree_phiprop> x_flag_tree_phiprop;
	 generic_field_name <"x_flag_tree_pre",gcc_options,x_flag_tree_pre> x_flag_tree_pre;
	 generic_field_name <"x_flag_tree_pta",gcc_options,x_flag_tree_pta> x_flag_tree_pta;
	 generic_field_name <"x_flag_tree_reassoc",gcc_options,x_flag_tree_reassoc> x_flag_tree_reassoc;
	 generic_field_name <"x_flag_tree_scev_cprop",gcc_options,x_flag_tree_scev_cprop> x_flag_tree_scev_cprop;
	 generic_field_name <"x_flag_tree_sink",gcc_options,x_flag_tree_sink> x_flag_tree_sink;
	 generic_field_name <"x_flag_tree_slp_vectorize",gcc_options,x_flag_tree_slp_vectorize> x_flag_tree_slp_vectorize;
	 generic_field_name <"x_flag_tree_sra",gcc_options,x_flag_tree_sra> x_flag_tree_sra;
	 generic_field_name <"x_flag_tree_switch_conversion",gcc_options,x_flag_tree_switch_conversion> x_flag_tree_switch_conversion;
	 generic_field_name <"x_flag_tree_tail_merge",gcc_options,x_flag_tree_tail_merge> x_flag_tree_tail_merge;
	 generic_field_name <"x_flag_tree_ter",gcc_options,x_flag_tree_ter> x_flag_tree_ter;
	 generic_field_name <"x_flag_tree_vect_loop_version",gcc_options,x_flag_tree_vect_loop_version> x_flag_tree_vect_loop_version;
	 generic_field_name <"x_flag_tree_vectorize",gcc_options,x_flag_tree_vectorize> x_flag_tree_vectorize;
	 generic_field_name <"x_flag_tree_vrp",gcc_options,x_flag_tree_vrp> x_flag_tree_vrp;
	 generic_field_name <"x_flag_unit_at_a_time",gcc_options,x_flag_unit_at_a_time> x_flag_unit_at_a_time;
	 generic_field_name <"x_flag_unroll_all_loops",gcc_options,x_flag_unroll_all_loops> x_flag_unroll_all_loops;
	 generic_field_name <"x_flag_unroll_loops",gcc_options,x_flag_unroll_loops> x_flag_unroll_loops;
	 generic_field_name <"x_flag_unsafe_loop_optimizations",gcc_options,x_flag_unsafe_loop_optimizations> x_flag_unsafe_loop_optimizations;
	 generic_field_name <"x_flag_unsafe_math_optimizations",gcc_options,x_flag_unsafe_math_optimizations> x_flag_unsafe_math_optimizations;
	 generic_field_name <"x_flag_unswitch_loops",gcc_options,x_flag_unswitch_loops> x_flag_unswitch_loops;
	 generic_field_name <"x_flag_unwind_tables",gcc_options,x_flag_unwind_tables> x_flag_unwind_tables;
	 generic_field_name <"x_flag_use_atomic_builtins",gcc_options,x_flag_use_atomic_builtins> x_flag_use_atomic_builtins;
	 generic_field_name <"x_flag_use_boehm_gc",gcc_options,x_flag_use_boehm_gc> x_flag_use_boehm_gc;
	 generic_field_name <"x_flag_use_cxa_atexit",gcc_options,x_flag_use_cxa_atexit> x_flag_use_cxa_atexit;
	 generic_field_name <"x_flag_use_cxa_get_exception_ptr",gcc_options,x_flag_use_cxa_get_exception_ptr> x_flag_use_cxa_get_exception_ptr;
	 generic_field_name <"x_flag_use_divide_subroutine",gcc_options,x_flag_use_divide_subroutine> x_flag_use_divide_subroutine;
	 generic_field_name <"x_flag_var_tracking",gcc_options,x_flag_var_tracking> x_flag_var_tracking;
	 generic_field_name <"x_flag_var_tracking_assignments",gcc_options,x_flag_var_tracking_assignments> x_flag_var_tracking_assignments;
	 generic_field_name <"x_flag_var_tracking_assignments_toggle",gcc_options,x_flag_var_tracking_assignments_toggle> x_flag_var_tracking_assignments_toggle;
	 generic_field_name <"x_flag_var_tracking_uninit",gcc_options,x_flag_var_tracking_uninit> x_flag_var_tracking_uninit;
	 generic_field_name <"x_flag_variable_expansion_in_unroller",gcc_options,x_flag_variable_expansion_in_unroller> x_flag_variable_expansion_in_unroller;
	 generic_field_name <"x_flag_vect_cost_model",gcc_options,x_flag_vect_cost_model> x_flag_vect_cost_model;
	 generic_field_name <"x_flag_verbose_asm",gcc_options,x_flag_verbose_asm> x_flag_verbose_asm;
	 generic_field_name <"x_flag_visibility_ms_compat",gcc_options,x_flag_visibility_ms_compat> x_flag_visibility_ms_compat;
	 generic_field_name <"x_default_visibility",gcc_options,x_default_visibility> x_default_visibility;
	 generic_field_name <"x_flag_value_profile_transformations",gcc_options,x_flag_value_profile_transformations> x_flag_value_profile_transformations;
	 generic_field_name <"x_flag_weak",gcc_options,x_flag_weak> x_flag_weak;
	 generic_field_name <"x_flag_web",gcc_options,x_flag_web> x_flag_web;
	 generic_field_name <"x_flag_whole_program",gcc_options,x_flag_whole_program> x_flag_whole_program;
	 generic_field_name <"x_flag_working_directory",gcc_options,x_flag_working_directory> x_flag_working_directory;
	 generic_field_name <"x_flag_wpa",gcc_options,x_flag_wpa> x_flag_wpa;
	 generic_field_name <"x_flag_wrapv",gcc_options,x_flag_wrapv> x_flag_wrapv;
	 generic_field_name <"x_flag_zero_initialized_in_bss",gcc_options,x_flag_zero_initialized_in_bss> x_flag_zero_initialized_in_bss;
	 generic_field_name <"x_flag_zero_link",gcc_options,x_flag_zero_link> x_flag_zero_link;
	 generic_field_name <"x_dwarf_version",gcc_options,x_dwarf_version> x_dwarf_version;
	 generic_field_name <"x_flag_gen_declaration",gcc_options,x_flag_gen_declaration> x_flag_gen_declaration;
	 generic_field_name <"x_dwarf_record_gcc_switches",gcc_options,x_dwarf_record_gcc_switches> x_dwarf_record_gcc_switches;
	 generic_field_name <"x_dwarf_strict",gcc_options,x_dwarf_strict> x_dwarf_strict;
	 generic_field_name <"x_flag_gtoggle",gcc_options,x_flag_gtoggle> x_flag_gtoggle;
	 generic_field_name <"x_imultiarch",gcc_options,x_imultiarch> x_imultiarch;
	 generic_field_name <"x_plugindir_string",gcc_options,x_plugindir_string> x_plugindir_string;
	 generic_field_name <"x_ix86_abi",gcc_options,x_ix86_abi> x_ix86_abi;
	 generic_field_name <"x_flag_android",gcc_options,x_flag_android> x_flag_android;
	 generic_field_name <"x_ix86_arch_string",gcc_options,x_ix86_arch_string> x_ix86_arch_string;
	 generic_field_name <"x_ix86_asm_dialect",gcc_options,x_ix86_asm_dialect> x_ix86_asm_dialect;
	 generic_field_name <"x_linux_libc",gcc_options,x_linux_libc> x_linux_libc;
	 generic_field_name <"x_ix86_branch_cost",gcc_options,x_ix86_branch_cost> x_ix86_branch_cost;
	 generic_field_name <"x_ix86_cmodel",gcc_options,x_ix86_cmodel> x_ix86_cmodel;
	 generic_field_name <"x_flag_dispatch_scheduler",gcc_options,x_flag_dispatch_scheduler> x_flag_dispatch_scheduler;
	 generic_field_name <"x_flag_fentry",gcc_options,x_flag_fentry> x_flag_fentry;
	 generic_field_name <"x_ix86_force_drap",gcc_options,x_ix86_force_drap> x_ix86_force_drap;
	 generic_field_name <"x_ix86_fpmath",gcc_options,x_ix86_fpmath> x_ix86_fpmath;
	 generic_field_name <"x_ix86_incoming_stack_boundary_arg",gcc_options,x_ix86_incoming_stack_boundary_arg> x_ix86_incoming_stack_boundary_arg;
	 generic_field_name <"x_ix86_section_threshold",gcc_options,x_ix86_section_threshold> x_ix86_section_threshold;
	 generic_field_name <"x_ix86_preferred_stack_boundary_arg",gcc_options,x_ix86_preferred_stack_boundary_arg> x_ix86_preferred_stack_boundary_arg;
	 generic_field_name <"x_ix86_recip_name",gcc_options,x_ix86_recip_name> x_ix86_recip_name;
	 generic_field_name <"x_ix86_regparm",gcc_options,x_ix86_regparm> x_ix86_regparm;
	 generic_field_name <"x_ix86_sse2avx",gcc_options,x_ix86_sse2avx> x_ix86_sse2avx;
	 generic_field_name <"x_ix86_force_align_arg_pointer",gcc_options,x_ix86_force_align_arg_pointer> x_ix86_force_align_arg_pointer;
	 generic_field_name <"x_ix86_stringop_alg",gcc_options,x_ix86_stringop_alg> x_ix86_stringop_alg;
	 generic_field_name <"x_ix86_tls_dialect",gcc_options,x_ix86_tls_dialect> x_ix86_tls_dialect;
	 generic_field_name <"x_ix86_tune_string",gcc_options,x_ix86_tune_string> x_ix86_tune_string;
	 generic_field_name <"x_ix86_veclibabi_type",gcc_options,x_ix86_veclibabi_type> x_ix86_veclibabi_type;
	 generic_field_name <"x_asm_file_name",gcc_options,x_asm_file_name> x_asm_file_name;
	 generic_field_name <"x_pass_exit_codes",gcc_options,x_pass_exit_codes> x_pass_exit_codes;
	 generic_field_name <"x_pedantic",gcc_options,x_pedantic> x_pedantic;
	 generic_field_name <"x_flag_pedantic_errors",gcc_options,x_flag_pedantic_errors> x_flag_pedantic_errors;
	 generic_field_name <"x_use_pipes",gcc_options,x_use_pipes> x_use_pipes;
	 generic_field_name <"x_print_file_name",gcc_options,x_print_file_name> x_print_file_name;
	 generic_field_name <"x_print_multi_directory",gcc_options,x_print_multi_directory> x_print_multi_directory;
	 generic_field_name <"x_print_multi_lib",gcc_options,x_print_multi_lib> x_print_multi_lib;
	 generic_field_name <"x_print_multi_os_directory",gcc_options,x_print_multi_os_directory> x_print_multi_os_directory;
	 generic_field_name <"x_print_multiarch",gcc_options,x_print_multiarch> x_print_multiarch;
	 generic_field_name <"x_print_prog_name",gcc_options,x_print_prog_name> x_print_prog_name;
	 generic_field_name <"x_print_search_dirs",gcc_options,x_print_search_dirs> x_print_search_dirs;
	 generic_field_name <"x_print_sysroot",gcc_options,x_print_sysroot> x_print_sysroot;
	 generic_field_name <"x_print_sysroot_headers_suffix",gcc_options,x_print_sysroot_headers_suffix> x_print_sysroot_headers_suffix;
	 generic_field_name <"x_quiet_flag",gcc_options,x_quiet_flag> x_quiet_flag;
	 generic_field_name <"x_report_times",gcc_options,x_report_times> x_report_times;
	 generic_field_name <"x_flag_undef",gcc_options,x_flag_undef> x_flag_undef;
	 generic_field_name <"x_verbose_flag",gcc_options,x_verbose_flag> x_verbose_flag;
	 generic_field_name <"x_version_flag",gcc_options,x_version_flag> x_version_flag;
	 generic_field_name <"x_inhibit_warnings",gcc_options,x_inhibit_warnings> x_inhibit_warnings;
	 generic_field_name <"x_wrapper_string",gcc_options,x_wrapper_string> x_wrapper_string;
	 generic_field_name <"x_VAR_malign_functions_",gcc_options,x_VAR_malign_functions_> x_VAR_malign_functions_;
	 generic_field_name <"x_VAR_malign_jumps_",gcc_options,x_VAR_malign_jumps_> x_VAR_malign_jumps_;
	 generic_field_name <"x_VAR_malign_loops_",gcc_options,x_VAR_malign_loops_> x_VAR_malign_loops_;
	 generic_field_name <"x_VAR_mpc32",gcc_options,x_VAR_mpc32> x_VAR_mpc32;
	 generic_field_name <"x_VAR_mpc64",gcc_options,x_VAR_mpc64> x_VAR_mpc64;
	 generic_field_name <"x_VAR_mpc80",gcc_options,x_VAR_mpc80> x_VAR_mpc80;
	 generic_field_name <"frontend_set_flag_associative_math",gcc_options,frontend_set_flag_associative_math> frontend_set_flag_associative_math;
	 generic_field_name <"frontend_set_flag_cx_limited_range",gcc_options,frontend_set_flag_cx_limited_range> frontend_set_flag_cx_limited_range;
	 generic_field_name <"frontend_set_flag_finite_math_only",gcc_options,frontend_set_flag_finite_math_only> frontend_set_flag_finite_math_only;
	 generic_field_name <"frontend_set_flag_errno_math",gcc_options,frontend_set_flag_errno_math> frontend_set_flag_errno_math;
	 generic_field_name <"frontend_set_flag_reciprocal_math",gcc_options,frontend_set_flag_reciprocal_math> frontend_set_flag_reciprocal_math;
	 generic_field_name <"frontend_set_flag_rounding_math",gcc_options,frontend_set_flag_rounding_math> frontend_set_flag_rounding_math;
	 generic_field_name <"frontend_set_flag_signaling_nans",gcc_options,frontend_set_flag_signaling_nans> frontend_set_flag_signaling_nans;
	 generic_field_name <"frontend_set_flag_signed_zeros",gcc_options,frontend_set_flag_signed_zeros> frontend_set_flag_signed_zeros;
	 generic_field_name <"frontend_set_flag_trapping_math",gcc_options,frontend_set_flag_trapping_math> frontend_set_flag_trapping_math;
	 generic_field_name <"frontend_set_flag_unsafe_math_optimizations",gcc_options,frontend_set_flag_unsafe_math_optimizations> frontend_set_flag_unsafe_math_optimizations;
}; 
class CLS_420_cl_optimization{ 
	 generic_class_name <"cl_optimization",cl_optimization> the_class_name;
	 generic_field_name <"x_align_functions",cl_optimization,x_align_functions> x_align_functions;
	 generic_field_name <"x_align_jumps",cl_optimization,x_align_jumps> x_align_jumps;
	 generic_field_name <"x_align_labels",cl_optimization,x_align_labels> x_align_labels;
	 generic_field_name <"x_align_loops",cl_optimization,x_align_loops> x_align_loops;
	 generic_field_name <"x_flag_sched_stalled_insns",cl_optimization,x_flag_sched_stalled_insns> x_flag_sched_stalled_insns;
	 generic_field_name <"x_flag_sched_stalled_insns_dep",cl_optimization,x_flag_sched_stalled_insns_dep> x_flag_sched_stalled_insns_dep;
	 generic_field_name <"x_flag_fp_contract_mode",cl_optimization,x_flag_fp_contract_mode> x_flag_fp_contract_mode;
	 generic_field_name <"x_optimize",cl_optimization,x_optimize> x_optimize;
	 generic_field_name <"x_optimize_size",cl_optimization,x_optimize_size> x_optimize_size;
	 generic_field_name <"x_flag_asynchronous_unwind_tables",cl_optimization,x_flag_asynchronous_unwind_tables> x_flag_asynchronous_unwind_tables;
	 generic_field_name <"x_flag_branch_on_count_reg",cl_optimization,x_flag_branch_on_count_reg> x_flag_branch_on_count_reg;
	 generic_field_name <"x_flag_branch_probabilities",cl_optimization,x_flag_branch_probabilities> x_flag_branch_probabilities;
	 generic_field_name <"x_flag_branch_target_load_optimize",cl_optimization,x_flag_branch_target_load_optimize> x_flag_branch_target_load_optimize;
	 generic_field_name <"x_flag_branch_target_load_optimize2",cl_optimization,x_flag_branch_target_load_optimize2> x_flag_branch_target_load_optimize2;
	 generic_field_name <"x_flag_btr_bb_exclusive",cl_optimization,x_flag_btr_bb_exclusive> x_flag_btr_bb_exclusive;
	 generic_field_name <"x_flag_caller_saves",cl_optimization,x_flag_caller_saves> x_flag_caller_saves;
	 generic_field_name <"x_flag_combine_stack_adjustments",cl_optimization,x_flag_combine_stack_adjustments> x_flag_combine_stack_adjustments;
	 generic_field_name <"x_flag_no_common",cl_optimization,x_flag_no_common> x_flag_no_common;
	 generic_field_name <"x_flag_compare_elim_after_reload",cl_optimization,x_flag_compare_elim_after_reload> x_flag_compare_elim_after_reload;
	 generic_field_name <"x_flag_conserve_stack",cl_optimization,x_flag_conserve_stack> x_flag_conserve_stack;
	 generic_field_name <"x_flag_cprop_registers",cl_optimization,x_flag_cprop_registers> x_flag_cprop_registers;
	 generic_field_name <"x_flag_crossjumping",cl_optimization,x_flag_crossjumping> x_flag_crossjumping;
	 generic_field_name <"x_flag_cse_follow_jumps",cl_optimization,x_flag_cse_follow_jumps> x_flag_cse_follow_jumps;
	 generic_field_name <"x_flag_cx_fortran_rules",cl_optimization,x_flag_cx_fortran_rules> x_flag_cx_fortran_rules;
	 generic_field_name <"x_flag_cx_limited_range",cl_optimization,x_flag_cx_limited_range> x_flag_cx_limited_range;
	 generic_field_name <"x_flag_data_sections",cl_optimization,x_flag_data_sections> x_flag_data_sections;
	 generic_field_name <"x_flag_dce",cl_optimization,x_flag_dce> x_flag_dce;
	 generic_field_name <"x_flag_defer_pop",cl_optimization,x_flag_defer_pop> x_flag_defer_pop;
	 generic_field_name <"x_flag_delayed_branch",cl_optimization,x_flag_delayed_branch> x_flag_delayed_branch;
	 generic_field_name <"x_flag_delete_null_pointer_checks",cl_optimization,x_flag_delete_null_pointer_checks> x_flag_delete_null_pointer_checks;
	 generic_field_name <"x_flag_devirtualize",cl_optimization,x_flag_devirtualize> x_flag_devirtualize;
	 generic_field_name <"x_flag_dse",cl_optimization,x_flag_dse> x_flag_dse;
	 generic_field_name <"x_flag_early_inlining",cl_optimization,x_flag_early_inlining> x_flag_early_inlining;
	 generic_field_name <"x_flag_exceptions",cl_optimization,x_flag_exceptions> x_flag_exceptions;
	 generic_field_name <"x_flag_expensive_optimizations",cl_optimization,x_flag_expensive_optimizations> x_flag_expensive_optimizations;
	 generic_field_name <"x_flag_finite_math_only",cl_optimization,x_flag_finite_math_only> x_flag_finite_math_only;
	 generic_field_name <"x_flag_float_store",cl_optimization,x_flag_float_store> x_flag_float_store;
	 generic_field_name <"x_flag_forward_propagate",cl_optimization,x_flag_forward_propagate> x_flag_forward_propagate;
	 generic_field_name <"x_flag_gcse",cl_optimization,x_flag_gcse> x_flag_gcse;
	 generic_field_name <"x_flag_gcse_after_reload",cl_optimization,x_flag_gcse_after_reload> x_flag_gcse_after_reload;
	 generic_field_name <"x_flag_gcse_las",cl_optimization,x_flag_gcse_las> x_flag_gcse_las;
	 generic_field_name <"x_flag_gcse_lm",cl_optimization,x_flag_gcse_lm> x_flag_gcse_lm;
	 generic_field_name <"x_flag_gcse_sm",cl_optimization,x_flag_gcse_sm> x_flag_gcse_sm;
	 generic_field_name <"x_flag_graphite_identity",cl_optimization,x_flag_graphite_identity> x_flag_graphite_identity;
	 generic_field_name <"x_flag_guess_branch_prob",cl_optimization,x_flag_guess_branch_prob> x_flag_guess_branch_prob;
	 generic_field_name <"x_flag_if_conversion",cl_optimization,x_flag_if_conversion> x_flag_if_conversion;
	 generic_field_name <"x_flag_if_conversion2",cl_optimization,x_flag_if_conversion2> x_flag_if_conversion2;
	 generic_field_name <"x_flag_inline_atomics",cl_optimization,x_flag_inline_atomics> x_flag_inline_atomics;
	 generic_field_name <"x_flag_inline_functions",cl_optimization,x_flag_inline_functions> x_flag_inline_functions;
	 generic_field_name <"x_flag_inline_functions_called_once",cl_optimization,x_flag_inline_functions_called_once> x_flag_inline_functions_called_once;
	 generic_field_name <"x_flag_inline_small_functions",cl_optimization,x_flag_inline_small_functions> x_flag_inline_small_functions;
	 generic_field_name <"x_flag_ipa_cp",cl_optimization,x_flag_ipa_cp> x_flag_ipa_cp;
	 generic_field_name <"x_flag_ipa_cp_clone",cl_optimization,x_flag_ipa_cp_clone> x_flag_ipa_cp_clone;
	 generic_field_name <"x_flag_ipa_matrix_reorg",cl_optimization,x_flag_ipa_matrix_reorg> x_flag_ipa_matrix_reorg;
	 generic_field_name <"x_flag_ipa_profile",cl_optimization,x_flag_ipa_profile> x_flag_ipa_profile;
	 generic_field_name <"x_flag_ipa_pta",cl_optimization,x_flag_ipa_pta> x_flag_ipa_pta;
	 generic_field_name <"x_flag_ipa_pure_const",cl_optimization,x_flag_ipa_pure_const> x_flag_ipa_pure_const;
	 generic_field_name <"x_flag_ipa_reference",cl_optimization,x_flag_ipa_reference> x_flag_ipa_reference;
	 generic_field_name <"x_flag_ipa_sra",cl_optimization,x_flag_ipa_sra> x_flag_ipa_sra;
	 generic_field_name <"x_flag_ivopts",cl_optimization,x_flag_ivopts> x_flag_ivopts;
	 generic_field_name <"x_flag_jump_tables",cl_optimization,x_flag_jump_tables> x_flag_jump_tables;
	 generic_field_name <"x_flag_loop_block",cl_optimization,x_flag_loop_block> x_flag_loop_block;
	 generic_field_name <"x_flag_loop_flatten",cl_optimization,x_flag_loop_flatten> x_flag_loop_flatten;
	 generic_field_name <"x_flag_loop_interchange",cl_optimization,x_flag_loop_interchange> x_flag_loop_interchange;
	 generic_field_name <"x_flag_loop_parallelize_all",cl_optimization,x_flag_loop_parallelize_all> x_flag_loop_parallelize_all;
	 generic_field_name <"x_flag_loop_strip_mine",cl_optimization,x_flag_loop_strip_mine> x_flag_loop_strip_mine;
	 generic_field_name <"x_flag_errno_math",cl_optimization,x_flag_errno_math> x_flag_errno_math;
	 generic_field_name <"x_flag_merge_constants",cl_optimization,x_flag_merge_constants> x_flag_merge_constants;
	 generic_field_name <"x_flag_modulo_sched",cl_optimization,x_flag_modulo_sched> x_flag_modulo_sched;
	 generic_field_name <"x_flag_move_loop_invariants",cl_optimization,x_flag_move_loop_invariants> x_flag_move_loop_invariants;
	 generic_field_name <"x_flag_non_call_exceptions",cl_optimization,x_flag_non_call_exceptions> x_flag_non_call_exceptions;
	 generic_field_name <"x_flag_nothrow_opt",cl_optimization,x_flag_nothrow_opt> x_flag_nothrow_opt;
	 generic_field_name <"x_flag_omit_frame_pointer",cl_optimization,x_flag_omit_frame_pointer> x_flag_omit_frame_pointer;
	 generic_field_name <"x_flag_regmove",cl_optimization,x_flag_regmove> x_flag_regmove;
	 generic_field_name <"x_flag_optimize_sibling_calls",cl_optimization,x_flag_optimize_sibling_calls> x_flag_optimize_sibling_calls;
	 generic_field_name <"x_flag_optimize_strlen",cl_optimization,x_flag_optimize_strlen> x_flag_optimize_strlen;
	 generic_field_name <"x_flag_pack_struct",cl_optimization,x_flag_pack_struct> x_flag_pack_struct;
	 generic_field_name <"x_flag_peel_loops",cl_optimization,x_flag_peel_loops> x_flag_peel_loops;
	 generic_field_name <"x_flag_no_peephole",cl_optimization,x_flag_no_peephole> x_flag_no_peephole;
	 generic_field_name <"x_flag_peephole2",cl_optimization,x_flag_peephole2> x_flag_peephole2;
	 generic_field_name <"x_flag_predictive_commoning",cl_optimization,x_flag_predictive_commoning> x_flag_predictive_commoning;
	 generic_field_name <"x_flag_prefetch_loop_arrays",cl_optimization,x_flag_prefetch_loop_arrays> x_flag_prefetch_loop_arrays;
	 generic_field_name <"x_flag_pcc_struct_return",cl_optimization,x_flag_pcc_struct_return> x_flag_pcc_struct_return;
	 generic_field_name <"x_flag_rename_registers",cl_optimization,x_flag_rename_registers> x_flag_rename_registers;
	 generic_field_name <"x_flag_reorder_blocks",cl_optimization,x_flag_reorder_blocks> x_flag_reorder_blocks;
	 generic_field_name <"x_flag_reorder_blocks_and_partition",cl_optimization,x_flag_reorder_blocks_and_partition> x_flag_reorder_blocks_and_partition;
	 generic_field_name <"x_flag_reorder_functions",cl_optimization,x_flag_reorder_functions> x_flag_reorder_functions;
	 generic_field_name <"x_flag_rerun_cse_after_loop",cl_optimization,x_flag_rerun_cse_after_loop> x_flag_rerun_cse_after_loop;
	 generic_field_name <"x_flag_resched_modulo_sched",cl_optimization,x_flag_resched_modulo_sched> x_flag_resched_modulo_sched;
	 generic_field_name <"x_flag_rounding_math",cl_optimization,x_flag_rounding_math> x_flag_rounding_math;
	 generic_field_name <"x_flag_rtti",cl_optimization,x_flag_rtti> x_flag_rtti;
	 generic_field_name <"x_flag_sched_critical_path_heuristic",cl_optimization,x_flag_sched_critical_path_heuristic> x_flag_sched_critical_path_heuristic;
	 generic_field_name <"x_flag_sched_dep_count_heuristic",cl_optimization,x_flag_sched_dep_count_heuristic> x_flag_sched_dep_count_heuristic;
	 generic_field_name <"x_flag_sched_group_heuristic",cl_optimization,x_flag_sched_group_heuristic> x_flag_sched_group_heuristic;
	 generic_field_name <"x_flag_schedule_interblock",cl_optimization,x_flag_schedule_interblock> x_flag_schedule_interblock;
	 generic_field_name <"x_flag_sched_last_insn_heuristic",cl_optimization,x_flag_sched_last_insn_heuristic> x_flag_sched_last_insn_heuristic;
	 generic_field_name <"x_flag_sched_pressure",cl_optimization,x_flag_sched_pressure> x_flag_sched_pressure;
	 generic_field_name <"x_flag_sched_rank_heuristic",cl_optimization,x_flag_sched_rank_heuristic> x_flag_sched_rank_heuristic;
	 generic_field_name <"x_flag_schedule_speculative",cl_optimization,x_flag_schedule_speculative> x_flag_schedule_speculative;
	 generic_field_name <"x_flag_sched_spec_insn_heuristic",cl_optimization,x_flag_sched_spec_insn_heuristic> x_flag_sched_spec_insn_heuristic;
	 generic_field_name <"x_flag_schedule_speculative_load",cl_optimization,x_flag_schedule_speculative_load> x_flag_schedule_speculative_load;
	 generic_field_name <"x_flag_schedule_speculative_load_dangerous",cl_optimization,x_flag_schedule_speculative_load_dangerous> x_flag_schedule_speculative_load_dangerous;
	 generic_field_name <"x_flag_sched2_use_superblocks",cl_optimization,x_flag_sched2_use_superblocks> x_flag_sched2_use_superblocks;
	 generic_field_name <"x_flag_schedule_insns",cl_optimization,x_flag_schedule_insns> x_flag_schedule_insns;
	 generic_field_name <"x_flag_schedule_insns_after_reload",cl_optimization,x_flag_schedule_insns_after_reload> x_flag_schedule_insns_after_reload;
	 generic_field_name <"x_flag_section_anchors",cl_optimization,x_flag_section_anchors> x_flag_section_anchors;
	 generic_field_name <"x_flag_sel_sched_pipelining",cl_optimization,x_flag_sel_sched_pipelining> x_flag_sel_sched_pipelining;
	 generic_field_name <"x_flag_sel_sched_pipelining_outer_loops",cl_optimization,x_flag_sel_sched_pipelining_outer_loops> x_flag_sel_sched_pipelining_outer_loops;
	 generic_field_name <"x_flag_sel_sched_reschedule_pipelined",cl_optimization,x_flag_sel_sched_reschedule_pipelined> x_flag_sel_sched_reschedule_pipelined;
	 generic_field_name <"x_flag_selective_scheduling",cl_optimization,x_flag_selective_scheduling> x_flag_selective_scheduling;
	 generic_field_name <"x_flag_selective_scheduling2",cl_optimization,x_flag_selective_scheduling2> x_flag_selective_scheduling2;
	 generic_field_name <"x_flag_short_double",cl_optimization,x_flag_short_double> x_flag_short_double;
	 generic_field_name <"x_flag_short_enums",cl_optimization,x_flag_short_enums> x_flag_short_enums;
	 generic_field_name <"x_flag_short_wchar",cl_optimization,x_flag_short_wchar> x_flag_short_wchar;
	 generic_field_name <"x_flag_shrink_wrap",cl_optimization,x_flag_shrink_wrap> x_flag_shrink_wrap;
	 generic_field_name <"x_flag_signaling_nans",cl_optimization,x_flag_signaling_nans> x_flag_signaling_nans;
	 generic_field_name <"x_flag_signed_zeros",cl_optimization,x_flag_signed_zeros> x_flag_signed_zeros;
	 generic_field_name <"x_flag_single_precision_constant",cl_optimization,x_flag_single_precision_constant> x_flag_single_precision_constant;
	 generic_field_name <"x_flag_split_ivs_in_unroller",cl_optimization,x_flag_split_ivs_in_unroller> x_flag_split_ivs_in_unroller;
	 generic_field_name <"x_flag_split_wide_types",cl_optimization,x_flag_split_wide_types> x_flag_split_wide_types;
	 generic_field_name <"x_flag_strict_aliasing",cl_optimization,x_flag_strict_aliasing> x_flag_strict_aliasing;
	 generic_field_name <"x_flag_strict_enums",cl_optimization,x_flag_strict_enums> x_flag_strict_enums;
	 generic_field_name <"x_flag_thread_jumps",cl_optimization,x_flag_thread_jumps> x_flag_thread_jumps;
	 generic_field_name <"x_flag_threadsafe_statics",cl_optimization,x_flag_threadsafe_statics> x_flag_threadsafe_statics;
	 generic_field_name <"x_flag_toplevel_reorder",cl_optimization,x_flag_toplevel_reorder> x_flag_toplevel_reorder;
	 generic_field_name <"x_flag_trapping_math",cl_optimization,x_flag_trapping_math> x_flag_trapping_math;
	 generic_field_name <"x_flag_trapv",cl_optimization,x_flag_trapv> x_flag_trapv;
	 generic_field_name <"x_flag_tree_bit_ccp",cl_optimization,x_flag_tree_bit_ccp> x_flag_tree_bit_ccp;
	 generic_field_name <"x_flag_tree_builtin_call_dce",cl_optimization,x_flag_tree_builtin_call_dce> x_flag_tree_builtin_call_dce;
	 generic_field_name <"x_flag_tree_ccp",cl_optimization,x_flag_tree_ccp> x_flag_tree_ccp;
	 generic_field_name <"x_flag_tree_ch",cl_optimization,x_flag_tree_ch> x_flag_tree_ch;
	 generic_field_name <"x_flag_tree_copy_prop",cl_optimization,x_flag_tree_copy_prop> x_flag_tree_copy_prop;
	 generic_field_name <"x_flag_tree_copyrename",cl_optimization,x_flag_tree_copyrename> x_flag_tree_copyrename;
	 generic_field_name <"x_flag_tree_cselim",cl_optimization,x_flag_tree_cselim> x_flag_tree_cselim;
	 generic_field_name <"x_flag_tree_dce",cl_optimization,x_flag_tree_dce> x_flag_tree_dce;
	 generic_field_name <"x_flag_tree_dom",cl_optimization,x_flag_tree_dom> x_flag_tree_dom;
	 generic_field_name <"x_flag_tree_dse",cl_optimization,x_flag_tree_dse> x_flag_tree_dse;
	 generic_field_name <"x_flag_tree_forwprop",cl_optimization,x_flag_tree_forwprop> x_flag_tree_forwprop;
	 generic_field_name <"x_flag_tree_fre",cl_optimization,x_flag_tree_fre> x_flag_tree_fre;
	 generic_field_name <"x_flag_tree_loop_distribute_patterns",cl_optimization,x_flag_tree_loop_distribute_patterns> x_flag_tree_loop_distribute_patterns;
	 generic_field_name <"x_flag_tree_loop_distribution",cl_optimization,x_flag_tree_loop_distribution> x_flag_tree_loop_distribution;
	 generic_field_name <"x_flag_tree_loop_if_convert",cl_optimization,x_flag_tree_loop_if_convert> x_flag_tree_loop_if_convert;
	 generic_field_name <"x_flag_tree_loop_if_convert_stores",cl_optimization,x_flag_tree_loop_if_convert_stores> x_flag_tree_loop_if_convert_stores;
	 generic_field_name <"x_flag_tree_loop_im",cl_optimization,x_flag_tree_loop_im> x_flag_tree_loop_im;
	 generic_field_name <"x_flag_tree_loop_ivcanon",cl_optimization,x_flag_tree_loop_ivcanon> x_flag_tree_loop_ivcanon;
	 generic_field_name <"x_flag_tree_loop_optimize",cl_optimization,x_flag_tree_loop_optimize> x_flag_tree_loop_optimize;
	 generic_field_name <"x_flag_tree_live_range_split",cl_optimization,x_flag_tree_live_range_split> x_flag_tree_live_range_split;
	 generic_field_name <"x_flag_tree_partial_pre",cl_optimization,x_flag_tree_partial_pre> x_flag_tree_partial_pre;
	 generic_field_name <"x_flag_tree_phiprop",cl_optimization,x_flag_tree_phiprop> x_flag_tree_phiprop;
	 generic_field_name <"x_flag_tree_pre",cl_optimization,x_flag_tree_pre> x_flag_tree_pre;
	 generic_field_name <"x_flag_tree_pta",cl_optimization,x_flag_tree_pta> x_flag_tree_pta;
	 generic_field_name <"x_flag_tree_reassoc",cl_optimization,x_flag_tree_reassoc> x_flag_tree_reassoc;
	 generic_field_name <"x_flag_tree_scev_cprop",cl_optimization,x_flag_tree_scev_cprop> x_flag_tree_scev_cprop;
	 generic_field_name <"x_flag_tree_sink",cl_optimization,x_flag_tree_sink> x_flag_tree_sink;
	 generic_field_name <"x_flag_tree_slp_vectorize",cl_optimization,x_flag_tree_slp_vectorize> x_flag_tree_slp_vectorize;
	 generic_field_name <"x_flag_tree_sra",cl_optimization,x_flag_tree_sra> x_flag_tree_sra;
	 generic_field_name <"x_flag_tree_switch_conversion",cl_optimization,x_flag_tree_switch_conversion> x_flag_tree_switch_conversion;
	 generic_field_name <"x_flag_tree_tail_merge",cl_optimization,x_flag_tree_tail_merge> x_flag_tree_tail_merge;
	 generic_field_name <"x_flag_tree_ter",cl_optimization,x_flag_tree_ter> x_flag_tree_ter;
	 generic_field_name <"x_flag_tree_vect_loop_version",cl_optimization,x_flag_tree_vect_loop_version> x_flag_tree_vect_loop_version;
	 generic_field_name <"x_flag_tree_vectorize",cl_optimization,x_flag_tree_vectorize> x_flag_tree_vectorize;
	 generic_field_name <"x_flag_tree_vrp",cl_optimization,x_flag_tree_vrp> x_flag_tree_vrp;
	 generic_field_name <"x_flag_unit_at_a_time",cl_optimization,x_flag_unit_at_a_time> x_flag_unit_at_a_time;
	 generic_field_name <"x_flag_unroll_all_loops",cl_optimization,x_flag_unroll_all_loops> x_flag_unroll_all_loops;
	 generic_field_name <"x_flag_unroll_loops",cl_optimization,x_flag_unroll_loops> x_flag_unroll_loops;
	 generic_field_name <"x_flag_unsafe_loop_optimizations",cl_optimization,x_flag_unsafe_loop_optimizations> x_flag_unsafe_loop_optimizations;
	 generic_field_name <"x_flag_unsafe_math_optimizations",cl_optimization,x_flag_unsafe_math_optimizations> x_flag_unsafe_math_optimizations;
	 generic_field_name <"x_flag_unswitch_loops",cl_optimization,x_flag_unswitch_loops> x_flag_unswitch_loops;
	 generic_field_name <"x_flag_unwind_tables",cl_optimization,x_flag_unwind_tables> x_flag_unwind_tables;
	 generic_field_name <"x_flag_var_tracking",cl_optimization,x_flag_var_tracking> x_flag_var_tracking;
	 generic_field_name <"x_flag_var_tracking_assignments",cl_optimization,x_flag_var_tracking_assignments> x_flag_var_tracking_assignments;
	 generic_field_name <"x_flag_var_tracking_assignments_toggle",cl_optimization,x_flag_var_tracking_assignments_toggle> x_flag_var_tracking_assignments_toggle;
	 generic_field_name <"x_flag_var_tracking_uninit",cl_optimization,x_flag_var_tracking_uninit> x_flag_var_tracking_uninit;
	 generic_field_name <"x_flag_variable_expansion_in_unroller",cl_optimization,x_flag_variable_expansion_in_unroller> x_flag_variable_expansion_in_unroller;
	 generic_field_name <"x_flag_vect_cost_model",cl_optimization,x_flag_vect_cost_model> x_flag_vect_cost_model;
	 generic_field_name <"x_flag_value_profile_transformations",cl_optimization,x_flag_value_profile_transformations> x_flag_value_profile_transformations;
	 generic_field_name <"x_flag_web",cl_optimization,x_flag_web> x_flag_web;
	 generic_field_name <"x_flag_whole_program",cl_optimization,x_flag_whole_program> x_flag_whole_program;
	 generic_field_name <"x_flag_wrapv",cl_optimization,x_flag_wrapv> x_flag_wrapv;
}; 
class CLS_421_cl_target_option{ 
	 generic_class_name <"cl_target_option",cl_target_option> the_class_name;
	 generic_field_name <"x_ix86_isa_flags_explicit",cl_target_option,x_ix86_isa_flags_explicit> x_ix86_isa_flags_explicit;
	 generic_field_name <"x_ix86_isa_flags",cl_target_option,x_ix86_isa_flags> x_ix86_isa_flags;
	 generic_field_name <"x_ix86_fpmath",cl_target_option,x_ix86_fpmath> x_ix86_fpmath;
	 generic_field_name <"ix86_target_flags_explicit",cl_target_option,ix86_target_flags_explicit> ix86_target_flags_explicit;
	 generic_field_name <"x_recip_mask_explicit",cl_target_option,x_recip_mask_explicit> x_recip_mask_explicit;
	 generic_field_name <"x_recip_mask",cl_target_option,x_recip_mask> x_recip_mask;
	 generic_field_name <"x_target_flags",cl_target_option,x_target_flags> x_target_flags;
	 generic_field_name <"arch",cl_target_option,arch> arch;
	 generic_field_name <"arch_specified",cl_target_option,arch_specified> arch_specified;
	 generic_field_name <"branch_cost",cl_target_option,branch_cost> branch_cost;
	 generic_field_name <"schedule",cl_target_option,schedule> schedule;
	 generic_field_name <"tune",cl_target_option,tune> tune;
	 generic_field_name <"tune_defaulted",cl_target_option,tune_defaulted> tune_defaulted;
}; 
class CLS_422_cl_optimization{ 
	 generic_class_name <"cl_optimization",cl_optimization> the_class_name;
	 generic_field_name <"x_align_functions",cl_optimization,x_align_functions> x_align_functions;
	 generic_field_name <"x_align_jumps",cl_optimization,x_align_jumps> x_align_jumps;
	 generic_field_name <"x_align_labels",cl_optimization,x_align_labels> x_align_labels;
	 generic_field_name <"x_align_loops",cl_optimization,x_align_loops> x_align_loops;
	 generic_field_name <"x_flag_sched_stalled_insns",cl_optimization,x_flag_sched_stalled_insns> x_flag_sched_stalled_insns;
	 generic_field_name <"x_flag_sched_stalled_insns_dep",cl_optimization,x_flag_sched_stalled_insns_dep> x_flag_sched_stalled_insns_dep;
	 generic_field_name <"x_flag_fp_contract_mode",cl_optimization,x_flag_fp_contract_mode> x_flag_fp_contract_mode;
	 generic_field_name <"x_optimize",cl_optimization,x_optimize> x_optimize;
	 generic_field_name <"x_optimize_size",cl_optimization,x_optimize_size> x_optimize_size;
	 generic_field_name <"x_flag_asynchronous_unwind_tables",cl_optimization,x_flag_asynchronous_unwind_tables> x_flag_asynchronous_unwind_tables;
	 generic_field_name <"x_flag_branch_on_count_reg",cl_optimization,x_flag_branch_on_count_reg> x_flag_branch_on_count_reg;
	 generic_field_name <"x_flag_branch_probabilities",cl_optimization,x_flag_branch_probabilities> x_flag_branch_probabilities;
	 generic_field_name <"x_flag_branch_target_load_optimize",cl_optimization,x_flag_branch_target_load_optimize> x_flag_branch_target_load_optimize;
	 generic_field_name <"x_flag_branch_target_load_optimize2",cl_optimization,x_flag_branch_target_load_optimize2> x_flag_branch_target_load_optimize2;
	 generic_field_name <"x_flag_btr_bb_exclusive",cl_optimization,x_flag_btr_bb_exclusive> x_flag_btr_bb_exclusive;
	 generic_field_name <"x_flag_caller_saves",cl_optimization,x_flag_caller_saves> x_flag_caller_saves;
	 generic_field_name <"x_flag_combine_stack_adjustments",cl_optimization,x_flag_combine_stack_adjustments> x_flag_combine_stack_adjustments;
	 generic_field_name <"x_flag_no_common",cl_optimization,x_flag_no_common> x_flag_no_common;
	 generic_field_name <"x_flag_compare_elim_after_reload",cl_optimization,x_flag_compare_elim_after_reload> x_flag_compare_elim_after_reload;
	 generic_field_name <"x_flag_conserve_stack",cl_optimization,x_flag_conserve_stack> x_flag_conserve_stack;
	 generic_field_name <"x_flag_cprop_registers",cl_optimization,x_flag_cprop_registers> x_flag_cprop_registers;
	 generic_field_name <"x_flag_crossjumping",cl_optimization,x_flag_crossjumping> x_flag_crossjumping;
	 generic_field_name <"x_flag_cse_follow_jumps",cl_optimization,x_flag_cse_follow_jumps> x_flag_cse_follow_jumps;
	 generic_field_name <"x_flag_cx_fortran_rules",cl_optimization,x_flag_cx_fortran_rules> x_flag_cx_fortran_rules;
	 generic_field_name <"x_flag_cx_limited_range",cl_optimization,x_flag_cx_limited_range> x_flag_cx_limited_range;
	 generic_field_name <"x_flag_data_sections",cl_optimization,x_flag_data_sections> x_flag_data_sections;
	 generic_field_name <"x_flag_dce",cl_optimization,x_flag_dce> x_flag_dce;
	 generic_field_name <"x_flag_defer_pop",cl_optimization,x_flag_defer_pop> x_flag_defer_pop;
	 generic_field_name <"x_flag_delayed_branch",cl_optimization,x_flag_delayed_branch> x_flag_delayed_branch;
	 generic_field_name <"x_flag_delete_null_pointer_checks",cl_optimization,x_flag_delete_null_pointer_checks> x_flag_delete_null_pointer_checks;
	 generic_field_name <"x_flag_devirtualize",cl_optimization,x_flag_devirtualize> x_flag_devirtualize;
	 generic_field_name <"x_flag_dse",cl_optimization,x_flag_dse> x_flag_dse;
	 generic_field_name <"x_flag_early_inlining",cl_optimization,x_flag_early_inlining> x_flag_early_inlining;
	 generic_field_name <"x_flag_exceptions",cl_optimization,x_flag_exceptions> x_flag_exceptions;
	 generic_field_name <"x_flag_expensive_optimizations",cl_optimization,x_flag_expensive_optimizations> x_flag_expensive_optimizations;
	 generic_field_name <"x_flag_finite_math_only",cl_optimization,x_flag_finite_math_only> x_flag_finite_math_only;
	 generic_field_name <"x_flag_float_store",cl_optimization,x_flag_float_store> x_flag_float_store;
	 generic_field_name <"x_flag_forward_propagate",cl_optimization,x_flag_forward_propagate> x_flag_forward_propagate;
	 generic_field_name <"x_flag_gcse",cl_optimization,x_flag_gcse> x_flag_gcse;
	 generic_field_name <"x_flag_gcse_after_reload",cl_optimization,x_flag_gcse_after_reload> x_flag_gcse_after_reload;
	 generic_field_name <"x_flag_gcse_las",cl_optimization,x_flag_gcse_las> x_flag_gcse_las;
	 generic_field_name <"x_flag_gcse_lm",cl_optimization,x_flag_gcse_lm> x_flag_gcse_lm;
	 generic_field_name <"x_flag_gcse_sm",cl_optimization,x_flag_gcse_sm> x_flag_gcse_sm;
	 generic_field_name <"x_flag_graphite_identity",cl_optimization,x_flag_graphite_identity> x_flag_graphite_identity;
	 generic_field_name <"x_flag_guess_branch_prob",cl_optimization,x_flag_guess_branch_prob> x_flag_guess_branch_prob;
	 generic_field_name <"x_flag_if_conversion",cl_optimization,x_flag_if_conversion> x_flag_if_conversion;
	 generic_field_name <"x_flag_if_conversion2",cl_optimization,x_flag_if_conversion2> x_flag_if_conversion2;
	 generic_field_name <"x_flag_inline_atomics",cl_optimization,x_flag_inline_atomics> x_flag_inline_atomics;
	 generic_field_name <"x_flag_inline_functions",cl_optimization,x_flag_inline_functions> x_flag_inline_functions;
	 generic_field_name <"x_flag_inline_functions_called_once",cl_optimization,x_flag_inline_functions_called_once> x_flag_inline_functions_called_once;
	 generic_field_name <"x_flag_inline_small_functions",cl_optimization,x_flag_inline_small_functions> x_flag_inline_small_functions;
	 generic_field_name <"x_flag_ipa_cp",cl_optimization,x_flag_ipa_cp> x_flag_ipa_cp;
	 generic_field_name <"x_flag_ipa_cp_clone",cl_optimization,x_flag_ipa_cp_clone> x_flag_ipa_cp_clone;
	 generic_field_name <"x_flag_ipa_matrix_reorg",cl_optimization,x_flag_ipa_matrix_reorg> x_flag_ipa_matrix_reorg;
	 generic_field_name <"x_flag_ipa_profile",cl_optimization,x_flag_ipa_profile> x_flag_ipa_profile;
	 generic_field_name <"x_flag_ipa_pta",cl_optimization,x_flag_ipa_pta> x_flag_ipa_pta;
	 generic_field_name <"x_flag_ipa_pure_const",cl_optimization,x_flag_ipa_pure_const> x_flag_ipa_pure_const;
	 generic_field_name <"x_flag_ipa_reference",cl_optimization,x_flag_ipa_reference> x_flag_ipa_reference;
	 generic_field_name <"x_flag_ipa_sra",cl_optimization,x_flag_ipa_sra> x_flag_ipa_sra;
	 generic_field_name <"x_flag_ivopts",cl_optimization,x_flag_ivopts> x_flag_ivopts;
	 generic_field_name <"x_flag_jump_tables",cl_optimization,x_flag_jump_tables> x_flag_jump_tables;
	 generic_field_name <"x_flag_loop_block",cl_optimization,x_flag_loop_block> x_flag_loop_block;
	 generic_field_name <"x_flag_loop_flatten",cl_optimization,x_flag_loop_flatten> x_flag_loop_flatten;
	 generic_field_name <"x_flag_loop_interchange",cl_optimization,x_flag_loop_interchange> x_flag_loop_interchange;
	 generic_field_name <"x_flag_loop_parallelize_all",cl_optimization,x_flag_loop_parallelize_all> x_flag_loop_parallelize_all;
	 generic_field_name <"x_flag_loop_strip_mine",cl_optimization,x_flag_loop_strip_mine> x_flag_loop_strip_mine;
	 generic_field_name <"x_flag_errno_math",cl_optimization,x_flag_errno_math> x_flag_errno_math;
	 generic_field_name <"x_flag_merge_constants",cl_optimization,x_flag_merge_constants> x_flag_merge_constants;
	 generic_field_name <"x_flag_modulo_sched",cl_optimization,x_flag_modulo_sched> x_flag_modulo_sched;
	 generic_field_name <"x_flag_move_loop_invariants",cl_optimization,x_flag_move_loop_invariants> x_flag_move_loop_invariants;
	 generic_field_name <"x_flag_non_call_exceptions",cl_optimization,x_flag_non_call_exceptions> x_flag_non_call_exceptions;
	 generic_field_name <"x_flag_nothrow_opt",cl_optimization,x_flag_nothrow_opt> x_flag_nothrow_opt;
	 generic_field_name <"x_flag_omit_frame_pointer",cl_optimization,x_flag_omit_frame_pointer> x_flag_omit_frame_pointer;
	 generic_field_name <"x_flag_regmove",cl_optimization,x_flag_regmove> x_flag_regmove;
	 generic_field_name <"x_flag_optimize_sibling_calls",cl_optimization,x_flag_optimize_sibling_calls> x_flag_optimize_sibling_calls;
	 generic_field_name <"x_flag_optimize_strlen",cl_optimization,x_flag_optimize_strlen> x_flag_optimize_strlen;
	 generic_field_name <"x_flag_pack_struct",cl_optimization,x_flag_pack_struct> x_flag_pack_struct;
	 generic_field_name <"x_flag_peel_loops",cl_optimization,x_flag_peel_loops> x_flag_peel_loops;
	 generic_field_name <"x_flag_no_peephole",cl_optimization,x_flag_no_peephole> x_flag_no_peephole;
	 generic_field_name <"x_flag_peephole2",cl_optimization,x_flag_peephole2> x_flag_peephole2;
	 generic_field_name <"x_flag_predictive_commoning",cl_optimization,x_flag_predictive_commoning> x_flag_predictive_commoning;
	 generic_field_name <"x_flag_prefetch_loop_arrays",cl_optimization,x_flag_prefetch_loop_arrays> x_flag_prefetch_loop_arrays;
	 generic_field_name <"x_flag_pcc_struct_return",cl_optimization,x_flag_pcc_struct_return> x_flag_pcc_struct_return;
	 generic_field_name <"x_flag_rename_registers",cl_optimization,x_flag_rename_registers> x_flag_rename_registers;
	 generic_field_name <"x_flag_reorder_blocks",cl_optimization,x_flag_reorder_blocks> x_flag_reorder_blocks;
	 generic_field_name <"x_flag_reorder_blocks_and_partition",cl_optimization,x_flag_reorder_blocks_and_partition> x_flag_reorder_blocks_and_partition;
	 generic_field_name <"x_flag_reorder_functions",cl_optimization,x_flag_reorder_functions> x_flag_reorder_functions;
	 generic_field_name <"x_flag_rerun_cse_after_loop",cl_optimization,x_flag_rerun_cse_after_loop> x_flag_rerun_cse_after_loop;
	 generic_field_name <"x_flag_resched_modulo_sched",cl_optimization,x_flag_resched_modulo_sched> x_flag_resched_modulo_sched;
	 generic_field_name <"x_flag_rounding_math",cl_optimization,x_flag_rounding_math> x_flag_rounding_math;
	 generic_field_name <"x_flag_rtti",cl_optimization,x_flag_rtti> x_flag_rtti;
	 generic_field_name <"x_flag_sched_critical_path_heuristic",cl_optimization,x_flag_sched_critical_path_heuristic> x_flag_sched_critical_path_heuristic;
	 generic_field_name <"x_flag_sched_dep_count_heuristic",cl_optimization,x_flag_sched_dep_count_heuristic> x_flag_sched_dep_count_heuristic;
	 generic_field_name <"x_flag_sched_group_heuristic",cl_optimization,x_flag_sched_group_heuristic> x_flag_sched_group_heuristic;
	 generic_field_name <"x_flag_schedule_interblock",cl_optimization,x_flag_schedule_interblock> x_flag_schedule_interblock;
	 generic_field_name <"x_flag_sched_last_insn_heuristic",cl_optimization,x_flag_sched_last_insn_heuristic> x_flag_sched_last_insn_heuristic;
	 generic_field_name <"x_flag_sched_pressure",cl_optimization,x_flag_sched_pressure> x_flag_sched_pressure;
	 generic_field_name <"x_flag_sched_rank_heuristic",cl_optimization,x_flag_sched_rank_heuristic> x_flag_sched_rank_heuristic;
	 generic_field_name <"x_flag_schedule_speculative",cl_optimization,x_flag_schedule_speculative> x_flag_schedule_speculative;
	 generic_field_name <"x_flag_sched_spec_insn_heuristic",cl_optimization,x_flag_sched_spec_insn_heuristic> x_flag_sched_spec_insn_heuristic;
	 generic_field_name <"x_flag_schedule_speculative_load",cl_optimization,x_flag_schedule_speculative_load> x_flag_schedule_speculative_load;
	 generic_field_name <"x_flag_schedule_speculative_load_dangerous",cl_optimization,x_flag_schedule_speculative_load_dangerous> x_flag_schedule_speculative_load_dangerous;
	 generic_field_name <"x_flag_sched2_use_superblocks",cl_optimization,x_flag_sched2_use_superblocks> x_flag_sched2_use_superblocks;
	 generic_field_name <"x_flag_schedule_insns",cl_optimization,x_flag_schedule_insns> x_flag_schedule_insns;
	 generic_field_name <"x_flag_schedule_insns_after_reload",cl_optimization,x_flag_schedule_insns_after_reload> x_flag_schedule_insns_after_reload;
	 generic_field_name <"x_flag_section_anchors",cl_optimization,x_flag_section_anchors> x_flag_section_anchors;
	 generic_field_name <"x_flag_sel_sched_pipelining",cl_optimization,x_flag_sel_sched_pipelining> x_flag_sel_sched_pipelining;
	 generic_field_name <"x_flag_sel_sched_pipelining_outer_loops",cl_optimization,x_flag_sel_sched_pipelining_outer_loops> x_flag_sel_sched_pipelining_outer_loops;
	 generic_field_name <"x_flag_sel_sched_reschedule_pipelined",cl_optimization,x_flag_sel_sched_reschedule_pipelined> x_flag_sel_sched_reschedule_pipelined;
	 generic_field_name <"x_flag_selective_scheduling",cl_optimization,x_flag_selective_scheduling> x_flag_selective_scheduling;
	 generic_field_name <"x_flag_selective_scheduling2",cl_optimization,x_flag_selective_scheduling2> x_flag_selective_scheduling2;
	 generic_field_name <"x_flag_short_double",cl_optimization,x_flag_short_double> x_flag_short_double;
	 generic_field_name <"x_flag_short_enums",cl_optimization,x_flag_short_enums> x_flag_short_enums;
	 generic_field_name <"x_flag_short_wchar",cl_optimization,x_flag_short_wchar> x_flag_short_wchar;
	 generic_field_name <"x_flag_shrink_wrap",cl_optimization,x_flag_shrink_wrap> x_flag_shrink_wrap;
	 generic_field_name <"x_flag_signaling_nans",cl_optimization,x_flag_signaling_nans> x_flag_signaling_nans;
	 generic_field_name <"x_flag_signed_zeros",cl_optimization,x_flag_signed_zeros> x_flag_signed_zeros;
	 generic_field_name <"x_flag_single_precision_constant",cl_optimization,x_flag_single_precision_constant> x_flag_single_precision_constant;
	 generic_field_name <"x_flag_split_ivs_in_unroller",cl_optimization,x_flag_split_ivs_in_unroller> x_flag_split_ivs_in_unroller;
	 generic_field_name <"x_flag_split_wide_types",cl_optimization,x_flag_split_wide_types> x_flag_split_wide_types;
	 generic_field_name <"x_flag_strict_aliasing",cl_optimization,x_flag_strict_aliasing> x_flag_strict_aliasing;
	 generic_field_name <"x_flag_strict_enums",cl_optimization,x_flag_strict_enums> x_flag_strict_enums;
	 generic_field_name <"x_flag_thread_jumps",cl_optimization,x_flag_thread_jumps> x_flag_thread_jumps;
	 generic_field_name <"x_flag_threadsafe_statics",cl_optimization,x_flag_threadsafe_statics> x_flag_threadsafe_statics;
	 generic_field_name <"x_flag_toplevel_reorder",cl_optimization,x_flag_toplevel_reorder> x_flag_toplevel_reorder;
	 generic_field_name <"x_flag_trapping_math",cl_optimization,x_flag_trapping_math> x_flag_trapping_math;
	 generic_field_name <"x_flag_trapv",cl_optimization,x_flag_trapv> x_flag_trapv;
	 generic_field_name <"x_flag_tree_bit_ccp",cl_optimization,x_flag_tree_bit_ccp> x_flag_tree_bit_ccp;
	 generic_field_name <"x_flag_tree_builtin_call_dce",cl_optimization,x_flag_tree_builtin_call_dce> x_flag_tree_builtin_call_dce;
	 generic_field_name <"x_flag_tree_ccp",cl_optimization,x_flag_tree_ccp> x_flag_tree_ccp;
	 generic_field_name <"x_flag_tree_ch",cl_optimization,x_flag_tree_ch> x_flag_tree_ch;
	 generic_field_name <"x_flag_tree_copy_prop",cl_optimization,x_flag_tree_copy_prop> x_flag_tree_copy_prop;
	 generic_field_name <"x_flag_tree_copyrename",cl_optimization,x_flag_tree_copyrename> x_flag_tree_copyrename;
	 generic_field_name <"x_flag_tree_cselim",cl_optimization,x_flag_tree_cselim> x_flag_tree_cselim;
	 generic_field_name <"x_flag_tree_dce",cl_optimization,x_flag_tree_dce> x_flag_tree_dce;
	 generic_field_name <"x_flag_tree_dom",cl_optimization,x_flag_tree_dom> x_flag_tree_dom;
	 generic_field_name <"x_flag_tree_dse",cl_optimization,x_flag_tree_dse> x_flag_tree_dse;
	 generic_field_name <"x_flag_tree_forwprop",cl_optimization,x_flag_tree_forwprop> x_flag_tree_forwprop;
	 generic_field_name <"x_flag_tree_fre",cl_optimization,x_flag_tree_fre> x_flag_tree_fre;
	 generic_field_name <"x_flag_tree_loop_distribute_patterns",cl_optimization,x_flag_tree_loop_distribute_patterns> x_flag_tree_loop_distribute_patterns;
	 generic_field_name <"x_flag_tree_loop_distribution",cl_optimization,x_flag_tree_loop_distribution> x_flag_tree_loop_distribution;
	 generic_field_name <"x_flag_tree_loop_if_convert",cl_optimization,x_flag_tree_loop_if_convert> x_flag_tree_loop_if_convert;
	 generic_field_name <"x_flag_tree_loop_if_convert_stores",cl_optimization,x_flag_tree_loop_if_convert_stores> x_flag_tree_loop_if_convert_stores;
	 generic_field_name <"x_flag_tree_loop_im",cl_optimization,x_flag_tree_loop_im> x_flag_tree_loop_im;
	 generic_field_name <"x_flag_tree_loop_ivcanon",cl_optimization,x_flag_tree_loop_ivcanon> x_flag_tree_loop_ivcanon;
	 generic_field_name <"x_flag_tree_loop_optimize",cl_optimization,x_flag_tree_loop_optimize> x_flag_tree_loop_optimize;
	 generic_field_name <"x_flag_tree_live_range_split",cl_optimization,x_flag_tree_live_range_split> x_flag_tree_live_range_split;
	 generic_field_name <"x_flag_tree_partial_pre",cl_optimization,x_flag_tree_partial_pre> x_flag_tree_partial_pre;
	 generic_field_name <"x_flag_tree_phiprop",cl_optimization,x_flag_tree_phiprop> x_flag_tree_phiprop;
	 generic_field_name <"x_flag_tree_pre",cl_optimization,x_flag_tree_pre> x_flag_tree_pre;
	 generic_field_name <"x_flag_tree_pta",cl_optimization,x_flag_tree_pta> x_flag_tree_pta;
	 generic_field_name <"x_flag_tree_reassoc",cl_optimization,x_flag_tree_reassoc> x_flag_tree_reassoc;
	 generic_field_name <"x_flag_tree_scev_cprop",cl_optimization,x_flag_tree_scev_cprop> x_flag_tree_scev_cprop;
	 generic_field_name <"x_flag_tree_sink",cl_optimization,x_flag_tree_sink> x_flag_tree_sink;
	 generic_field_name <"x_flag_tree_slp_vectorize",cl_optimization,x_flag_tree_slp_vectorize> x_flag_tree_slp_vectorize;
	 generic_field_name <"x_flag_tree_sra",cl_optimization,x_flag_tree_sra> x_flag_tree_sra;
	 generic_field_name <"x_flag_tree_switch_conversion",cl_optimization,x_flag_tree_switch_conversion> x_flag_tree_switch_conversion;
	 generic_field_name <"x_flag_tree_tail_merge",cl_optimization,x_flag_tree_tail_merge> x_flag_tree_tail_merge;
	 generic_field_name <"x_flag_tree_ter",cl_optimization,x_flag_tree_ter> x_flag_tree_ter;
	 generic_field_name <"x_flag_tree_vect_loop_version",cl_optimization,x_flag_tree_vect_loop_version> x_flag_tree_vect_loop_version;
	 generic_field_name <"x_flag_tree_vectorize",cl_optimization,x_flag_tree_vectorize> x_flag_tree_vectorize;
	 generic_field_name <"x_flag_tree_vrp",cl_optimization,x_flag_tree_vrp> x_flag_tree_vrp;
	 generic_field_name <"x_flag_unit_at_a_time",cl_optimization,x_flag_unit_at_a_time> x_flag_unit_at_a_time;
	 generic_field_name <"x_flag_unroll_all_loops",cl_optimization,x_flag_unroll_all_loops> x_flag_unroll_all_loops;
	 generic_field_name <"x_flag_unroll_loops",cl_optimization,x_flag_unroll_loops> x_flag_unroll_loops;
	 generic_field_name <"x_flag_unsafe_loop_optimizations",cl_optimization,x_flag_unsafe_loop_optimizations> x_flag_unsafe_loop_optimizations;
	 generic_field_name <"x_flag_unsafe_math_optimizations",cl_optimization,x_flag_unsafe_math_optimizations> x_flag_unsafe_math_optimizations;
	 generic_field_name <"x_flag_unswitch_loops",cl_optimization,x_flag_unswitch_loops> x_flag_unswitch_loops;
	 generic_field_name <"x_flag_unwind_tables",cl_optimization,x_flag_unwind_tables> x_flag_unwind_tables;
	 generic_field_name <"x_flag_var_tracking",cl_optimization,x_flag_var_tracking> x_flag_var_tracking;
	 generic_field_name <"x_flag_var_tracking_assignments",cl_optimization,x_flag_var_tracking_assignments> x_flag_var_tracking_assignments;
	 generic_field_name <"x_flag_var_tracking_assignments_toggle",cl_optimization,x_flag_var_tracking_assignments_toggle> x_flag_var_tracking_assignments_toggle;
	 generic_field_name <"x_flag_var_tracking_uninit",cl_optimization,x_flag_var_tracking_uninit> x_flag_var_tracking_uninit;
	 generic_field_name <"x_flag_variable_expansion_in_unroller",cl_optimization,x_flag_variable_expansion_in_unroller> x_flag_variable_expansion_in_unroller;
	 generic_field_name <"x_flag_vect_cost_model",cl_optimization,x_flag_vect_cost_model> x_flag_vect_cost_model;
	 generic_field_name <"x_flag_value_profile_transformations",cl_optimization,x_flag_value_profile_transformations> x_flag_value_profile_transformations;
	 generic_field_name <"x_flag_web",cl_optimization,x_flag_web> x_flag_web;
	 generic_field_name <"x_flag_whole_program",cl_optimization,x_flag_whole_program> x_flag_whole_program;
	 generic_field_name <"x_flag_wrapv",cl_optimization,x_flag_wrapv> x_flag_wrapv;
}; 
class CLS_423_gcc_options{ 
	 generic_class_name <"gcc_options",gcc_options> the_class_name;
	 generic_field_name <"x_recip_mask",gcc_options,x_recip_mask> x_recip_mask;
	 generic_field_name <"x_frame_larger_than_size",gcc_options,x_frame_larger_than_size> x_frame_larger_than_size;
	 generic_field_name <"x_ix86_isa_flags",gcc_options,x_ix86_isa_flags> x_ix86_isa_flags;
	 generic_field_name <"x_ix86_isa_flags_explicit",gcc_options,x_ix86_isa_flags_explicit> x_ix86_isa_flags_explicit;
	 generic_field_name <"x_larger_than_size",gcc_options,x_larger_than_size> x_larger_than_size;
	 generic_field_name <"x_exit_after_options",gcc_options,x_exit_after_options> x_exit_after_options;
	 generic_field_name <"x_flag_dump_all_passed",gcc_options,x_flag_dump_all_passed> x_flag_dump_all_passed;
	 generic_field_name <"x_flag_opts_finished",gcc_options,x_flag_opts_finished> x_flag_opts_finished;
	 generic_field_name <"x_flag_stack_usage_info",gcc_options,x_flag_stack_usage_info> x_flag_stack_usage_info;
	 generic_field_name <"x_flag_warn_unused_result",gcc_options,x_flag_warn_unused_result> x_flag_warn_unused_result;
	 generic_field_name <"x_in_lto_p",gcc_options,x_in_lto_p> x_in_lto_p;
	 generic_field_name <"x_use_gnu_debug_info_extensions",gcc_options,x_use_gnu_debug_info_extensions> x_use_gnu_debug_info_extensions;
	 generic_field_name <"x_warn_frame_larger_than",gcc_options,x_warn_frame_larger_than> x_warn_frame_larger_than;
	 generic_field_name <"x_warn_larger_than",gcc_options,x_warn_larger_than> x_warn_larger_than;
	 generic_field_name <"x_help_enum_printed",gcc_options,x_help_enum_printed> x_help_enum_printed;
	 generic_field_name <"x_help_printed",gcc_options,x_help_printed> x_help_printed;
	 generic_field_name <"x_main_input_basename",gcc_options,x_main_input_basename> x_main_input_basename;
	 generic_field_name <"x_main_input_filename",gcc_options,x_main_input_filename> x_main_input_filename;
	 generic_field_name <"x_debug_info_level",gcc_options,x_debug_info_level> x_debug_info_level;
	 generic_field_name <"x_write_symbols",gcc_options,x_write_symbols> x_write_symbols;
	 generic_field_name <"x_debug_struct_generic",gcc_options,x_debug_struct_generic> x_debug_struct_generic;
	 generic_field_name <"x_debug_struct_ordinary",gcc_options,x_debug_struct_ordinary> x_debug_struct_ordinary;
	 generic_field_name <"x_graph_dump_format",gcc_options,x_graph_dump_format> x_graph_dump_format;
	 generic_field_name <"x_flag_stack_check",gcc_options,x_flag_stack_check> x_flag_stack_check;
	 generic_field_name <"x_user_vect_verbosity_level",gcc_options,x_user_vect_verbosity_level> x_user_vect_verbosity_level;
	 generic_field_name <"x_param_values",gcc_options,x_param_values> x_param_values;
	 generic_field_name <"x_flag_complex_method",gcc_options,x_flag_complex_method> x_flag_complex_method;
	 generic_field_name <"x_flag_debug_asm",gcc_options,x_flag_debug_asm> x_flag_debug_asm;
	 generic_field_name <"x_flag_dump_rtl_in_asm",gcc_options,x_flag_dump_rtl_in_asm> x_flag_dump_rtl_in_asm;
	 generic_field_name <"x_flag_evaluation_order",gcc_options,x_flag_evaluation_order> x_flag_evaluation_order;
	 generic_field_name <"x_flag_gen_aux_info",gcc_options,x_flag_gen_aux_info> x_flag_gen_aux_info;
	 generic_field_name <"x_flag_generate_lto",gcc_options,x_flag_generate_lto> x_flag_generate_lto;
	 generic_field_name <"x_flag_print_asm_name",gcc_options,x_flag_print_asm_name> x_flag_print_asm_name;
	 generic_field_name <"x_flag_shlib",gcc_options,x_flag_shlib> x_flag_shlib;
	 generic_field_name <"x_main_input_baselength",gcc_options,x_main_input_baselength> x_main_input_baselength;
	 generic_field_name <"x_optimize",gcc_options,x_optimize> x_optimize;
	 generic_field_name <"x_optimize_fast",gcc_options,x_optimize_fast> x_optimize_fast;
	 generic_field_name <"x_optimize_size",gcc_options,x_optimize_size> x_optimize_size;
	 generic_field_name <"x_recip_mask_explicit",gcc_options,x_recip_mask_explicit> x_recip_mask_explicit;
	 generic_field_name <"x_rtl_dump_and_exit",gcc_options,x_rtl_dump_and_exit> x_rtl_dump_and_exit;
	 generic_field_name <"x_target_flags",gcc_options,x_target_flags> x_target_flags;
	 generic_field_name <"x_help_columns",gcc_options,x_help_columns> x_help_columns;
	 generic_field_name <"x_initial_max_fld_align",gcc_options,x_initial_max_fld_align> x_initial_max_fld_align;
	 generic_field_name <"x_flag_instrument_functions_exclude_files",gcc_options,x_flag_instrument_functions_exclude_files> x_flag_instrument_functions_exclude_files;
	 generic_field_name <"x_flag_instrument_functions_exclude_functions",gcc_options,x_flag_instrument_functions_exclude_functions> x_flag_instrument_functions_exclude_functions;
	 generic_field_name <"x_help_flag",gcc_options,x_help_flag> x_help_flag;
	 generic_field_name <"x_flag_preprocess_only",gcc_options,x_flag_preprocess_only> x_flag_preprocess_only;
	 generic_field_name <"x_warn_abi",gcc_options,x_warn_abi> x_warn_abi;
	 generic_field_name <"x_warn_address",gcc_options,x_warn_address> x_warn_address;
	 generic_field_name <"x_warn_aggregate_return",gcc_options,x_warn_aggregate_return> x_warn_aggregate_return;
	 generic_field_name <"x_warn_array_bounds",gcc_options,x_warn_array_bounds> x_warn_array_bounds;
	 generic_field_name <"x_warn_assign_intercept",gcc_options,x_warn_assign_intercept> x_warn_assign_intercept;
	 generic_field_name <"x_warn_attributes",gcc_options,x_warn_attributes> x_warn_attributes;
	 generic_field_name <"x_warn_bad_function_cast",gcc_options,x_warn_bad_function_cast> x_warn_bad_function_cast;
	 generic_field_name <"x_warn_cxx_compat",gcc_options,x_warn_cxx_compat> x_warn_cxx_compat;
	 generic_field_name <"x_warn_cxx0x_compat",gcc_options,x_warn_cxx0x_compat> x_warn_cxx0x_compat;
	 generic_field_name <"x_warn_cast_align",gcc_options,x_warn_cast_align> x_warn_cast_align;
	 generic_field_name <"x_warn_cast_qual",gcc_options,x_warn_cast_qual> x_warn_cast_qual;
	 generic_field_name <"x_warn_char_subscripts",gcc_options,x_warn_char_subscripts> x_warn_char_subscripts;
	 generic_field_name <"x_warn_clobbered",gcc_options,x_warn_clobbered> x_warn_clobbered;
	 generic_field_name <"x_warn_conversion",gcc_options,x_warn_conversion> x_warn_conversion;
	 generic_field_name <"x_warn_conversion_null",gcc_options,x_warn_conversion_null> x_warn_conversion_null;
	 generic_field_name <"x_warn_coverage_mismatch",gcc_options,x_warn_coverage_mismatch> x_warn_coverage_mismatch;
	 generic_field_name <"x_warn_cpp",gcc_options,x_warn_cpp> x_warn_cpp;
	 generic_field_name <"x_warn_ctor_dtor_privacy",gcc_options,x_warn_ctor_dtor_privacy> x_warn_ctor_dtor_privacy;
	 generic_field_name <"x_warn_declaration_after_statement",gcc_options,x_warn_declaration_after_statement> x_warn_declaration_after_statement;
	 generic_field_name <"x_warn_delnonvdtor",gcc_options,x_warn_delnonvdtor> x_warn_delnonvdtor;
	 generic_field_name <"x_warn_deprecated",gcc_options,x_warn_deprecated> x_warn_deprecated;
	 generic_field_name <"x_warn_deprecated_decl",gcc_options,x_warn_deprecated_decl> x_warn_deprecated_decl;
	 generic_field_name <"x_warn_disabled_optimization",gcc_options,x_warn_disabled_optimization> x_warn_disabled_optimization;
	 generic_field_name <"x_warn_div_by_zero",gcc_options,x_warn_div_by_zero> x_warn_div_by_zero;
	 generic_field_name <"x_warn_double_promotion",gcc_options,x_warn_double_promotion> x_warn_double_promotion;
	 generic_field_name <"x_warn_ecpp",gcc_options,x_warn_ecpp> x_warn_ecpp;
	 generic_field_name <"x_warn_empty_body",gcc_options,x_warn_empty_body> x_warn_empty_body;
	 generic_field_name <"x_warn_enum_compare",gcc_options,x_warn_enum_compare> x_warn_enum_compare;
	 generic_field_name <"x_warnings_are_errors",gcc_options,x_warnings_are_errors> x_warnings_are_errors;
	 generic_field_name <"x_extra_warnings",gcc_options,x_extra_warnings> x_extra_warnings;
	 generic_field_name <"x_flag_extraneous_semicolon",gcc_options,x_flag_extraneous_semicolon> x_flag_extraneous_semicolon;
	 generic_field_name <"x_flag_fatal_errors",gcc_options,x_flag_fatal_errors> x_flag_fatal_errors;
	 generic_field_name <"x_warn_float_equal",gcc_options,x_warn_float_equal> x_warn_float_equal;
	 generic_field_name <"x_warn_format_contains_nul",gcc_options,x_warn_format_contains_nul> x_warn_format_contains_nul;
	 generic_field_name <"x_warn_format_extra_args",gcc_options,x_warn_format_extra_args> x_warn_format_extra_args;
	 generic_field_name <"x_warn_format_nonliteral",gcc_options,x_warn_format_nonliteral> x_warn_format_nonliteral;
	 generic_field_name <"x_warn_format_security",gcc_options,x_warn_format_security> x_warn_format_security;
	 generic_field_name <"x_warn_format_y2k",gcc_options,x_warn_format_y2k> x_warn_format_y2k;
	 generic_field_name <"x_warn_format_zero_length",gcc_options,x_warn_format_zero_length> x_warn_format_zero_length;
	 generic_field_name <"x_warn_free_nonheap_object",gcc_options,x_warn_free_nonheap_object> x_warn_free_nonheap_object;
	 generic_field_name <"x_warn_ignored_qualifiers",gcc_options,x_warn_ignored_qualifiers> x_warn_ignored_qualifiers;
	 generic_field_name <"x_warn_implicit",gcc_options,x_warn_implicit> x_warn_implicit;
	 generic_field_name <"x_warn_implicit_function_declaration",gcc_options,x_warn_implicit_function_declaration> x_warn_implicit_function_declaration;
	 generic_field_name <"x_warn_implicit_int",gcc_options,x_warn_implicit_int> x_warn_implicit_int;
	 generic_field_name <"x_warn_init_self",gcc_options,x_warn_init_self> x_warn_init_self;
	 generic_field_name <"x_warn_inline",gcc_options,x_warn_inline> x_warn_inline;
	 generic_field_name <"x_warn_int_to_pointer_cast",gcc_options,x_warn_int_to_pointer_cast> x_warn_int_to_pointer_cast;
	 generic_field_name <"x_warn_invalid_memory_model",gcc_options,x_warn_invalid_memory_model> x_warn_invalid_memory_model;
	 generic_field_name <"x_warn_invalid_offsetof",gcc_options,x_warn_invalid_offsetof> x_warn_invalid_offsetof;
	 generic_field_name <"x_warn_jump_misses_init",gcc_options,x_warn_jump_misses_init> x_warn_jump_misses_init;
	 generic_field_name <"x_warn_logical_op",gcc_options,x_warn_logical_op> x_warn_logical_op;
	 generic_field_name <"x_warn_long_long",gcc_options,x_warn_long_long> x_warn_long_long;
	 generic_field_name <"x_warn_main",gcc_options,x_warn_main> x_warn_main;
	 generic_field_name <"x_warn_maybe_uninitialized",gcc_options,x_warn_maybe_uninitialized> x_warn_maybe_uninitialized;
	 generic_field_name <"x_warn_missing_braces",gcc_options,x_warn_missing_braces> x_warn_missing_braces;
	 generic_field_name <"x_warn_missing_declarations",gcc_options,x_warn_missing_declarations> x_warn_missing_declarations;
	 generic_field_name <"x_warn_missing_field_initializers",gcc_options,x_warn_missing_field_initializers> x_warn_missing_field_initializers;
	 generic_field_name <"x_warn_missing_format_attribute",gcc_options,x_warn_missing_format_attribute> x_warn_missing_format_attribute;
	 generic_field_name <"x_warn_missing_noreturn",gcc_options,x_warn_missing_noreturn> x_warn_missing_noreturn;
	 generic_field_name <"x_warn_missing_parameter_type",gcc_options,x_warn_missing_parameter_type> x_warn_missing_parameter_type;
	 generic_field_name <"x_warn_missing_prototypes",gcc_options,x_warn_missing_prototypes> x_warn_missing_prototypes;
	 generic_field_name <"x_warn_mudflap",gcc_options,x_warn_mudflap> x_warn_mudflap;
	 generic_field_name <"x_warn_narrowing",gcc_options,x_warn_narrowing> x_warn_narrowing;
	 generic_field_name <"x_warn_nested_externs",gcc_options,x_warn_nested_externs> x_warn_nested_externs;
	 generic_field_name <"x_warn_noexcept",gcc_options,x_warn_noexcept> x_warn_noexcept;
	 generic_field_name <"x_warn_nontemplate_friend",gcc_options,x_warn_nontemplate_friend> x_warn_nontemplate_friend;
	 generic_field_name <"x_warn_nonvdtor",gcc_options,x_warn_nonvdtor> x_warn_nonvdtor;
	 generic_field_name <"x_warn_nonnull",gcc_options,x_warn_nonnull> x_warn_nonnull;
	 generic_field_name <"x_warn_old_style_cast",gcc_options,x_warn_old_style_cast> x_warn_old_style_cast;
	 generic_field_name <"x_warn_old_style_declaration",gcc_options,x_warn_old_style_declaration> x_warn_old_style_declaration;
	 generic_field_name <"x_warn_old_style_definition",gcc_options,x_warn_old_style_definition> x_warn_old_style_definition;
	 generic_field_name <"x_flag_newer",gcc_options,x_flag_newer> x_flag_newer;
	 generic_field_name <"x_warn_overflow",gcc_options,x_warn_overflow> x_warn_overflow;
	 generic_field_name <"x_warn_overlength_strings",gcc_options,x_warn_overlength_strings> x_warn_overlength_strings;
	 generic_field_name <"x_warn_overloaded_virtual",gcc_options,x_warn_overloaded_virtual> x_warn_overloaded_virtual;
	 generic_field_name <"x_warn_override_init",gcc_options,x_warn_override_init> x_warn_override_init;
	 generic_field_name <"x_warn_packed",gcc_options,x_warn_packed> x_warn_packed;
	 generic_field_name <"x_warn_packed_bitfield_compat",gcc_options,x_warn_packed_bitfield_compat> x_warn_packed_bitfield_compat;
	 generic_field_name <"x_warn_padded",gcc_options,x_warn_padded> x_warn_padded;
	 generic_field_name <"x_warn_parentheses",gcc_options,x_warn_parentheses> x_warn_parentheses;
	 generic_field_name <"x_warn_pmf2ptr",gcc_options,x_warn_pmf2ptr> x_warn_pmf2ptr;
	 generic_field_name <"x_warn_pointer_arith",gcc_options,x_warn_pointer_arith> x_warn_pointer_arith;
	 generic_field_name <"x_warn_pointer_sign",gcc_options,x_warn_pointer_sign> x_warn_pointer_sign;
	 generic_field_name <"x_warn_pointer_to_int_cast",gcc_options,x_warn_pointer_to_int_cast> x_warn_pointer_to_int_cast;
	 generic_field_name <"x_warn_pragmas",gcc_options,x_warn_pragmas> x_warn_pragmas;
	 generic_field_name <"x_warn_property_assign_default",gcc_options,x_warn_property_assign_default> x_warn_property_assign_default;
	 generic_field_name <"x_warn_protocol",gcc_options,x_warn_protocol> x_warn_protocol;
	 generic_field_name <"x_warn_psabi",gcc_options,x_warn_psabi> x_warn_psabi;
	 generic_field_name <"x_warn_redundant_decls",gcc_options,x_warn_redundant_decls> x_warn_redundant_decls;
	 generic_field_name <"x_flag_redundant",gcc_options,x_flag_redundant> x_flag_redundant;
	 generic_field_name <"x_warn_reorder",gcc_options,x_warn_reorder> x_warn_reorder;
	 generic_field_name <"x_warn_return_type",gcc_options,x_warn_return_type> x_warn_return_type;
	 generic_field_name <"x_warn_selector",gcc_options,x_warn_selector> x_warn_selector;
	 generic_field_name <"x_warn_sequence_point",gcc_options,x_warn_sequence_point> x_warn_sequence_point;
	 generic_field_name <"x_warn_shadow",gcc_options,x_warn_shadow> x_warn_shadow;
	 generic_field_name <"x_warn_sign_compare",gcc_options,x_warn_sign_compare> x_warn_sign_compare;
	 generic_field_name <"x_warn_sign_conversion",gcc_options,x_warn_sign_conversion> x_warn_sign_conversion;
	 generic_field_name <"x_warn_sign_promo",gcc_options,x_warn_sign_promo> x_warn_sign_promo;
	 generic_field_name <"x_warn_stack_protect",gcc_options,x_warn_stack_protect> x_warn_stack_protect;
	 generic_field_name <"x_warn_stack_usage",gcc_options,x_warn_stack_usage> x_warn_stack_usage;
	 generic_field_name <"x_warn_strict_aliasing",gcc_options,x_warn_strict_aliasing> x_warn_strict_aliasing;
	 generic_field_name <"x_warn_strict_null_sentinel",gcc_options,x_warn_strict_null_sentinel> x_warn_strict_null_sentinel;
	 generic_field_name <"x_warn_strict_overflow",gcc_options,x_warn_strict_overflow> x_warn_strict_overflow;
	 generic_field_name <"x_warn_strict_prototypes",gcc_options,x_warn_strict_prototypes> x_warn_strict_prototypes;
	 generic_field_name <"x_warn_strict_selector_match",gcc_options,x_warn_strict_selector_match> x_warn_strict_selector_match;
	 generic_field_name <"x_warn_suggest_attribute_const",gcc_options,x_warn_suggest_attribute_const> x_warn_suggest_attribute_const;
	 generic_field_name <"x_warn_suggest_attribute_noreturn",gcc_options,x_warn_suggest_attribute_noreturn> x_warn_suggest_attribute_noreturn;
	 generic_field_name <"x_warn_suggest_attribute_pure",gcc_options,x_warn_suggest_attribute_pure> x_warn_suggest_attribute_pure;
	 generic_field_name <"x_warn_switch",gcc_options,x_warn_switch> x_warn_switch;
	 generic_field_name <"x_warn_switch_default",gcc_options,x_warn_switch_default> x_warn_switch_default;
	 generic_field_name <"x_warn_switch_enum",gcc_options,x_warn_switch_enum> x_warn_switch_enum;
	 generic_field_name <"x_warn_sync_nand",gcc_options,x_warn_sync_nand> x_warn_sync_nand;
	 generic_field_name <"x_warn_synth",gcc_options,x_warn_synth> x_warn_synth;
	 generic_field_name <"x_warn_system_headers",gcc_options,x_warn_system_headers> x_warn_system_headers;
	 generic_field_name <"x_warn_traditional",gcc_options,x_warn_traditional> x_warn_traditional;
	 generic_field_name <"x_warn_traditional_conversion",gcc_options,x_warn_traditional_conversion> x_warn_traditional_conversion;
	 generic_field_name <"x_warn_trampolines",gcc_options,x_warn_trampolines> x_warn_trampolines;
	 generic_field_name <"x_warn_type_limits",gcc_options,x_warn_type_limits> x_warn_type_limits;
	 generic_field_name <"x_warn_undeclared_selector",gcc_options,x_warn_undeclared_selector> x_warn_undeclared_selector;
	 generic_field_name <"x_warn_uninitialized",gcc_options,x_warn_uninitialized> x_warn_uninitialized;
	 generic_field_name <"x_warn_unsafe_loop_optimizations",gcc_options,x_warn_unsafe_loop_optimizations> x_warn_unsafe_loop_optimizations;
	 generic_field_name <"x_warn_unsuffixed_float_constants",gcc_options,x_warn_unsuffixed_float_constants> x_warn_unsuffixed_float_constants;
	 generic_field_name <"x_warn_unused",gcc_options,x_warn_unused> x_warn_unused;
	 generic_field_name <"x_warn_unused_but_set_parameter",gcc_options,x_warn_unused_but_set_parameter> x_warn_unused_but_set_parameter;
	 generic_field_name <"x_warn_unused_but_set_variable",gcc_options,x_warn_unused_but_set_variable> x_warn_unused_but_set_variable;
	 generic_field_name <"x_warn_unused_function",gcc_options,x_warn_unused_function> x_warn_unused_function;
	 generic_field_name <"x_warn_unused_label",gcc_options,x_warn_unused_label> x_warn_unused_label;
	 generic_field_name <"x_warn_unused_local_typedefs",gcc_options,x_warn_unused_local_typedefs> x_warn_unused_local_typedefs;
	 generic_field_name <"x_warn_unused_parameter",gcc_options,x_warn_unused_parameter> x_warn_unused_parameter;
	 generic_field_name <"x_warn_unused_result",gcc_options,x_warn_unused_result> x_warn_unused_result;
	 generic_field_name <"x_warn_unused_value",gcc_options,x_warn_unused_value> x_warn_unused_value;
	 generic_field_name <"x_warn_unused_variable",gcc_options,x_warn_unused_variable> x_warn_unused_variable;
	 generic_field_name <"x_warn_vector_operation_performance",gcc_options,x_warn_vector_operation_performance> x_warn_vector_operation_performance;
	 generic_field_name <"x_warn_vla",gcc_options,x_warn_vla> x_warn_vla;
	 generic_field_name <"x_warn_volatile_register_var",gcc_options,x_warn_volatile_register_var> x_warn_volatile_register_var;
	 generic_field_name <"x_warn_write_strings",gcc_options,x_warn_write_strings> x_warn_write_strings;
	 generic_field_name <"x_warn_zero_as_null_pointer_constant",gcc_options,x_warn_zero_as_null_pointer_constant> x_warn_zero_as_null_pointer_constant;
	 generic_field_name <"x_aux_info_file_name",gcc_options,x_aux_info_file_name> x_aux_info_file_name;
	 generic_field_name <"x_aux_base_name",gcc_options,x_aux_base_name> x_aux_base_name;
	 generic_field_name <"x_dump_base_name",gcc_options,x_dump_base_name> x_dump_base_name;
	 generic_field_name <"x_dump_dir_name",gcc_options,x_dump_dir_name> x_dump_dir_name;
	 generic_field_name <"x_flag_pic",gcc_options,x_flag_pic> x_flag_pic;
	 generic_field_name <"x_flag_pie",gcc_options,x_flag_pie> x_flag_pie;
	 generic_field_name <"x_flag_abi_version",gcc_options,x_flag_abi_version> x_flag_abi_version;
	 generic_field_name <"x_flag_access_control",gcc_options,x_flag_access_control> x_flag_access_control;
	 generic_field_name <"x_align_functions",gcc_options,x_align_functions> x_align_functions;
	 generic_field_name <"x_align_jumps",gcc_options,x_align_jumps> x_align_jumps;
	 generic_field_name <"x_align_labels",gcc_options,x_align_labels> x_align_labels;
	 generic_field_name <"x_align_loops",gcc_options,x_align_loops> x_align_loops;
	 generic_field_name <"x_flag_allow_parameterless_variadic_functions",gcc_options,x_flag_allow_parameterless_variadic_functions> x_flag_allow_parameterless_variadic_functions;
	 generic_field_name <"x_flag_no_asm",gcc_options,x_flag_no_asm> x_flag_no_asm;
	 generic_field_name <"x_flag_assert",gcc_options,x_flag_assert> x_flag_assert;
	 generic_field_name <"x_flag_associative_math",gcc_options,x_flag_associative_math> x_flag_associative_math;
	 generic_field_name <"x_flag_asynchronous_unwind_tables",gcc_options,x_flag_asynchronous_unwind_tables> x_flag_asynchronous_unwind_tables;
	 generic_field_name <"x_flag_auto_inc_dec",gcc_options,x_flag_auto_inc_dec> x_flag_auto_inc_dec;
	 generic_field_name <"x_flag_bootstrap_classes",gcc_options,x_flag_bootstrap_classes> x_flag_bootstrap_classes;
	 generic_field_name <"x_flag_bounds_check",gcc_options,x_flag_bounds_check> x_flag_bounds_check;
	 generic_field_name <"x_flag_branch_on_count_reg",gcc_options,x_flag_branch_on_count_reg> x_flag_branch_on_count_reg;
	 generic_field_name <"x_flag_branch_probabilities",gcc_options,x_flag_branch_probabilities> x_flag_branch_probabilities;
	 generic_field_name <"x_flag_branch_target_load_optimize",gcc_options,x_flag_branch_target_load_optimize> x_flag_branch_target_load_optimize;
	 generic_field_name <"x_flag_branch_target_load_optimize2",gcc_options,x_flag_branch_target_load_optimize2> x_flag_branch_target_load_optimize2;
	 generic_field_name <"x_flag_btr_bb_exclusive",gcc_options,x_flag_btr_bb_exclusive> x_flag_btr_bb_exclusive;
	 generic_field_name <"x_flag_building_libgcc",gcc_options,x_flag_building_libgcc> x_flag_building_libgcc;
	 generic_field_name <"x_flag_no_builtin",gcc_options,x_flag_no_builtin> x_flag_no_builtin;
	 generic_field_name <"x_common_deferred_options",gcc_options,x_common_deferred_options> x_common_deferred_options;
	 generic_field_name <"x_flag_caller_saves",gcc_options,x_flag_caller_saves> x_flag_caller_saves;
	 generic_field_name <"x_flag_check_data_deps",gcc_options,x_flag_check_data_deps> x_flag_check_data_deps;
	 generic_field_name <"x_flag_check_new",gcc_options,x_flag_check_new> x_flag_check_new;
	 generic_field_name <"x_flag_check_references",gcc_options,x_flag_check_references> x_flag_check_references;
	 generic_field_name <"x_flag_combine_stack_adjustments",gcc_options,x_flag_combine_stack_adjustments> x_flag_combine_stack_adjustments;
	 generic_field_name <"x_flag_no_common",gcc_options,x_flag_no_common> x_flag_no_common;
	 generic_field_name <"x_flag_compare_debug",gcc_options,x_flag_compare_debug> x_flag_compare_debug;
	 generic_field_name <"x_flag_compare_debug_opt",gcc_options,x_flag_compare_debug_opt> x_flag_compare_debug_opt;
	 generic_field_name <"x_flag_compare_elim_after_reload",gcc_options,x_flag_compare_elim_after_reload> x_flag_compare_elim_after_reload;
	 generic_field_name <"x_flag_conserve_space",gcc_options,x_flag_conserve_space> x_flag_conserve_space;
	 generic_field_name <"x_flag_conserve_stack",gcc_options,x_flag_conserve_stack> x_flag_conserve_stack;
	 generic_field_name <"x_max_constexpr_depth",gcc_options,x_max_constexpr_depth> x_max_constexpr_depth;
	 generic_field_name <"x_flag_cprop_registers",gcc_options,x_flag_cprop_registers> x_flag_cprop_registers;
	 generic_field_name <"x_flag_crossjumping",gcc_options,x_flag_crossjumping> x_flag_crossjumping;
	 generic_field_name <"x_flag_cse_follow_jumps",gcc_options,x_flag_cse_follow_jumps> x_flag_cse_follow_jumps;
	 generic_field_name <"x_flag_cx_fortran_rules",gcc_options,x_flag_cx_fortran_rules> x_flag_cx_fortran_rules;
	 generic_field_name <"x_flag_cx_limited_range",gcc_options,x_flag_cx_limited_range> x_flag_cx_limited_range;
	 generic_field_name <"x_flag_data_sections",gcc_options,x_flag_data_sections> x_flag_data_sections;
	 generic_field_name <"x_flag_dce",gcc_options,x_flag_dce> x_flag_dce;
	 generic_field_name <"x_flag_debug_types_section",gcc_options,x_flag_debug_types_section> x_flag_debug_types_section;
	 generic_field_name <"x_flag_deduce_init_list",gcc_options,x_flag_deduce_init_list> x_flag_deduce_init_list;
	 generic_field_name <"x_flag_defer_pop",gcc_options,x_flag_defer_pop> x_flag_defer_pop;
	 generic_field_name <"x_flag_delayed_branch",gcc_options,x_flag_delayed_branch> x_flag_delayed_branch;
	 generic_field_name <"x_flag_delete_null_pointer_checks",gcc_options,x_flag_delete_null_pointer_checks> x_flag_delete_null_pointer_checks;
	 generic_field_name <"x_flag_devirtualize",gcc_options,x_flag_devirtualize> x_flag_devirtualize;
	 generic_field_name <"x_flag_diagnostics_show_option",gcc_options,x_flag_diagnostics_show_option> x_flag_diagnostics_show_option;
	 generic_field_name <"x_flag_dse",gcc_options,x_flag_dse> x_flag_dse;
	 generic_field_name <"x_flag_dump_final_insns",gcc_options,x_flag_dump_final_insns> x_flag_dump_final_insns;
	 generic_field_name <"x_flag_dump_go_spec",gcc_options,x_flag_dump_go_spec> x_flag_dump_go_spec;
	 generic_field_name <"x_flag_dump_noaddr",gcc_options,x_flag_dump_noaddr> x_flag_dump_noaddr;
	 generic_field_name <"x_flag_dump_passes",gcc_options,x_flag_dump_passes> x_flag_dump_passes;
	 generic_field_name <"x_flag_dump_unnumbered",gcc_options,x_flag_dump_unnumbered> x_flag_dump_unnumbered;
	 generic_field_name <"x_flag_dump_unnumbered_links",gcc_options,x_flag_dump_unnumbered_links> x_flag_dump_unnumbered_links;
	 generic_field_name <"x_flag_dwarf2_cfi_asm",gcc_options,x_flag_dwarf2_cfi_asm> x_flag_dwarf2_cfi_asm;
	 generic_field_name <"x_flag_early_inlining",gcc_options,x_flag_early_inlining> x_flag_early_inlining;
	 generic_field_name <"x_flag_elide_constructors",gcc_options,x_flag_elide_constructors> x_flag_elide_constructors;
	 generic_field_name <"x_flag_eliminate_dwarf2_dups",gcc_options,x_flag_eliminate_dwarf2_dups> x_flag_eliminate_dwarf2_dups;
	 generic_field_name <"x_flag_debug_only_used_symbols",gcc_options,x_flag_debug_only_used_symbols> x_flag_debug_only_used_symbols;
	 generic_field_name <"x_flag_eliminate_unused_debug_types",gcc_options,x_flag_eliminate_unused_debug_types> x_flag_eliminate_unused_debug_types;
	 generic_field_name <"x_flag_emit_class_debug_always",gcc_options,x_flag_emit_class_debug_always> x_flag_emit_class_debug_always;
	 generic_field_name <"x_flag_emit_class_files",gcc_options,x_flag_emit_class_files> x_flag_emit_class_files;
	 generic_field_name <"x_flag_enforce_eh_specs",gcc_options,x_flag_enforce_eh_specs> x_flag_enforce_eh_specs;
	 generic_field_name <"x_flag_exceptions",gcc_options,x_flag_exceptions> x_flag_exceptions;
	 generic_field_name <"x_flag_excess_precision_cmdline",gcc_options,x_flag_excess_precision_cmdline> x_flag_excess_precision_cmdline;
	 generic_field_name <"x_flag_expensive_optimizations",gcc_options,x_flag_expensive_optimizations> x_flag_expensive_optimizations;
	 generic_field_name <"x_flag_fat_lto_objects",gcc_options,x_flag_fat_lto_objects> x_flag_fat_lto_objects;
	 generic_field_name <"x_flag_filelist_file",gcc_options,x_flag_filelist_file> x_flag_filelist_file;
	 generic_field_name <"x_flag_finite_math_only",gcc_options,x_flag_finite_math_only> x_flag_finite_math_only;
	 generic_field_name <"x_flag_float_store",gcc_options,x_flag_float_store> x_flag_float_store;
	 generic_field_name <"x_flag_new_for_scope",gcc_options,x_flag_new_for_scope> x_flag_new_for_scope;
	 generic_field_name <"x_flag_force_classes_archive_check",gcc_options,x_flag_force_classes_archive_check> x_flag_force_classes_archive_check;
	 generic_field_name <"x_flag_forward_propagate",gcc_options,x_flag_forward_propagate> x_flag_forward_propagate;
	 generic_field_name <"x_flag_fp_contract_mode",gcc_options,x_flag_fp_contract_mode> x_flag_fp_contract_mode;
	 generic_field_name <"x_flag_friend_injection",gcc_options,x_flag_friend_injection> x_flag_friend_injection;
	 generic_field_name <"x_flag_no_function_cse",gcc_options,x_flag_no_function_cse> x_flag_no_function_cse;
	 generic_field_name <"x_flag_function_sections",gcc_options,x_flag_function_sections> x_flag_function_sections;
	 generic_field_name <"x_flag_gcse",gcc_options,x_flag_gcse> x_flag_gcse;
	 generic_field_name <"x_flag_gcse_after_reload",gcc_options,x_flag_gcse_after_reload> x_flag_gcse_after_reload;
	 generic_field_name <"x_flag_gcse_las",gcc_options,x_flag_gcse_las> x_flag_gcse_las;
	 generic_field_name <"x_flag_gcse_lm",gcc_options,x_flag_gcse_lm> x_flag_gcse_lm;
	 generic_field_name <"x_flag_gcse_sm",gcc_options,x_flag_gcse_sm> x_flag_gcse_sm;
	 generic_field_name <"x_flag_no_gnu_keywords",gcc_options,x_flag_no_gnu_keywords> x_flag_no_gnu_keywords;
	 generic_field_name <"x_flag_next_runtime",gcc_options,x_flag_next_runtime> x_flag_next_runtime;
	 generic_field_name <"x_flag_tm",gcc_options,x_flag_tm> x_flag_tm;
	 generic_field_name <"x_flag_gnu89_inline",gcc_options,x_flag_gnu89_inline> x_flag_gnu89_inline;
	 generic_field_name <"x_go_check_divide_overflow",gcc_options,x_go_check_divide_overflow> x_go_check_divide_overflow;
	 generic_field_name <"x_go_check_divide_zero",gcc_options,x_go_check_divide_zero> x_go_check_divide_zero;
	 generic_field_name <"x_flag_graphite",gcc_options,x_flag_graphite> x_flag_graphite;
	 generic_field_name <"x_flag_graphite_identity",gcc_options,x_flag_graphite_identity> x_flag_graphite_identity;
	 generic_field_name <"x_flag_guess_branch_prob",gcc_options,x_flag_guess_branch_prob> x_flag_guess_branch_prob;
	 generic_field_name <"x_flag_hash_synchronization",gcc_options,x_flag_hash_synchronization> x_flag_hash_synchronization;
	 generic_field_name <"x_flag_no_ident",gcc_options,x_flag_no_ident> x_flag_no_ident;
	 generic_field_name <"x_flag_if_conversion",gcc_options,x_flag_if_conversion> x_flag_if_conversion;
	 generic_field_name <"x_flag_if_conversion2",gcc_options,x_flag_if_conversion2> x_flag_if_conversion2;
	 generic_field_name <"x_flag_implement_inlines",gcc_options,x_flag_implement_inlines> x_flag_implement_inlines;
	 generic_field_name <"x_flag_implicit_inline_templates",gcc_options,x_flag_implicit_inline_templates> x_flag_implicit_inline_templates;
	 generic_field_name <"x_flag_implicit_templates",gcc_options,x_flag_implicit_templates> x_flag_implicit_templates;
	 generic_field_name <"x_flag_indirect_classes",gcc_options,x_flag_indirect_classes> x_flag_indirect_classes;
	 generic_field_name <"x_flag_indirect_dispatch",gcc_options,x_flag_indirect_dispatch> x_flag_indirect_dispatch;
	 generic_field_name <"x_flag_indirect_inlining",gcc_options,x_flag_indirect_inlining> x_flag_indirect_inlining;
	 generic_field_name <"x_flag_inhibit_size_directive",gcc_options,x_flag_inhibit_size_directive> x_flag_inhibit_size_directive;
	 generic_field_name <"x_flag_no_inline",gcc_options,x_flag_no_inline> x_flag_no_inline;
	 generic_field_name <"x_flag_inline_atomics",gcc_options,x_flag_inline_atomics> x_flag_inline_atomics;
	 generic_field_name <"x_flag_inline_functions",gcc_options,x_flag_inline_functions> x_flag_inline_functions;
	 generic_field_name <"x_flag_inline_functions_called_once",gcc_options,x_flag_inline_functions_called_once> x_flag_inline_functions_called_once;
	 generic_field_name <"x_flag_inline_small_functions",gcc_options,x_flag_inline_small_functions> x_flag_inline_small_functions;
	 generic_field_name <"x_flag_instrument_function_entry_exit",gcc_options,x_flag_instrument_function_entry_exit> x_flag_instrument_function_entry_exit;
	 generic_field_name <"x_flag_ipa_cp",gcc_options,x_flag_ipa_cp> x_flag_ipa_cp;
	 generic_field_name <"x_flag_ipa_cp_clone",gcc_options,x_flag_ipa_cp_clone> x_flag_ipa_cp_clone;
	 generic_field_name <"x_flag_ipa_matrix_reorg",gcc_options,x_flag_ipa_matrix_reorg> x_flag_ipa_matrix_reorg;
	 generic_field_name <"x_flag_ipa_profile",gcc_options,x_flag_ipa_profile> x_flag_ipa_profile;
	 generic_field_name <"x_flag_ipa_pta",gcc_options,x_flag_ipa_pta> x_flag_ipa_pta;
	 generic_field_name <"x_flag_ipa_pure_const",gcc_options,x_flag_ipa_pure_const> x_flag_ipa_pure_const;
	 generic_field_name <"x_flag_ipa_reference",gcc_options,x_flag_ipa_reference> x_flag_ipa_reference;
	 generic_field_name <"x_flag_ipa_sra",gcc_options,x_flag_ipa_sra> x_flag_ipa_sra;
	 generic_field_name <"x_flag_ira_algorithm",gcc_options,x_flag_ira_algorithm> x_flag_ira_algorithm;
	 generic_field_name <"x_flag_ira_loop_pressure",gcc_options,x_flag_ira_loop_pressure> x_flag_ira_loop_pressure;
	 generic_field_name <"x_flag_ira_region",gcc_options,x_flag_ira_region> x_flag_ira_region;
	 generic_field_name <"x_flag_ira_share_save_slots",gcc_options,x_flag_ira_share_save_slots> x_flag_ira_share_save_slots;
	 generic_field_name <"x_flag_ira_share_spill_slots",gcc_options,x_flag_ira_share_spill_slots> x_flag_ira_share_spill_slots;
	 generic_field_name <"x_flag_ira_verbose",gcc_options,x_flag_ira_verbose> x_flag_ira_verbose;
	 generic_field_name <"x_flag_ivopts",gcc_options,x_flag_ivopts> x_flag_ivopts;
	 generic_field_name <"x_flag_jni",gcc_options,x_flag_jni> x_flag_jni;
	 generic_field_name <"x_flag_jump_tables",gcc_options,x_flag_jump_tables> x_flag_jump_tables;
	 generic_field_name <"x_flag_keep_inline_dllexport",gcc_options,x_flag_keep_inline_dllexport> x_flag_keep_inline_dllexport;
	 generic_field_name <"x_flag_keep_inline_functions",gcc_options,x_flag_keep_inline_functions> x_flag_keep_inline_functions;
	 generic_field_name <"x_flag_keep_static_consts",gcc_options,x_flag_keep_static_consts> x_flag_keep_static_consts;
	 generic_field_name <"x_flag_lax_vector_conversions",gcc_options,x_flag_lax_vector_conversions> x_flag_lax_vector_conversions;
	 generic_field_name <"x_flag_leading_underscore",gcc_options,x_flag_leading_underscore> x_flag_leading_underscore;
	 generic_field_name <"x_flag_loop_block",gcc_options,x_flag_loop_block> x_flag_loop_block;
	 generic_field_name <"x_flag_loop_flatten",gcc_options,x_flag_loop_flatten> x_flag_loop_flatten;
	 generic_field_name <"x_flag_loop_interchange",gcc_options,x_flag_loop_interchange> x_flag_loop_interchange;
	 generic_field_name <"x_flag_loop_parallelize_all",gcc_options,x_flag_loop_parallelize_all> x_flag_loop_parallelize_all;
	 generic_field_name <"x_flag_loop_strip_mine",gcc_options,x_flag_loop_strip_mine> x_flag_loop_strip_mine;
	 generic_field_name <"x_flag_lto_compression_level",gcc_options,x_flag_lto_compression_level> x_flag_lto_compression_level;
	 generic_field_name <"x_flag_lto_partition_1to1",gcc_options,x_flag_lto_partition_1to1> x_flag_lto_partition_1to1;
	 generic_field_name <"x_flag_lto_partition_balanced",gcc_options,x_flag_lto_partition_balanced> x_flag_lto_partition_balanced;
	 generic_field_name <"x_flag_lto_partition_none",gcc_options,x_flag_lto_partition_none> x_flag_lto_partition_none;
	 generic_field_name <"x_flag_lto_report",gcc_options,x_flag_lto_report> x_flag_lto_report;
	 generic_field_name <"x_flag_lto",gcc_options,x_flag_lto> x_flag_lto;
	 generic_field_name <"x_flag_ltrans",gcc_options,x_flag_ltrans> x_flag_ltrans;
	 generic_field_name <"x_ltrans_output_list",gcc_options,x_ltrans_output_list> x_ltrans_output_list;
	 generic_field_name <"x_flag_errno_math",gcc_options,x_flag_errno_math> x_flag_errno_math;
	 generic_field_name <"x_flag_max_errors",gcc_options,x_flag_max_errors> x_flag_max_errors;
	 generic_field_name <"x_mem_report",gcc_options,x_mem_report> x_mem_report;
	 generic_field_name <"x_flag_merge_constants",gcc_options,x_flag_merge_constants> x_flag_merge_constants;
	 generic_field_name <"x_flag_merge_debug_strings",gcc_options,x_flag_merge_debug_strings> x_flag_merge_debug_strings;
	 generic_field_name <"x_flag_modulo_sched",gcc_options,x_flag_modulo_sched> x_flag_modulo_sched;
	 generic_field_name <"x_flag_modulo_sched_allow_regmoves",gcc_options,x_flag_modulo_sched_allow_regmoves> x_flag_modulo_sched_allow_regmoves;
	 generic_field_name <"x_flag_move_loop_invariants",gcc_options,x_flag_move_loop_invariants> x_flag_move_loop_invariants;
	 generic_field_name <"x_flag_ms_extensions",gcc_options,x_flag_ms_extensions> x_flag_ms_extensions;
	 generic_field_name <"x_flag_mudflap",gcc_options,x_flag_mudflap> x_flag_mudflap;
	 generic_field_name <"x_flag_mudflap_ignore_reads",gcc_options,x_flag_mudflap_ignore_reads> x_flag_mudflap_ignore_reads;
	 generic_field_name <"x_flag_nil_receivers",gcc_options,x_flag_nil_receivers> x_flag_nil_receivers;
	 generic_field_name <"x_flag_non_call_exceptions",gcc_options,x_flag_non_call_exceptions> x_flag_non_call_exceptions;
	 generic_field_name <"x_flag_no_nonansi_builtin",gcc_options,x_flag_no_nonansi_builtin> x_flag_no_nonansi_builtin;
	 generic_field_name <"x_flag_nothrow_opt",gcc_options,x_flag_nothrow_opt> x_flag_nothrow_opt;
	 generic_field_name <"x_flag_objc_abi",gcc_options,x_flag_objc_abi> x_flag_objc_abi;
	 generic_field_name <"x_flag_objc_call_cxx_cdtors",gcc_options,x_flag_objc_call_cxx_cdtors> x_flag_objc_call_cxx_cdtors;
	 generic_field_name <"x_flag_objc_direct_dispatch",gcc_options,x_flag_objc_direct_dispatch> x_flag_objc_direct_dispatch;
	 generic_field_name <"x_flag_objc_exceptions",gcc_options,x_flag_objc_exceptions> x_flag_objc_exceptions;
	 generic_field_name <"x_flag_objc_gc",gcc_options,x_flag_objc_gc> x_flag_objc_gc;
	 generic_field_name <"x_flag_objc_nilcheck",gcc_options,x_flag_objc_nilcheck> x_flag_objc_nilcheck;
	 generic_field_name <"x_flag_objc_sjlj_exceptions",gcc_options,x_flag_objc_sjlj_exceptions> x_flag_objc_sjlj_exceptions;
	 generic_field_name <"x_flag_objc1_only",gcc_options,x_flag_objc1_only> x_flag_objc1_only;
	 generic_field_name <"x_flag_omit_frame_pointer",gcc_options,x_flag_omit_frame_pointer> x_flag_omit_frame_pointer;
	 generic_field_name <"x_flag_openmp",gcc_options,x_flag_openmp> x_flag_openmp;
	 generic_field_name <"x_flag_regmove",gcc_options,x_flag_regmove> x_flag_regmove;
	 generic_field_name <"x_flag_optimize_sibling_calls",gcc_options,x_flag_optimize_sibling_calls> x_flag_optimize_sibling_calls;
	 generic_field_name <"x_flag_optimize_sci",gcc_options,x_flag_optimize_sci> x_flag_optimize_sci;
	 generic_field_name <"x_flag_optimize_strlen",gcc_options,x_flag_optimize_strlen> x_flag_optimize_strlen;
	 generic_field_name <"x_flag_pack_struct",gcc_options,x_flag_pack_struct> x_flag_pack_struct;
	 generic_field_name <"x_flag_partial_inlining",gcc_options,x_flag_partial_inlining> x_flag_partial_inlining;
	 generic_field_name <"x_flag_pcc_struct_return",gcc_options,x_flag_pcc_struct_return> x_flag_pcc_struct_return;
	 generic_field_name <"x_flag_peel_loops",gcc_options,x_flag_peel_loops> x_flag_peel_loops;
	 generic_field_name <"x_flag_no_peephole",gcc_options,x_flag_no_peephole> x_flag_no_peephole;
	 generic_field_name <"x_flag_peephole2",gcc_options,x_flag_peephole2> x_flag_peephole2;
	 generic_field_name <"x_flag_plan9_extensions",gcc_options,x_flag_plan9_extensions> x_flag_plan9_extensions;
	 generic_field_name <"x_post_ipa_mem_report",gcc_options,x_post_ipa_mem_report> x_post_ipa_mem_report;
	 generic_field_name <"x_pre_ipa_mem_report",gcc_options,x_pre_ipa_mem_report> x_pre_ipa_mem_report;
	 generic_field_name <"x_flag_predictive_commoning",gcc_options,x_flag_predictive_commoning> x_flag_predictive_commoning;
	 generic_field_name <"x_flag_prefetch_loop_arrays",gcc_options,x_flag_prefetch_loop_arrays> x_flag_prefetch_loop_arrays;
	 generic_field_name <"x_flag_pretty_templates",gcc_options,x_flag_pretty_templates> x_flag_pretty_templates;
	 generic_field_name <"x_profile_flag",gcc_options,x_profile_flag> x_profile_flag;
	 generic_field_name <"x_profile_arc_flag",gcc_options,x_profile_arc_flag> x_profile_arc_flag;
	 generic_field_name <"x_flag_profile_correction",gcc_options,x_flag_profile_correction> x_flag_profile_correction;
	 generic_field_name <"x_profile_data_prefix",gcc_options,x_profile_data_prefix> x_profile_data_prefix;
	 generic_field_name <"x_flag_profile_use",gcc_options,x_flag_profile_use> x_flag_profile_use;
	 generic_field_name <"x_flag_profile_values",gcc_options,x_flag_profile_values> x_flag_profile_values;
	 generic_field_name <"x_flag_reciprocal_math",gcc_options,x_flag_reciprocal_math> x_flag_reciprocal_math;
	 generic_field_name <"x_flag_record_gcc_switches",gcc_options,x_flag_record_gcc_switches> x_flag_record_gcc_switches;
	 generic_field_name <"x_flag_reduced_reflection",gcc_options,x_flag_reduced_reflection> x_flag_reduced_reflection;
	 generic_field_name <"x_flag_ree",gcc_options,x_flag_ree> x_flag_ree;
	 generic_field_name <"x_flag_rename_registers",gcc_options,x_flag_rename_registers> x_flag_rename_registers;
	 generic_field_name <"x_flag_reorder_blocks",gcc_options,x_flag_reorder_blocks> x_flag_reorder_blocks;
	 generic_field_name <"x_flag_reorder_blocks_and_partition",gcc_options,x_flag_reorder_blocks_and_partition> x_flag_reorder_blocks_and_partition;
	 generic_field_name <"x_flag_reorder_functions",gcc_options,x_flag_reorder_functions> x_flag_reorder_functions;
	 generic_field_name <"x_flag_replace_objc_classes",gcc_options,x_flag_replace_objc_classes> x_flag_replace_objc_classes;
	 generic_field_name <"x_go_require_return_statement",gcc_options,x_go_require_return_statement> x_go_require_return_statement;
	 generic_field_name <"x_flag_rerun_cse_after_loop",gcc_options,x_flag_rerun_cse_after_loop> x_flag_rerun_cse_after_loop;
	 generic_field_name <"x_flag_resched_modulo_sched",gcc_options,x_flag_resched_modulo_sched> x_flag_resched_modulo_sched;
	 generic_field_name <"x_flag_rounding_math",gcc_options,x_flag_rounding_math> x_flag_rounding_math;
	 generic_field_name <"x_flag_rtti",gcc_options,x_flag_rtti> x_flag_rtti;
	 generic_field_name <"x_flag_sched_critical_path_heuristic",gcc_options,x_flag_sched_critical_path_heuristic> x_flag_sched_critical_path_heuristic;
	 generic_field_name <"x_flag_sched_dep_count_heuristic",gcc_options,x_flag_sched_dep_count_heuristic> x_flag_sched_dep_count_heuristic;
	 generic_field_name <"x_flag_sched_group_heuristic",gcc_options,x_flag_sched_group_heuristic> x_flag_sched_group_heuristic;
	 generic_field_name <"x_flag_schedule_interblock",gcc_options,x_flag_schedule_interblock> x_flag_schedule_interblock;
	 generic_field_name <"x_flag_sched_last_insn_heuristic",gcc_options,x_flag_sched_last_insn_heuristic> x_flag_sched_last_insn_heuristic;
	 generic_field_name <"x_flag_sched_pressure",gcc_options,x_flag_sched_pressure> x_flag_sched_pressure;
	 generic_field_name <"x_flag_sched_pressure_algorithm",gcc_options,x_flag_sched_pressure_algorithm> x_flag_sched_pressure_algorithm;
	 generic_field_name <"x_flag_sched_rank_heuristic",gcc_options,x_flag_sched_rank_heuristic> x_flag_sched_rank_heuristic;
	 generic_field_name <"x_flag_schedule_speculative",gcc_options,x_flag_schedule_speculative> x_flag_schedule_speculative;
	 generic_field_name <"x_flag_sched_spec_insn_heuristic",gcc_options,x_flag_sched_spec_insn_heuristic> x_flag_sched_spec_insn_heuristic;
	 generic_field_name <"x_flag_schedule_speculative_load",gcc_options,x_flag_schedule_speculative_load> x_flag_schedule_speculative_load;
	 generic_field_name <"x_flag_schedule_speculative_load_dangerous",gcc_options,x_flag_schedule_speculative_load_dangerous> x_flag_schedule_speculative_load_dangerous;
	 generic_field_name <"x_flag_sched_stalled_insns",gcc_options,x_flag_sched_stalled_insns> x_flag_sched_stalled_insns;
	 generic_field_name <"x_flag_sched_stalled_insns_dep",gcc_options,x_flag_sched_stalled_insns_dep> x_flag_sched_stalled_insns_dep;
	 generic_field_name <"x_sched_verbose_param",gcc_options,x_sched_verbose_param> x_sched_verbose_param;
	 generic_field_name <"x_flag_sched2_use_superblocks",gcc_options,x_flag_sched2_use_superblocks> x_flag_sched2_use_superblocks;
	 generic_field_name <"x_flag_schedule_insns",gcc_options,x_flag_schedule_insns> x_flag_schedule_insns;
	 generic_field_name <"x_flag_schedule_insns_after_reload",gcc_options,x_flag_schedule_insns_after_reload> x_flag_schedule_insns_after_reload;
	 generic_field_name <"x_flag_section_anchors",gcc_options,x_flag_section_anchors> x_flag_section_anchors;
	 generic_field_name <"x_flag_sel_sched_pipelining",gcc_options,x_flag_sel_sched_pipelining> x_flag_sel_sched_pipelining;
	 generic_field_name <"x_flag_sel_sched_pipelining_outer_loops",gcc_options,x_flag_sel_sched_pipelining_outer_loops> x_flag_sel_sched_pipelining_outer_loops;
	 generic_field_name <"x_flag_sel_sched_reschedule_pipelined",gcc_options,x_flag_sel_sched_reschedule_pipelined> x_flag_sel_sched_reschedule_pipelined;
	 generic_field_name <"x_flag_selective_scheduling",gcc_options,x_flag_selective_scheduling> x_flag_selective_scheduling;
	 generic_field_name <"x_flag_selective_scheduling2",gcc_options,x_flag_selective_scheduling2> x_flag_selective_scheduling2;
	 generic_field_name <"x_flag_short_double",gcc_options,x_flag_short_double> x_flag_short_double;
	 generic_field_name <"x_flag_short_enums",gcc_options,x_flag_short_enums> x_flag_short_enums;
	 generic_field_name <"x_flag_short_wchar",gcc_options,x_flag_short_wchar> x_flag_short_wchar;
	 generic_field_name <"x_flag_show_column",gcc_options,x_flag_show_column> x_flag_show_column;
	 generic_field_name <"x_flag_shrink_wrap",gcc_options,x_flag_shrink_wrap> x_flag_shrink_wrap;
	 generic_field_name <"x_flag_signaling_nans",gcc_options,x_flag_signaling_nans> x_flag_signaling_nans;
	 generic_field_name <"x_flag_signed_bitfields",gcc_options,x_flag_signed_bitfields> x_flag_signed_bitfields;
	 generic_field_name <"x_flag_signed_char",gcc_options,x_flag_signed_char> x_flag_signed_char;
	 generic_field_name <"x_flag_signed_zeros",gcc_options,x_flag_signed_zeros> x_flag_signed_zeros;
	 generic_field_name <"x_flag_single_precision_constant",gcc_options,x_flag_single_precision_constant> x_flag_single_precision_constant;
	 generic_field_name <"x_flag_split_ivs_in_unroller",gcc_options,x_flag_split_ivs_in_unroller> x_flag_split_ivs_in_unroller;
	 generic_field_name <"x_flag_split_stack",gcc_options,x_flag_split_stack> x_flag_split_stack;
	 generic_field_name <"x_flag_split_wide_types",gcc_options,x_flag_split_wide_types> x_flag_split_wide_types;
	 generic_field_name <"x_flag_stack_protect",gcc_options,x_flag_stack_protect> x_flag_stack_protect;
	 generic_field_name <"x_flag_stack_usage",gcc_options,x_flag_stack_usage> x_flag_stack_usage;
	 generic_field_name <"x_flag_detailed_statistics",gcc_options,x_flag_detailed_statistics> x_flag_detailed_statistics;
	 generic_field_name <"x_flag_store_check",gcc_options,x_flag_store_check> x_flag_store_check;
	 generic_field_name <"x_flag_strict_aliasing",gcc_options,x_flag_strict_aliasing> x_flag_strict_aliasing;
	 generic_field_name <"x_flag_strict_enums",gcc_options,x_flag_strict_enums> x_flag_strict_enums;
	 generic_field_name <"x_flag_strict_overflow",gcc_options,x_flag_strict_overflow> x_flag_strict_overflow;
	 generic_field_name <"x_flag_strict_volatile_bitfields",gcc_options,x_flag_strict_volatile_bitfields> x_flag_strict_volatile_bitfields;
	 generic_field_name <"x_flag_syntax_only",gcc_options,x_flag_syntax_only> x_flag_syntax_only;
	 generic_field_name <"x_flag_test_coverage",gcc_options,x_flag_test_coverage> x_flag_test_coverage;
	 generic_field_name <"x_flag_thread_jumps",gcc_options,x_flag_thread_jumps> x_flag_thread_jumps;
	 generic_field_name <"x_flag_threadsafe_statics",gcc_options,x_flag_threadsafe_statics> x_flag_threadsafe_statics;
	 generic_field_name <"x_time_report",gcc_options,x_time_report> x_time_report;
	 generic_field_name <"x_flag_tls_default",gcc_options,x_flag_tls_default> x_flag_tls_default;
	 generic_field_name <"x_flag_toplevel_reorder",gcc_options,x_flag_toplevel_reorder> x_flag_toplevel_reorder;
	 generic_field_name <"x_flag_tracer",gcc_options,x_flag_tracer> x_flag_tracer;
	 generic_field_name <"x_flag_trapping_math",gcc_options,x_flag_trapping_math> x_flag_trapping_math;
	 generic_field_name <"x_flag_trapv",gcc_options,x_flag_trapv> x_flag_trapv;
	 generic_field_name <"x_flag_tree_bit_ccp",gcc_options,x_flag_tree_bit_ccp> x_flag_tree_bit_ccp;
	 generic_field_name <"x_flag_tree_builtin_call_dce",gcc_options,x_flag_tree_builtin_call_dce> x_flag_tree_builtin_call_dce;
	 generic_field_name <"x_flag_tree_ccp",gcc_options,x_flag_tree_ccp> x_flag_tree_ccp;
	 generic_field_name <"x_flag_tree_ch",gcc_options,x_flag_tree_ch> x_flag_tree_ch;
	 generic_field_name <"x_flag_tree_copy_prop",gcc_options,x_flag_tree_copy_prop> x_flag_tree_copy_prop;
	 generic_field_name <"x_flag_tree_copyrename",gcc_options,x_flag_tree_copyrename> x_flag_tree_copyrename;
	 generic_field_name <"x_flag_tree_cselim",gcc_options,x_flag_tree_cselim> x_flag_tree_cselim;
	 generic_field_name <"x_flag_tree_dce",gcc_options,x_flag_tree_dce> x_flag_tree_dce;
	 generic_field_name <"x_flag_tree_dom",gcc_options,x_flag_tree_dom> x_flag_tree_dom;
	 generic_field_name <"x_flag_tree_dse",gcc_options,x_flag_tree_dse> x_flag_tree_dse;
	 generic_field_name <"x_flag_tree_forwprop",gcc_options,x_flag_tree_forwprop> x_flag_tree_forwprop;
	 generic_field_name <"x_flag_tree_fre",gcc_options,x_flag_tree_fre> x_flag_tree_fre;
	 generic_field_name <"x_flag_tree_loop_distribute_patterns",gcc_options,x_flag_tree_loop_distribute_patterns> x_flag_tree_loop_distribute_patterns;
	 generic_field_name <"x_flag_tree_loop_distribution",gcc_options,x_flag_tree_loop_distribution> x_flag_tree_loop_distribution;
	 generic_field_name <"x_flag_tree_loop_if_convert",gcc_options,x_flag_tree_loop_if_convert> x_flag_tree_loop_if_convert;
	 generic_field_name <"x_flag_tree_loop_if_convert_stores",gcc_options,x_flag_tree_loop_if_convert_stores> x_flag_tree_loop_if_convert_stores;
	 generic_field_name <"x_flag_tree_loop_im",gcc_options,x_flag_tree_loop_im> x_flag_tree_loop_im;
	 generic_field_name <"x_flag_tree_loop_ivcanon",gcc_options,x_flag_tree_loop_ivcanon> x_flag_tree_loop_ivcanon;
	 generic_field_name <"x_flag_tree_loop_optimize",gcc_options,x_flag_tree_loop_optimize> x_flag_tree_loop_optimize;
	 generic_field_name <"x_flag_tree_live_range_split",gcc_options,x_flag_tree_live_range_split> x_flag_tree_live_range_split;
	 generic_field_name <"x_flag_tree_parallelize_loops",gcc_options,x_flag_tree_parallelize_loops> x_flag_tree_parallelize_loops;
	 generic_field_name <"x_flag_tree_partial_pre",gcc_options,x_flag_tree_partial_pre> x_flag_tree_partial_pre;
	 generic_field_name <"x_flag_tree_phiprop",gcc_options,x_flag_tree_phiprop> x_flag_tree_phiprop;
	 generic_field_name <"x_flag_tree_pre",gcc_options,x_flag_tree_pre> x_flag_tree_pre;
	 generic_field_name <"x_flag_tree_pta",gcc_options,x_flag_tree_pta> x_flag_tree_pta;
	 generic_field_name <"x_flag_tree_reassoc",gcc_options,x_flag_tree_reassoc> x_flag_tree_reassoc;
	 generic_field_name <"x_flag_tree_scev_cprop",gcc_options,x_flag_tree_scev_cprop> x_flag_tree_scev_cprop;
	 generic_field_name <"x_flag_tree_sink",gcc_options,x_flag_tree_sink> x_flag_tree_sink;
	 generic_field_name <"x_flag_tree_slp_vectorize",gcc_options,x_flag_tree_slp_vectorize> x_flag_tree_slp_vectorize;
	 generic_field_name <"x_flag_tree_sra",gcc_options,x_flag_tree_sra> x_flag_tree_sra;
	 generic_field_name <"x_flag_tree_switch_conversion",gcc_options,x_flag_tree_switch_conversion> x_flag_tree_switch_conversion;
	 generic_field_name <"x_flag_tree_tail_merge",gcc_options,x_flag_tree_tail_merge> x_flag_tree_tail_merge;
	 generic_field_name <"x_flag_tree_ter",gcc_options,x_flag_tree_ter> x_flag_tree_ter;
	 generic_field_name <"x_flag_tree_vect_loop_version",gcc_options,x_flag_tree_vect_loop_version> x_flag_tree_vect_loop_version;
	 generic_field_name <"x_flag_tree_vectorize",gcc_options,x_flag_tree_vectorize> x_flag_tree_vectorize;
	 generic_field_name <"x_flag_tree_vrp",gcc_options,x_flag_tree_vrp> x_flag_tree_vrp;
	 generic_field_name <"x_flag_unit_at_a_time",gcc_options,x_flag_unit_at_a_time> x_flag_unit_at_a_time;
	 generic_field_name <"x_flag_unroll_all_loops",gcc_options,x_flag_unroll_all_loops> x_flag_unroll_all_loops;
	 generic_field_name <"x_flag_unroll_loops",gcc_options,x_flag_unroll_loops> x_flag_unroll_loops;
	 generic_field_name <"x_flag_unsafe_loop_optimizations",gcc_options,x_flag_unsafe_loop_optimizations> x_flag_unsafe_loop_optimizations;
	 generic_field_name <"x_flag_unsafe_math_optimizations",gcc_options,x_flag_unsafe_math_optimizations> x_flag_unsafe_math_optimizations;
	 generic_field_name <"x_flag_unswitch_loops",gcc_options,x_flag_unswitch_loops> x_flag_unswitch_loops;
	 generic_field_name <"x_flag_unwind_tables",gcc_options,x_flag_unwind_tables> x_flag_unwind_tables;
	 generic_field_name <"x_flag_use_atomic_builtins",gcc_options,x_flag_use_atomic_builtins> x_flag_use_atomic_builtins;
	 generic_field_name <"x_flag_use_boehm_gc",gcc_options,x_flag_use_boehm_gc> x_flag_use_boehm_gc;
	 generic_field_name <"x_flag_use_cxa_atexit",gcc_options,x_flag_use_cxa_atexit> x_flag_use_cxa_atexit;
	 generic_field_name <"x_flag_use_cxa_get_exception_ptr",gcc_options,x_flag_use_cxa_get_exception_ptr> x_flag_use_cxa_get_exception_ptr;
	 generic_field_name <"x_flag_use_divide_subroutine",gcc_options,x_flag_use_divide_subroutine> x_flag_use_divide_subroutine;
	 generic_field_name <"x_flag_var_tracking",gcc_options,x_flag_var_tracking> x_flag_var_tracking;
	 generic_field_name <"x_flag_var_tracking_assignments",gcc_options,x_flag_var_tracking_assignments> x_flag_var_tracking_assignments;
	 generic_field_name <"x_flag_var_tracking_assignments_toggle",gcc_options,x_flag_var_tracking_assignments_toggle> x_flag_var_tracking_assignments_toggle;
	 generic_field_name <"x_flag_var_tracking_uninit",gcc_options,x_flag_var_tracking_uninit> x_flag_var_tracking_uninit;
	 generic_field_name <"x_flag_variable_expansion_in_unroller",gcc_options,x_flag_variable_expansion_in_unroller> x_flag_variable_expansion_in_unroller;
	 generic_field_name <"x_flag_vect_cost_model",gcc_options,x_flag_vect_cost_model> x_flag_vect_cost_model;
	 generic_field_name <"x_flag_verbose_asm",gcc_options,x_flag_verbose_asm> x_flag_verbose_asm;
	 generic_field_name <"x_flag_visibility_ms_compat",gcc_options,x_flag_visibility_ms_compat> x_flag_visibility_ms_compat;
	 generic_field_name <"x_default_visibility",gcc_options,x_default_visibility> x_default_visibility;
	 generic_field_name <"x_flag_value_profile_transformations",gcc_options,x_flag_value_profile_transformations> x_flag_value_profile_transformations;
	 generic_field_name <"x_flag_weak",gcc_options,x_flag_weak> x_flag_weak;
	 generic_field_name <"x_flag_web",gcc_options,x_flag_web> x_flag_web;
	 generic_field_name <"x_flag_whole_program",gcc_options,x_flag_whole_program> x_flag_whole_program;
	 generic_field_name <"x_flag_working_directory",gcc_options,x_flag_working_directory> x_flag_working_directory;
	 generic_field_name <"x_flag_wpa",gcc_options,x_flag_wpa> x_flag_wpa;
	 generic_field_name <"x_flag_wrapv",gcc_options,x_flag_wrapv> x_flag_wrapv;
	 generic_field_name <"x_flag_zero_initialized_in_bss",gcc_options,x_flag_zero_initialized_in_bss> x_flag_zero_initialized_in_bss;
	 generic_field_name <"x_flag_zero_link",gcc_options,x_flag_zero_link> x_flag_zero_link;
	 generic_field_name <"x_dwarf_version",gcc_options,x_dwarf_version> x_dwarf_version;
	 generic_field_name <"x_flag_gen_declaration",gcc_options,x_flag_gen_declaration> x_flag_gen_declaration;
	 generic_field_name <"x_dwarf_record_gcc_switches",gcc_options,x_dwarf_record_gcc_switches> x_dwarf_record_gcc_switches;
	 generic_field_name <"x_dwarf_strict",gcc_options,x_dwarf_strict> x_dwarf_strict;
	 generic_field_name <"x_flag_gtoggle",gcc_options,x_flag_gtoggle> x_flag_gtoggle;
	 generic_field_name <"x_imultiarch",gcc_options,x_imultiarch> x_imultiarch;
	 generic_field_name <"x_plugindir_string",gcc_options,x_plugindir_string> x_plugindir_string;
	 generic_field_name <"x_ix86_abi",gcc_options,x_ix86_abi> x_ix86_abi;
	 generic_field_name <"x_flag_android",gcc_options,x_flag_android> x_flag_android;
	 generic_field_name <"x_ix86_arch_string",gcc_options,x_ix86_arch_string> x_ix86_arch_string;
	 generic_field_name <"x_ix86_asm_dialect",gcc_options,x_ix86_asm_dialect> x_ix86_asm_dialect;
	 generic_field_name <"x_linux_libc",gcc_options,x_linux_libc> x_linux_libc;
	 generic_field_name <"x_ix86_branch_cost",gcc_options,x_ix86_branch_cost> x_ix86_branch_cost;
	 generic_field_name <"x_ix86_cmodel",gcc_options,x_ix86_cmodel> x_ix86_cmodel;
	 generic_field_name <"x_flag_dispatch_scheduler",gcc_options,x_flag_dispatch_scheduler> x_flag_dispatch_scheduler;
	 generic_field_name <"x_flag_fentry",gcc_options,x_flag_fentry> x_flag_fentry;
	 generic_field_name <"x_ix86_force_drap",gcc_options,x_ix86_force_drap> x_ix86_force_drap;
	 generic_field_name <"x_ix86_fpmath",gcc_options,x_ix86_fpmath> x_ix86_fpmath;
	 generic_field_name <"x_ix86_incoming_stack_boundary_arg",gcc_options,x_ix86_incoming_stack_boundary_arg> x_ix86_incoming_stack_boundary_arg;
	 generic_field_name <"x_ix86_section_threshold",gcc_options,x_ix86_section_threshold> x_ix86_section_threshold;
	 generic_field_name <"x_ix86_preferred_stack_boundary_arg",gcc_options,x_ix86_preferred_stack_boundary_arg> x_ix86_preferred_stack_boundary_arg;
	 generic_field_name <"x_ix86_recip_name",gcc_options,x_ix86_recip_name> x_ix86_recip_name;
	 generic_field_name <"x_ix86_regparm",gcc_options,x_ix86_regparm> x_ix86_regparm;
	 generic_field_name <"x_ix86_sse2avx",gcc_options,x_ix86_sse2avx> x_ix86_sse2avx;
	 generic_field_name <"x_ix86_force_align_arg_pointer",gcc_options,x_ix86_force_align_arg_pointer> x_ix86_force_align_arg_pointer;
	 generic_field_name <"x_ix86_stringop_alg",gcc_options,x_ix86_stringop_alg> x_ix86_stringop_alg;
	 generic_field_name <"x_ix86_tls_dialect",gcc_options,x_ix86_tls_dialect> x_ix86_tls_dialect;
	 generic_field_name <"x_ix86_tune_string",gcc_options,x_ix86_tune_string> x_ix86_tune_string;
	 generic_field_name <"x_ix86_veclibabi_type",gcc_options,x_ix86_veclibabi_type> x_ix86_veclibabi_type;
	 generic_field_name <"x_asm_file_name",gcc_options,x_asm_file_name> x_asm_file_name;
	 generic_field_name <"x_pass_exit_codes",gcc_options,x_pass_exit_codes> x_pass_exit_codes;
	 generic_field_name <"x_pedantic",gcc_options,x_pedantic> x_pedantic;
	 generic_field_name <"x_flag_pedantic_errors",gcc_options,x_flag_pedantic_errors> x_flag_pedantic_errors;
	 generic_field_name <"x_use_pipes",gcc_options,x_use_pipes> x_use_pipes;
	 generic_field_name <"x_print_file_name",gcc_options,x_print_file_name> x_print_file_name;
	 generic_field_name <"x_print_multi_directory",gcc_options,x_print_multi_directory> x_print_multi_directory;
	 generic_field_name <"x_print_multi_lib",gcc_options,x_print_multi_lib> x_print_multi_lib;
	 generic_field_name <"x_print_multi_os_directory",gcc_options,x_print_multi_os_directory> x_print_multi_os_directory;
	 generic_field_name <"x_print_multiarch",gcc_options,x_print_multiarch> x_print_multiarch;
	 generic_field_name <"x_print_prog_name",gcc_options,x_print_prog_name> x_print_prog_name;
	 generic_field_name <"x_print_search_dirs",gcc_options,x_print_search_dirs> x_print_search_dirs;
	 generic_field_name <"x_print_sysroot",gcc_options,x_print_sysroot> x_print_sysroot;
	 generic_field_name <"x_print_sysroot_headers_suffix",gcc_options,x_print_sysroot_headers_suffix> x_print_sysroot_headers_suffix;
	 generic_field_name <"x_quiet_flag",gcc_options,x_quiet_flag> x_quiet_flag;
	 generic_field_name <"x_report_times",gcc_options,x_report_times> x_report_times;
	 generic_field_name <"x_flag_undef",gcc_options,x_flag_undef> x_flag_undef;
	 generic_field_name <"x_verbose_flag",gcc_options,x_verbose_flag> x_verbose_flag;
	 generic_field_name <"x_version_flag",gcc_options,x_version_flag> x_version_flag;
	 generic_field_name <"x_inhibit_warnings",gcc_options,x_inhibit_warnings> x_inhibit_warnings;
	 generic_field_name <"x_wrapper_string",gcc_options,x_wrapper_string> x_wrapper_string;
	 generic_field_name <"x_VAR_malign_functions_",gcc_options,x_VAR_malign_functions_> x_VAR_malign_functions_;
	 generic_field_name <"x_VAR_malign_jumps_",gcc_options,x_VAR_malign_jumps_> x_VAR_malign_jumps_;
	 generic_field_name <"x_VAR_malign_loops_",gcc_options,x_VAR_malign_loops_> x_VAR_malign_loops_;
	 generic_field_name <"x_VAR_mpc32",gcc_options,x_VAR_mpc32> x_VAR_mpc32;
	 generic_field_name <"x_VAR_mpc64",gcc_options,x_VAR_mpc64> x_VAR_mpc64;
	 generic_field_name <"x_VAR_mpc80",gcc_options,x_VAR_mpc80> x_VAR_mpc80;
	 generic_field_name <"frontend_set_flag_associative_math",gcc_options,frontend_set_flag_associative_math> frontend_set_flag_associative_math;
	 generic_field_name <"frontend_set_flag_cx_limited_range",gcc_options,frontend_set_flag_cx_limited_range> frontend_set_flag_cx_limited_range;
	 generic_field_name <"frontend_set_flag_finite_math_only",gcc_options,frontend_set_flag_finite_math_only> frontend_set_flag_finite_math_only;
	 generic_field_name <"frontend_set_flag_errno_math",gcc_options,frontend_set_flag_errno_math> frontend_set_flag_errno_math;
	 generic_field_name <"frontend_set_flag_reciprocal_math",gcc_options,frontend_set_flag_reciprocal_math> frontend_set_flag_reciprocal_math;
	 generic_field_name <"frontend_set_flag_rounding_math",gcc_options,frontend_set_flag_rounding_math> frontend_set_flag_rounding_math;
	 generic_field_name <"frontend_set_flag_signaling_nans",gcc_options,frontend_set_flag_signaling_nans> frontend_set_flag_signaling_nans;
	 generic_field_name <"frontend_set_flag_signed_zeros",gcc_options,frontend_set_flag_signed_zeros> frontend_set_flag_signed_zeros;
	 generic_field_name <"frontend_set_flag_trapping_math",gcc_options,frontend_set_flag_trapping_math> frontend_set_flag_trapping_math;
	 generic_field_name <"frontend_set_flag_unsafe_math_optimizations",gcc_options,frontend_set_flag_unsafe_math_optimizations> frontend_set_flag_unsafe_math_optimizations;
}; 
class CLS_424_gcc_options{ 
	 generic_class_name <"gcc_options",gcc_options> the_class_name;
	 generic_field_name <"x_recip_mask",gcc_options,x_recip_mask> x_recip_mask;
	 generic_field_name <"x_frame_larger_than_size",gcc_options,x_frame_larger_than_size> x_frame_larger_than_size;
	 generic_field_name <"x_ix86_isa_flags",gcc_options,x_ix86_isa_flags> x_ix86_isa_flags;
	 generic_field_name <"x_ix86_isa_flags_explicit",gcc_options,x_ix86_isa_flags_explicit> x_ix86_isa_flags_explicit;
	 generic_field_name <"x_larger_than_size",gcc_options,x_larger_than_size> x_larger_than_size;
	 generic_field_name <"x_exit_after_options",gcc_options,x_exit_after_options> x_exit_after_options;
	 generic_field_name <"x_flag_dump_all_passed",gcc_options,x_flag_dump_all_passed> x_flag_dump_all_passed;
	 generic_field_name <"x_flag_opts_finished",gcc_options,x_flag_opts_finished> x_flag_opts_finished;
	 generic_field_name <"x_flag_stack_usage_info",gcc_options,x_flag_stack_usage_info> x_flag_stack_usage_info;
	 generic_field_name <"x_flag_warn_unused_result",gcc_options,x_flag_warn_unused_result> x_flag_warn_unused_result;
	 generic_field_name <"x_in_lto_p",gcc_options,x_in_lto_p> x_in_lto_p;
	 generic_field_name <"x_use_gnu_debug_info_extensions",gcc_options,x_use_gnu_debug_info_extensions> x_use_gnu_debug_info_extensions;
	 generic_field_name <"x_warn_frame_larger_than",gcc_options,x_warn_frame_larger_than> x_warn_frame_larger_than;
	 generic_field_name <"x_warn_larger_than",gcc_options,x_warn_larger_than> x_warn_larger_than;
	 generic_field_name <"x_help_enum_printed",gcc_options,x_help_enum_printed> x_help_enum_printed;
	 generic_field_name <"x_help_printed",gcc_options,x_help_printed> x_help_printed;
	 generic_field_name <"x_main_input_basename",gcc_options,x_main_input_basename> x_main_input_basename;
	 generic_field_name <"x_main_input_filename",gcc_options,x_main_input_filename> x_main_input_filename;
	 generic_field_name <"x_debug_info_level",gcc_options,x_debug_info_level> x_debug_info_level;
	 generic_field_name <"x_write_symbols",gcc_options,x_write_symbols> x_write_symbols;
	 generic_field_name <"x_debug_struct_generic",gcc_options,x_debug_struct_generic> x_debug_struct_generic;
	 generic_field_name <"x_debug_struct_ordinary",gcc_options,x_debug_struct_ordinary> x_debug_struct_ordinary;
	 generic_field_name <"x_graph_dump_format",gcc_options,x_graph_dump_format> x_graph_dump_format;
	 generic_field_name <"x_flag_stack_check",gcc_options,x_flag_stack_check> x_flag_stack_check;
	 generic_field_name <"x_user_vect_verbosity_level",gcc_options,x_user_vect_verbosity_level> x_user_vect_verbosity_level;
	 generic_field_name <"x_param_values",gcc_options,x_param_values> x_param_values;
	 generic_field_name <"x_flag_complex_method",gcc_options,x_flag_complex_method> x_flag_complex_method;
	 generic_field_name <"x_flag_debug_asm",gcc_options,x_flag_debug_asm> x_flag_debug_asm;
	 generic_field_name <"x_flag_dump_rtl_in_asm",gcc_options,x_flag_dump_rtl_in_asm> x_flag_dump_rtl_in_asm;
	 generic_field_name <"x_flag_evaluation_order",gcc_options,x_flag_evaluation_order> x_flag_evaluation_order;
	 generic_field_name <"x_flag_gen_aux_info",gcc_options,x_flag_gen_aux_info> x_flag_gen_aux_info;
	 generic_field_name <"x_flag_generate_lto",gcc_options,x_flag_generate_lto> x_flag_generate_lto;
	 generic_field_name <"x_flag_print_asm_name",gcc_options,x_flag_print_asm_name> x_flag_print_asm_name;
	 generic_field_name <"x_flag_shlib",gcc_options,x_flag_shlib> x_flag_shlib;
	 generic_field_name <"x_main_input_baselength",gcc_options,x_main_input_baselength> x_main_input_baselength;
	 generic_field_name <"x_optimize",gcc_options,x_optimize> x_optimize;
	 generic_field_name <"x_optimize_fast",gcc_options,x_optimize_fast> x_optimize_fast;
	 generic_field_name <"x_optimize_size",gcc_options,x_optimize_size> x_optimize_size;
	 generic_field_name <"x_recip_mask_explicit",gcc_options,x_recip_mask_explicit> x_recip_mask_explicit;
	 generic_field_name <"x_rtl_dump_and_exit",gcc_options,x_rtl_dump_and_exit> x_rtl_dump_and_exit;
	 generic_field_name <"x_target_flags",gcc_options,x_target_flags> x_target_flags;
	 generic_field_name <"x_help_columns",gcc_options,x_help_columns> x_help_columns;
	 generic_field_name <"x_initial_max_fld_align",gcc_options,x_initial_max_fld_align> x_initial_max_fld_align;
	 generic_field_name <"x_flag_instrument_functions_exclude_files",gcc_options,x_flag_instrument_functions_exclude_files> x_flag_instrument_functions_exclude_files;
	 generic_field_name <"x_flag_instrument_functions_exclude_functions",gcc_options,x_flag_instrument_functions_exclude_functions> x_flag_instrument_functions_exclude_functions;
	 generic_field_name <"x_help_flag",gcc_options,x_help_flag> x_help_flag;
	 generic_field_name <"x_flag_preprocess_only",gcc_options,x_flag_preprocess_only> x_flag_preprocess_only;
	 generic_field_name <"x_warn_abi",gcc_options,x_warn_abi> x_warn_abi;
	 generic_field_name <"x_warn_address",gcc_options,x_warn_address> x_warn_address;
	 generic_field_name <"x_warn_aggregate_return",gcc_options,x_warn_aggregate_return> x_warn_aggregate_return;
	 generic_field_name <"x_warn_array_bounds",gcc_options,x_warn_array_bounds> x_warn_array_bounds;
	 generic_field_name <"x_warn_assign_intercept",gcc_options,x_warn_assign_intercept> x_warn_assign_intercept;
	 generic_field_name <"x_warn_attributes",gcc_options,x_warn_attributes> x_warn_attributes;
	 generic_field_name <"x_warn_bad_function_cast",gcc_options,x_warn_bad_function_cast> x_warn_bad_function_cast;
	 generic_field_name <"x_warn_cxx_compat",gcc_options,x_warn_cxx_compat> x_warn_cxx_compat;
	 generic_field_name <"x_warn_cxx0x_compat",gcc_options,x_warn_cxx0x_compat> x_warn_cxx0x_compat;
	 generic_field_name <"x_warn_cast_align",gcc_options,x_warn_cast_align> x_warn_cast_align;
	 generic_field_name <"x_warn_cast_qual",gcc_options,x_warn_cast_qual> x_warn_cast_qual;
	 generic_field_name <"x_warn_char_subscripts",gcc_options,x_warn_char_subscripts> x_warn_char_subscripts;
	 generic_field_name <"x_warn_clobbered",gcc_options,x_warn_clobbered> x_warn_clobbered;
	 generic_field_name <"x_warn_conversion",gcc_options,x_warn_conversion> x_warn_conversion;
	 generic_field_name <"x_warn_conversion_null",gcc_options,x_warn_conversion_null> x_warn_conversion_null;
	 generic_field_name <"x_warn_coverage_mismatch",gcc_options,x_warn_coverage_mismatch> x_warn_coverage_mismatch;
	 generic_field_name <"x_warn_cpp",gcc_options,x_warn_cpp> x_warn_cpp;
	 generic_field_name <"x_warn_ctor_dtor_privacy",gcc_options,x_warn_ctor_dtor_privacy> x_warn_ctor_dtor_privacy;
	 generic_field_name <"x_warn_declaration_after_statement",gcc_options,x_warn_declaration_after_statement> x_warn_declaration_after_statement;
	 generic_field_name <"x_warn_delnonvdtor",gcc_options,x_warn_delnonvdtor> x_warn_delnonvdtor;
	 generic_field_name <"x_warn_deprecated",gcc_options,x_warn_deprecated> x_warn_deprecated;
	 generic_field_name <"x_warn_deprecated_decl",gcc_options,x_warn_deprecated_decl> x_warn_deprecated_decl;
	 generic_field_name <"x_warn_disabled_optimization",gcc_options,x_warn_disabled_optimization> x_warn_disabled_optimization;
	 generic_field_name <"x_warn_div_by_zero",gcc_options,x_warn_div_by_zero> x_warn_div_by_zero;
	 generic_field_name <"x_warn_double_promotion",gcc_options,x_warn_double_promotion> x_warn_double_promotion;
	 generic_field_name <"x_warn_ecpp",gcc_options,x_warn_ecpp> x_warn_ecpp;
	 generic_field_name <"x_warn_empty_body",gcc_options,x_warn_empty_body> x_warn_empty_body;
	 generic_field_name <"x_warn_enum_compare",gcc_options,x_warn_enum_compare> x_warn_enum_compare;
	 generic_field_name <"x_warnings_are_errors",gcc_options,x_warnings_are_errors> x_warnings_are_errors;
	 generic_field_name <"x_extra_warnings",gcc_options,x_extra_warnings> x_extra_warnings;
	 generic_field_name <"x_flag_extraneous_semicolon",gcc_options,x_flag_extraneous_semicolon> x_flag_extraneous_semicolon;
	 generic_field_name <"x_flag_fatal_errors",gcc_options,x_flag_fatal_errors> x_flag_fatal_errors;
	 generic_field_name <"x_warn_float_equal",gcc_options,x_warn_float_equal> x_warn_float_equal;
	 generic_field_name <"x_warn_format_contains_nul",gcc_options,x_warn_format_contains_nul> x_warn_format_contains_nul;
	 generic_field_name <"x_warn_format_extra_args",gcc_options,x_warn_format_extra_args> x_warn_format_extra_args;
	 generic_field_name <"x_warn_format_nonliteral",gcc_options,x_warn_format_nonliteral> x_warn_format_nonliteral;
	 generic_field_name <"x_warn_format_security",gcc_options,x_warn_format_security> x_warn_format_security;
	 generic_field_name <"x_warn_format_y2k",gcc_options,x_warn_format_y2k> x_warn_format_y2k;
	 generic_field_name <"x_warn_format_zero_length",gcc_options,x_warn_format_zero_length> x_warn_format_zero_length;
	 generic_field_name <"x_warn_free_nonheap_object",gcc_options,x_warn_free_nonheap_object> x_warn_free_nonheap_object;
	 generic_field_name <"x_warn_ignored_qualifiers",gcc_options,x_warn_ignored_qualifiers> x_warn_ignored_qualifiers;
	 generic_field_name <"x_warn_implicit",gcc_options,x_warn_implicit> x_warn_implicit;
	 generic_field_name <"x_warn_implicit_function_declaration",gcc_options,x_warn_implicit_function_declaration> x_warn_implicit_function_declaration;
	 generic_field_name <"x_warn_implicit_int",gcc_options,x_warn_implicit_int> x_warn_implicit_int;
	 generic_field_name <"x_warn_init_self",gcc_options,x_warn_init_self> x_warn_init_self;
	 generic_field_name <"x_warn_inline",gcc_options,x_warn_inline> x_warn_inline;
	 generic_field_name <"x_warn_int_to_pointer_cast",gcc_options,x_warn_int_to_pointer_cast> x_warn_int_to_pointer_cast;
	 generic_field_name <"x_warn_invalid_memory_model",gcc_options,x_warn_invalid_memory_model> x_warn_invalid_memory_model;
	 generic_field_name <"x_warn_invalid_offsetof",gcc_options,x_warn_invalid_offsetof> x_warn_invalid_offsetof;
	 generic_field_name <"x_warn_jump_misses_init",gcc_options,x_warn_jump_misses_init> x_warn_jump_misses_init;
	 generic_field_name <"x_warn_logical_op",gcc_options,x_warn_logical_op> x_warn_logical_op;
	 generic_field_name <"x_warn_long_long",gcc_options,x_warn_long_long> x_warn_long_long;
	 generic_field_name <"x_warn_main",gcc_options,x_warn_main> x_warn_main;
	 generic_field_name <"x_warn_maybe_uninitialized",gcc_options,x_warn_maybe_uninitialized> x_warn_maybe_uninitialized;
	 generic_field_name <"x_warn_missing_braces",gcc_options,x_warn_missing_braces> x_warn_missing_braces;
	 generic_field_name <"x_warn_missing_declarations",gcc_options,x_warn_missing_declarations> x_warn_missing_declarations;
	 generic_field_name <"x_warn_missing_field_initializers",gcc_options,x_warn_missing_field_initializers> x_warn_missing_field_initializers;
	 generic_field_name <"x_warn_missing_format_attribute",gcc_options,x_warn_missing_format_attribute> x_warn_missing_format_attribute;
	 generic_field_name <"x_warn_missing_noreturn",gcc_options,x_warn_missing_noreturn> x_warn_missing_noreturn;
	 generic_field_name <"x_warn_missing_parameter_type",gcc_options,x_warn_missing_parameter_type> x_warn_missing_parameter_type;
	 generic_field_name <"x_warn_missing_prototypes",gcc_options,x_warn_missing_prototypes> x_warn_missing_prototypes;
	 generic_field_name <"x_warn_mudflap",gcc_options,x_warn_mudflap> x_warn_mudflap;
	 generic_field_name <"x_warn_narrowing",gcc_options,x_warn_narrowing> x_warn_narrowing;
	 generic_field_name <"x_warn_nested_externs",gcc_options,x_warn_nested_externs> x_warn_nested_externs;
	 generic_field_name <"x_warn_noexcept",gcc_options,x_warn_noexcept> x_warn_noexcept;
	 generic_field_name <"x_warn_nontemplate_friend",gcc_options,x_warn_nontemplate_friend> x_warn_nontemplate_friend;
	 generic_field_name <"x_warn_nonvdtor",gcc_options,x_warn_nonvdtor> x_warn_nonvdtor;
	 generic_field_name <"x_warn_nonnull",gcc_options,x_warn_nonnull> x_warn_nonnull;
	 generic_field_name <"x_warn_old_style_cast",gcc_options,x_warn_old_style_cast> x_warn_old_style_cast;
	 generic_field_name <"x_warn_old_style_declaration",gcc_options,x_warn_old_style_declaration> x_warn_old_style_declaration;
	 generic_field_name <"x_warn_old_style_definition",gcc_options,x_warn_old_style_definition> x_warn_old_style_definition;
	 generic_field_name <"x_flag_newer",gcc_options,x_flag_newer> x_flag_newer;
	 generic_field_name <"x_warn_overflow",gcc_options,x_warn_overflow> x_warn_overflow;
	 generic_field_name <"x_warn_overlength_strings",gcc_options,x_warn_overlength_strings> x_warn_overlength_strings;
	 generic_field_name <"x_warn_overloaded_virtual",gcc_options,x_warn_overloaded_virtual> x_warn_overloaded_virtual;
	 generic_field_name <"x_warn_override_init",gcc_options,x_warn_override_init> x_warn_override_init;
	 generic_field_name <"x_warn_packed",gcc_options,x_warn_packed> x_warn_packed;
	 generic_field_name <"x_warn_packed_bitfield_compat",gcc_options,x_warn_packed_bitfield_compat> x_warn_packed_bitfield_compat;
	 generic_field_name <"x_warn_padded",gcc_options,x_warn_padded> x_warn_padded;
	 generic_field_name <"x_warn_parentheses",gcc_options,x_warn_parentheses> x_warn_parentheses;
	 generic_field_name <"x_warn_pmf2ptr",gcc_options,x_warn_pmf2ptr> x_warn_pmf2ptr;
	 generic_field_name <"x_warn_pointer_arith",gcc_options,x_warn_pointer_arith> x_warn_pointer_arith;
	 generic_field_name <"x_warn_pointer_sign",gcc_options,x_warn_pointer_sign> x_warn_pointer_sign;
	 generic_field_name <"x_warn_pointer_to_int_cast",gcc_options,x_warn_pointer_to_int_cast> x_warn_pointer_to_int_cast;
	 generic_field_name <"x_warn_pragmas",gcc_options,x_warn_pragmas> x_warn_pragmas;
	 generic_field_name <"x_warn_property_assign_default",gcc_options,x_warn_property_assign_default> x_warn_property_assign_default;
	 generic_field_name <"x_warn_protocol",gcc_options,x_warn_protocol> x_warn_protocol;
	 generic_field_name <"x_warn_psabi",gcc_options,x_warn_psabi> x_warn_psabi;
	 generic_field_name <"x_warn_redundant_decls",gcc_options,x_warn_redundant_decls> x_warn_redundant_decls;
	 generic_field_name <"x_flag_redundant",gcc_options,x_flag_redundant> x_flag_redundant;
	 generic_field_name <"x_warn_reorder",gcc_options,x_warn_reorder> x_warn_reorder;
	 generic_field_name <"x_warn_return_type",gcc_options,x_warn_return_type> x_warn_return_type;
	 generic_field_name <"x_warn_selector",gcc_options,x_warn_selector> x_warn_selector;
	 generic_field_name <"x_warn_sequence_point",gcc_options,x_warn_sequence_point> x_warn_sequence_point;
	 generic_field_name <"x_warn_shadow",gcc_options,x_warn_shadow> x_warn_shadow;
	 generic_field_name <"x_warn_sign_compare",gcc_options,x_warn_sign_compare> x_warn_sign_compare;
	 generic_field_name <"x_warn_sign_conversion",gcc_options,x_warn_sign_conversion> x_warn_sign_conversion;
	 generic_field_name <"x_warn_sign_promo",gcc_options,x_warn_sign_promo> x_warn_sign_promo;
	 generic_field_name <"x_warn_stack_protect",gcc_options,x_warn_stack_protect> x_warn_stack_protect;
	 generic_field_name <"x_warn_stack_usage",gcc_options,x_warn_stack_usage> x_warn_stack_usage;
	 generic_field_name <"x_warn_strict_aliasing",gcc_options,x_warn_strict_aliasing> x_warn_strict_aliasing;
	 generic_field_name <"x_warn_strict_null_sentinel",gcc_options,x_warn_strict_null_sentinel> x_warn_strict_null_sentinel;
	 generic_field_name <"x_warn_strict_overflow",gcc_options,x_warn_strict_overflow> x_warn_strict_overflow;
	 generic_field_name <"x_warn_strict_prototypes",gcc_options,x_warn_strict_prototypes> x_warn_strict_prototypes;
	 generic_field_name <"x_warn_strict_selector_match",gcc_options,x_warn_strict_selector_match> x_warn_strict_selector_match;
	 generic_field_name <"x_warn_suggest_attribute_const",gcc_options,x_warn_suggest_attribute_const> x_warn_suggest_attribute_const;
	 generic_field_name <"x_warn_suggest_attribute_noreturn",gcc_options,x_warn_suggest_attribute_noreturn> x_warn_suggest_attribute_noreturn;
	 generic_field_name <"x_warn_suggest_attribute_pure",gcc_options,x_warn_suggest_attribute_pure> x_warn_suggest_attribute_pure;
	 generic_field_name <"x_warn_switch",gcc_options,x_warn_switch> x_warn_switch;
	 generic_field_name <"x_warn_switch_default",gcc_options,x_warn_switch_default> x_warn_switch_default;
	 generic_field_name <"x_warn_switch_enum",gcc_options,x_warn_switch_enum> x_warn_switch_enum;
	 generic_field_name <"x_warn_sync_nand",gcc_options,x_warn_sync_nand> x_warn_sync_nand;
	 generic_field_name <"x_warn_synth",gcc_options,x_warn_synth> x_warn_synth;
	 generic_field_name <"x_warn_system_headers",gcc_options,x_warn_system_headers> x_warn_system_headers;
	 generic_field_name <"x_warn_traditional",gcc_options,x_warn_traditional> x_warn_traditional;
	 generic_field_name <"x_warn_traditional_conversion",gcc_options,x_warn_traditional_conversion> x_warn_traditional_conversion;
	 generic_field_name <"x_warn_trampolines",gcc_options,x_warn_trampolines> x_warn_trampolines;
	 generic_field_name <"x_warn_type_limits",gcc_options,x_warn_type_limits> x_warn_type_limits;
	 generic_field_name <"x_warn_undeclared_selector",gcc_options,x_warn_undeclared_selector> x_warn_undeclared_selector;
	 generic_field_name <"x_warn_uninitialized",gcc_options,x_warn_uninitialized> x_warn_uninitialized;
	 generic_field_name <"x_warn_unsafe_loop_optimizations",gcc_options,x_warn_unsafe_loop_optimizations> x_warn_unsafe_loop_optimizations;
	 generic_field_name <"x_warn_unsuffixed_float_constants",gcc_options,x_warn_unsuffixed_float_constants> x_warn_unsuffixed_float_constants;
	 generic_field_name <"x_warn_unused",gcc_options,x_warn_unused> x_warn_unused;
	 generic_field_name <"x_warn_unused_but_set_parameter",gcc_options,x_warn_unused_but_set_parameter> x_warn_unused_but_set_parameter;
	 generic_field_name <"x_warn_unused_but_set_variable",gcc_options,x_warn_unused_but_set_variable> x_warn_unused_but_set_variable;
	 generic_field_name <"x_warn_unused_function",gcc_options,x_warn_unused_function> x_warn_unused_function;
	 generic_field_name <"x_warn_unused_label",gcc_options,x_warn_unused_label> x_warn_unused_label;
	 generic_field_name <"x_warn_unused_local_typedefs",gcc_options,x_warn_unused_local_typedefs> x_warn_unused_local_typedefs;
	 generic_field_name <"x_warn_unused_parameter",gcc_options,x_warn_unused_parameter> x_warn_unused_parameter;
	 generic_field_name <"x_warn_unused_result",gcc_options,x_warn_unused_result> x_warn_unused_result;
	 generic_field_name <"x_warn_unused_value",gcc_options,x_warn_unused_value> x_warn_unused_value;
	 generic_field_name <"x_warn_unused_variable",gcc_options,x_warn_unused_variable> x_warn_unused_variable;
	 generic_field_name <"x_warn_vector_operation_performance",gcc_options,x_warn_vector_operation_performance> x_warn_vector_operation_performance;
	 generic_field_name <"x_warn_vla",gcc_options,x_warn_vla> x_warn_vla;
	 generic_field_name <"x_warn_volatile_register_var",gcc_options,x_warn_volatile_register_var> x_warn_volatile_register_var;
	 generic_field_name <"x_warn_write_strings",gcc_options,x_warn_write_strings> x_warn_write_strings;
	 generic_field_name <"x_warn_zero_as_null_pointer_constant",gcc_options,x_warn_zero_as_null_pointer_constant> x_warn_zero_as_null_pointer_constant;
	 generic_field_name <"x_aux_info_file_name",gcc_options,x_aux_info_file_name> x_aux_info_file_name;
	 generic_field_name <"x_aux_base_name",gcc_options,x_aux_base_name> x_aux_base_name;
	 generic_field_name <"x_dump_base_name",gcc_options,x_dump_base_name> x_dump_base_name;
	 generic_field_name <"x_dump_dir_name",gcc_options,x_dump_dir_name> x_dump_dir_name;
	 generic_field_name <"x_flag_pic",gcc_options,x_flag_pic> x_flag_pic;
	 generic_field_name <"x_flag_pie",gcc_options,x_flag_pie> x_flag_pie;
	 generic_field_name <"x_flag_abi_version",gcc_options,x_flag_abi_version> x_flag_abi_version;
	 generic_field_name <"x_flag_access_control",gcc_options,x_flag_access_control> x_flag_access_control;
	 generic_field_name <"x_align_functions",gcc_options,x_align_functions> x_align_functions;
	 generic_field_name <"x_align_jumps",gcc_options,x_align_jumps> x_align_jumps;
	 generic_field_name <"x_align_labels",gcc_options,x_align_labels> x_align_labels;
	 generic_field_name <"x_align_loops",gcc_options,x_align_loops> x_align_loops;
	 generic_field_name <"x_flag_allow_parameterless_variadic_functions",gcc_options,x_flag_allow_parameterless_variadic_functions> x_flag_allow_parameterless_variadic_functions;
	 generic_field_name <"x_flag_no_asm",gcc_options,x_flag_no_asm> x_flag_no_asm;
	 generic_field_name <"x_flag_assert",gcc_options,x_flag_assert> x_flag_assert;
	 generic_field_name <"x_flag_associative_math",gcc_options,x_flag_associative_math> x_flag_associative_math;
	 generic_field_name <"x_flag_asynchronous_unwind_tables",gcc_options,x_flag_asynchronous_unwind_tables> x_flag_asynchronous_unwind_tables;
	 generic_field_name <"x_flag_auto_inc_dec",gcc_options,x_flag_auto_inc_dec> x_flag_auto_inc_dec;
	 generic_field_name <"x_flag_bootstrap_classes",gcc_options,x_flag_bootstrap_classes> x_flag_bootstrap_classes;
	 generic_field_name <"x_flag_bounds_check",gcc_options,x_flag_bounds_check> x_flag_bounds_check;
	 generic_field_name <"x_flag_branch_on_count_reg",gcc_options,x_flag_branch_on_count_reg> x_flag_branch_on_count_reg;
	 generic_field_name <"x_flag_branch_probabilities",gcc_options,x_flag_branch_probabilities> x_flag_branch_probabilities;
	 generic_field_name <"x_flag_branch_target_load_optimize",gcc_options,x_flag_branch_target_load_optimize> x_flag_branch_target_load_optimize;
	 generic_field_name <"x_flag_branch_target_load_optimize2",gcc_options,x_flag_branch_target_load_optimize2> x_flag_branch_target_load_optimize2;
	 generic_field_name <"x_flag_btr_bb_exclusive",gcc_options,x_flag_btr_bb_exclusive> x_flag_btr_bb_exclusive;
	 generic_field_name <"x_flag_building_libgcc",gcc_options,x_flag_building_libgcc> x_flag_building_libgcc;
	 generic_field_name <"x_flag_no_builtin",gcc_options,x_flag_no_builtin> x_flag_no_builtin;
	 generic_field_name <"x_common_deferred_options",gcc_options,x_common_deferred_options> x_common_deferred_options;
	 generic_field_name <"x_flag_caller_saves",gcc_options,x_flag_caller_saves> x_flag_caller_saves;
	 generic_field_name <"x_flag_check_data_deps",gcc_options,x_flag_check_data_deps> x_flag_check_data_deps;
	 generic_field_name <"x_flag_check_new",gcc_options,x_flag_check_new> x_flag_check_new;
	 generic_field_name <"x_flag_check_references",gcc_options,x_flag_check_references> x_flag_check_references;
	 generic_field_name <"x_flag_combine_stack_adjustments",gcc_options,x_flag_combine_stack_adjustments> x_flag_combine_stack_adjustments;
	 generic_field_name <"x_flag_no_common",gcc_options,x_flag_no_common> x_flag_no_common;
	 generic_field_name <"x_flag_compare_debug",gcc_options,x_flag_compare_debug> x_flag_compare_debug;
	 generic_field_name <"x_flag_compare_debug_opt",gcc_options,x_flag_compare_debug_opt> x_flag_compare_debug_opt;
	 generic_field_name <"x_flag_compare_elim_after_reload",gcc_options,x_flag_compare_elim_after_reload> x_flag_compare_elim_after_reload;
	 generic_field_name <"x_flag_conserve_space",gcc_options,x_flag_conserve_space> x_flag_conserve_space;
	 generic_field_name <"x_flag_conserve_stack",gcc_options,x_flag_conserve_stack> x_flag_conserve_stack;
	 generic_field_name <"x_max_constexpr_depth",gcc_options,x_max_constexpr_depth> x_max_constexpr_depth;
	 generic_field_name <"x_flag_cprop_registers",gcc_options,x_flag_cprop_registers> x_flag_cprop_registers;
	 generic_field_name <"x_flag_crossjumping",gcc_options,x_flag_crossjumping> x_flag_crossjumping;
	 generic_field_name <"x_flag_cse_follow_jumps",gcc_options,x_flag_cse_follow_jumps> x_flag_cse_follow_jumps;
	 generic_field_name <"x_flag_cx_fortran_rules",gcc_options,x_flag_cx_fortran_rules> x_flag_cx_fortran_rules;
	 generic_field_name <"x_flag_cx_limited_range",gcc_options,x_flag_cx_limited_range> x_flag_cx_limited_range;
	 generic_field_name <"x_flag_data_sections",gcc_options,x_flag_data_sections> x_flag_data_sections;
	 generic_field_name <"x_flag_dce",gcc_options,x_flag_dce> x_flag_dce;
	 generic_field_name <"x_flag_debug_types_section",gcc_options,x_flag_debug_types_section> x_flag_debug_types_section;
	 generic_field_name <"x_flag_deduce_init_list",gcc_options,x_flag_deduce_init_list> x_flag_deduce_init_list;
	 generic_field_name <"x_flag_defer_pop",gcc_options,x_flag_defer_pop> x_flag_defer_pop;
	 generic_field_name <"x_flag_delayed_branch",gcc_options,x_flag_delayed_branch> x_flag_delayed_branch;
	 generic_field_name <"x_flag_delete_null_pointer_checks",gcc_options,x_flag_delete_null_pointer_checks> x_flag_delete_null_pointer_checks;
	 generic_field_name <"x_flag_devirtualize",gcc_options,x_flag_devirtualize> x_flag_devirtualize;
	 generic_field_name <"x_flag_diagnostics_show_option",gcc_options,x_flag_diagnostics_show_option> x_flag_diagnostics_show_option;
	 generic_field_name <"x_flag_dse",gcc_options,x_flag_dse> x_flag_dse;
	 generic_field_name <"x_flag_dump_final_insns",gcc_options,x_flag_dump_final_insns> x_flag_dump_final_insns;
	 generic_field_name <"x_flag_dump_go_spec",gcc_options,x_flag_dump_go_spec> x_flag_dump_go_spec;
	 generic_field_name <"x_flag_dump_noaddr",gcc_options,x_flag_dump_noaddr> x_flag_dump_noaddr;
	 generic_field_name <"x_flag_dump_passes",gcc_options,x_flag_dump_passes> x_flag_dump_passes;
	 generic_field_name <"x_flag_dump_unnumbered",gcc_options,x_flag_dump_unnumbered> x_flag_dump_unnumbered;
	 generic_field_name <"x_flag_dump_unnumbered_links",gcc_options,x_flag_dump_unnumbered_links> x_flag_dump_unnumbered_links;
	 generic_field_name <"x_flag_dwarf2_cfi_asm",gcc_options,x_flag_dwarf2_cfi_asm> x_flag_dwarf2_cfi_asm;
	 generic_field_name <"x_flag_early_inlining",gcc_options,x_flag_early_inlining> x_flag_early_inlining;
	 generic_field_name <"x_flag_elide_constructors",gcc_options,x_flag_elide_constructors> x_flag_elide_constructors;
	 generic_field_name <"x_flag_eliminate_dwarf2_dups",gcc_options,x_flag_eliminate_dwarf2_dups> x_flag_eliminate_dwarf2_dups;
	 generic_field_name <"x_flag_debug_only_used_symbols",gcc_options,x_flag_debug_only_used_symbols> x_flag_debug_only_used_symbols;
	 generic_field_name <"x_flag_eliminate_unused_debug_types",gcc_options,x_flag_eliminate_unused_debug_types> x_flag_eliminate_unused_debug_types;
	 generic_field_name <"x_flag_emit_class_debug_always",gcc_options,x_flag_emit_class_debug_always> x_flag_emit_class_debug_always;
	 generic_field_name <"x_flag_emit_class_files",gcc_options,x_flag_emit_class_files> x_flag_emit_class_files;
	 generic_field_name <"x_flag_enforce_eh_specs",gcc_options,x_flag_enforce_eh_specs> x_flag_enforce_eh_specs;
	 generic_field_name <"x_flag_exceptions",gcc_options,x_flag_exceptions> x_flag_exceptions;
	 generic_field_name <"x_flag_excess_precision_cmdline",gcc_options,x_flag_excess_precision_cmdline> x_flag_excess_precision_cmdline;
	 generic_field_name <"x_flag_expensive_optimizations",gcc_options,x_flag_expensive_optimizations> x_flag_expensive_optimizations;
	 generic_field_name <"x_flag_fat_lto_objects",gcc_options,x_flag_fat_lto_objects> x_flag_fat_lto_objects;
	 generic_field_name <"x_flag_filelist_file",gcc_options,x_flag_filelist_file> x_flag_filelist_file;
	 generic_field_name <"x_flag_finite_math_only",gcc_options,x_flag_finite_math_only> x_flag_finite_math_only;
	 generic_field_name <"x_flag_float_store",gcc_options,x_flag_float_store> x_flag_float_store;
	 generic_field_name <"x_flag_new_for_scope",gcc_options,x_flag_new_for_scope> x_flag_new_for_scope;
	 generic_field_name <"x_flag_force_classes_archive_check",gcc_options,x_flag_force_classes_archive_check> x_flag_force_classes_archive_check;
	 generic_field_name <"x_flag_forward_propagate",gcc_options,x_flag_forward_propagate> x_flag_forward_propagate;
	 generic_field_name <"x_flag_fp_contract_mode",gcc_options,x_flag_fp_contract_mode> x_flag_fp_contract_mode;
	 generic_field_name <"x_flag_friend_injection",gcc_options,x_flag_friend_injection> x_flag_friend_injection;
	 generic_field_name <"x_flag_no_function_cse",gcc_options,x_flag_no_function_cse> x_flag_no_function_cse;
	 generic_field_name <"x_flag_function_sections",gcc_options,x_flag_function_sections> x_flag_function_sections;
	 generic_field_name <"x_flag_gcse",gcc_options,x_flag_gcse> x_flag_gcse;
	 generic_field_name <"x_flag_gcse_after_reload",gcc_options,x_flag_gcse_after_reload> x_flag_gcse_after_reload;
	 generic_field_name <"x_flag_gcse_las",gcc_options,x_flag_gcse_las> x_flag_gcse_las;
	 generic_field_name <"x_flag_gcse_lm",gcc_options,x_flag_gcse_lm> x_flag_gcse_lm;
	 generic_field_name <"x_flag_gcse_sm",gcc_options,x_flag_gcse_sm> x_flag_gcse_sm;
	 generic_field_name <"x_flag_no_gnu_keywords",gcc_options,x_flag_no_gnu_keywords> x_flag_no_gnu_keywords;
	 generic_field_name <"x_flag_next_runtime",gcc_options,x_flag_next_runtime> x_flag_next_runtime;
	 generic_field_name <"x_flag_tm",gcc_options,x_flag_tm> x_flag_tm;
	 generic_field_name <"x_flag_gnu89_inline",gcc_options,x_flag_gnu89_inline> x_flag_gnu89_inline;
	 generic_field_name <"x_go_check_divide_overflow",gcc_options,x_go_check_divide_overflow> x_go_check_divide_overflow;
	 generic_field_name <"x_go_check_divide_zero",gcc_options,x_go_check_divide_zero> x_go_check_divide_zero;
	 generic_field_name <"x_flag_graphite",gcc_options,x_flag_graphite> x_flag_graphite;
	 generic_field_name <"x_flag_graphite_identity",gcc_options,x_flag_graphite_identity> x_flag_graphite_identity;
	 generic_field_name <"x_flag_guess_branch_prob",gcc_options,x_flag_guess_branch_prob> x_flag_guess_branch_prob;
	 generic_field_name <"x_flag_hash_synchronization",gcc_options,x_flag_hash_synchronization> x_flag_hash_synchronization;
	 generic_field_name <"x_flag_no_ident",gcc_options,x_flag_no_ident> x_flag_no_ident;
	 generic_field_name <"x_flag_if_conversion",gcc_options,x_flag_if_conversion> x_flag_if_conversion;
	 generic_field_name <"x_flag_if_conversion2",gcc_options,x_flag_if_conversion2> x_flag_if_conversion2;
	 generic_field_name <"x_flag_implement_inlines",gcc_options,x_flag_implement_inlines> x_flag_implement_inlines;
	 generic_field_name <"x_flag_implicit_inline_templates",gcc_options,x_flag_implicit_inline_templates> x_flag_implicit_inline_templates;
	 generic_field_name <"x_flag_implicit_templates",gcc_options,x_flag_implicit_templates> x_flag_implicit_templates;
	 generic_field_name <"x_flag_indirect_classes",gcc_options,x_flag_indirect_classes> x_flag_indirect_classes;
	 generic_field_name <"x_flag_indirect_dispatch",gcc_options,x_flag_indirect_dispatch> x_flag_indirect_dispatch;
	 generic_field_name <"x_flag_indirect_inlining",gcc_options,x_flag_indirect_inlining> x_flag_indirect_inlining;
	 generic_field_name <"x_flag_inhibit_size_directive",gcc_options,x_flag_inhibit_size_directive> x_flag_inhibit_size_directive;
	 generic_field_name <"x_flag_no_inline",gcc_options,x_flag_no_inline> x_flag_no_inline;
	 generic_field_name <"x_flag_inline_atomics",gcc_options,x_flag_inline_atomics> x_flag_inline_atomics;
	 generic_field_name <"x_flag_inline_functions",gcc_options,x_flag_inline_functions> x_flag_inline_functions;
	 generic_field_name <"x_flag_inline_functions_called_once",gcc_options,x_flag_inline_functions_called_once> x_flag_inline_functions_called_once;
	 generic_field_name <"x_flag_inline_small_functions",gcc_options,x_flag_inline_small_functions> x_flag_inline_small_functions;
	 generic_field_name <"x_flag_instrument_function_entry_exit",gcc_options,x_flag_instrument_function_entry_exit> x_flag_instrument_function_entry_exit;
	 generic_field_name <"x_flag_ipa_cp",gcc_options,x_flag_ipa_cp> x_flag_ipa_cp;
	 generic_field_name <"x_flag_ipa_cp_clone",gcc_options,x_flag_ipa_cp_clone> x_flag_ipa_cp_clone;
	 generic_field_name <"x_flag_ipa_matrix_reorg",gcc_options,x_flag_ipa_matrix_reorg> x_flag_ipa_matrix_reorg;
	 generic_field_name <"x_flag_ipa_profile",gcc_options,x_flag_ipa_profile> x_flag_ipa_profile;
	 generic_field_name <"x_flag_ipa_pta",gcc_options,x_flag_ipa_pta> x_flag_ipa_pta;
	 generic_field_name <"x_flag_ipa_pure_const",gcc_options,x_flag_ipa_pure_const> x_flag_ipa_pure_const;
	 generic_field_name <"x_flag_ipa_reference",gcc_options,x_flag_ipa_reference> x_flag_ipa_reference;
	 generic_field_name <"x_flag_ipa_sra",gcc_options,x_flag_ipa_sra> x_flag_ipa_sra;
	 generic_field_name <"x_flag_ira_algorithm",gcc_options,x_flag_ira_algorithm> x_flag_ira_algorithm;
	 generic_field_name <"x_flag_ira_loop_pressure",gcc_options,x_flag_ira_loop_pressure> x_flag_ira_loop_pressure;
	 generic_field_name <"x_flag_ira_region",gcc_options,x_flag_ira_region> x_flag_ira_region;
	 generic_field_name <"x_flag_ira_share_save_slots",gcc_options,x_flag_ira_share_save_slots> x_flag_ira_share_save_slots;
	 generic_field_name <"x_flag_ira_share_spill_slots",gcc_options,x_flag_ira_share_spill_slots> x_flag_ira_share_spill_slots;
	 generic_field_name <"x_flag_ira_verbose",gcc_options,x_flag_ira_verbose> x_flag_ira_verbose;
	 generic_field_name <"x_flag_ivopts",gcc_options,x_flag_ivopts> x_flag_ivopts;
	 generic_field_name <"x_flag_jni",gcc_options,x_flag_jni> x_flag_jni;
	 generic_field_name <"x_flag_jump_tables",gcc_options,x_flag_jump_tables> x_flag_jump_tables;
	 generic_field_name <"x_flag_keep_inline_dllexport",gcc_options,x_flag_keep_inline_dllexport> x_flag_keep_inline_dllexport;
	 generic_field_name <"x_flag_keep_inline_functions",gcc_options,x_flag_keep_inline_functions> x_flag_keep_inline_functions;
	 generic_field_name <"x_flag_keep_static_consts",gcc_options,x_flag_keep_static_consts> x_flag_keep_static_consts;
	 generic_field_name <"x_flag_lax_vector_conversions",gcc_options,x_flag_lax_vector_conversions> x_flag_lax_vector_conversions;
	 generic_field_name <"x_flag_leading_underscore",gcc_options,x_flag_leading_underscore> x_flag_leading_underscore;
	 generic_field_name <"x_flag_loop_block",gcc_options,x_flag_loop_block> x_flag_loop_block;
	 generic_field_name <"x_flag_loop_flatten",gcc_options,x_flag_loop_flatten> x_flag_loop_flatten;
	 generic_field_name <"x_flag_loop_interchange",gcc_options,x_flag_loop_interchange> x_flag_loop_interchange;
	 generic_field_name <"x_flag_loop_parallelize_all",gcc_options,x_flag_loop_parallelize_all> x_flag_loop_parallelize_all;
	 generic_field_name <"x_flag_loop_strip_mine",gcc_options,x_flag_loop_strip_mine> x_flag_loop_strip_mine;
	 generic_field_name <"x_flag_lto_compression_level",gcc_options,x_flag_lto_compression_level> x_flag_lto_compression_level;
	 generic_field_name <"x_flag_lto_partition_1to1",gcc_options,x_flag_lto_partition_1to1> x_flag_lto_partition_1to1;
	 generic_field_name <"x_flag_lto_partition_balanced",gcc_options,x_flag_lto_partition_balanced> x_flag_lto_partition_balanced;
	 generic_field_name <"x_flag_lto_partition_none",gcc_options,x_flag_lto_partition_none> x_flag_lto_partition_none;
	 generic_field_name <"x_flag_lto_report",gcc_options,x_flag_lto_report> x_flag_lto_report;
	 generic_field_name <"x_flag_lto",gcc_options,x_flag_lto> x_flag_lto;
	 generic_field_name <"x_flag_ltrans",gcc_options,x_flag_ltrans> x_flag_ltrans;
	 generic_field_name <"x_ltrans_output_list",gcc_options,x_ltrans_output_list> x_ltrans_output_list;
	 generic_field_name <"x_flag_errno_math",gcc_options,x_flag_errno_math> x_flag_errno_math;
	 generic_field_name <"x_flag_max_errors",gcc_options,x_flag_max_errors> x_flag_max_errors;
	 generic_field_name <"x_mem_report",gcc_options,x_mem_report> x_mem_report;
	 generic_field_name <"x_flag_merge_constants",gcc_options,x_flag_merge_constants> x_flag_merge_constants;
	 generic_field_name <"x_flag_merge_debug_strings",gcc_options,x_flag_merge_debug_strings> x_flag_merge_debug_strings;
	 generic_field_name <"x_flag_modulo_sched",gcc_options,x_flag_modulo_sched> x_flag_modulo_sched;
	 generic_field_name <"x_flag_modulo_sched_allow_regmoves",gcc_options,x_flag_modulo_sched_allow_regmoves> x_flag_modulo_sched_allow_regmoves;
	 generic_field_name <"x_flag_move_loop_invariants",gcc_options,x_flag_move_loop_invariants> x_flag_move_loop_invariants;
	 generic_field_name <"x_flag_ms_extensions",gcc_options,x_flag_ms_extensions> x_flag_ms_extensions;
	 generic_field_name <"x_flag_mudflap",gcc_options,x_flag_mudflap> x_flag_mudflap;
	 generic_field_name <"x_flag_mudflap_ignore_reads",gcc_options,x_flag_mudflap_ignore_reads> x_flag_mudflap_ignore_reads;
	 generic_field_name <"x_flag_nil_receivers",gcc_options,x_flag_nil_receivers> x_flag_nil_receivers;
	 generic_field_name <"x_flag_non_call_exceptions",gcc_options,x_flag_non_call_exceptions> x_flag_non_call_exceptions;
	 generic_field_name <"x_flag_no_nonansi_builtin",gcc_options,x_flag_no_nonansi_builtin> x_flag_no_nonansi_builtin;
	 generic_field_name <"x_flag_nothrow_opt",gcc_options,x_flag_nothrow_opt> x_flag_nothrow_opt;
	 generic_field_name <"x_flag_objc_abi",gcc_options,x_flag_objc_abi> x_flag_objc_abi;
	 generic_field_name <"x_flag_objc_call_cxx_cdtors",gcc_options,x_flag_objc_call_cxx_cdtors> x_flag_objc_call_cxx_cdtors;
	 generic_field_name <"x_flag_objc_direct_dispatch",gcc_options,x_flag_objc_direct_dispatch> x_flag_objc_direct_dispatch;
	 generic_field_name <"x_flag_objc_exceptions",gcc_options,x_flag_objc_exceptions> x_flag_objc_exceptions;
	 generic_field_name <"x_flag_objc_gc",gcc_options,x_flag_objc_gc> x_flag_objc_gc;
	 generic_field_name <"x_flag_objc_nilcheck",gcc_options,x_flag_objc_nilcheck> x_flag_objc_nilcheck;
	 generic_field_name <"x_flag_objc_sjlj_exceptions",gcc_options,x_flag_objc_sjlj_exceptions> x_flag_objc_sjlj_exceptions;
	 generic_field_name <"x_flag_objc1_only",gcc_options,x_flag_objc1_only> x_flag_objc1_only;
	 generic_field_name <"x_flag_omit_frame_pointer",gcc_options,x_flag_omit_frame_pointer> x_flag_omit_frame_pointer;
	 generic_field_name <"x_flag_openmp",gcc_options,x_flag_openmp> x_flag_openmp;
	 generic_field_name <"x_flag_regmove",gcc_options,x_flag_regmove> x_flag_regmove;
	 generic_field_name <"x_flag_optimize_sibling_calls",gcc_options,x_flag_optimize_sibling_calls> x_flag_optimize_sibling_calls;
	 generic_field_name <"x_flag_optimize_sci",gcc_options,x_flag_optimize_sci> x_flag_optimize_sci;
	 generic_field_name <"x_flag_optimize_strlen",gcc_options,x_flag_optimize_strlen> x_flag_optimize_strlen;
	 generic_field_name <"x_flag_pack_struct",gcc_options,x_flag_pack_struct> x_flag_pack_struct;
	 generic_field_name <"x_flag_partial_inlining",gcc_options,x_flag_partial_inlining> x_flag_partial_inlining;
	 generic_field_name <"x_flag_pcc_struct_return",gcc_options,x_flag_pcc_struct_return> x_flag_pcc_struct_return;
	 generic_field_name <"x_flag_peel_loops",gcc_options,x_flag_peel_loops> x_flag_peel_loops;
	 generic_field_name <"x_flag_no_peephole",gcc_options,x_flag_no_peephole> x_flag_no_peephole;
	 generic_field_name <"x_flag_peephole2",gcc_options,x_flag_peephole2> x_flag_peephole2;
	 generic_field_name <"x_flag_plan9_extensions",gcc_options,x_flag_plan9_extensions> x_flag_plan9_extensions;
	 generic_field_name <"x_post_ipa_mem_report",gcc_options,x_post_ipa_mem_report> x_post_ipa_mem_report;
	 generic_field_name <"x_pre_ipa_mem_report",gcc_options,x_pre_ipa_mem_report> x_pre_ipa_mem_report;
	 generic_field_name <"x_flag_predictive_commoning",gcc_options,x_flag_predictive_commoning> x_flag_predictive_commoning;
	 generic_field_name <"x_flag_prefetch_loop_arrays",gcc_options,x_flag_prefetch_loop_arrays> x_flag_prefetch_loop_arrays;
	 generic_field_name <"x_flag_pretty_templates",gcc_options,x_flag_pretty_templates> x_flag_pretty_templates;
	 generic_field_name <"x_profile_flag",gcc_options,x_profile_flag> x_profile_flag;
	 generic_field_name <"x_profile_arc_flag",gcc_options,x_profile_arc_flag> x_profile_arc_flag;
	 generic_field_name <"x_flag_profile_correction",gcc_options,x_flag_profile_correction> x_flag_profile_correction;
	 generic_field_name <"x_profile_data_prefix",gcc_options,x_profile_data_prefix> x_profile_data_prefix;
	 generic_field_name <"x_flag_profile_use",gcc_options,x_flag_profile_use> x_flag_profile_use;
	 generic_field_name <"x_flag_profile_values",gcc_options,x_flag_profile_values> x_flag_profile_values;
	 generic_field_name <"x_flag_reciprocal_math",gcc_options,x_flag_reciprocal_math> x_flag_reciprocal_math;
	 generic_field_name <"x_flag_record_gcc_switches",gcc_options,x_flag_record_gcc_switches> x_flag_record_gcc_switches;
	 generic_field_name <"x_flag_reduced_reflection",gcc_options,x_flag_reduced_reflection> x_flag_reduced_reflection;
	 generic_field_name <"x_flag_ree",gcc_options,x_flag_ree> x_flag_ree;
	 generic_field_name <"x_flag_rename_registers",gcc_options,x_flag_rename_registers> x_flag_rename_registers;
	 generic_field_name <"x_flag_reorder_blocks",gcc_options,x_flag_reorder_blocks> x_flag_reorder_blocks;
	 generic_field_name <"x_flag_reorder_blocks_and_partition",gcc_options,x_flag_reorder_blocks_and_partition> x_flag_reorder_blocks_and_partition;
	 generic_field_name <"x_flag_reorder_functions",gcc_options,x_flag_reorder_functions> x_flag_reorder_functions;
	 generic_field_name <"x_flag_replace_objc_classes",gcc_options,x_flag_replace_objc_classes> x_flag_replace_objc_classes;
	 generic_field_name <"x_go_require_return_statement",gcc_options,x_go_require_return_statement> x_go_require_return_statement;
	 generic_field_name <"x_flag_rerun_cse_after_loop",gcc_options,x_flag_rerun_cse_after_loop> x_flag_rerun_cse_after_loop;
	 generic_field_name <"x_flag_resched_modulo_sched",gcc_options,x_flag_resched_modulo_sched> x_flag_resched_modulo_sched;
	 generic_field_name <"x_flag_rounding_math",gcc_options,x_flag_rounding_math> x_flag_rounding_math;
	 generic_field_name <"x_flag_rtti",gcc_options,x_flag_rtti> x_flag_rtti;
	 generic_field_name <"x_flag_sched_critical_path_heuristic",gcc_options,x_flag_sched_critical_path_heuristic> x_flag_sched_critical_path_heuristic;
	 generic_field_name <"x_flag_sched_dep_count_heuristic",gcc_options,x_flag_sched_dep_count_heuristic> x_flag_sched_dep_count_heuristic;
	 generic_field_name <"x_flag_sched_group_heuristic",gcc_options,x_flag_sched_group_heuristic> x_flag_sched_group_heuristic;
	 generic_field_name <"x_flag_schedule_interblock",gcc_options,x_flag_schedule_interblock> x_flag_schedule_interblock;
	 generic_field_name <"x_flag_sched_last_insn_heuristic",gcc_options,x_flag_sched_last_insn_heuristic> x_flag_sched_last_insn_heuristic;
	 generic_field_name <"x_flag_sched_pressure",gcc_options,x_flag_sched_pressure> x_flag_sched_pressure;
	 generic_field_name <"x_flag_sched_pressure_algorithm",gcc_options,x_flag_sched_pressure_algorithm> x_flag_sched_pressure_algorithm;
	 generic_field_name <"x_flag_sched_rank_heuristic",gcc_options,x_flag_sched_rank_heuristic> x_flag_sched_rank_heuristic;
	 generic_field_name <"x_flag_schedule_speculative",gcc_options,x_flag_schedule_speculative> x_flag_schedule_speculative;
	 generic_field_name <"x_flag_sched_spec_insn_heuristic",gcc_options,x_flag_sched_spec_insn_heuristic> x_flag_sched_spec_insn_heuristic;
	 generic_field_name <"x_flag_schedule_speculative_load",gcc_options,x_flag_schedule_speculative_load> x_flag_schedule_speculative_load;
	 generic_field_name <"x_flag_schedule_speculative_load_dangerous",gcc_options,x_flag_schedule_speculative_load_dangerous> x_flag_schedule_speculative_load_dangerous;
	 generic_field_name <"x_flag_sched_stalled_insns",gcc_options,x_flag_sched_stalled_insns> x_flag_sched_stalled_insns;
	 generic_field_name <"x_flag_sched_stalled_insns_dep",gcc_options,x_flag_sched_stalled_insns_dep> x_flag_sched_stalled_insns_dep;
	 generic_field_name <"x_sched_verbose_param",gcc_options,x_sched_verbose_param> x_sched_verbose_param;
	 generic_field_name <"x_flag_sched2_use_superblocks",gcc_options,x_flag_sched2_use_superblocks> x_flag_sched2_use_superblocks;
	 generic_field_name <"x_flag_schedule_insns",gcc_options,x_flag_schedule_insns> x_flag_schedule_insns;
	 generic_field_name <"x_flag_schedule_insns_after_reload",gcc_options,x_flag_schedule_insns_after_reload> x_flag_schedule_insns_after_reload;
	 generic_field_name <"x_flag_section_anchors",gcc_options,x_flag_section_anchors> x_flag_section_anchors;
	 generic_field_name <"x_flag_sel_sched_pipelining",gcc_options,x_flag_sel_sched_pipelining> x_flag_sel_sched_pipelining;
	 generic_field_name <"x_flag_sel_sched_pipelining_outer_loops",gcc_options,x_flag_sel_sched_pipelining_outer_loops> x_flag_sel_sched_pipelining_outer_loops;
	 generic_field_name <"x_flag_sel_sched_reschedule_pipelined",gcc_options,x_flag_sel_sched_reschedule_pipelined> x_flag_sel_sched_reschedule_pipelined;
	 generic_field_name <"x_flag_selective_scheduling",gcc_options,x_flag_selective_scheduling> x_flag_selective_scheduling;
	 generic_field_name <"x_flag_selective_scheduling2",gcc_options,x_flag_selective_scheduling2> x_flag_selective_scheduling2;
	 generic_field_name <"x_flag_short_double",gcc_options,x_flag_short_double> x_flag_short_double;
	 generic_field_name <"x_flag_short_enums",gcc_options,x_flag_short_enums> x_flag_short_enums;
	 generic_field_name <"x_flag_short_wchar",gcc_options,x_flag_short_wchar> x_flag_short_wchar;
	 generic_field_name <"x_flag_show_column",gcc_options,x_flag_show_column> x_flag_show_column;
	 generic_field_name <"x_flag_shrink_wrap",gcc_options,x_flag_shrink_wrap> x_flag_shrink_wrap;
	 generic_field_name <"x_flag_signaling_nans",gcc_options,x_flag_signaling_nans> x_flag_signaling_nans;
	 generic_field_name <"x_flag_signed_bitfields",gcc_options,x_flag_signed_bitfields> x_flag_signed_bitfields;
	 generic_field_name <"x_flag_signed_char",gcc_options,x_flag_signed_char> x_flag_signed_char;
	 generic_field_name <"x_flag_signed_zeros",gcc_options,x_flag_signed_zeros> x_flag_signed_zeros;
	 generic_field_name <"x_flag_single_precision_constant",gcc_options,x_flag_single_precision_constant> x_flag_single_precision_constant;
	 generic_field_name <"x_flag_split_ivs_in_unroller",gcc_options,x_flag_split_ivs_in_unroller> x_flag_split_ivs_in_unroller;
	 generic_field_name <"x_flag_split_stack",gcc_options,x_flag_split_stack> x_flag_split_stack;
	 generic_field_name <"x_flag_split_wide_types",gcc_options,x_flag_split_wide_types> x_flag_split_wide_types;
	 generic_field_name <"x_flag_stack_protect",gcc_options,x_flag_stack_protect> x_flag_stack_protect;
	 generic_field_name <"x_flag_stack_usage",gcc_options,x_flag_stack_usage> x_flag_stack_usage;
	 generic_field_name <"x_flag_detailed_statistics",gcc_options,x_flag_detailed_statistics> x_flag_detailed_statistics;
	 generic_field_name <"x_flag_store_check",gcc_options,x_flag_store_check> x_flag_store_check;
	 generic_field_name <"x_flag_strict_aliasing",gcc_options,x_flag_strict_aliasing> x_flag_strict_aliasing;
	 generic_field_name <"x_flag_strict_enums",gcc_options,x_flag_strict_enums> x_flag_strict_enums;
	 generic_field_name <"x_flag_strict_overflow",gcc_options,x_flag_strict_overflow> x_flag_strict_overflow;
	 generic_field_name <"x_flag_strict_volatile_bitfields",gcc_options,x_flag_strict_volatile_bitfields> x_flag_strict_volatile_bitfields;
	 generic_field_name <"x_flag_syntax_only",gcc_options,x_flag_syntax_only> x_flag_syntax_only;
	 generic_field_name <"x_flag_test_coverage",gcc_options,x_flag_test_coverage> x_flag_test_coverage;
	 generic_field_name <"x_flag_thread_jumps",gcc_options,x_flag_thread_jumps> x_flag_thread_jumps;
	 generic_field_name <"x_flag_threadsafe_statics",gcc_options,x_flag_threadsafe_statics> x_flag_threadsafe_statics;
	 generic_field_name <"x_time_report",gcc_options,x_time_report> x_time_report;
	 generic_field_name <"x_flag_tls_default",gcc_options,x_flag_tls_default> x_flag_tls_default;
	 generic_field_name <"x_flag_toplevel_reorder",gcc_options,x_flag_toplevel_reorder> x_flag_toplevel_reorder;
	 generic_field_name <"x_flag_tracer",gcc_options,x_flag_tracer> x_flag_tracer;
	 generic_field_name <"x_flag_trapping_math",gcc_options,x_flag_trapping_math> x_flag_trapping_math;
	 generic_field_name <"x_flag_trapv",gcc_options,x_flag_trapv> x_flag_trapv;
	 generic_field_name <"x_flag_tree_bit_ccp",gcc_options,x_flag_tree_bit_ccp> x_flag_tree_bit_ccp;
	 generic_field_name <"x_flag_tree_builtin_call_dce",gcc_options,x_flag_tree_builtin_call_dce> x_flag_tree_builtin_call_dce;
	 generic_field_name <"x_flag_tree_ccp",gcc_options,x_flag_tree_ccp> x_flag_tree_ccp;
	 generic_field_name <"x_flag_tree_ch",gcc_options,x_flag_tree_ch> x_flag_tree_ch;
	 generic_field_name <"x_flag_tree_copy_prop",gcc_options,x_flag_tree_copy_prop> x_flag_tree_copy_prop;
	 generic_field_name <"x_flag_tree_copyrename",gcc_options,x_flag_tree_copyrename> x_flag_tree_copyrename;
	 generic_field_name <"x_flag_tree_cselim",gcc_options,x_flag_tree_cselim> x_flag_tree_cselim;
	 generic_field_name <"x_flag_tree_dce",gcc_options,x_flag_tree_dce> x_flag_tree_dce;
	 generic_field_name <"x_flag_tree_dom",gcc_options,x_flag_tree_dom> x_flag_tree_dom;
	 generic_field_name <"x_flag_tree_dse",gcc_options,x_flag_tree_dse> x_flag_tree_dse;
	 generic_field_name <"x_flag_tree_forwprop",gcc_options,x_flag_tree_forwprop> x_flag_tree_forwprop;
	 generic_field_name <"x_flag_tree_fre",gcc_options,x_flag_tree_fre> x_flag_tree_fre;
	 generic_field_name <"x_flag_tree_loop_distribute_patterns",gcc_options,x_flag_tree_loop_distribute_patterns> x_flag_tree_loop_distribute_patterns;
	 generic_field_name <"x_flag_tree_loop_distribution",gcc_options,x_flag_tree_loop_distribution> x_flag_tree_loop_distribution;
	 generic_field_name <"x_flag_tree_loop_if_convert",gcc_options,x_flag_tree_loop_if_convert> x_flag_tree_loop_if_convert;
	 generic_field_name <"x_flag_tree_loop_if_convert_stores",gcc_options,x_flag_tree_loop_if_convert_stores> x_flag_tree_loop_if_convert_stores;
	 generic_field_name <"x_flag_tree_loop_im",gcc_options,x_flag_tree_loop_im> x_flag_tree_loop_im;
	 generic_field_name <"x_flag_tree_loop_ivcanon",gcc_options,x_flag_tree_loop_ivcanon> x_flag_tree_loop_ivcanon;
	 generic_field_name <"x_flag_tree_loop_optimize",gcc_options,x_flag_tree_loop_optimize> x_flag_tree_loop_optimize;
	 generic_field_name <"x_flag_tree_live_range_split",gcc_options,x_flag_tree_live_range_split> x_flag_tree_live_range_split;
	 generic_field_name <"x_flag_tree_parallelize_loops",gcc_options,x_flag_tree_parallelize_loops> x_flag_tree_parallelize_loops;
	 generic_field_name <"x_flag_tree_partial_pre",gcc_options,x_flag_tree_partial_pre> x_flag_tree_partial_pre;
	 generic_field_name <"x_flag_tree_phiprop",gcc_options,x_flag_tree_phiprop> x_flag_tree_phiprop;
	 generic_field_name <"x_flag_tree_pre",gcc_options,x_flag_tree_pre> x_flag_tree_pre;
	 generic_field_name <"x_flag_tree_pta",gcc_options,x_flag_tree_pta> x_flag_tree_pta;
	 generic_field_name <"x_flag_tree_reassoc",gcc_options,x_flag_tree_reassoc> x_flag_tree_reassoc;
	 generic_field_name <"x_flag_tree_scev_cprop",gcc_options,x_flag_tree_scev_cprop> x_flag_tree_scev_cprop;
	 generic_field_name <"x_flag_tree_sink",gcc_options,x_flag_tree_sink> x_flag_tree_sink;
	 generic_field_name <"x_flag_tree_slp_vectorize",gcc_options,x_flag_tree_slp_vectorize> x_flag_tree_slp_vectorize;
	 generic_field_name <"x_flag_tree_sra",gcc_options,x_flag_tree_sra> x_flag_tree_sra;
	 generic_field_name <"x_flag_tree_switch_conversion",gcc_options,x_flag_tree_switch_conversion> x_flag_tree_switch_conversion;
	 generic_field_name <"x_flag_tree_tail_merge",gcc_options,x_flag_tree_tail_merge> x_flag_tree_tail_merge;
	 generic_field_name <"x_flag_tree_ter",gcc_options,x_flag_tree_ter> x_flag_tree_ter;
	 generic_field_name <"x_flag_tree_vect_loop_version",gcc_options,x_flag_tree_vect_loop_version> x_flag_tree_vect_loop_version;
	 generic_field_name <"x_flag_tree_vectorize",gcc_options,x_flag_tree_vectorize> x_flag_tree_vectorize;
	 generic_field_name <"x_flag_tree_vrp",gcc_options,x_flag_tree_vrp> x_flag_tree_vrp;
	 generic_field_name <"x_flag_unit_at_a_time",gcc_options,x_flag_unit_at_a_time> x_flag_unit_at_a_time;
	 generic_field_name <"x_flag_unroll_all_loops",gcc_options,x_flag_unroll_all_loops> x_flag_unroll_all_loops;
	 generic_field_name <"x_flag_unroll_loops",gcc_options,x_flag_unroll_loops> x_flag_unroll_loops;
	 generic_field_name <"x_flag_unsafe_loop_optimizations",gcc_options,x_flag_unsafe_loop_optimizations> x_flag_unsafe_loop_optimizations;
	 generic_field_name <"x_flag_unsafe_math_optimizations",gcc_options,x_flag_unsafe_math_optimizations> x_flag_unsafe_math_optimizations;
	 generic_field_name <"x_flag_unswitch_loops",gcc_options,x_flag_unswitch_loops> x_flag_unswitch_loops;
	 generic_field_name <"x_flag_unwind_tables",gcc_options,x_flag_unwind_tables> x_flag_unwind_tables;
	 generic_field_name <"x_flag_use_atomic_builtins",gcc_options,x_flag_use_atomic_builtins> x_flag_use_atomic_builtins;
	 generic_field_name <"x_flag_use_boehm_gc",gcc_options,x_flag_use_boehm_gc> x_flag_use_boehm_gc;
	 generic_field_name <"x_flag_use_cxa_atexit",gcc_options,x_flag_use_cxa_atexit> x_flag_use_cxa_atexit;
	 generic_field_name <"x_flag_use_cxa_get_exception_ptr",gcc_options,x_flag_use_cxa_get_exception_ptr> x_flag_use_cxa_get_exception_ptr;
	 generic_field_name <"x_flag_use_divide_subroutine",gcc_options,x_flag_use_divide_subroutine> x_flag_use_divide_subroutine;
	 generic_field_name <"x_flag_var_tracking",gcc_options,x_flag_var_tracking> x_flag_var_tracking;
	 generic_field_name <"x_flag_var_tracking_assignments",gcc_options,x_flag_var_tracking_assignments> x_flag_var_tracking_assignments;
	 generic_field_name <"x_flag_var_tracking_assignments_toggle",gcc_options,x_flag_var_tracking_assignments_toggle> x_flag_var_tracking_assignments_toggle;
	 generic_field_name <"x_flag_var_tracking_uninit",gcc_options,x_flag_var_tracking_uninit> x_flag_var_tracking_uninit;
	 generic_field_name <"x_flag_variable_expansion_in_unroller",gcc_options,x_flag_variable_expansion_in_unroller> x_flag_variable_expansion_in_unroller;
	 generic_field_name <"x_flag_vect_cost_model",gcc_options,x_flag_vect_cost_model> x_flag_vect_cost_model;
	 generic_field_name <"x_flag_verbose_asm",gcc_options,x_flag_verbose_asm> x_flag_verbose_asm;
	 generic_field_name <"x_flag_visibility_ms_compat",gcc_options,x_flag_visibility_ms_compat> x_flag_visibility_ms_compat;
	 generic_field_name <"x_default_visibility",gcc_options,x_default_visibility> x_default_visibility;
	 generic_field_name <"x_flag_value_profile_transformations",gcc_options,x_flag_value_profile_transformations> x_flag_value_profile_transformations;
	 generic_field_name <"x_flag_weak",gcc_options,x_flag_weak> x_flag_weak;
	 generic_field_name <"x_flag_web",gcc_options,x_flag_web> x_flag_web;
	 generic_field_name <"x_flag_whole_program",gcc_options,x_flag_whole_program> x_flag_whole_program;
	 generic_field_name <"x_flag_working_directory",gcc_options,x_flag_working_directory> x_flag_working_directory;
	 generic_field_name <"x_flag_wpa",gcc_options,x_flag_wpa> x_flag_wpa;
	 generic_field_name <"x_flag_wrapv",gcc_options,x_flag_wrapv> x_flag_wrapv;
	 generic_field_name <"x_flag_zero_initialized_in_bss",gcc_options,x_flag_zero_initialized_in_bss> x_flag_zero_initialized_in_bss;
	 generic_field_name <"x_flag_zero_link",gcc_options,x_flag_zero_link> x_flag_zero_link;
	 generic_field_name <"x_dwarf_version",gcc_options,x_dwarf_version> x_dwarf_version;
	 generic_field_name <"x_flag_gen_declaration",gcc_options,x_flag_gen_declaration> x_flag_gen_declaration;
	 generic_field_name <"x_dwarf_record_gcc_switches",gcc_options,x_dwarf_record_gcc_switches> x_dwarf_record_gcc_switches;
	 generic_field_name <"x_dwarf_strict",gcc_options,x_dwarf_strict> x_dwarf_strict;
	 generic_field_name <"x_flag_gtoggle",gcc_options,x_flag_gtoggle> x_flag_gtoggle;
	 generic_field_name <"x_imultiarch",gcc_options,x_imultiarch> x_imultiarch;
	 generic_field_name <"x_plugindir_string",gcc_options,x_plugindir_string> x_plugindir_string;
	 generic_field_name <"x_ix86_abi",gcc_options,x_ix86_abi> x_ix86_abi;
	 generic_field_name <"x_flag_android",gcc_options,x_flag_android> x_flag_android;
	 generic_field_name <"x_ix86_arch_string",gcc_options,x_ix86_arch_string> x_ix86_arch_string;
	 generic_field_name <"x_ix86_asm_dialect",gcc_options,x_ix86_asm_dialect> x_ix86_asm_dialect;
	 generic_field_name <"x_linux_libc",gcc_options,x_linux_libc> x_linux_libc;
	 generic_field_name <"x_ix86_branch_cost",gcc_options,x_ix86_branch_cost> x_ix86_branch_cost;
	 generic_field_name <"x_ix86_cmodel",gcc_options,x_ix86_cmodel> x_ix86_cmodel;
	 generic_field_name <"x_flag_dispatch_scheduler",gcc_options,x_flag_dispatch_scheduler> x_flag_dispatch_scheduler;
	 generic_field_name <"x_flag_fentry",gcc_options,x_flag_fentry> x_flag_fentry;
	 generic_field_name <"x_ix86_force_drap",gcc_options,x_ix86_force_drap> x_ix86_force_drap;
	 generic_field_name <"x_ix86_fpmath",gcc_options,x_ix86_fpmath> x_ix86_fpmath;
	 generic_field_name <"x_ix86_incoming_stack_boundary_arg",gcc_options,x_ix86_incoming_stack_boundary_arg> x_ix86_incoming_stack_boundary_arg;
	 generic_field_name <"x_ix86_section_threshold",gcc_options,x_ix86_section_threshold> x_ix86_section_threshold;
	 generic_field_name <"x_ix86_preferred_stack_boundary_arg",gcc_options,x_ix86_preferred_stack_boundary_arg> x_ix86_preferred_stack_boundary_arg;
	 generic_field_name <"x_ix86_recip_name",gcc_options,x_ix86_recip_name> x_ix86_recip_name;
	 generic_field_name <"x_ix86_regparm",gcc_options,x_ix86_regparm> x_ix86_regparm;
	 generic_field_name <"x_ix86_sse2avx",gcc_options,x_ix86_sse2avx> x_ix86_sse2avx;
	 generic_field_name <"x_ix86_force_align_arg_pointer",gcc_options,x_ix86_force_align_arg_pointer> x_ix86_force_align_arg_pointer;
	 generic_field_name <"x_ix86_stringop_alg",gcc_options,x_ix86_stringop_alg> x_ix86_stringop_alg;
	 generic_field_name <"x_ix86_tls_dialect",gcc_options,x_ix86_tls_dialect> x_ix86_tls_dialect;
	 generic_field_name <"x_ix86_tune_string",gcc_options,x_ix86_tune_string> x_ix86_tune_string;
	 generic_field_name <"x_ix86_veclibabi_type",gcc_options,x_ix86_veclibabi_type> x_ix86_veclibabi_type;
	 generic_field_name <"x_asm_file_name",gcc_options,x_asm_file_name> x_asm_file_name;
	 generic_field_name <"x_pass_exit_codes",gcc_options,x_pass_exit_codes> x_pass_exit_codes;
	 generic_field_name <"x_pedantic",gcc_options,x_pedantic> x_pedantic;
	 generic_field_name <"x_flag_pedantic_errors",gcc_options,x_flag_pedantic_errors> x_flag_pedantic_errors;
	 generic_field_name <"x_use_pipes",gcc_options,x_use_pipes> x_use_pipes;
	 generic_field_name <"x_print_file_name",gcc_options,x_print_file_name> x_print_file_name;
	 generic_field_name <"x_print_multi_directory",gcc_options,x_print_multi_directory> x_print_multi_directory;
	 generic_field_name <"x_print_multi_lib",gcc_options,x_print_multi_lib> x_print_multi_lib;
	 generic_field_name <"x_print_multi_os_directory",gcc_options,x_print_multi_os_directory> x_print_multi_os_directory;
	 generic_field_name <"x_print_multiarch",gcc_options,x_print_multiarch> x_print_multiarch;
	 generic_field_name <"x_print_prog_name",gcc_options,x_print_prog_name> x_print_prog_name;
	 generic_field_name <"x_print_search_dirs",gcc_options,x_print_search_dirs> x_print_search_dirs;
	 generic_field_name <"x_print_sysroot",gcc_options,x_print_sysroot> x_print_sysroot;
	 generic_field_name <"x_print_sysroot_headers_suffix",gcc_options,x_print_sysroot_headers_suffix> x_print_sysroot_headers_suffix;
	 generic_field_name <"x_quiet_flag",gcc_options,x_quiet_flag> x_quiet_flag;
	 generic_field_name <"x_report_times",gcc_options,x_report_times> x_report_times;
	 generic_field_name <"x_flag_undef",gcc_options,x_flag_undef> x_flag_undef;
	 generic_field_name <"x_verbose_flag",gcc_options,x_verbose_flag> x_verbose_flag;
	 generic_field_name <"x_version_flag",gcc_options,x_version_flag> x_version_flag;
	 generic_field_name <"x_inhibit_warnings",gcc_options,x_inhibit_warnings> x_inhibit_warnings;
	 generic_field_name <"x_wrapper_string",gcc_options,x_wrapper_string> x_wrapper_string;
	 generic_field_name <"x_VAR_malign_functions_",gcc_options,x_VAR_malign_functions_> x_VAR_malign_functions_;
	 generic_field_name <"x_VAR_malign_jumps_",gcc_options,x_VAR_malign_jumps_> x_VAR_malign_jumps_;
	 generic_field_name <"x_VAR_malign_loops_",gcc_options,x_VAR_malign_loops_> x_VAR_malign_loops_;
	 generic_field_name <"x_VAR_mpc32",gcc_options,x_VAR_mpc32> x_VAR_mpc32;
	 generic_field_name <"x_VAR_mpc64",gcc_options,x_VAR_mpc64> x_VAR_mpc64;
	 generic_field_name <"x_VAR_mpc80",gcc_options,x_VAR_mpc80> x_VAR_mpc80;
	 generic_field_name <"frontend_set_flag_associative_math",gcc_options,frontend_set_flag_associative_math> frontend_set_flag_associative_math;
	 generic_field_name <"frontend_set_flag_cx_limited_range",gcc_options,frontend_set_flag_cx_limited_range> frontend_set_flag_cx_limited_range;
	 generic_field_name <"frontend_set_flag_finite_math_only",gcc_options,frontend_set_flag_finite_math_only> frontend_set_flag_finite_math_only;
	 generic_field_name <"frontend_set_flag_errno_math",gcc_options,frontend_set_flag_errno_math> frontend_set_flag_errno_math;
	 generic_field_name <"frontend_set_flag_reciprocal_math",gcc_options,frontend_set_flag_reciprocal_math> frontend_set_flag_reciprocal_math;
	 generic_field_name <"frontend_set_flag_rounding_math",gcc_options,frontend_set_flag_rounding_math> frontend_set_flag_rounding_math;
	 generic_field_name <"frontend_set_flag_signaling_nans",gcc_options,frontend_set_flag_signaling_nans> frontend_set_flag_signaling_nans;
	 generic_field_name <"frontend_set_flag_signed_zeros",gcc_options,frontend_set_flag_signed_zeros> frontend_set_flag_signed_zeros;
	 generic_field_name <"frontend_set_flag_trapping_math",gcc_options,frontend_set_flag_trapping_math> frontend_set_flag_trapping_math;
	 generic_field_name <"frontend_set_flag_unsafe_math_optimizations",gcc_options,frontend_set_flag_unsafe_math_optimizations> frontend_set_flag_unsafe_math_optimizations;
}; 
class CLS_425_cl_optimization{ 
	 generic_class_name <"cl_optimization",cl_optimization> the_class_name;
	 generic_field_name <"x_align_functions",cl_optimization,x_align_functions> x_align_functions;
	 generic_field_name <"x_align_jumps",cl_optimization,x_align_jumps> x_align_jumps;
	 generic_field_name <"x_align_labels",cl_optimization,x_align_labels> x_align_labels;
	 generic_field_name <"x_align_loops",cl_optimization,x_align_loops> x_align_loops;
	 generic_field_name <"x_flag_sched_stalled_insns",cl_optimization,x_flag_sched_stalled_insns> x_flag_sched_stalled_insns;
	 generic_field_name <"x_flag_sched_stalled_insns_dep",cl_optimization,x_flag_sched_stalled_insns_dep> x_flag_sched_stalled_insns_dep;
	 generic_field_name <"x_flag_fp_contract_mode",cl_optimization,x_flag_fp_contract_mode> x_flag_fp_contract_mode;
	 generic_field_name <"x_optimize",cl_optimization,x_optimize> x_optimize;
	 generic_field_name <"x_optimize_size",cl_optimization,x_optimize_size> x_optimize_size;
	 generic_field_name <"x_flag_asynchronous_unwind_tables",cl_optimization,x_flag_asynchronous_unwind_tables> x_flag_asynchronous_unwind_tables;
	 generic_field_name <"x_flag_branch_on_count_reg",cl_optimization,x_flag_branch_on_count_reg> x_flag_branch_on_count_reg;
	 generic_field_name <"x_flag_branch_probabilities",cl_optimization,x_flag_branch_probabilities> x_flag_branch_probabilities;
	 generic_field_name <"x_flag_branch_target_load_optimize",cl_optimization,x_flag_branch_target_load_optimize> x_flag_branch_target_load_optimize;
	 generic_field_name <"x_flag_branch_target_load_optimize2",cl_optimization,x_flag_branch_target_load_optimize2> x_flag_branch_target_load_optimize2;
	 generic_field_name <"x_flag_btr_bb_exclusive",cl_optimization,x_flag_btr_bb_exclusive> x_flag_btr_bb_exclusive;
	 generic_field_name <"x_flag_caller_saves",cl_optimization,x_flag_caller_saves> x_flag_caller_saves;
	 generic_field_name <"x_flag_combine_stack_adjustments",cl_optimization,x_flag_combine_stack_adjustments> x_flag_combine_stack_adjustments;
	 generic_field_name <"x_flag_no_common",cl_optimization,x_flag_no_common> x_flag_no_common;
	 generic_field_name <"x_flag_compare_elim_after_reload",cl_optimization,x_flag_compare_elim_after_reload> x_flag_compare_elim_after_reload;
	 generic_field_name <"x_flag_conserve_stack",cl_optimization,x_flag_conserve_stack> x_flag_conserve_stack;
	 generic_field_name <"x_flag_cprop_registers",cl_optimization,x_flag_cprop_registers> x_flag_cprop_registers;
	 generic_field_name <"x_flag_crossjumping",cl_optimization,x_flag_crossjumping> x_flag_crossjumping;
	 generic_field_name <"x_flag_cse_follow_jumps",cl_optimization,x_flag_cse_follow_jumps> x_flag_cse_follow_jumps;
	 generic_field_name <"x_flag_cx_fortran_rules",cl_optimization,x_flag_cx_fortran_rules> x_flag_cx_fortran_rules;
	 generic_field_name <"x_flag_cx_limited_range",cl_optimization,x_flag_cx_limited_range> x_flag_cx_limited_range;
	 generic_field_name <"x_flag_data_sections",cl_optimization,x_flag_data_sections> x_flag_data_sections;
	 generic_field_name <"x_flag_dce",cl_optimization,x_flag_dce> x_flag_dce;
	 generic_field_name <"x_flag_defer_pop",cl_optimization,x_flag_defer_pop> x_flag_defer_pop;
	 generic_field_name <"x_flag_delayed_branch",cl_optimization,x_flag_delayed_branch> x_flag_delayed_branch;
	 generic_field_name <"x_flag_delete_null_pointer_checks",cl_optimization,x_flag_delete_null_pointer_checks> x_flag_delete_null_pointer_checks;
	 generic_field_name <"x_flag_devirtualize",cl_optimization,x_flag_devirtualize> x_flag_devirtualize;
	 generic_field_name <"x_flag_dse",cl_optimization,x_flag_dse> x_flag_dse;
	 generic_field_name <"x_flag_early_inlining",cl_optimization,x_flag_early_inlining> x_flag_early_inlining;
	 generic_field_name <"x_flag_exceptions",cl_optimization,x_flag_exceptions> x_flag_exceptions;
	 generic_field_name <"x_flag_expensive_optimizations",cl_optimization,x_flag_expensive_optimizations> x_flag_expensive_optimizations;
	 generic_field_name <"x_flag_finite_math_only",cl_optimization,x_flag_finite_math_only> x_flag_finite_math_only;
	 generic_field_name <"x_flag_float_store",cl_optimization,x_flag_float_store> x_flag_float_store;
	 generic_field_name <"x_flag_forward_propagate",cl_optimization,x_flag_forward_propagate> x_flag_forward_propagate;
	 generic_field_name <"x_flag_gcse",cl_optimization,x_flag_gcse> x_flag_gcse;
	 generic_field_name <"x_flag_gcse_after_reload",cl_optimization,x_flag_gcse_after_reload> x_flag_gcse_after_reload;
	 generic_field_name <"x_flag_gcse_las",cl_optimization,x_flag_gcse_las> x_flag_gcse_las;
	 generic_field_name <"x_flag_gcse_lm",cl_optimization,x_flag_gcse_lm> x_flag_gcse_lm;
	 generic_field_name <"x_flag_gcse_sm",cl_optimization,x_flag_gcse_sm> x_flag_gcse_sm;
	 generic_field_name <"x_flag_graphite_identity",cl_optimization,x_flag_graphite_identity> x_flag_graphite_identity;
	 generic_field_name <"x_flag_guess_branch_prob",cl_optimization,x_flag_guess_branch_prob> x_flag_guess_branch_prob;
	 generic_field_name <"x_flag_if_conversion",cl_optimization,x_flag_if_conversion> x_flag_if_conversion;
	 generic_field_name <"x_flag_if_conversion2",cl_optimization,x_flag_if_conversion2> x_flag_if_conversion2;
	 generic_field_name <"x_flag_inline_atomics",cl_optimization,x_flag_inline_atomics> x_flag_inline_atomics;
	 generic_field_name <"x_flag_inline_functions",cl_optimization,x_flag_inline_functions> x_flag_inline_functions;
	 generic_field_name <"x_flag_inline_functions_called_once",cl_optimization,x_flag_inline_functions_called_once> x_flag_inline_functions_called_once;
	 generic_field_name <"x_flag_inline_small_functions",cl_optimization,x_flag_inline_small_functions> x_flag_inline_small_functions;
	 generic_field_name <"x_flag_ipa_cp",cl_optimization,x_flag_ipa_cp> x_flag_ipa_cp;
	 generic_field_name <"x_flag_ipa_cp_clone",cl_optimization,x_flag_ipa_cp_clone> x_flag_ipa_cp_clone;
	 generic_field_name <"x_flag_ipa_matrix_reorg",cl_optimization,x_flag_ipa_matrix_reorg> x_flag_ipa_matrix_reorg;
	 generic_field_name <"x_flag_ipa_profile",cl_optimization,x_flag_ipa_profile> x_flag_ipa_profile;
	 generic_field_name <"x_flag_ipa_pta",cl_optimization,x_flag_ipa_pta> x_flag_ipa_pta;
	 generic_field_name <"x_flag_ipa_pure_const",cl_optimization,x_flag_ipa_pure_const> x_flag_ipa_pure_const;
	 generic_field_name <"x_flag_ipa_reference",cl_optimization,x_flag_ipa_reference> x_flag_ipa_reference;
	 generic_field_name <"x_flag_ipa_sra",cl_optimization,x_flag_ipa_sra> x_flag_ipa_sra;
	 generic_field_name <"x_flag_ivopts",cl_optimization,x_flag_ivopts> x_flag_ivopts;
	 generic_field_name <"x_flag_jump_tables",cl_optimization,x_flag_jump_tables> x_flag_jump_tables;
	 generic_field_name <"x_flag_loop_block",cl_optimization,x_flag_loop_block> x_flag_loop_block;
	 generic_field_name <"x_flag_loop_flatten",cl_optimization,x_flag_loop_flatten> x_flag_loop_flatten;
	 generic_field_name <"x_flag_loop_interchange",cl_optimization,x_flag_loop_interchange> x_flag_loop_interchange;
	 generic_field_name <"x_flag_loop_parallelize_all",cl_optimization,x_flag_loop_parallelize_all> x_flag_loop_parallelize_all;
	 generic_field_name <"x_flag_loop_strip_mine",cl_optimization,x_flag_loop_strip_mine> x_flag_loop_strip_mine;
	 generic_field_name <"x_flag_errno_math",cl_optimization,x_flag_errno_math> x_flag_errno_math;
	 generic_field_name <"x_flag_merge_constants",cl_optimization,x_flag_merge_constants> x_flag_merge_constants;
	 generic_field_name <"x_flag_modulo_sched",cl_optimization,x_flag_modulo_sched> x_flag_modulo_sched;
	 generic_field_name <"x_flag_move_loop_invariants",cl_optimization,x_flag_move_loop_invariants> x_flag_move_loop_invariants;
	 generic_field_name <"x_flag_non_call_exceptions",cl_optimization,x_flag_non_call_exceptions> x_flag_non_call_exceptions;
	 generic_field_name <"x_flag_nothrow_opt",cl_optimization,x_flag_nothrow_opt> x_flag_nothrow_opt;
	 generic_field_name <"x_flag_omit_frame_pointer",cl_optimization,x_flag_omit_frame_pointer> x_flag_omit_frame_pointer;
	 generic_field_name <"x_flag_regmove",cl_optimization,x_flag_regmove> x_flag_regmove;
	 generic_field_name <"x_flag_optimize_sibling_calls",cl_optimization,x_flag_optimize_sibling_calls> x_flag_optimize_sibling_calls;
	 generic_field_name <"x_flag_optimize_strlen",cl_optimization,x_flag_optimize_strlen> x_flag_optimize_strlen;
	 generic_field_name <"x_flag_pack_struct",cl_optimization,x_flag_pack_struct> x_flag_pack_struct;
	 generic_field_name <"x_flag_peel_loops",cl_optimization,x_flag_peel_loops> x_flag_peel_loops;
	 generic_field_name <"x_flag_no_peephole",cl_optimization,x_flag_no_peephole> x_flag_no_peephole;
	 generic_field_name <"x_flag_peephole2",cl_optimization,x_flag_peephole2> x_flag_peephole2;
	 generic_field_name <"x_flag_predictive_commoning",cl_optimization,x_flag_predictive_commoning> x_flag_predictive_commoning;
	 generic_field_name <"x_flag_prefetch_loop_arrays",cl_optimization,x_flag_prefetch_loop_arrays> x_flag_prefetch_loop_arrays;
	 generic_field_name <"x_flag_pcc_struct_return",cl_optimization,x_flag_pcc_struct_return> x_flag_pcc_struct_return;
	 generic_field_name <"x_flag_rename_registers",cl_optimization,x_flag_rename_registers> x_flag_rename_registers;
	 generic_field_name <"x_flag_reorder_blocks",cl_optimization,x_flag_reorder_blocks> x_flag_reorder_blocks;
	 generic_field_name <"x_flag_reorder_blocks_and_partition",cl_optimization,x_flag_reorder_blocks_and_partition> x_flag_reorder_blocks_and_partition;
	 generic_field_name <"x_flag_reorder_functions",cl_optimization,x_flag_reorder_functions> x_flag_reorder_functions;
	 generic_field_name <"x_flag_rerun_cse_after_loop",cl_optimization,x_flag_rerun_cse_after_loop> x_flag_rerun_cse_after_loop;
	 generic_field_name <"x_flag_resched_modulo_sched",cl_optimization,x_flag_resched_modulo_sched> x_flag_resched_modulo_sched;
	 generic_field_name <"x_flag_rounding_math",cl_optimization,x_flag_rounding_math> x_flag_rounding_math;
	 generic_field_name <"x_flag_rtti",cl_optimization,x_flag_rtti> x_flag_rtti;
	 generic_field_name <"x_flag_sched_critical_path_heuristic",cl_optimization,x_flag_sched_critical_path_heuristic> x_flag_sched_critical_path_heuristic;
	 generic_field_name <"x_flag_sched_dep_count_heuristic",cl_optimization,x_flag_sched_dep_count_heuristic> x_flag_sched_dep_count_heuristic;
	 generic_field_name <"x_flag_sched_group_heuristic",cl_optimization,x_flag_sched_group_heuristic> x_flag_sched_group_heuristic;
	 generic_field_name <"x_flag_schedule_interblock",cl_optimization,x_flag_schedule_interblock> x_flag_schedule_interblock;
	 generic_field_name <"x_flag_sched_last_insn_heuristic",cl_optimization,x_flag_sched_last_insn_heuristic> x_flag_sched_last_insn_heuristic;
	 generic_field_name <"x_flag_sched_pressure",cl_optimization,x_flag_sched_pressure> x_flag_sched_pressure;
	 generic_field_name <"x_flag_sched_rank_heuristic",cl_optimization,x_flag_sched_rank_heuristic> x_flag_sched_rank_heuristic;
	 generic_field_name <"x_flag_schedule_speculative",cl_optimization,x_flag_schedule_speculative> x_flag_schedule_speculative;
	 generic_field_name <"x_flag_sched_spec_insn_heuristic",cl_optimization,x_flag_sched_spec_insn_heuristic> x_flag_sched_spec_insn_heuristic;
	 generic_field_name <"x_flag_schedule_speculative_load",cl_optimization,x_flag_schedule_speculative_load> x_flag_schedule_speculative_load;
	 generic_field_name <"x_flag_schedule_speculative_load_dangerous",cl_optimization,x_flag_schedule_speculative_load_dangerous> x_flag_schedule_speculative_load_dangerous;
	 generic_field_name <"x_flag_sched2_use_superblocks",cl_optimization,x_flag_sched2_use_superblocks> x_flag_sched2_use_superblocks;
	 generic_field_name <"x_flag_schedule_insns",cl_optimization,x_flag_schedule_insns> x_flag_schedule_insns;
	 generic_field_name <"x_flag_schedule_insns_after_reload",cl_optimization,x_flag_schedule_insns_after_reload> x_flag_schedule_insns_after_reload;
	 generic_field_name <"x_flag_section_anchors",cl_optimization,x_flag_section_anchors> x_flag_section_anchors;
	 generic_field_name <"x_flag_sel_sched_pipelining",cl_optimization,x_flag_sel_sched_pipelining> x_flag_sel_sched_pipelining;
	 generic_field_name <"x_flag_sel_sched_pipelining_outer_loops",cl_optimization,x_flag_sel_sched_pipelining_outer_loops> x_flag_sel_sched_pipelining_outer_loops;
	 generic_field_name <"x_flag_sel_sched_reschedule_pipelined",cl_optimization,x_flag_sel_sched_reschedule_pipelined> x_flag_sel_sched_reschedule_pipelined;
	 generic_field_name <"x_flag_selective_scheduling",cl_optimization,x_flag_selective_scheduling> x_flag_selective_scheduling;
	 generic_field_name <"x_flag_selective_scheduling2",cl_optimization,x_flag_selective_scheduling2> x_flag_selective_scheduling2;
	 generic_field_name <"x_flag_short_double",cl_optimization,x_flag_short_double> x_flag_short_double;
	 generic_field_name <"x_flag_short_enums",cl_optimization,x_flag_short_enums> x_flag_short_enums;
	 generic_field_name <"x_flag_short_wchar",cl_optimization,x_flag_short_wchar> x_flag_short_wchar;
	 generic_field_name <"x_flag_shrink_wrap",cl_optimization,x_flag_shrink_wrap> x_flag_shrink_wrap;
	 generic_field_name <"x_flag_signaling_nans",cl_optimization,x_flag_signaling_nans> x_flag_signaling_nans;
	 generic_field_name <"x_flag_signed_zeros",cl_optimization,x_flag_signed_zeros> x_flag_signed_zeros;
	 generic_field_name <"x_flag_single_precision_constant",cl_optimization,x_flag_single_precision_constant> x_flag_single_precision_constant;
	 generic_field_name <"x_flag_split_ivs_in_unroller",cl_optimization,x_flag_split_ivs_in_unroller> x_flag_split_ivs_in_unroller;
	 generic_field_name <"x_flag_split_wide_types",cl_optimization,x_flag_split_wide_types> x_flag_split_wide_types;
	 generic_field_name <"x_flag_strict_aliasing",cl_optimization,x_flag_strict_aliasing> x_flag_strict_aliasing;
	 generic_field_name <"x_flag_strict_enums",cl_optimization,x_flag_strict_enums> x_flag_strict_enums;
	 generic_field_name <"x_flag_thread_jumps",cl_optimization,x_flag_thread_jumps> x_flag_thread_jumps;
	 generic_field_name <"x_flag_threadsafe_statics",cl_optimization,x_flag_threadsafe_statics> x_flag_threadsafe_statics;
	 generic_field_name <"x_flag_toplevel_reorder",cl_optimization,x_flag_toplevel_reorder> x_flag_toplevel_reorder;
	 generic_field_name <"x_flag_trapping_math",cl_optimization,x_flag_trapping_math> x_flag_trapping_math;
	 generic_field_name <"x_flag_trapv",cl_optimization,x_flag_trapv> x_flag_trapv;
	 generic_field_name <"x_flag_tree_bit_ccp",cl_optimization,x_flag_tree_bit_ccp> x_flag_tree_bit_ccp;
	 generic_field_name <"x_flag_tree_builtin_call_dce",cl_optimization,x_flag_tree_builtin_call_dce> x_flag_tree_builtin_call_dce;
	 generic_field_name <"x_flag_tree_ccp",cl_optimization,x_flag_tree_ccp> x_flag_tree_ccp;
	 generic_field_name <"x_flag_tree_ch",cl_optimization,x_flag_tree_ch> x_flag_tree_ch;
	 generic_field_name <"x_flag_tree_copy_prop",cl_optimization,x_flag_tree_copy_prop> x_flag_tree_copy_prop;
	 generic_field_name <"x_flag_tree_copyrename",cl_optimization,x_flag_tree_copyrename> x_flag_tree_copyrename;
	 generic_field_name <"x_flag_tree_cselim",cl_optimization,x_flag_tree_cselim> x_flag_tree_cselim;
	 generic_field_name <"x_flag_tree_dce",cl_optimization,x_flag_tree_dce> x_flag_tree_dce;
	 generic_field_name <"x_flag_tree_dom",cl_optimization,x_flag_tree_dom> x_flag_tree_dom;
	 generic_field_name <"x_flag_tree_dse",cl_optimization,x_flag_tree_dse> x_flag_tree_dse;
	 generic_field_name <"x_flag_tree_forwprop",cl_optimization,x_flag_tree_forwprop> x_flag_tree_forwprop;
	 generic_field_name <"x_flag_tree_fre",cl_optimization,x_flag_tree_fre> x_flag_tree_fre;
	 generic_field_name <"x_flag_tree_loop_distribute_patterns",cl_optimization,x_flag_tree_loop_distribute_patterns> x_flag_tree_loop_distribute_patterns;
	 generic_field_name <"x_flag_tree_loop_distribution",cl_optimization,x_flag_tree_loop_distribution> x_flag_tree_loop_distribution;
	 generic_field_name <"x_flag_tree_loop_if_convert",cl_optimization,x_flag_tree_loop_if_convert> x_flag_tree_loop_if_convert;
	 generic_field_name <"x_flag_tree_loop_if_convert_stores",cl_optimization,x_flag_tree_loop_if_convert_stores> x_flag_tree_loop_if_convert_stores;
	 generic_field_name <"x_flag_tree_loop_im",cl_optimization,x_flag_tree_loop_im> x_flag_tree_loop_im;
	 generic_field_name <"x_flag_tree_loop_ivcanon",cl_optimization,x_flag_tree_loop_ivcanon> x_flag_tree_loop_ivcanon;
	 generic_field_name <"x_flag_tree_loop_optimize",cl_optimization,x_flag_tree_loop_optimize> x_flag_tree_loop_optimize;
	 generic_field_name <"x_flag_tree_live_range_split",cl_optimization,x_flag_tree_live_range_split> x_flag_tree_live_range_split;
	 generic_field_name <"x_flag_tree_partial_pre",cl_optimization,x_flag_tree_partial_pre> x_flag_tree_partial_pre;
	 generic_field_name <"x_flag_tree_phiprop",cl_optimization,x_flag_tree_phiprop> x_flag_tree_phiprop;
	 generic_field_name <"x_flag_tree_pre",cl_optimization,x_flag_tree_pre> x_flag_tree_pre;
	 generic_field_name <"x_flag_tree_pta",cl_optimization,x_flag_tree_pta> x_flag_tree_pta;
	 generic_field_name <"x_flag_tree_reassoc",cl_optimization,x_flag_tree_reassoc> x_flag_tree_reassoc;
	 generic_field_name <"x_flag_tree_scev_cprop",cl_optimization,x_flag_tree_scev_cprop> x_flag_tree_scev_cprop;
	 generic_field_name <"x_flag_tree_sink",cl_optimization,x_flag_tree_sink> x_flag_tree_sink;
	 generic_field_name <"x_flag_tree_slp_vectorize",cl_optimization,x_flag_tree_slp_vectorize> x_flag_tree_slp_vectorize;
	 generic_field_name <"x_flag_tree_sra",cl_optimization,x_flag_tree_sra> x_flag_tree_sra;
	 generic_field_name <"x_flag_tree_switch_conversion",cl_optimization,x_flag_tree_switch_conversion> x_flag_tree_switch_conversion;
	 generic_field_name <"x_flag_tree_tail_merge",cl_optimization,x_flag_tree_tail_merge> x_flag_tree_tail_merge;
	 generic_field_name <"x_flag_tree_ter",cl_optimization,x_flag_tree_ter> x_flag_tree_ter;
	 generic_field_name <"x_flag_tree_vect_loop_version",cl_optimization,x_flag_tree_vect_loop_version> x_flag_tree_vect_loop_version;
	 generic_field_name <"x_flag_tree_vectorize",cl_optimization,x_flag_tree_vectorize> x_flag_tree_vectorize;
	 generic_field_name <"x_flag_tree_vrp",cl_optimization,x_flag_tree_vrp> x_flag_tree_vrp;
	 generic_field_name <"x_flag_unit_at_a_time",cl_optimization,x_flag_unit_at_a_time> x_flag_unit_at_a_time;
	 generic_field_name <"x_flag_unroll_all_loops",cl_optimization,x_flag_unroll_all_loops> x_flag_unroll_all_loops;
	 generic_field_name <"x_flag_unroll_loops",cl_optimization,x_flag_unroll_loops> x_flag_unroll_loops;
	 generic_field_name <"x_flag_unsafe_loop_optimizations",cl_optimization,x_flag_unsafe_loop_optimizations> x_flag_unsafe_loop_optimizations;
	 generic_field_name <"x_flag_unsafe_math_optimizations",cl_optimization,x_flag_unsafe_math_optimizations> x_flag_unsafe_math_optimizations;
	 generic_field_name <"x_flag_unswitch_loops",cl_optimization,x_flag_unswitch_loops> x_flag_unswitch_loops;
	 generic_field_name <"x_flag_unwind_tables",cl_optimization,x_flag_unwind_tables> x_flag_unwind_tables;
	 generic_field_name <"x_flag_var_tracking",cl_optimization,x_flag_var_tracking> x_flag_var_tracking;
	 generic_field_name <"x_flag_var_tracking_assignments",cl_optimization,x_flag_var_tracking_assignments> x_flag_var_tracking_assignments;
	 generic_field_name <"x_flag_var_tracking_assignments_toggle",cl_optimization,x_flag_var_tracking_assignments_toggle> x_flag_var_tracking_assignments_toggle;
	 generic_field_name <"x_flag_var_tracking_uninit",cl_optimization,x_flag_var_tracking_uninit> x_flag_var_tracking_uninit;
	 generic_field_name <"x_flag_variable_expansion_in_unroller",cl_optimization,x_flag_variable_expansion_in_unroller> x_flag_variable_expansion_in_unroller;
	 generic_field_name <"x_flag_vect_cost_model",cl_optimization,x_flag_vect_cost_model> x_flag_vect_cost_model;
	 generic_field_name <"x_flag_value_profile_transformations",cl_optimization,x_flag_value_profile_transformations> x_flag_value_profile_transformations;
	 generic_field_name <"x_flag_web",cl_optimization,x_flag_web> x_flag_web;
	 generic_field_name <"x_flag_whole_program",cl_optimization,x_flag_whole_program> x_flag_whole_program;
	 generic_field_name <"x_flag_wrapv",cl_optimization,x_flag_wrapv> x_flag_wrapv;
}; 
class CLS_426_cl_optimization{ 
	 generic_class_name <"cl_optimization",cl_optimization> the_class_name;
	 generic_field_name <"x_align_functions",cl_optimization,x_align_functions> x_align_functions;
	 generic_field_name <"x_align_jumps",cl_optimization,x_align_jumps> x_align_jumps;
	 generic_field_name <"x_align_labels",cl_optimization,x_align_labels> x_align_labels;
	 generic_field_name <"x_align_loops",cl_optimization,x_align_loops> x_align_loops;
	 generic_field_name <"x_flag_sched_stalled_insns",cl_optimization,x_flag_sched_stalled_insns> x_flag_sched_stalled_insns;
	 generic_field_name <"x_flag_sched_stalled_insns_dep",cl_optimization,x_flag_sched_stalled_insns_dep> x_flag_sched_stalled_insns_dep;
	 generic_field_name <"x_flag_fp_contract_mode",cl_optimization,x_flag_fp_contract_mode> x_flag_fp_contract_mode;
	 generic_field_name <"x_optimize",cl_optimization,x_optimize> x_optimize;
	 generic_field_name <"x_optimize_size",cl_optimization,x_optimize_size> x_optimize_size;
	 generic_field_name <"x_flag_asynchronous_unwind_tables",cl_optimization,x_flag_asynchronous_unwind_tables> x_flag_asynchronous_unwind_tables;
	 generic_field_name <"x_flag_branch_on_count_reg",cl_optimization,x_flag_branch_on_count_reg> x_flag_branch_on_count_reg;
	 generic_field_name <"x_flag_branch_probabilities",cl_optimization,x_flag_branch_probabilities> x_flag_branch_probabilities;
	 generic_field_name <"x_flag_branch_target_load_optimize",cl_optimization,x_flag_branch_target_load_optimize> x_flag_branch_target_load_optimize;
	 generic_field_name <"x_flag_branch_target_load_optimize2",cl_optimization,x_flag_branch_target_load_optimize2> x_flag_branch_target_load_optimize2;
	 generic_field_name <"x_flag_btr_bb_exclusive",cl_optimization,x_flag_btr_bb_exclusive> x_flag_btr_bb_exclusive;
	 generic_field_name <"x_flag_caller_saves",cl_optimization,x_flag_caller_saves> x_flag_caller_saves;
	 generic_field_name <"x_flag_combine_stack_adjustments",cl_optimization,x_flag_combine_stack_adjustments> x_flag_combine_stack_adjustments;
	 generic_field_name <"x_flag_no_common",cl_optimization,x_flag_no_common> x_flag_no_common;
	 generic_field_name <"x_flag_compare_elim_after_reload",cl_optimization,x_flag_compare_elim_after_reload> x_flag_compare_elim_after_reload;
	 generic_field_name <"x_flag_conserve_stack",cl_optimization,x_flag_conserve_stack> x_flag_conserve_stack;
	 generic_field_name <"x_flag_cprop_registers",cl_optimization,x_flag_cprop_registers> x_flag_cprop_registers;
	 generic_field_name <"x_flag_crossjumping",cl_optimization,x_flag_crossjumping> x_flag_crossjumping;
	 generic_field_name <"x_flag_cse_follow_jumps",cl_optimization,x_flag_cse_follow_jumps> x_flag_cse_follow_jumps;
	 generic_field_name <"x_flag_cx_fortran_rules",cl_optimization,x_flag_cx_fortran_rules> x_flag_cx_fortran_rules;
	 generic_field_name <"x_flag_cx_limited_range",cl_optimization,x_flag_cx_limited_range> x_flag_cx_limited_range;
	 generic_field_name <"x_flag_data_sections",cl_optimization,x_flag_data_sections> x_flag_data_sections;
	 generic_field_name <"x_flag_dce",cl_optimization,x_flag_dce> x_flag_dce;
	 generic_field_name <"x_flag_defer_pop",cl_optimization,x_flag_defer_pop> x_flag_defer_pop;
	 generic_field_name <"x_flag_delayed_branch",cl_optimization,x_flag_delayed_branch> x_flag_delayed_branch;
	 generic_field_name <"x_flag_delete_null_pointer_checks",cl_optimization,x_flag_delete_null_pointer_checks> x_flag_delete_null_pointer_checks;
	 generic_field_name <"x_flag_devirtualize",cl_optimization,x_flag_devirtualize> x_flag_devirtualize;
	 generic_field_name <"x_flag_dse",cl_optimization,x_flag_dse> x_flag_dse;
	 generic_field_name <"x_flag_early_inlining",cl_optimization,x_flag_early_inlining> x_flag_early_inlining;
	 generic_field_name <"x_flag_exceptions",cl_optimization,x_flag_exceptions> x_flag_exceptions;
	 generic_field_name <"x_flag_expensive_optimizations",cl_optimization,x_flag_expensive_optimizations> x_flag_expensive_optimizations;
	 generic_field_name <"x_flag_finite_math_only",cl_optimization,x_flag_finite_math_only> x_flag_finite_math_only;
	 generic_field_name <"x_flag_float_store",cl_optimization,x_flag_float_store> x_flag_float_store;
	 generic_field_name <"x_flag_forward_propagate",cl_optimization,x_flag_forward_propagate> x_flag_forward_propagate;
	 generic_field_name <"x_flag_gcse",cl_optimization,x_flag_gcse> x_flag_gcse;
	 generic_field_name <"x_flag_gcse_after_reload",cl_optimization,x_flag_gcse_after_reload> x_flag_gcse_after_reload;
	 generic_field_name <"x_flag_gcse_las",cl_optimization,x_flag_gcse_las> x_flag_gcse_las;
	 generic_field_name <"x_flag_gcse_lm",cl_optimization,x_flag_gcse_lm> x_flag_gcse_lm;
	 generic_field_name <"x_flag_gcse_sm",cl_optimization,x_flag_gcse_sm> x_flag_gcse_sm;
	 generic_field_name <"x_flag_graphite_identity",cl_optimization,x_flag_graphite_identity> x_flag_graphite_identity;
	 generic_field_name <"x_flag_guess_branch_prob",cl_optimization,x_flag_guess_branch_prob> x_flag_guess_branch_prob;
	 generic_field_name <"x_flag_if_conversion",cl_optimization,x_flag_if_conversion> x_flag_if_conversion;
	 generic_field_name <"x_flag_if_conversion2",cl_optimization,x_flag_if_conversion2> x_flag_if_conversion2;
	 generic_field_name <"x_flag_inline_atomics",cl_optimization,x_flag_inline_atomics> x_flag_inline_atomics;
	 generic_field_name <"x_flag_inline_functions",cl_optimization,x_flag_inline_functions> x_flag_inline_functions;
	 generic_field_name <"x_flag_inline_functions_called_once",cl_optimization,x_flag_inline_functions_called_once> x_flag_inline_functions_called_once;
	 generic_field_name <"x_flag_inline_small_functions",cl_optimization,x_flag_inline_small_functions> x_flag_inline_small_functions;
	 generic_field_name <"x_flag_ipa_cp",cl_optimization,x_flag_ipa_cp> x_flag_ipa_cp;
	 generic_field_name <"x_flag_ipa_cp_clone",cl_optimization,x_flag_ipa_cp_clone> x_flag_ipa_cp_clone;
	 generic_field_name <"x_flag_ipa_matrix_reorg",cl_optimization,x_flag_ipa_matrix_reorg> x_flag_ipa_matrix_reorg;
	 generic_field_name <"x_flag_ipa_profile",cl_optimization,x_flag_ipa_profile> x_flag_ipa_profile;
	 generic_field_name <"x_flag_ipa_pta",cl_optimization,x_flag_ipa_pta> x_flag_ipa_pta;
	 generic_field_name <"x_flag_ipa_pure_const",cl_optimization,x_flag_ipa_pure_const> x_flag_ipa_pure_const;
	 generic_field_name <"x_flag_ipa_reference",cl_optimization,x_flag_ipa_reference> x_flag_ipa_reference;
	 generic_field_name <"x_flag_ipa_sra",cl_optimization,x_flag_ipa_sra> x_flag_ipa_sra;
	 generic_field_name <"x_flag_ivopts",cl_optimization,x_flag_ivopts> x_flag_ivopts;
	 generic_field_name <"x_flag_jump_tables",cl_optimization,x_flag_jump_tables> x_flag_jump_tables;
	 generic_field_name <"x_flag_loop_block",cl_optimization,x_flag_loop_block> x_flag_loop_block;
	 generic_field_name <"x_flag_loop_flatten",cl_optimization,x_flag_loop_flatten> x_flag_loop_flatten;
	 generic_field_name <"x_flag_loop_interchange",cl_optimization,x_flag_loop_interchange> x_flag_loop_interchange;
	 generic_field_name <"x_flag_loop_parallelize_all",cl_optimization,x_flag_loop_parallelize_all> x_flag_loop_parallelize_all;
	 generic_field_name <"x_flag_loop_strip_mine",cl_optimization,x_flag_loop_strip_mine> x_flag_loop_strip_mine;
	 generic_field_name <"x_flag_errno_math",cl_optimization,x_flag_errno_math> x_flag_errno_math;
	 generic_field_name <"x_flag_merge_constants",cl_optimization,x_flag_merge_constants> x_flag_merge_constants;
	 generic_field_name <"x_flag_modulo_sched",cl_optimization,x_flag_modulo_sched> x_flag_modulo_sched;
	 generic_field_name <"x_flag_move_loop_invariants",cl_optimization,x_flag_move_loop_invariants> x_flag_move_loop_invariants;
	 generic_field_name <"x_flag_non_call_exceptions",cl_optimization,x_flag_non_call_exceptions> x_flag_non_call_exceptions;
	 generic_field_name <"x_flag_nothrow_opt",cl_optimization,x_flag_nothrow_opt> x_flag_nothrow_opt;
	 generic_field_name <"x_flag_omit_frame_pointer",cl_optimization,x_flag_omit_frame_pointer> x_flag_omit_frame_pointer;
	 generic_field_name <"x_flag_regmove",cl_optimization,x_flag_regmove> x_flag_regmove;
	 generic_field_name <"x_flag_optimize_sibling_calls",cl_optimization,x_flag_optimize_sibling_calls> x_flag_optimize_sibling_calls;
	 generic_field_name <"x_flag_optimize_strlen",cl_optimization,x_flag_optimize_strlen> x_flag_optimize_strlen;
	 generic_field_name <"x_flag_pack_struct",cl_optimization,x_flag_pack_struct> x_flag_pack_struct;
	 generic_field_name <"x_flag_peel_loops",cl_optimization,x_flag_peel_loops> x_flag_peel_loops;
	 generic_field_name <"x_flag_no_peephole",cl_optimization,x_flag_no_peephole> x_flag_no_peephole;
	 generic_field_name <"x_flag_peephole2",cl_optimization,x_flag_peephole2> x_flag_peephole2;
	 generic_field_name <"x_flag_predictive_commoning",cl_optimization,x_flag_predictive_commoning> x_flag_predictive_commoning;
	 generic_field_name <"x_flag_prefetch_loop_arrays",cl_optimization,x_flag_prefetch_loop_arrays> x_flag_prefetch_loop_arrays;
	 generic_field_name <"x_flag_pcc_struct_return",cl_optimization,x_flag_pcc_struct_return> x_flag_pcc_struct_return;
	 generic_field_name <"x_flag_rename_registers",cl_optimization,x_flag_rename_registers> x_flag_rename_registers;
	 generic_field_name <"x_flag_reorder_blocks",cl_optimization,x_flag_reorder_blocks> x_flag_reorder_blocks;
	 generic_field_name <"x_flag_reorder_blocks_and_partition",cl_optimization,x_flag_reorder_blocks_and_partition> x_flag_reorder_blocks_and_partition;
	 generic_field_name <"x_flag_reorder_functions",cl_optimization,x_flag_reorder_functions> x_flag_reorder_functions;
	 generic_field_name <"x_flag_rerun_cse_after_loop",cl_optimization,x_flag_rerun_cse_after_loop> x_flag_rerun_cse_after_loop;
	 generic_field_name <"x_flag_resched_modulo_sched",cl_optimization,x_flag_resched_modulo_sched> x_flag_resched_modulo_sched;
	 generic_field_name <"x_flag_rounding_math",cl_optimization,x_flag_rounding_math> x_flag_rounding_math;
	 generic_field_name <"x_flag_rtti",cl_optimization,x_flag_rtti> x_flag_rtti;
	 generic_field_name <"x_flag_sched_critical_path_heuristic",cl_optimization,x_flag_sched_critical_path_heuristic> x_flag_sched_critical_path_heuristic;
	 generic_field_name <"x_flag_sched_dep_count_heuristic",cl_optimization,x_flag_sched_dep_count_heuristic> x_flag_sched_dep_count_heuristic;
	 generic_field_name <"x_flag_sched_group_heuristic",cl_optimization,x_flag_sched_group_heuristic> x_flag_sched_group_heuristic;
	 generic_field_name <"x_flag_schedule_interblock",cl_optimization,x_flag_schedule_interblock> x_flag_schedule_interblock;
	 generic_field_name <"x_flag_sched_last_insn_heuristic",cl_optimization,x_flag_sched_last_insn_heuristic> x_flag_sched_last_insn_heuristic;
	 generic_field_name <"x_flag_sched_pressure",cl_optimization,x_flag_sched_pressure> x_flag_sched_pressure;
	 generic_field_name <"x_flag_sched_rank_heuristic",cl_optimization,x_flag_sched_rank_heuristic> x_flag_sched_rank_heuristic;
	 generic_field_name <"x_flag_schedule_speculative",cl_optimization,x_flag_schedule_speculative> x_flag_schedule_speculative;
	 generic_field_name <"x_flag_sched_spec_insn_heuristic",cl_optimization,x_flag_sched_spec_insn_heuristic> x_flag_sched_spec_insn_heuristic;
	 generic_field_name <"x_flag_schedule_speculative_load",cl_optimization,x_flag_schedule_speculative_load> x_flag_schedule_speculative_load;
	 generic_field_name <"x_flag_schedule_speculative_load_dangerous",cl_optimization,x_flag_schedule_speculative_load_dangerous> x_flag_schedule_speculative_load_dangerous;
	 generic_field_name <"x_flag_sched2_use_superblocks",cl_optimization,x_flag_sched2_use_superblocks> x_flag_sched2_use_superblocks;
	 generic_field_name <"x_flag_schedule_insns",cl_optimization,x_flag_schedule_insns> x_flag_schedule_insns;
	 generic_field_name <"x_flag_schedule_insns_after_reload",cl_optimization,x_flag_schedule_insns_after_reload> x_flag_schedule_insns_after_reload;
	 generic_field_name <"x_flag_section_anchors",cl_optimization,x_flag_section_anchors> x_flag_section_anchors;
	 generic_field_name <"x_flag_sel_sched_pipelining",cl_optimization,x_flag_sel_sched_pipelining> x_flag_sel_sched_pipelining;
	 generic_field_name <"x_flag_sel_sched_pipelining_outer_loops",cl_optimization,x_flag_sel_sched_pipelining_outer_loops> x_flag_sel_sched_pipelining_outer_loops;
	 generic_field_name <"x_flag_sel_sched_reschedule_pipelined",cl_optimization,x_flag_sel_sched_reschedule_pipelined> x_flag_sel_sched_reschedule_pipelined;
	 generic_field_name <"x_flag_selective_scheduling",cl_optimization,x_flag_selective_scheduling> x_flag_selective_scheduling;
	 generic_field_name <"x_flag_selective_scheduling2",cl_optimization,x_flag_selective_scheduling2> x_flag_selective_scheduling2;
	 generic_field_name <"x_flag_short_double",cl_optimization,x_flag_short_double> x_flag_short_double;
	 generic_field_name <"x_flag_short_enums",cl_optimization,x_flag_short_enums> x_flag_short_enums;
	 generic_field_name <"x_flag_short_wchar",cl_optimization,x_flag_short_wchar> x_flag_short_wchar;
	 generic_field_name <"x_flag_shrink_wrap",cl_optimization,x_flag_shrink_wrap> x_flag_shrink_wrap;
	 generic_field_name <"x_flag_signaling_nans",cl_optimization,x_flag_signaling_nans> x_flag_signaling_nans;
	 generic_field_name <"x_flag_signed_zeros",cl_optimization,x_flag_signed_zeros> x_flag_signed_zeros;
	 generic_field_name <"x_flag_single_precision_constant",cl_optimization,x_flag_single_precision_constant> x_flag_single_precision_constant;
	 generic_field_name <"x_flag_split_ivs_in_unroller",cl_optimization,x_flag_split_ivs_in_unroller> x_flag_split_ivs_in_unroller;
	 generic_field_name <"x_flag_split_wide_types",cl_optimization,x_flag_split_wide_types> x_flag_split_wide_types;
	 generic_field_name <"x_flag_strict_aliasing",cl_optimization,x_flag_strict_aliasing> x_flag_strict_aliasing;
	 generic_field_name <"x_flag_strict_enums",cl_optimization,x_flag_strict_enums> x_flag_strict_enums;
	 generic_field_name <"x_flag_thread_jumps",cl_optimization,x_flag_thread_jumps> x_flag_thread_jumps;
	 generic_field_name <"x_flag_threadsafe_statics",cl_optimization,x_flag_threadsafe_statics> x_flag_threadsafe_statics;
	 generic_field_name <"x_flag_toplevel_reorder",cl_optimization,x_flag_toplevel_reorder> x_flag_toplevel_reorder;
	 generic_field_name <"x_flag_trapping_math",cl_optimization,x_flag_trapping_math> x_flag_trapping_math;
	 generic_field_name <"x_flag_trapv",cl_optimization,x_flag_trapv> x_flag_trapv;
	 generic_field_name <"x_flag_tree_bit_ccp",cl_optimization,x_flag_tree_bit_ccp> x_flag_tree_bit_ccp;
	 generic_field_name <"x_flag_tree_builtin_call_dce",cl_optimization,x_flag_tree_builtin_call_dce> x_flag_tree_builtin_call_dce;
	 generic_field_name <"x_flag_tree_ccp",cl_optimization,x_flag_tree_ccp> x_flag_tree_ccp;
	 generic_field_name <"x_flag_tree_ch",cl_optimization,x_flag_tree_ch> x_flag_tree_ch;
	 generic_field_name <"x_flag_tree_copy_prop",cl_optimization,x_flag_tree_copy_prop> x_flag_tree_copy_prop;
	 generic_field_name <"x_flag_tree_copyrename",cl_optimization,x_flag_tree_copyrename> x_flag_tree_copyrename;
	 generic_field_name <"x_flag_tree_cselim",cl_optimization,x_flag_tree_cselim> x_flag_tree_cselim;
	 generic_field_name <"x_flag_tree_dce",cl_optimization,x_flag_tree_dce> x_flag_tree_dce;
	 generic_field_name <"x_flag_tree_dom",cl_optimization,x_flag_tree_dom> x_flag_tree_dom;
	 generic_field_name <"x_flag_tree_dse",cl_optimization,x_flag_tree_dse> x_flag_tree_dse;
	 generic_field_name <"x_flag_tree_forwprop",cl_optimization,x_flag_tree_forwprop> x_flag_tree_forwprop;
	 generic_field_name <"x_flag_tree_fre",cl_optimization,x_flag_tree_fre> x_flag_tree_fre;
	 generic_field_name <"x_flag_tree_loop_distribute_patterns",cl_optimization,x_flag_tree_loop_distribute_patterns> x_flag_tree_loop_distribute_patterns;
	 generic_field_name <"x_flag_tree_loop_distribution",cl_optimization,x_flag_tree_loop_distribution> x_flag_tree_loop_distribution;
	 generic_field_name <"x_flag_tree_loop_if_convert",cl_optimization,x_flag_tree_loop_if_convert> x_flag_tree_loop_if_convert;
	 generic_field_name <"x_flag_tree_loop_if_convert_stores",cl_optimization,x_flag_tree_loop_if_convert_stores> x_flag_tree_loop_if_convert_stores;
	 generic_field_name <"x_flag_tree_loop_im",cl_optimization,x_flag_tree_loop_im> x_flag_tree_loop_im;
	 generic_field_name <"x_flag_tree_loop_ivcanon",cl_optimization,x_flag_tree_loop_ivcanon> x_flag_tree_loop_ivcanon;
	 generic_field_name <"x_flag_tree_loop_optimize",cl_optimization,x_flag_tree_loop_optimize> x_flag_tree_loop_optimize;
	 generic_field_name <"x_flag_tree_live_range_split",cl_optimization,x_flag_tree_live_range_split> x_flag_tree_live_range_split;
	 generic_field_name <"x_flag_tree_partial_pre",cl_optimization,x_flag_tree_partial_pre> x_flag_tree_partial_pre;
	 generic_field_name <"x_flag_tree_phiprop",cl_optimization,x_flag_tree_phiprop> x_flag_tree_phiprop;
	 generic_field_name <"x_flag_tree_pre",cl_optimization,x_flag_tree_pre> x_flag_tree_pre;
	 generic_field_name <"x_flag_tree_pta",cl_optimization,x_flag_tree_pta> x_flag_tree_pta;
	 generic_field_name <"x_flag_tree_reassoc",cl_optimization,x_flag_tree_reassoc> x_flag_tree_reassoc;
	 generic_field_name <"x_flag_tree_scev_cprop",cl_optimization,x_flag_tree_scev_cprop> x_flag_tree_scev_cprop;
	 generic_field_name <"x_flag_tree_sink",cl_optimization,x_flag_tree_sink> x_flag_tree_sink;
	 generic_field_name <"x_flag_tree_slp_vectorize",cl_optimization,x_flag_tree_slp_vectorize> x_flag_tree_slp_vectorize;
	 generic_field_name <"x_flag_tree_sra",cl_optimization,x_flag_tree_sra> x_flag_tree_sra;
	 generic_field_name <"x_flag_tree_switch_conversion",cl_optimization,x_flag_tree_switch_conversion> x_flag_tree_switch_conversion;
	 generic_field_name <"x_flag_tree_tail_merge",cl_optimization,x_flag_tree_tail_merge> x_flag_tree_tail_merge;
	 generic_field_name <"x_flag_tree_ter",cl_optimization,x_flag_tree_ter> x_flag_tree_ter;
	 generic_field_name <"x_flag_tree_vect_loop_version",cl_optimization,x_flag_tree_vect_loop_version> x_flag_tree_vect_loop_version;
	 generic_field_name <"x_flag_tree_vectorize",cl_optimization,x_flag_tree_vectorize> x_flag_tree_vectorize;
	 generic_field_name <"x_flag_tree_vrp",cl_optimization,x_flag_tree_vrp> x_flag_tree_vrp;
	 generic_field_name <"x_flag_unit_at_a_time",cl_optimization,x_flag_unit_at_a_time> x_flag_unit_at_a_time;
	 generic_field_name <"x_flag_unroll_all_loops",cl_optimization,x_flag_unroll_all_loops> x_flag_unroll_all_loops;
	 generic_field_name <"x_flag_unroll_loops",cl_optimization,x_flag_unroll_loops> x_flag_unroll_loops;
	 generic_field_name <"x_flag_unsafe_loop_optimizations",cl_optimization,x_flag_unsafe_loop_optimizations> x_flag_unsafe_loop_optimizations;
	 generic_field_name <"x_flag_unsafe_math_optimizations",cl_optimization,x_flag_unsafe_math_optimizations> x_flag_unsafe_math_optimizations;
	 generic_field_name <"x_flag_unswitch_loops",cl_optimization,x_flag_unswitch_loops> x_flag_unswitch_loops;
	 generic_field_name <"x_flag_unwind_tables",cl_optimization,x_flag_unwind_tables> x_flag_unwind_tables;
	 generic_field_name <"x_flag_var_tracking",cl_optimization,x_flag_var_tracking> x_flag_var_tracking;
	 generic_field_name <"x_flag_var_tracking_assignments",cl_optimization,x_flag_var_tracking_assignments> x_flag_var_tracking_assignments;
	 generic_field_name <"x_flag_var_tracking_assignments_toggle",cl_optimization,x_flag_var_tracking_assignments_toggle> x_flag_var_tracking_assignments_toggle;
	 generic_field_name <"x_flag_var_tracking_uninit",cl_optimization,x_flag_var_tracking_uninit> x_flag_var_tracking_uninit;
	 generic_field_name <"x_flag_variable_expansion_in_unroller",cl_optimization,x_flag_variable_expansion_in_unroller> x_flag_variable_expansion_in_unroller;
	 generic_field_name <"x_flag_vect_cost_model",cl_optimization,x_flag_vect_cost_model> x_flag_vect_cost_model;
	 generic_field_name <"x_flag_value_profile_transformations",cl_optimization,x_flag_value_profile_transformations> x_flag_value_profile_transformations;
	 generic_field_name <"x_flag_web",cl_optimization,x_flag_web> x_flag_web;
	 generic_field_name <"x_flag_whole_program",cl_optimization,x_flag_whole_program> x_flag_whole_program;
	 generic_field_name <"x_flag_wrapv",cl_optimization,x_flag_wrapv> x_flag_wrapv;
}; 
class CLS_427_cl_target_option{ 
	 generic_class_name <"cl_target_option",cl_target_option> the_class_name;
	 generic_field_name <"x_ix86_isa_flags_explicit",cl_target_option,x_ix86_isa_flags_explicit> x_ix86_isa_flags_explicit;
	 generic_field_name <"x_ix86_isa_flags",cl_target_option,x_ix86_isa_flags> x_ix86_isa_flags;
	 generic_field_name <"x_ix86_fpmath",cl_target_option,x_ix86_fpmath> x_ix86_fpmath;
	 generic_field_name <"ix86_target_flags_explicit",cl_target_option,ix86_target_flags_explicit> ix86_target_flags_explicit;
	 generic_field_name <"x_recip_mask_explicit",cl_target_option,x_recip_mask_explicit> x_recip_mask_explicit;
	 generic_field_name <"x_recip_mask",cl_target_option,x_recip_mask> x_recip_mask;
	 generic_field_name <"x_target_flags",cl_target_option,x_target_flags> x_target_flags;
	 generic_field_name <"arch",cl_target_option,arch> arch;
	 generic_field_name <"arch_specified",cl_target_option,arch_specified> arch_specified;
	 generic_field_name <"branch_cost",cl_target_option,branch_cost> branch_cost;
	 generic_field_name <"schedule",cl_target_option,schedule> schedule;
	 generic_field_name <"tune",cl_target_option,tune> tune;
	 generic_field_name <"tune_defaulted",cl_target_option,tune_defaulted> tune_defaulted;
}; 
class CLS_428_gcc_options{ 
	 generic_class_name <"gcc_options",gcc_options> the_class_name;
	 generic_field_name <"x_recip_mask",gcc_options,x_recip_mask> x_recip_mask;
	 generic_field_name <"x_frame_larger_than_size",gcc_options,x_frame_larger_than_size> x_frame_larger_than_size;
	 generic_field_name <"x_ix86_isa_flags",gcc_options,x_ix86_isa_flags> x_ix86_isa_flags;
	 generic_field_name <"x_ix86_isa_flags_explicit",gcc_options,x_ix86_isa_flags_explicit> x_ix86_isa_flags_explicit;
	 generic_field_name <"x_larger_than_size",gcc_options,x_larger_than_size> x_larger_than_size;
	 generic_field_name <"x_exit_after_options",gcc_options,x_exit_after_options> x_exit_after_options;
	 generic_field_name <"x_flag_dump_all_passed",gcc_options,x_flag_dump_all_passed> x_flag_dump_all_passed;
	 generic_field_name <"x_flag_opts_finished",gcc_options,x_flag_opts_finished> x_flag_opts_finished;
	 generic_field_name <"x_flag_stack_usage_info",gcc_options,x_flag_stack_usage_info> x_flag_stack_usage_info;
	 generic_field_name <"x_flag_warn_unused_result",gcc_options,x_flag_warn_unused_result> x_flag_warn_unused_result;
	 generic_field_name <"x_in_lto_p",gcc_options,x_in_lto_p> x_in_lto_p;
	 generic_field_name <"x_use_gnu_debug_info_extensions",gcc_options,x_use_gnu_debug_info_extensions> x_use_gnu_debug_info_extensions;
	 generic_field_name <"x_warn_frame_larger_than",gcc_options,x_warn_frame_larger_than> x_warn_frame_larger_than;
	 generic_field_name <"x_warn_larger_than",gcc_options,x_warn_larger_than> x_warn_larger_than;
	 generic_field_name <"x_help_enum_printed",gcc_options,x_help_enum_printed> x_help_enum_printed;
	 generic_field_name <"x_help_printed",gcc_options,x_help_printed> x_help_printed;
	 generic_field_name <"x_main_input_basename",gcc_options,x_main_input_basename> x_main_input_basename;
	 generic_field_name <"x_main_input_filename",gcc_options,x_main_input_filename> x_main_input_filename;
	 generic_field_name <"x_debug_info_level",gcc_options,x_debug_info_level> x_debug_info_level;
	 generic_field_name <"x_write_symbols",gcc_options,x_write_symbols> x_write_symbols;
	 generic_field_name <"x_debug_struct_generic",gcc_options,x_debug_struct_generic> x_debug_struct_generic;
	 generic_field_name <"x_debug_struct_ordinary",gcc_options,x_debug_struct_ordinary> x_debug_struct_ordinary;
	 generic_field_name <"x_graph_dump_format",gcc_options,x_graph_dump_format> x_graph_dump_format;
	 generic_field_name <"x_flag_stack_check",gcc_options,x_flag_stack_check> x_flag_stack_check;
	 generic_field_name <"x_user_vect_verbosity_level",gcc_options,x_user_vect_verbosity_level> x_user_vect_verbosity_level;
	 generic_field_name <"x_param_values",gcc_options,x_param_values> x_param_values;
	 generic_field_name <"x_flag_complex_method",gcc_options,x_flag_complex_method> x_flag_complex_method;
	 generic_field_name <"x_flag_debug_asm",gcc_options,x_flag_debug_asm> x_flag_debug_asm;
	 generic_field_name <"x_flag_dump_rtl_in_asm",gcc_options,x_flag_dump_rtl_in_asm> x_flag_dump_rtl_in_asm;
	 generic_field_name <"x_flag_evaluation_order",gcc_options,x_flag_evaluation_order> x_flag_evaluation_order;
	 generic_field_name <"x_flag_gen_aux_info",gcc_options,x_flag_gen_aux_info> x_flag_gen_aux_info;
	 generic_field_name <"x_flag_generate_lto",gcc_options,x_flag_generate_lto> x_flag_generate_lto;
	 generic_field_name <"x_flag_print_asm_name",gcc_options,x_flag_print_asm_name> x_flag_print_asm_name;
	 generic_field_name <"x_flag_shlib",gcc_options,x_flag_shlib> x_flag_shlib;
	 generic_field_name <"x_main_input_baselength",gcc_options,x_main_input_baselength> x_main_input_baselength;
	 generic_field_name <"x_optimize",gcc_options,x_optimize> x_optimize;
	 generic_field_name <"x_optimize_fast",gcc_options,x_optimize_fast> x_optimize_fast;
	 generic_field_name <"x_optimize_size",gcc_options,x_optimize_size> x_optimize_size;
	 generic_field_name <"x_recip_mask_explicit",gcc_options,x_recip_mask_explicit> x_recip_mask_explicit;
	 generic_field_name <"x_rtl_dump_and_exit",gcc_options,x_rtl_dump_and_exit> x_rtl_dump_and_exit;
	 generic_field_name <"x_target_flags",gcc_options,x_target_flags> x_target_flags;
	 generic_field_name <"x_help_columns",gcc_options,x_help_columns> x_help_columns;
	 generic_field_name <"x_initial_max_fld_align",gcc_options,x_initial_max_fld_align> x_initial_max_fld_align;
	 generic_field_name <"x_flag_instrument_functions_exclude_files",gcc_options,x_flag_instrument_functions_exclude_files> x_flag_instrument_functions_exclude_files;
	 generic_field_name <"x_flag_instrument_functions_exclude_functions",gcc_options,x_flag_instrument_functions_exclude_functions> x_flag_instrument_functions_exclude_functions;
	 generic_field_name <"x_help_flag",gcc_options,x_help_flag> x_help_flag;
	 generic_field_name <"x_flag_preprocess_only",gcc_options,x_flag_preprocess_only> x_flag_preprocess_only;
	 generic_field_name <"x_warn_abi",gcc_options,x_warn_abi> x_warn_abi;
	 generic_field_name <"x_warn_address",gcc_options,x_warn_address> x_warn_address;
	 generic_field_name <"x_warn_aggregate_return",gcc_options,x_warn_aggregate_return> x_warn_aggregate_return;
	 generic_field_name <"x_warn_array_bounds",gcc_options,x_warn_array_bounds> x_warn_array_bounds;
	 generic_field_name <"x_warn_assign_intercept",gcc_options,x_warn_assign_intercept> x_warn_assign_intercept;
	 generic_field_name <"x_warn_attributes",gcc_options,x_warn_attributes> x_warn_attributes;
	 generic_field_name <"x_warn_bad_function_cast",gcc_options,x_warn_bad_function_cast> x_warn_bad_function_cast;
	 generic_field_name <"x_warn_cxx_compat",gcc_options,x_warn_cxx_compat> x_warn_cxx_compat;
	 generic_field_name <"x_warn_cxx0x_compat",gcc_options,x_warn_cxx0x_compat> x_warn_cxx0x_compat;
	 generic_field_name <"x_warn_cast_align",gcc_options,x_warn_cast_align> x_warn_cast_align;
	 generic_field_name <"x_warn_cast_qual",gcc_options,x_warn_cast_qual> x_warn_cast_qual;
	 generic_field_name <"x_warn_char_subscripts",gcc_options,x_warn_char_subscripts> x_warn_char_subscripts;
	 generic_field_name <"x_warn_clobbered",gcc_options,x_warn_clobbered> x_warn_clobbered;
	 generic_field_name <"x_warn_conversion",gcc_options,x_warn_conversion> x_warn_conversion;
	 generic_field_name <"x_warn_conversion_null",gcc_options,x_warn_conversion_null> x_warn_conversion_null;
	 generic_field_name <"x_warn_coverage_mismatch",gcc_options,x_warn_coverage_mismatch> x_warn_coverage_mismatch;
	 generic_field_name <"x_warn_cpp",gcc_options,x_warn_cpp> x_warn_cpp;
	 generic_field_name <"x_warn_ctor_dtor_privacy",gcc_options,x_warn_ctor_dtor_privacy> x_warn_ctor_dtor_privacy;
	 generic_field_name <"x_warn_declaration_after_statement",gcc_options,x_warn_declaration_after_statement> x_warn_declaration_after_statement;
	 generic_field_name <"x_warn_delnonvdtor",gcc_options,x_warn_delnonvdtor> x_warn_delnonvdtor;
	 generic_field_name <"x_warn_deprecated",gcc_options,x_warn_deprecated> x_warn_deprecated;
	 generic_field_name <"x_warn_deprecated_decl",gcc_options,x_warn_deprecated_decl> x_warn_deprecated_decl;
	 generic_field_name <"x_warn_disabled_optimization",gcc_options,x_warn_disabled_optimization> x_warn_disabled_optimization;
	 generic_field_name <"x_warn_div_by_zero",gcc_options,x_warn_div_by_zero> x_warn_div_by_zero;
	 generic_field_name <"x_warn_double_promotion",gcc_options,x_warn_double_promotion> x_warn_double_promotion;
	 generic_field_name <"x_warn_ecpp",gcc_options,x_warn_ecpp> x_warn_ecpp;
	 generic_field_name <"x_warn_empty_body",gcc_options,x_warn_empty_body> x_warn_empty_body;
	 generic_field_name <"x_warn_enum_compare",gcc_options,x_warn_enum_compare> x_warn_enum_compare;
	 generic_field_name <"x_warnings_are_errors",gcc_options,x_warnings_are_errors> x_warnings_are_errors;
	 generic_field_name <"x_extra_warnings",gcc_options,x_extra_warnings> x_extra_warnings;
	 generic_field_name <"x_flag_extraneous_semicolon",gcc_options,x_flag_extraneous_semicolon> x_flag_extraneous_semicolon;
	 generic_field_name <"x_flag_fatal_errors",gcc_options,x_flag_fatal_errors> x_flag_fatal_errors;
	 generic_field_name <"x_warn_float_equal",gcc_options,x_warn_float_equal> x_warn_float_equal;
	 generic_field_name <"x_warn_format_contains_nul",gcc_options,x_warn_format_contains_nul> x_warn_format_contains_nul;
	 generic_field_name <"x_warn_format_extra_args",gcc_options,x_warn_format_extra_args> x_warn_format_extra_args;
	 generic_field_name <"x_warn_format_nonliteral",gcc_options,x_warn_format_nonliteral> x_warn_format_nonliteral;
	 generic_field_name <"x_warn_format_security",gcc_options,x_warn_format_security> x_warn_format_security;
	 generic_field_name <"x_warn_format_y2k",gcc_options,x_warn_format_y2k> x_warn_format_y2k;
	 generic_field_name <"x_warn_format_zero_length",gcc_options,x_warn_format_zero_length> x_warn_format_zero_length;
	 generic_field_name <"x_warn_free_nonheap_object",gcc_options,x_warn_free_nonheap_object> x_warn_free_nonheap_object;
	 generic_field_name <"x_warn_ignored_qualifiers",gcc_options,x_warn_ignored_qualifiers> x_warn_ignored_qualifiers;
	 generic_field_name <"x_warn_implicit",gcc_options,x_warn_implicit> x_warn_implicit;
	 generic_field_name <"x_warn_implicit_function_declaration",gcc_options,x_warn_implicit_function_declaration> x_warn_implicit_function_declaration;
	 generic_field_name <"x_warn_implicit_int",gcc_options,x_warn_implicit_int> x_warn_implicit_int;
	 generic_field_name <"x_warn_init_self",gcc_options,x_warn_init_self> x_warn_init_self;
	 generic_field_name <"x_warn_inline",gcc_options,x_warn_inline> x_warn_inline;
	 generic_field_name <"x_warn_int_to_pointer_cast",gcc_options,x_warn_int_to_pointer_cast> x_warn_int_to_pointer_cast;
	 generic_field_name <"x_warn_invalid_memory_model",gcc_options,x_warn_invalid_memory_model> x_warn_invalid_memory_model;
	 generic_field_name <"x_warn_invalid_offsetof",gcc_options,x_warn_invalid_offsetof> x_warn_invalid_offsetof;
	 generic_field_name <"x_warn_jump_misses_init",gcc_options,x_warn_jump_misses_init> x_warn_jump_misses_init;
	 generic_field_name <"x_warn_logical_op",gcc_options,x_warn_logical_op> x_warn_logical_op;
	 generic_field_name <"x_warn_long_long",gcc_options,x_warn_long_long> x_warn_long_long;
	 generic_field_name <"x_warn_main",gcc_options,x_warn_main> x_warn_main;
	 generic_field_name <"x_warn_maybe_uninitialized",gcc_options,x_warn_maybe_uninitialized> x_warn_maybe_uninitialized;
	 generic_field_name <"x_warn_missing_braces",gcc_options,x_warn_missing_braces> x_warn_missing_braces;
	 generic_field_name <"x_warn_missing_declarations",gcc_options,x_warn_missing_declarations> x_warn_missing_declarations;
	 generic_field_name <"x_warn_missing_field_initializers",gcc_options,x_warn_missing_field_initializers> x_warn_missing_field_initializers;
	 generic_field_name <"x_warn_missing_format_attribute",gcc_options,x_warn_missing_format_attribute> x_warn_missing_format_attribute;
	 generic_field_name <"x_warn_missing_noreturn",gcc_options,x_warn_missing_noreturn> x_warn_missing_noreturn;
	 generic_field_name <"x_warn_missing_parameter_type",gcc_options,x_warn_missing_parameter_type> x_warn_missing_parameter_type;
	 generic_field_name <"x_warn_missing_prototypes",gcc_options,x_warn_missing_prototypes> x_warn_missing_prototypes;
	 generic_field_name <"x_warn_mudflap",gcc_options,x_warn_mudflap> x_warn_mudflap;
	 generic_field_name <"x_warn_narrowing",gcc_options,x_warn_narrowing> x_warn_narrowing;
	 generic_field_name <"x_warn_nested_externs",gcc_options,x_warn_nested_externs> x_warn_nested_externs;
	 generic_field_name <"x_warn_noexcept",gcc_options,x_warn_noexcept> x_warn_noexcept;
	 generic_field_name <"x_warn_nontemplate_friend",gcc_options,x_warn_nontemplate_friend> x_warn_nontemplate_friend;
	 generic_field_name <"x_warn_nonvdtor",gcc_options,x_warn_nonvdtor> x_warn_nonvdtor;
	 generic_field_name <"x_warn_nonnull",gcc_options,x_warn_nonnull> x_warn_nonnull;
	 generic_field_name <"x_warn_old_style_cast",gcc_options,x_warn_old_style_cast> x_warn_old_style_cast;
	 generic_field_name <"x_warn_old_style_declaration",gcc_options,x_warn_old_style_declaration> x_warn_old_style_declaration;
	 generic_field_name <"x_warn_old_style_definition",gcc_options,x_warn_old_style_definition> x_warn_old_style_definition;
	 generic_field_name <"x_flag_newer",gcc_options,x_flag_newer> x_flag_newer;
	 generic_field_name <"x_warn_overflow",gcc_options,x_warn_overflow> x_warn_overflow;
	 generic_field_name <"x_warn_overlength_strings",gcc_options,x_warn_overlength_strings> x_warn_overlength_strings;
	 generic_field_name <"x_warn_overloaded_virtual",gcc_options,x_warn_overloaded_virtual> x_warn_overloaded_virtual;
	 generic_field_name <"x_warn_override_init",gcc_options,x_warn_override_init> x_warn_override_init;
	 generic_field_name <"x_warn_packed",gcc_options,x_warn_packed> x_warn_packed;
	 generic_field_name <"x_warn_packed_bitfield_compat",gcc_options,x_warn_packed_bitfield_compat> x_warn_packed_bitfield_compat;
	 generic_field_name <"x_warn_padded",gcc_options,x_warn_padded> x_warn_padded;
	 generic_field_name <"x_warn_parentheses",gcc_options,x_warn_parentheses> x_warn_parentheses;
	 generic_field_name <"x_warn_pmf2ptr",gcc_options,x_warn_pmf2ptr> x_warn_pmf2ptr;
	 generic_field_name <"x_warn_pointer_arith",gcc_options,x_warn_pointer_arith> x_warn_pointer_arith;
	 generic_field_name <"x_warn_pointer_sign",gcc_options,x_warn_pointer_sign> x_warn_pointer_sign;
	 generic_field_name <"x_warn_pointer_to_int_cast",gcc_options,x_warn_pointer_to_int_cast> x_warn_pointer_to_int_cast;
	 generic_field_name <"x_warn_pragmas",gcc_options,x_warn_pragmas> x_warn_pragmas;
	 generic_field_name <"x_warn_property_assign_default",gcc_options,x_warn_property_assign_default> x_warn_property_assign_default;
	 generic_field_name <"x_warn_protocol",gcc_options,x_warn_protocol> x_warn_protocol;
	 generic_field_name <"x_warn_psabi",gcc_options,x_warn_psabi> x_warn_psabi;
	 generic_field_name <"x_warn_redundant_decls",gcc_options,x_warn_redundant_decls> x_warn_redundant_decls;
	 generic_field_name <"x_flag_redundant",gcc_options,x_flag_redundant> x_flag_redundant;
	 generic_field_name <"x_warn_reorder",gcc_options,x_warn_reorder> x_warn_reorder;
	 generic_field_name <"x_warn_return_type",gcc_options,x_warn_return_type> x_warn_return_type;
	 generic_field_name <"x_warn_selector",gcc_options,x_warn_selector> x_warn_selector;
	 generic_field_name <"x_warn_sequence_point",gcc_options,x_warn_sequence_point> x_warn_sequence_point;
	 generic_field_name <"x_warn_shadow",gcc_options,x_warn_shadow> x_warn_shadow;
	 generic_field_name <"x_warn_sign_compare",gcc_options,x_warn_sign_compare> x_warn_sign_compare;
	 generic_field_name <"x_warn_sign_conversion",gcc_options,x_warn_sign_conversion> x_warn_sign_conversion;
	 generic_field_name <"x_warn_sign_promo",gcc_options,x_warn_sign_promo> x_warn_sign_promo;
	 generic_field_name <"x_warn_stack_protect",gcc_options,x_warn_stack_protect> x_warn_stack_protect;
	 generic_field_name <"x_warn_stack_usage",gcc_options,x_warn_stack_usage> x_warn_stack_usage;
	 generic_field_name <"x_warn_strict_aliasing",gcc_options,x_warn_strict_aliasing> x_warn_strict_aliasing;
	 generic_field_name <"x_warn_strict_null_sentinel",gcc_options,x_warn_strict_null_sentinel> x_warn_strict_null_sentinel;
	 generic_field_name <"x_warn_strict_overflow",gcc_options,x_warn_strict_overflow> x_warn_strict_overflow;
	 generic_field_name <"x_warn_strict_prototypes",gcc_options,x_warn_strict_prototypes> x_warn_strict_prototypes;
	 generic_field_name <"x_warn_strict_selector_match",gcc_options,x_warn_strict_selector_match> x_warn_strict_selector_match;
	 generic_field_name <"x_warn_suggest_attribute_const",gcc_options,x_warn_suggest_attribute_const> x_warn_suggest_attribute_const;
	 generic_field_name <"x_warn_suggest_attribute_noreturn",gcc_options,x_warn_suggest_attribute_noreturn> x_warn_suggest_attribute_noreturn;
	 generic_field_name <"x_warn_suggest_attribute_pure",gcc_options,x_warn_suggest_attribute_pure> x_warn_suggest_attribute_pure;
	 generic_field_name <"x_warn_switch",gcc_options,x_warn_switch> x_warn_switch;
	 generic_field_name <"x_warn_switch_default",gcc_options,x_warn_switch_default> x_warn_switch_default;
	 generic_field_name <"x_warn_switch_enum",gcc_options,x_warn_switch_enum> x_warn_switch_enum;
	 generic_field_name <"x_warn_sync_nand",gcc_options,x_warn_sync_nand> x_warn_sync_nand;
	 generic_field_name <"x_warn_synth",gcc_options,x_warn_synth> x_warn_synth;
	 generic_field_name <"x_warn_system_headers",gcc_options,x_warn_system_headers> x_warn_system_headers;
	 generic_field_name <"x_warn_traditional",gcc_options,x_warn_traditional> x_warn_traditional;
	 generic_field_name <"x_warn_traditional_conversion",gcc_options,x_warn_traditional_conversion> x_warn_traditional_conversion;
	 generic_field_name <"x_warn_trampolines",gcc_options,x_warn_trampolines> x_warn_trampolines;
	 generic_field_name <"x_warn_type_limits",gcc_options,x_warn_type_limits> x_warn_type_limits;
	 generic_field_name <"x_warn_undeclared_selector",gcc_options,x_warn_undeclared_selector> x_warn_undeclared_selector;
	 generic_field_name <"x_warn_uninitialized",gcc_options,x_warn_uninitialized> x_warn_uninitialized;
	 generic_field_name <"x_warn_unsafe_loop_optimizations",gcc_options,x_warn_unsafe_loop_optimizations> x_warn_unsafe_loop_optimizations;
	 generic_field_name <"x_warn_unsuffixed_float_constants",gcc_options,x_warn_unsuffixed_float_constants> x_warn_unsuffixed_float_constants;
	 generic_field_name <"x_warn_unused",gcc_options,x_warn_unused> x_warn_unused;
	 generic_field_name <"x_warn_unused_but_set_parameter",gcc_options,x_warn_unused_but_set_parameter> x_warn_unused_but_set_parameter;
	 generic_field_name <"x_warn_unused_but_set_variable",gcc_options,x_warn_unused_but_set_variable> x_warn_unused_but_set_variable;
	 generic_field_name <"x_warn_unused_function",gcc_options,x_warn_unused_function> x_warn_unused_function;
	 generic_field_name <"x_warn_unused_label",gcc_options,x_warn_unused_label> x_warn_unused_label;
	 generic_field_name <"x_warn_unused_local_typedefs",gcc_options,x_warn_unused_local_typedefs> x_warn_unused_local_typedefs;
	 generic_field_name <"x_warn_unused_parameter",gcc_options,x_warn_unused_parameter> x_warn_unused_parameter;
	 generic_field_name <"x_warn_unused_result",gcc_options,x_warn_unused_result> x_warn_unused_result;
	 generic_field_name <"x_warn_unused_value",gcc_options,x_warn_unused_value> x_warn_unused_value;
	 generic_field_name <"x_warn_unused_variable",gcc_options,x_warn_unused_variable> x_warn_unused_variable;
	 generic_field_name <"x_warn_vector_operation_performance",gcc_options,x_warn_vector_operation_performance> x_warn_vector_operation_performance;
	 generic_field_name <"x_warn_vla",gcc_options,x_warn_vla> x_warn_vla;
	 generic_field_name <"x_warn_volatile_register_var",gcc_options,x_warn_volatile_register_var> x_warn_volatile_register_var;
	 generic_field_name <"x_warn_write_strings",gcc_options,x_warn_write_strings> x_warn_write_strings;
	 generic_field_name <"x_warn_zero_as_null_pointer_constant",gcc_options,x_warn_zero_as_null_pointer_constant> x_warn_zero_as_null_pointer_constant;
	 generic_field_name <"x_aux_info_file_name",gcc_options,x_aux_info_file_name> x_aux_info_file_name;
	 generic_field_name <"x_aux_base_name",gcc_options,x_aux_base_name> x_aux_base_name;
	 generic_field_name <"x_dump_base_name",gcc_options,x_dump_base_name> x_dump_base_name;
	 generic_field_name <"x_dump_dir_name",gcc_options,x_dump_dir_name> x_dump_dir_name;
	 generic_field_name <"x_flag_pic",gcc_options,x_flag_pic> x_flag_pic;
	 generic_field_name <"x_flag_pie",gcc_options,x_flag_pie> x_flag_pie;
	 generic_field_name <"x_flag_abi_version",gcc_options,x_flag_abi_version> x_flag_abi_version;
	 generic_field_name <"x_flag_access_control",gcc_options,x_flag_access_control> x_flag_access_control;
	 generic_field_name <"x_align_functions",gcc_options,x_align_functions> x_align_functions;
	 generic_field_name <"x_align_jumps",gcc_options,x_align_jumps> x_align_jumps;
	 generic_field_name <"x_align_labels",gcc_options,x_align_labels> x_align_labels;
	 generic_field_name <"x_align_loops",gcc_options,x_align_loops> x_align_loops;
	 generic_field_name <"x_flag_allow_parameterless_variadic_functions",gcc_options,x_flag_allow_parameterless_variadic_functions> x_flag_allow_parameterless_variadic_functions;
	 generic_field_name <"x_flag_no_asm",gcc_options,x_flag_no_asm> x_flag_no_asm;
	 generic_field_name <"x_flag_assert",gcc_options,x_flag_assert> x_flag_assert;
	 generic_field_name <"x_flag_associative_math",gcc_options,x_flag_associative_math> x_flag_associative_math;
	 generic_field_name <"x_flag_asynchronous_unwind_tables",gcc_options,x_flag_asynchronous_unwind_tables> x_flag_asynchronous_unwind_tables;
	 generic_field_name <"x_flag_auto_inc_dec",gcc_options,x_flag_auto_inc_dec> x_flag_auto_inc_dec;
	 generic_field_name <"x_flag_bootstrap_classes",gcc_options,x_flag_bootstrap_classes> x_flag_bootstrap_classes;
	 generic_field_name <"x_flag_bounds_check",gcc_options,x_flag_bounds_check> x_flag_bounds_check;
	 generic_field_name <"x_flag_branch_on_count_reg",gcc_options,x_flag_branch_on_count_reg> x_flag_branch_on_count_reg;
	 generic_field_name <"x_flag_branch_probabilities",gcc_options,x_flag_branch_probabilities> x_flag_branch_probabilities;
	 generic_field_name <"x_flag_branch_target_load_optimize",gcc_options,x_flag_branch_target_load_optimize> x_flag_branch_target_load_optimize;
	 generic_field_name <"x_flag_branch_target_load_optimize2",gcc_options,x_flag_branch_target_load_optimize2> x_flag_branch_target_load_optimize2;
	 generic_field_name <"x_flag_btr_bb_exclusive",gcc_options,x_flag_btr_bb_exclusive> x_flag_btr_bb_exclusive;
	 generic_field_name <"x_flag_building_libgcc",gcc_options,x_flag_building_libgcc> x_flag_building_libgcc;
	 generic_field_name <"x_flag_no_builtin",gcc_options,x_flag_no_builtin> x_flag_no_builtin;
	 generic_field_name <"x_common_deferred_options",gcc_options,x_common_deferred_options> x_common_deferred_options;
	 generic_field_name <"x_flag_caller_saves",gcc_options,x_flag_caller_saves> x_flag_caller_saves;
	 generic_field_name <"x_flag_check_data_deps",gcc_options,x_flag_check_data_deps> x_flag_check_data_deps;
	 generic_field_name <"x_flag_check_new",gcc_options,x_flag_check_new> x_flag_check_new;
	 generic_field_name <"x_flag_check_references",gcc_options,x_flag_check_references> x_flag_check_references;
	 generic_field_name <"x_flag_combine_stack_adjustments",gcc_options,x_flag_combine_stack_adjustments> x_flag_combine_stack_adjustments;
	 generic_field_name <"x_flag_no_common",gcc_options,x_flag_no_common> x_flag_no_common;
	 generic_field_name <"x_flag_compare_debug",gcc_options,x_flag_compare_debug> x_flag_compare_debug;
	 generic_field_name <"x_flag_compare_debug_opt",gcc_options,x_flag_compare_debug_opt> x_flag_compare_debug_opt;
	 generic_field_name <"x_flag_compare_elim_after_reload",gcc_options,x_flag_compare_elim_after_reload> x_flag_compare_elim_after_reload;
	 generic_field_name <"x_flag_conserve_space",gcc_options,x_flag_conserve_space> x_flag_conserve_space;
	 generic_field_name <"x_flag_conserve_stack",gcc_options,x_flag_conserve_stack> x_flag_conserve_stack;
	 generic_field_name <"x_max_constexpr_depth",gcc_options,x_max_constexpr_depth> x_max_constexpr_depth;
	 generic_field_name <"x_flag_cprop_registers",gcc_options,x_flag_cprop_registers> x_flag_cprop_registers;
	 generic_field_name <"x_flag_crossjumping",gcc_options,x_flag_crossjumping> x_flag_crossjumping;
	 generic_field_name <"x_flag_cse_follow_jumps",gcc_options,x_flag_cse_follow_jumps> x_flag_cse_follow_jumps;
	 generic_field_name <"x_flag_cx_fortran_rules",gcc_options,x_flag_cx_fortran_rules> x_flag_cx_fortran_rules;
	 generic_field_name <"x_flag_cx_limited_range",gcc_options,x_flag_cx_limited_range> x_flag_cx_limited_range;
	 generic_field_name <"x_flag_data_sections",gcc_options,x_flag_data_sections> x_flag_data_sections;
	 generic_field_name <"x_flag_dce",gcc_options,x_flag_dce> x_flag_dce;
	 generic_field_name <"x_flag_debug_types_section",gcc_options,x_flag_debug_types_section> x_flag_debug_types_section;
	 generic_field_name <"x_flag_deduce_init_list",gcc_options,x_flag_deduce_init_list> x_flag_deduce_init_list;
	 generic_field_name <"x_flag_defer_pop",gcc_options,x_flag_defer_pop> x_flag_defer_pop;
	 generic_field_name <"x_flag_delayed_branch",gcc_options,x_flag_delayed_branch> x_flag_delayed_branch;
	 generic_field_name <"x_flag_delete_null_pointer_checks",gcc_options,x_flag_delete_null_pointer_checks> x_flag_delete_null_pointer_checks;
	 generic_field_name <"x_flag_devirtualize",gcc_options,x_flag_devirtualize> x_flag_devirtualize;
	 generic_field_name <"x_flag_diagnostics_show_option",gcc_options,x_flag_diagnostics_show_option> x_flag_diagnostics_show_option;
	 generic_field_name <"x_flag_dse",gcc_options,x_flag_dse> x_flag_dse;
	 generic_field_name <"x_flag_dump_final_insns",gcc_options,x_flag_dump_final_insns> x_flag_dump_final_insns;
	 generic_field_name <"x_flag_dump_go_spec",gcc_options,x_flag_dump_go_spec> x_flag_dump_go_spec;
	 generic_field_name <"x_flag_dump_noaddr",gcc_options,x_flag_dump_noaddr> x_flag_dump_noaddr;
	 generic_field_name <"x_flag_dump_passes",gcc_options,x_flag_dump_passes> x_flag_dump_passes;
	 generic_field_name <"x_flag_dump_unnumbered",gcc_options,x_flag_dump_unnumbered> x_flag_dump_unnumbered;
	 generic_field_name <"x_flag_dump_unnumbered_links",gcc_options,x_flag_dump_unnumbered_links> x_flag_dump_unnumbered_links;
	 generic_field_name <"x_flag_dwarf2_cfi_asm",gcc_options,x_flag_dwarf2_cfi_asm> x_flag_dwarf2_cfi_asm;
	 generic_field_name <"x_flag_early_inlining",gcc_options,x_flag_early_inlining> x_flag_early_inlining;
	 generic_field_name <"x_flag_elide_constructors",gcc_options,x_flag_elide_constructors> x_flag_elide_constructors;
	 generic_field_name <"x_flag_eliminate_dwarf2_dups",gcc_options,x_flag_eliminate_dwarf2_dups> x_flag_eliminate_dwarf2_dups;
	 generic_field_name <"x_flag_debug_only_used_symbols",gcc_options,x_flag_debug_only_used_symbols> x_flag_debug_only_used_symbols;
	 generic_field_name <"x_flag_eliminate_unused_debug_types",gcc_options,x_flag_eliminate_unused_debug_types> x_flag_eliminate_unused_debug_types;
	 generic_field_name <"x_flag_emit_class_debug_always",gcc_options,x_flag_emit_class_debug_always> x_flag_emit_class_debug_always;
	 generic_field_name <"x_flag_emit_class_files",gcc_options,x_flag_emit_class_files> x_flag_emit_class_files;
	 generic_field_name <"x_flag_enforce_eh_specs",gcc_options,x_flag_enforce_eh_specs> x_flag_enforce_eh_specs;
	 generic_field_name <"x_flag_exceptions",gcc_options,x_flag_exceptions> x_flag_exceptions;
	 generic_field_name <"x_flag_excess_precision_cmdline",gcc_options,x_flag_excess_precision_cmdline> x_flag_excess_precision_cmdline;
	 generic_field_name <"x_flag_expensive_optimizations",gcc_options,x_flag_expensive_optimizations> x_flag_expensive_optimizations;
	 generic_field_name <"x_flag_fat_lto_objects",gcc_options,x_flag_fat_lto_objects> x_flag_fat_lto_objects;
	 generic_field_name <"x_flag_filelist_file",gcc_options,x_flag_filelist_file> x_flag_filelist_file;
	 generic_field_name <"x_flag_finite_math_only",gcc_options,x_flag_finite_math_only> x_flag_finite_math_only;
	 generic_field_name <"x_flag_float_store",gcc_options,x_flag_float_store> x_flag_float_store;
	 generic_field_name <"x_flag_new_for_scope",gcc_options,x_flag_new_for_scope> x_flag_new_for_scope;
	 generic_field_name <"x_flag_force_classes_archive_check",gcc_options,x_flag_force_classes_archive_check> x_flag_force_classes_archive_check;
	 generic_field_name <"x_flag_forward_propagate",gcc_options,x_flag_forward_propagate> x_flag_forward_propagate;
	 generic_field_name <"x_flag_fp_contract_mode",gcc_options,x_flag_fp_contract_mode> x_flag_fp_contract_mode;
	 generic_field_name <"x_flag_friend_injection",gcc_options,x_flag_friend_injection> x_flag_friend_injection;
	 generic_field_name <"x_flag_no_function_cse",gcc_options,x_flag_no_function_cse> x_flag_no_function_cse;
	 generic_field_name <"x_flag_function_sections",gcc_options,x_flag_function_sections> x_flag_function_sections;
	 generic_field_name <"x_flag_gcse",gcc_options,x_flag_gcse> x_flag_gcse;
	 generic_field_name <"x_flag_gcse_after_reload",gcc_options,x_flag_gcse_after_reload> x_flag_gcse_after_reload;
	 generic_field_name <"x_flag_gcse_las",gcc_options,x_flag_gcse_las> x_flag_gcse_las;
	 generic_field_name <"x_flag_gcse_lm",gcc_options,x_flag_gcse_lm> x_flag_gcse_lm;
	 generic_field_name <"x_flag_gcse_sm",gcc_options,x_flag_gcse_sm> x_flag_gcse_sm;
	 generic_field_name <"x_flag_no_gnu_keywords",gcc_options,x_flag_no_gnu_keywords> x_flag_no_gnu_keywords;
	 generic_field_name <"x_flag_next_runtime",gcc_options,x_flag_next_runtime> x_flag_next_runtime;
	 generic_field_name <"x_flag_tm",gcc_options,x_flag_tm> x_flag_tm;
	 generic_field_name <"x_flag_gnu89_inline",gcc_options,x_flag_gnu89_inline> x_flag_gnu89_inline;
	 generic_field_name <"x_go_check_divide_overflow",gcc_options,x_go_check_divide_overflow> x_go_check_divide_overflow;
	 generic_field_name <"x_go_check_divide_zero",gcc_options,x_go_check_divide_zero> x_go_check_divide_zero;
	 generic_field_name <"x_flag_graphite",gcc_options,x_flag_graphite> x_flag_graphite;
	 generic_field_name <"x_flag_graphite_identity",gcc_options,x_flag_graphite_identity> x_flag_graphite_identity;
	 generic_field_name <"x_flag_guess_branch_prob",gcc_options,x_flag_guess_branch_prob> x_flag_guess_branch_prob;
	 generic_field_name <"x_flag_hash_synchronization",gcc_options,x_flag_hash_synchronization> x_flag_hash_synchronization;
	 generic_field_name <"x_flag_no_ident",gcc_options,x_flag_no_ident> x_flag_no_ident;
	 generic_field_name <"x_flag_if_conversion",gcc_options,x_flag_if_conversion> x_flag_if_conversion;
	 generic_field_name <"x_flag_if_conversion2",gcc_options,x_flag_if_conversion2> x_flag_if_conversion2;
	 generic_field_name <"x_flag_implement_inlines",gcc_options,x_flag_implement_inlines> x_flag_implement_inlines;
	 generic_field_name <"x_flag_implicit_inline_templates",gcc_options,x_flag_implicit_inline_templates> x_flag_implicit_inline_templates;
	 generic_field_name <"x_flag_implicit_templates",gcc_options,x_flag_implicit_templates> x_flag_implicit_templates;
	 generic_field_name <"x_flag_indirect_classes",gcc_options,x_flag_indirect_classes> x_flag_indirect_classes;
	 generic_field_name <"x_flag_indirect_dispatch",gcc_options,x_flag_indirect_dispatch> x_flag_indirect_dispatch;
	 generic_field_name <"x_flag_indirect_inlining",gcc_options,x_flag_indirect_inlining> x_flag_indirect_inlining;
	 generic_field_name <"x_flag_inhibit_size_directive",gcc_options,x_flag_inhibit_size_directive> x_flag_inhibit_size_directive;
	 generic_field_name <"x_flag_no_inline",gcc_options,x_flag_no_inline> x_flag_no_inline;
	 generic_field_name <"x_flag_inline_atomics",gcc_options,x_flag_inline_atomics> x_flag_inline_atomics;
	 generic_field_name <"x_flag_inline_functions",gcc_options,x_flag_inline_functions> x_flag_inline_functions;
	 generic_field_name <"x_flag_inline_functions_called_once",gcc_options,x_flag_inline_functions_called_once> x_flag_inline_functions_called_once;
	 generic_field_name <"x_flag_inline_small_functions",gcc_options,x_flag_inline_small_functions> x_flag_inline_small_functions;
	 generic_field_name <"x_flag_instrument_function_entry_exit",gcc_options,x_flag_instrument_function_entry_exit> x_flag_instrument_function_entry_exit;
	 generic_field_name <"x_flag_ipa_cp",gcc_options,x_flag_ipa_cp> x_flag_ipa_cp;
	 generic_field_name <"x_flag_ipa_cp_clone",gcc_options,x_flag_ipa_cp_clone> x_flag_ipa_cp_clone;
	 generic_field_name <"x_flag_ipa_matrix_reorg",gcc_options,x_flag_ipa_matrix_reorg> x_flag_ipa_matrix_reorg;
	 generic_field_name <"x_flag_ipa_profile",gcc_options,x_flag_ipa_profile> x_flag_ipa_profile;
	 generic_field_name <"x_flag_ipa_pta",gcc_options,x_flag_ipa_pta> x_flag_ipa_pta;
	 generic_field_name <"x_flag_ipa_pure_const",gcc_options,x_flag_ipa_pure_const> x_flag_ipa_pure_const;
	 generic_field_name <"x_flag_ipa_reference",gcc_options,x_flag_ipa_reference> x_flag_ipa_reference;
	 generic_field_name <"x_flag_ipa_sra",gcc_options,x_flag_ipa_sra> x_flag_ipa_sra;
	 generic_field_name <"x_flag_ira_algorithm",gcc_options,x_flag_ira_algorithm> x_flag_ira_algorithm;
	 generic_field_name <"x_flag_ira_loop_pressure",gcc_options,x_flag_ira_loop_pressure> x_flag_ira_loop_pressure;
	 generic_field_name <"x_flag_ira_region",gcc_options,x_flag_ira_region> x_flag_ira_region;
	 generic_field_name <"x_flag_ira_share_save_slots",gcc_options,x_flag_ira_share_save_slots> x_flag_ira_share_save_slots;
	 generic_field_name <"x_flag_ira_share_spill_slots",gcc_options,x_flag_ira_share_spill_slots> x_flag_ira_share_spill_slots;
	 generic_field_name <"x_flag_ira_verbose",gcc_options,x_flag_ira_verbose> x_flag_ira_verbose;
	 generic_field_name <"x_flag_ivopts",gcc_options,x_flag_ivopts> x_flag_ivopts;
	 generic_field_name <"x_flag_jni",gcc_options,x_flag_jni> x_flag_jni;
	 generic_field_name <"x_flag_jump_tables",gcc_options,x_flag_jump_tables> x_flag_jump_tables;
	 generic_field_name <"x_flag_keep_inline_dllexport",gcc_options,x_flag_keep_inline_dllexport> x_flag_keep_inline_dllexport;
	 generic_field_name <"x_flag_keep_inline_functions",gcc_options,x_flag_keep_inline_functions> x_flag_keep_inline_functions;
	 generic_field_name <"x_flag_keep_static_consts",gcc_options,x_flag_keep_static_consts> x_flag_keep_static_consts;
	 generic_field_name <"x_flag_lax_vector_conversions",gcc_options,x_flag_lax_vector_conversions> x_flag_lax_vector_conversions;
	 generic_field_name <"x_flag_leading_underscore",gcc_options,x_flag_leading_underscore> x_flag_leading_underscore;
	 generic_field_name <"x_flag_loop_block",gcc_options,x_flag_loop_block> x_flag_loop_block;
	 generic_field_name <"x_flag_loop_flatten",gcc_options,x_flag_loop_flatten> x_flag_loop_flatten;
	 generic_field_name <"x_flag_loop_interchange",gcc_options,x_flag_loop_interchange> x_flag_loop_interchange;
	 generic_field_name <"x_flag_loop_parallelize_all",gcc_options,x_flag_loop_parallelize_all> x_flag_loop_parallelize_all;
	 generic_field_name <"x_flag_loop_strip_mine",gcc_options,x_flag_loop_strip_mine> x_flag_loop_strip_mine;
	 generic_field_name <"x_flag_lto_compression_level",gcc_options,x_flag_lto_compression_level> x_flag_lto_compression_level;
	 generic_field_name <"x_flag_lto_partition_1to1",gcc_options,x_flag_lto_partition_1to1> x_flag_lto_partition_1to1;
	 generic_field_name <"x_flag_lto_partition_balanced",gcc_options,x_flag_lto_partition_balanced> x_flag_lto_partition_balanced;
	 generic_field_name <"x_flag_lto_partition_none",gcc_options,x_flag_lto_partition_none> x_flag_lto_partition_none;
	 generic_field_name <"x_flag_lto_report",gcc_options,x_flag_lto_report> x_flag_lto_report;
	 generic_field_name <"x_flag_lto",gcc_options,x_flag_lto> x_flag_lto;
	 generic_field_name <"x_flag_ltrans",gcc_options,x_flag_ltrans> x_flag_ltrans;
	 generic_field_name <"x_ltrans_output_list",gcc_options,x_ltrans_output_list> x_ltrans_output_list;
	 generic_field_name <"x_flag_errno_math",gcc_options,x_flag_errno_math> x_flag_errno_math;
	 generic_field_name <"x_flag_max_errors",gcc_options,x_flag_max_errors> x_flag_max_errors;
	 generic_field_name <"x_mem_report",gcc_options,x_mem_report> x_mem_report;
	 generic_field_name <"x_flag_merge_constants",gcc_options,x_flag_merge_constants> x_flag_merge_constants;
	 generic_field_name <"x_flag_merge_debug_strings",gcc_options,x_flag_merge_debug_strings> x_flag_merge_debug_strings;
	 generic_field_name <"x_flag_modulo_sched",gcc_options,x_flag_modulo_sched> x_flag_modulo_sched;
	 generic_field_name <"x_flag_modulo_sched_allow_regmoves",gcc_options,x_flag_modulo_sched_allow_regmoves> x_flag_modulo_sched_allow_regmoves;
	 generic_field_name <"x_flag_move_loop_invariants",gcc_options,x_flag_move_loop_invariants> x_flag_move_loop_invariants;
	 generic_field_name <"x_flag_ms_extensions",gcc_options,x_flag_ms_extensions> x_flag_ms_extensions;
	 generic_field_name <"x_flag_mudflap",gcc_options,x_flag_mudflap> x_flag_mudflap;
	 generic_field_name <"x_flag_mudflap_ignore_reads",gcc_options,x_flag_mudflap_ignore_reads> x_flag_mudflap_ignore_reads;
	 generic_field_name <"x_flag_nil_receivers",gcc_options,x_flag_nil_receivers> x_flag_nil_receivers;
	 generic_field_name <"x_flag_non_call_exceptions",gcc_options,x_flag_non_call_exceptions> x_flag_non_call_exceptions;
	 generic_field_name <"x_flag_no_nonansi_builtin",gcc_options,x_flag_no_nonansi_builtin> x_flag_no_nonansi_builtin;
	 generic_field_name <"x_flag_nothrow_opt",gcc_options,x_flag_nothrow_opt> x_flag_nothrow_opt;
	 generic_field_name <"x_flag_objc_abi",gcc_options,x_flag_objc_abi> x_flag_objc_abi;
	 generic_field_name <"x_flag_objc_call_cxx_cdtors",gcc_options,x_flag_objc_call_cxx_cdtors> x_flag_objc_call_cxx_cdtors;
	 generic_field_name <"x_flag_objc_direct_dispatch",gcc_options,x_flag_objc_direct_dispatch> x_flag_objc_direct_dispatch;
	 generic_field_name <"x_flag_objc_exceptions",gcc_options,x_flag_objc_exceptions> x_flag_objc_exceptions;
	 generic_field_name <"x_flag_objc_gc",gcc_options,x_flag_objc_gc> x_flag_objc_gc;
	 generic_field_name <"x_flag_objc_nilcheck",gcc_options,x_flag_objc_nilcheck> x_flag_objc_nilcheck;
	 generic_field_name <"x_flag_objc_sjlj_exceptions",gcc_options,x_flag_objc_sjlj_exceptions> x_flag_objc_sjlj_exceptions;
	 generic_field_name <"x_flag_objc1_only",gcc_options,x_flag_objc1_only> x_flag_objc1_only;
	 generic_field_name <"x_flag_omit_frame_pointer",gcc_options,x_flag_omit_frame_pointer> x_flag_omit_frame_pointer;
	 generic_field_name <"x_flag_openmp",gcc_options,x_flag_openmp> x_flag_openmp;
	 generic_field_name <"x_flag_regmove",gcc_options,x_flag_regmove> x_flag_regmove;
	 generic_field_name <"x_flag_optimize_sibling_calls",gcc_options,x_flag_optimize_sibling_calls> x_flag_optimize_sibling_calls;
	 generic_field_name <"x_flag_optimize_sci",gcc_options,x_flag_optimize_sci> x_flag_optimize_sci;
	 generic_field_name <"x_flag_optimize_strlen",gcc_options,x_flag_optimize_strlen> x_flag_optimize_strlen;
	 generic_field_name <"x_flag_pack_struct",gcc_options,x_flag_pack_struct> x_flag_pack_struct;
	 generic_field_name <"x_flag_partial_inlining",gcc_options,x_flag_partial_inlining> x_flag_partial_inlining;
	 generic_field_name <"x_flag_pcc_struct_return",gcc_options,x_flag_pcc_struct_return> x_flag_pcc_struct_return;
	 generic_field_name <"x_flag_peel_loops",gcc_options,x_flag_peel_loops> x_flag_peel_loops;
	 generic_field_name <"x_flag_no_peephole",gcc_options,x_flag_no_peephole> x_flag_no_peephole;
	 generic_field_name <"x_flag_peephole2",gcc_options,x_flag_peephole2> x_flag_peephole2;
	 generic_field_name <"x_flag_plan9_extensions",gcc_options,x_flag_plan9_extensions> x_flag_plan9_extensions;
	 generic_field_name <"x_post_ipa_mem_report",gcc_options,x_post_ipa_mem_report> x_post_ipa_mem_report;
	 generic_field_name <"x_pre_ipa_mem_report",gcc_options,x_pre_ipa_mem_report> x_pre_ipa_mem_report;
	 generic_field_name <"x_flag_predictive_commoning",gcc_options,x_flag_predictive_commoning> x_flag_predictive_commoning;
	 generic_field_name <"x_flag_prefetch_loop_arrays",gcc_options,x_flag_prefetch_loop_arrays> x_flag_prefetch_loop_arrays;
	 generic_field_name <"x_flag_pretty_templates",gcc_options,x_flag_pretty_templates> x_flag_pretty_templates;
	 generic_field_name <"x_profile_flag",gcc_options,x_profile_flag> x_profile_flag;
	 generic_field_name <"x_profile_arc_flag",gcc_options,x_profile_arc_flag> x_profile_arc_flag;
	 generic_field_name <"x_flag_profile_correction",gcc_options,x_flag_profile_correction> x_flag_profile_correction;
	 generic_field_name <"x_profile_data_prefix",gcc_options,x_profile_data_prefix> x_profile_data_prefix;
	 generic_field_name <"x_flag_profile_use",gcc_options,x_flag_profile_use> x_flag_profile_use;
	 generic_field_name <"x_flag_profile_values",gcc_options,x_flag_profile_values> x_flag_profile_values;
	 generic_field_name <"x_flag_reciprocal_math",gcc_options,x_flag_reciprocal_math> x_flag_reciprocal_math;
	 generic_field_name <"x_flag_record_gcc_switches",gcc_options,x_flag_record_gcc_switches> x_flag_record_gcc_switches;
	 generic_field_name <"x_flag_reduced_reflection",gcc_options,x_flag_reduced_reflection> x_flag_reduced_reflection;
	 generic_field_name <"x_flag_ree",gcc_options,x_flag_ree> x_flag_ree;
	 generic_field_name <"x_flag_rename_registers",gcc_options,x_flag_rename_registers> x_flag_rename_registers;
	 generic_field_name <"x_flag_reorder_blocks",gcc_options,x_flag_reorder_blocks> x_flag_reorder_blocks;
	 generic_field_name <"x_flag_reorder_blocks_and_partition",gcc_options,x_flag_reorder_blocks_and_partition> x_flag_reorder_blocks_and_partition;
	 generic_field_name <"x_flag_reorder_functions",gcc_options,x_flag_reorder_functions> x_flag_reorder_functions;
	 generic_field_name <"x_flag_replace_objc_classes",gcc_options,x_flag_replace_objc_classes> x_flag_replace_objc_classes;
	 generic_field_name <"x_go_require_return_statement",gcc_options,x_go_require_return_statement> x_go_require_return_statement;
	 generic_field_name <"x_flag_rerun_cse_after_loop",gcc_options,x_flag_rerun_cse_after_loop> x_flag_rerun_cse_after_loop;
	 generic_field_name <"x_flag_resched_modulo_sched",gcc_options,x_flag_resched_modulo_sched> x_flag_resched_modulo_sched;
	 generic_field_name <"x_flag_rounding_math",gcc_options,x_flag_rounding_math> x_flag_rounding_math;
	 generic_field_name <"x_flag_rtti",gcc_options,x_flag_rtti> x_flag_rtti;
	 generic_field_name <"x_flag_sched_critical_path_heuristic",gcc_options,x_flag_sched_critical_path_heuristic> x_flag_sched_critical_path_heuristic;
	 generic_field_name <"x_flag_sched_dep_count_heuristic",gcc_options,x_flag_sched_dep_count_heuristic> x_flag_sched_dep_count_heuristic;
	 generic_field_name <"x_flag_sched_group_heuristic",gcc_options,x_flag_sched_group_heuristic> x_flag_sched_group_heuristic;
	 generic_field_name <"x_flag_schedule_interblock",gcc_options,x_flag_schedule_interblock> x_flag_schedule_interblock;
	 generic_field_name <"x_flag_sched_last_insn_heuristic",gcc_options,x_flag_sched_last_insn_heuristic> x_flag_sched_last_insn_heuristic;
	 generic_field_name <"x_flag_sched_pressure",gcc_options,x_flag_sched_pressure> x_flag_sched_pressure;
	 generic_field_name <"x_flag_sched_pressure_algorithm",gcc_options,x_flag_sched_pressure_algorithm> x_flag_sched_pressure_algorithm;
	 generic_field_name <"x_flag_sched_rank_heuristic",gcc_options,x_flag_sched_rank_heuristic> x_flag_sched_rank_heuristic;
	 generic_field_name <"x_flag_schedule_speculative",gcc_options,x_flag_schedule_speculative> x_flag_schedule_speculative;
	 generic_field_name <"x_flag_sched_spec_insn_heuristic",gcc_options,x_flag_sched_spec_insn_heuristic> x_flag_sched_spec_insn_heuristic;
	 generic_field_name <"x_flag_schedule_speculative_load",gcc_options,x_flag_schedule_speculative_load> x_flag_schedule_speculative_load;
	 generic_field_name <"x_flag_schedule_speculative_load_dangerous",gcc_options,x_flag_schedule_speculative_load_dangerous> x_flag_schedule_speculative_load_dangerous;
	 generic_field_name <"x_flag_sched_stalled_insns",gcc_options,x_flag_sched_stalled_insns> x_flag_sched_stalled_insns;
	 generic_field_name <"x_flag_sched_stalled_insns_dep",gcc_options,x_flag_sched_stalled_insns_dep> x_flag_sched_stalled_insns_dep;
	 generic_field_name <"x_sched_verbose_param",gcc_options,x_sched_verbose_param> x_sched_verbose_param;
	 generic_field_name <"x_flag_sched2_use_superblocks",gcc_options,x_flag_sched2_use_superblocks> x_flag_sched2_use_superblocks;
	 generic_field_name <"x_flag_schedule_insns",gcc_options,x_flag_schedule_insns> x_flag_schedule_insns;
	 generic_field_name <"x_flag_schedule_insns_after_reload",gcc_options,x_flag_schedule_insns_after_reload> x_flag_schedule_insns_after_reload;
	 generic_field_name <"x_flag_section_anchors",gcc_options,x_flag_section_anchors> x_flag_section_anchors;
	 generic_field_name <"x_flag_sel_sched_pipelining",gcc_options,x_flag_sel_sched_pipelining> x_flag_sel_sched_pipelining;
	 generic_field_name <"x_flag_sel_sched_pipelining_outer_loops",gcc_options,x_flag_sel_sched_pipelining_outer_loops> x_flag_sel_sched_pipelining_outer_loops;
	 generic_field_name <"x_flag_sel_sched_reschedule_pipelined",gcc_options,x_flag_sel_sched_reschedule_pipelined> x_flag_sel_sched_reschedule_pipelined;
	 generic_field_name <"x_flag_selective_scheduling",gcc_options,x_flag_selective_scheduling> x_flag_selective_scheduling;
	 generic_field_name <"x_flag_selective_scheduling2",gcc_options,x_flag_selective_scheduling2> x_flag_selective_scheduling2;
	 generic_field_name <"x_flag_short_double",gcc_options,x_flag_short_double> x_flag_short_double;
	 generic_field_name <"x_flag_short_enums",gcc_options,x_flag_short_enums> x_flag_short_enums;
	 generic_field_name <"x_flag_short_wchar",gcc_options,x_flag_short_wchar> x_flag_short_wchar;
	 generic_field_name <"x_flag_show_column",gcc_options,x_flag_show_column> x_flag_show_column;
	 generic_field_name <"x_flag_shrink_wrap",gcc_options,x_flag_shrink_wrap> x_flag_shrink_wrap;
	 generic_field_name <"x_flag_signaling_nans",gcc_options,x_flag_signaling_nans> x_flag_signaling_nans;
	 generic_field_name <"x_flag_signed_bitfields",gcc_options,x_flag_signed_bitfields> x_flag_signed_bitfields;
	 generic_field_name <"x_flag_signed_char",gcc_options,x_flag_signed_char> x_flag_signed_char;
	 generic_field_name <"x_flag_signed_zeros",gcc_options,x_flag_signed_zeros> x_flag_signed_zeros;
	 generic_field_name <"x_flag_single_precision_constant",gcc_options,x_flag_single_precision_constant> x_flag_single_precision_constant;
	 generic_field_name <"x_flag_split_ivs_in_unroller",gcc_options,x_flag_split_ivs_in_unroller> x_flag_split_ivs_in_unroller;
	 generic_field_name <"x_flag_split_stack",gcc_options,x_flag_split_stack> x_flag_split_stack;
	 generic_field_name <"x_flag_split_wide_types",gcc_options,x_flag_split_wide_types> x_flag_split_wide_types;
	 generic_field_name <"x_flag_stack_protect",gcc_options,x_flag_stack_protect> x_flag_stack_protect;
	 generic_field_name <"x_flag_stack_usage",gcc_options,x_flag_stack_usage> x_flag_stack_usage;
	 generic_field_name <"x_flag_detailed_statistics",gcc_options,x_flag_detailed_statistics> x_flag_detailed_statistics;
	 generic_field_name <"x_flag_store_check",gcc_options,x_flag_store_check> x_flag_store_check;
	 generic_field_name <"x_flag_strict_aliasing",gcc_options,x_flag_strict_aliasing> x_flag_strict_aliasing;
	 generic_field_name <"x_flag_strict_enums",gcc_options,x_flag_strict_enums> x_flag_strict_enums;
	 generic_field_name <"x_flag_strict_overflow",gcc_options,x_flag_strict_overflow> x_flag_strict_overflow;
	 generic_field_name <"x_flag_strict_volatile_bitfields",gcc_options,x_flag_strict_volatile_bitfields> x_flag_strict_volatile_bitfields;
	 generic_field_name <"x_flag_syntax_only",gcc_options,x_flag_syntax_only> x_flag_syntax_only;
	 generic_field_name <"x_flag_test_coverage",gcc_options,x_flag_test_coverage> x_flag_test_coverage;
	 generic_field_name <"x_flag_thread_jumps",gcc_options,x_flag_thread_jumps> x_flag_thread_jumps;
	 generic_field_name <"x_flag_threadsafe_statics",gcc_options,x_flag_threadsafe_statics> x_flag_threadsafe_statics;
	 generic_field_name <"x_time_report",gcc_options,x_time_report> x_time_report;
	 generic_field_name <"x_flag_tls_default",gcc_options,x_flag_tls_default> x_flag_tls_default;
	 generic_field_name <"x_flag_toplevel_reorder",gcc_options,x_flag_toplevel_reorder> x_flag_toplevel_reorder;
	 generic_field_name <"x_flag_tracer",gcc_options,x_flag_tracer> x_flag_tracer;
	 generic_field_name <"x_flag_trapping_math",gcc_options,x_flag_trapping_math> x_flag_trapping_math;
	 generic_field_name <"x_flag_trapv",gcc_options,x_flag_trapv> x_flag_trapv;
	 generic_field_name <"x_flag_tree_bit_ccp",gcc_options,x_flag_tree_bit_ccp> x_flag_tree_bit_ccp;
	 generic_field_name <"x_flag_tree_builtin_call_dce",gcc_options,x_flag_tree_builtin_call_dce> x_flag_tree_builtin_call_dce;
	 generic_field_name <"x_flag_tree_ccp",gcc_options,x_flag_tree_ccp> x_flag_tree_ccp;
	 generic_field_name <"x_flag_tree_ch",gcc_options,x_flag_tree_ch> x_flag_tree_ch;
	 generic_field_name <"x_flag_tree_copy_prop",gcc_options,x_flag_tree_copy_prop> x_flag_tree_copy_prop;
	 generic_field_name <"x_flag_tree_copyrename",gcc_options,x_flag_tree_copyrename> x_flag_tree_copyrename;
	 generic_field_name <"x_flag_tree_cselim",gcc_options,x_flag_tree_cselim> x_flag_tree_cselim;
	 generic_field_name <"x_flag_tree_dce",gcc_options,x_flag_tree_dce> x_flag_tree_dce;
	 generic_field_name <"x_flag_tree_dom",gcc_options,x_flag_tree_dom> x_flag_tree_dom;
	 generic_field_name <"x_flag_tree_dse",gcc_options,x_flag_tree_dse> x_flag_tree_dse;
	 generic_field_name <"x_flag_tree_forwprop",gcc_options,x_flag_tree_forwprop> x_flag_tree_forwprop;
	 generic_field_name <"x_flag_tree_fre",gcc_options,x_flag_tree_fre> x_flag_tree_fre;
	 generic_field_name <"x_flag_tree_loop_distribute_patterns",gcc_options,x_flag_tree_loop_distribute_patterns> x_flag_tree_loop_distribute_patterns;
	 generic_field_name <"x_flag_tree_loop_distribution",gcc_options,x_flag_tree_loop_distribution> x_flag_tree_loop_distribution;
	 generic_field_name <"x_flag_tree_loop_if_convert",gcc_options,x_flag_tree_loop_if_convert> x_flag_tree_loop_if_convert;
	 generic_field_name <"x_flag_tree_loop_if_convert_stores",gcc_options,x_flag_tree_loop_if_convert_stores> x_flag_tree_loop_if_convert_stores;
	 generic_field_name <"x_flag_tree_loop_im",gcc_options,x_flag_tree_loop_im> x_flag_tree_loop_im;
	 generic_field_name <"x_flag_tree_loop_ivcanon",gcc_options,x_flag_tree_loop_ivcanon> x_flag_tree_loop_ivcanon;
	 generic_field_name <"x_flag_tree_loop_optimize",gcc_options,x_flag_tree_loop_optimize> x_flag_tree_loop_optimize;
	 generic_field_name <"x_flag_tree_live_range_split",gcc_options,x_flag_tree_live_range_split> x_flag_tree_live_range_split;
	 generic_field_name <"x_flag_tree_parallelize_loops",gcc_options,x_flag_tree_parallelize_loops> x_flag_tree_parallelize_loops;
	 generic_field_name <"x_flag_tree_partial_pre",gcc_options,x_flag_tree_partial_pre> x_flag_tree_partial_pre;
	 generic_field_name <"x_flag_tree_phiprop",gcc_options,x_flag_tree_phiprop> x_flag_tree_phiprop;
	 generic_field_name <"x_flag_tree_pre",gcc_options,x_flag_tree_pre> x_flag_tree_pre;
	 generic_field_name <"x_flag_tree_pta",gcc_options,x_flag_tree_pta> x_flag_tree_pta;
	 generic_field_name <"x_flag_tree_reassoc",gcc_options,x_flag_tree_reassoc> x_flag_tree_reassoc;
	 generic_field_name <"x_flag_tree_scev_cprop",gcc_options,x_flag_tree_scev_cprop> x_flag_tree_scev_cprop;
	 generic_field_name <"x_flag_tree_sink",gcc_options,x_flag_tree_sink> x_flag_tree_sink;
	 generic_field_name <"x_flag_tree_slp_vectorize",gcc_options,x_flag_tree_slp_vectorize> x_flag_tree_slp_vectorize;
	 generic_field_name <"x_flag_tree_sra",gcc_options,x_flag_tree_sra> x_flag_tree_sra;
	 generic_field_name <"x_flag_tree_switch_conversion",gcc_options,x_flag_tree_switch_conversion> x_flag_tree_switch_conversion;
	 generic_field_name <"x_flag_tree_tail_merge",gcc_options,x_flag_tree_tail_merge> x_flag_tree_tail_merge;
	 generic_field_name <"x_flag_tree_ter",gcc_options,x_flag_tree_ter> x_flag_tree_ter;
	 generic_field_name <"x_flag_tree_vect_loop_version",gcc_options,x_flag_tree_vect_loop_version> x_flag_tree_vect_loop_version;
	 generic_field_name <"x_flag_tree_vectorize",gcc_options,x_flag_tree_vectorize> x_flag_tree_vectorize;
	 generic_field_name <"x_flag_tree_vrp",gcc_options,x_flag_tree_vrp> x_flag_tree_vrp;
	 generic_field_name <"x_flag_unit_at_a_time",gcc_options,x_flag_unit_at_a_time> x_flag_unit_at_a_time;
	 generic_field_name <"x_flag_unroll_all_loops",gcc_options,x_flag_unroll_all_loops> x_flag_unroll_all_loops;
	 generic_field_name <"x_flag_unroll_loops",gcc_options,x_flag_unroll_loops> x_flag_unroll_loops;
	 generic_field_name <"x_flag_unsafe_loop_optimizations",gcc_options,x_flag_unsafe_loop_optimizations> x_flag_unsafe_loop_optimizations;
	 generic_field_name <"x_flag_unsafe_math_optimizations",gcc_options,x_flag_unsafe_math_optimizations> x_flag_unsafe_math_optimizations;
	 generic_field_name <"x_flag_unswitch_loops",gcc_options,x_flag_unswitch_loops> x_flag_unswitch_loops;
	 generic_field_name <"x_flag_unwind_tables",gcc_options,x_flag_unwind_tables> x_flag_unwind_tables;
	 generic_field_name <"x_flag_use_atomic_builtins",gcc_options,x_flag_use_atomic_builtins> x_flag_use_atomic_builtins;
	 generic_field_name <"x_flag_use_boehm_gc",gcc_options,x_flag_use_boehm_gc> x_flag_use_boehm_gc;
	 generic_field_name <"x_flag_use_cxa_atexit",gcc_options,x_flag_use_cxa_atexit> x_flag_use_cxa_atexit;
	 generic_field_name <"x_flag_use_cxa_get_exception_ptr",gcc_options,x_flag_use_cxa_get_exception_ptr> x_flag_use_cxa_get_exception_ptr;
	 generic_field_name <"x_flag_use_divide_subroutine",gcc_options,x_flag_use_divide_subroutine> x_flag_use_divide_subroutine;
	 generic_field_name <"x_flag_var_tracking",gcc_options,x_flag_var_tracking> x_flag_var_tracking;
	 generic_field_name <"x_flag_var_tracking_assignments",gcc_options,x_flag_var_tracking_assignments> x_flag_var_tracking_assignments;
	 generic_field_name <"x_flag_var_tracking_assignments_toggle",gcc_options,x_flag_var_tracking_assignments_toggle> x_flag_var_tracking_assignments_toggle;
	 generic_field_name <"x_flag_var_tracking_uninit",gcc_options,x_flag_var_tracking_uninit> x_flag_var_tracking_uninit;
	 generic_field_name <"x_flag_variable_expansion_in_unroller",gcc_options,x_flag_variable_expansion_in_unroller> x_flag_variable_expansion_in_unroller;
	 generic_field_name <"x_flag_vect_cost_model",gcc_options,x_flag_vect_cost_model> x_flag_vect_cost_model;
	 generic_field_name <"x_flag_verbose_asm",gcc_options,x_flag_verbose_asm> x_flag_verbose_asm;
	 generic_field_name <"x_flag_visibility_ms_compat",gcc_options,x_flag_visibility_ms_compat> x_flag_visibility_ms_compat;
	 generic_field_name <"x_default_visibility",gcc_options,x_default_visibility> x_default_visibility;
	 generic_field_name <"x_flag_value_profile_transformations",gcc_options,x_flag_value_profile_transformations> x_flag_value_profile_transformations;
	 generic_field_name <"x_flag_weak",gcc_options,x_flag_weak> x_flag_weak;
	 generic_field_name <"x_flag_web",gcc_options,x_flag_web> x_flag_web;
	 generic_field_name <"x_flag_whole_program",gcc_options,x_flag_whole_program> x_flag_whole_program;
	 generic_field_name <"x_flag_working_directory",gcc_options,x_flag_working_directory> x_flag_working_directory;
	 generic_field_name <"x_flag_wpa",gcc_options,x_flag_wpa> x_flag_wpa;
	 generic_field_name <"x_flag_wrapv",gcc_options,x_flag_wrapv> x_flag_wrapv;
	 generic_field_name <"x_flag_zero_initialized_in_bss",gcc_options,x_flag_zero_initialized_in_bss> x_flag_zero_initialized_in_bss;
	 generic_field_name <"x_flag_zero_link",gcc_options,x_flag_zero_link> x_flag_zero_link;
	 generic_field_name <"x_dwarf_version",gcc_options,x_dwarf_version> x_dwarf_version;
	 generic_field_name <"x_flag_gen_declaration",gcc_options,x_flag_gen_declaration> x_flag_gen_declaration;
	 generic_field_name <"x_dwarf_record_gcc_switches",gcc_options,x_dwarf_record_gcc_switches> x_dwarf_record_gcc_switches;
	 generic_field_name <"x_dwarf_strict",gcc_options,x_dwarf_strict> x_dwarf_strict;
	 generic_field_name <"x_flag_gtoggle",gcc_options,x_flag_gtoggle> x_flag_gtoggle;
	 generic_field_name <"x_imultiarch",gcc_options,x_imultiarch> x_imultiarch;
	 generic_field_name <"x_plugindir_string",gcc_options,x_plugindir_string> x_plugindir_string;
	 generic_field_name <"x_ix86_abi",gcc_options,x_ix86_abi> x_ix86_abi;
	 generic_field_name <"x_flag_android",gcc_options,x_flag_android> x_flag_android;
	 generic_field_name <"x_ix86_arch_string",gcc_options,x_ix86_arch_string> x_ix86_arch_string;
	 generic_field_name <"x_ix86_asm_dialect",gcc_options,x_ix86_asm_dialect> x_ix86_asm_dialect;
	 generic_field_name <"x_linux_libc",gcc_options,x_linux_libc> x_linux_libc;
	 generic_field_name <"x_ix86_branch_cost",gcc_options,x_ix86_branch_cost> x_ix86_branch_cost;
	 generic_field_name <"x_ix86_cmodel",gcc_options,x_ix86_cmodel> x_ix86_cmodel;
	 generic_field_name <"x_flag_dispatch_scheduler",gcc_options,x_flag_dispatch_scheduler> x_flag_dispatch_scheduler;
	 generic_field_name <"x_flag_fentry",gcc_options,x_flag_fentry> x_flag_fentry;
	 generic_field_name <"x_ix86_force_drap",gcc_options,x_ix86_force_drap> x_ix86_force_drap;
	 generic_field_name <"x_ix86_fpmath",gcc_options,x_ix86_fpmath> x_ix86_fpmath;
	 generic_field_name <"x_ix86_incoming_stack_boundary_arg",gcc_options,x_ix86_incoming_stack_boundary_arg> x_ix86_incoming_stack_boundary_arg;
	 generic_field_name <"x_ix86_section_threshold",gcc_options,x_ix86_section_threshold> x_ix86_section_threshold;
	 generic_field_name <"x_ix86_preferred_stack_boundary_arg",gcc_options,x_ix86_preferred_stack_boundary_arg> x_ix86_preferred_stack_boundary_arg;
	 generic_field_name <"x_ix86_recip_name",gcc_options,x_ix86_recip_name> x_ix86_recip_name;
	 generic_field_name <"x_ix86_regparm",gcc_options,x_ix86_regparm> x_ix86_regparm;
	 generic_field_name <"x_ix86_sse2avx",gcc_options,x_ix86_sse2avx> x_ix86_sse2avx;
	 generic_field_name <"x_ix86_force_align_arg_pointer",gcc_options,x_ix86_force_align_arg_pointer> x_ix86_force_align_arg_pointer;
	 generic_field_name <"x_ix86_stringop_alg",gcc_options,x_ix86_stringop_alg> x_ix86_stringop_alg;
	 generic_field_name <"x_ix86_tls_dialect",gcc_options,x_ix86_tls_dialect> x_ix86_tls_dialect;
	 generic_field_name <"x_ix86_tune_string",gcc_options,x_ix86_tune_string> x_ix86_tune_string;
	 generic_field_name <"x_ix86_veclibabi_type",gcc_options,x_ix86_veclibabi_type> x_ix86_veclibabi_type;
	 generic_field_name <"x_asm_file_name",gcc_options,x_asm_file_name> x_asm_file_name;
	 generic_field_name <"x_pass_exit_codes",gcc_options,x_pass_exit_codes> x_pass_exit_codes;
	 generic_field_name <"x_pedantic",gcc_options,x_pedantic> x_pedantic;
	 generic_field_name <"x_flag_pedantic_errors",gcc_options,x_flag_pedantic_errors> x_flag_pedantic_errors;
	 generic_field_name <"x_use_pipes",gcc_options,x_use_pipes> x_use_pipes;
	 generic_field_name <"x_print_file_name",gcc_options,x_print_file_name> x_print_file_name;
	 generic_field_name <"x_print_multi_directory",gcc_options,x_print_multi_directory> x_print_multi_directory;
	 generic_field_name <"x_print_multi_lib",gcc_options,x_print_multi_lib> x_print_multi_lib;
	 generic_field_name <"x_print_multi_os_directory",gcc_options,x_print_multi_os_directory> x_print_multi_os_directory;
	 generic_field_name <"x_print_multiarch",gcc_options,x_print_multiarch> x_print_multiarch;
	 generic_field_name <"x_print_prog_name",gcc_options,x_print_prog_name> x_print_prog_name;
	 generic_field_name <"x_print_search_dirs",gcc_options,x_print_search_dirs> x_print_search_dirs;
	 generic_field_name <"x_print_sysroot",gcc_options,x_print_sysroot> x_print_sysroot;
	 generic_field_name <"x_print_sysroot_headers_suffix",gcc_options,x_print_sysroot_headers_suffix> x_print_sysroot_headers_suffix;
	 generic_field_name <"x_quiet_flag",gcc_options,x_quiet_flag> x_quiet_flag;
	 generic_field_name <"x_report_times",gcc_options,x_report_times> x_report_times;
	 generic_field_name <"x_flag_undef",gcc_options,x_flag_undef> x_flag_undef;
	 generic_field_name <"x_verbose_flag",gcc_options,x_verbose_flag> x_verbose_flag;
	 generic_field_name <"x_version_flag",gcc_options,x_version_flag> x_version_flag;
	 generic_field_name <"x_inhibit_warnings",gcc_options,x_inhibit_warnings> x_inhibit_warnings;
	 generic_field_name <"x_wrapper_string",gcc_options,x_wrapper_string> x_wrapper_string;
	 generic_field_name <"x_VAR_malign_functions_",gcc_options,x_VAR_malign_functions_> x_VAR_malign_functions_;
	 generic_field_name <"x_VAR_malign_jumps_",gcc_options,x_VAR_malign_jumps_> x_VAR_malign_jumps_;
	 generic_field_name <"x_VAR_malign_loops_",gcc_options,x_VAR_malign_loops_> x_VAR_malign_loops_;
	 generic_field_name <"x_VAR_mpc32",gcc_options,x_VAR_mpc32> x_VAR_mpc32;
	 generic_field_name <"x_VAR_mpc64",gcc_options,x_VAR_mpc64> x_VAR_mpc64;
	 generic_field_name <"x_VAR_mpc80",gcc_options,x_VAR_mpc80> x_VAR_mpc80;
	 generic_field_name <"frontend_set_flag_associative_math",gcc_options,frontend_set_flag_associative_math> frontend_set_flag_associative_math;
	 generic_field_name <"frontend_set_flag_cx_limited_range",gcc_options,frontend_set_flag_cx_limited_range> frontend_set_flag_cx_limited_range;
	 generic_field_name <"frontend_set_flag_finite_math_only",gcc_options,frontend_set_flag_finite_math_only> frontend_set_flag_finite_math_only;
	 generic_field_name <"frontend_set_flag_errno_math",gcc_options,frontend_set_flag_errno_math> frontend_set_flag_errno_math;
	 generic_field_name <"frontend_set_flag_reciprocal_math",gcc_options,frontend_set_flag_reciprocal_math> frontend_set_flag_reciprocal_math;
	 generic_field_name <"frontend_set_flag_rounding_math",gcc_options,frontend_set_flag_rounding_math> frontend_set_flag_rounding_math;
	 generic_field_name <"frontend_set_flag_signaling_nans",gcc_options,frontend_set_flag_signaling_nans> frontend_set_flag_signaling_nans;
	 generic_field_name <"frontend_set_flag_signed_zeros",gcc_options,frontend_set_flag_signed_zeros> frontend_set_flag_signed_zeros;
	 generic_field_name <"frontend_set_flag_trapping_math",gcc_options,frontend_set_flag_trapping_math> frontend_set_flag_trapping_math;
	 generic_field_name <"frontend_set_flag_unsafe_math_optimizations",gcc_options,frontend_set_flag_unsafe_math_optimizations> frontend_set_flag_unsafe_math_optimizations;
}; 
class CLS_429_gcc_options{ 
	 generic_class_name <"gcc_options",gcc_options> the_class_name;
	 generic_field_name <"x_recip_mask",gcc_options,x_recip_mask> x_recip_mask;
	 generic_field_name <"x_frame_larger_than_size",gcc_options,x_frame_larger_than_size> x_frame_larger_than_size;
	 generic_field_name <"x_ix86_isa_flags",gcc_options,x_ix86_isa_flags> x_ix86_isa_flags;
	 generic_field_name <"x_ix86_isa_flags_explicit",gcc_options,x_ix86_isa_flags_explicit> x_ix86_isa_flags_explicit;
	 generic_field_name <"x_larger_than_size",gcc_options,x_larger_than_size> x_larger_than_size;
	 generic_field_name <"x_exit_after_options",gcc_options,x_exit_after_options> x_exit_after_options;
	 generic_field_name <"x_flag_dump_all_passed",gcc_options,x_flag_dump_all_passed> x_flag_dump_all_passed;
	 generic_field_name <"x_flag_opts_finished",gcc_options,x_flag_opts_finished> x_flag_opts_finished;
	 generic_field_name <"x_flag_stack_usage_info",gcc_options,x_flag_stack_usage_info> x_flag_stack_usage_info;
	 generic_field_name <"x_flag_warn_unused_result",gcc_options,x_flag_warn_unused_result> x_flag_warn_unused_result;
	 generic_field_name <"x_in_lto_p",gcc_options,x_in_lto_p> x_in_lto_p;
	 generic_field_name <"x_use_gnu_debug_info_extensions",gcc_options,x_use_gnu_debug_info_extensions> x_use_gnu_debug_info_extensions;
	 generic_field_name <"x_warn_frame_larger_than",gcc_options,x_warn_frame_larger_than> x_warn_frame_larger_than;
	 generic_field_name <"x_warn_larger_than",gcc_options,x_warn_larger_than> x_warn_larger_than;
	 generic_field_name <"x_help_enum_printed",gcc_options,x_help_enum_printed> x_help_enum_printed;
	 generic_field_name <"x_help_printed",gcc_options,x_help_printed> x_help_printed;
	 generic_field_name <"x_main_input_basename",gcc_options,x_main_input_basename> x_main_input_basename;
	 generic_field_name <"x_main_input_filename",gcc_options,x_main_input_filename> x_main_input_filename;
	 generic_field_name <"x_debug_info_level",gcc_options,x_debug_info_level> x_debug_info_level;
	 generic_field_name <"x_write_symbols",gcc_options,x_write_symbols> x_write_symbols;
	 generic_field_name <"x_debug_struct_generic",gcc_options,x_debug_struct_generic> x_debug_struct_generic;
	 generic_field_name <"x_debug_struct_ordinary",gcc_options,x_debug_struct_ordinary> x_debug_struct_ordinary;
	 generic_field_name <"x_graph_dump_format",gcc_options,x_graph_dump_format> x_graph_dump_format;
	 generic_field_name <"x_flag_stack_check",gcc_options,x_flag_stack_check> x_flag_stack_check;
	 generic_field_name <"x_user_vect_verbosity_level",gcc_options,x_user_vect_verbosity_level> x_user_vect_verbosity_level;
	 generic_field_name <"x_param_values",gcc_options,x_param_values> x_param_values;
	 generic_field_name <"x_flag_complex_method",gcc_options,x_flag_complex_method> x_flag_complex_method;
	 generic_field_name <"x_flag_debug_asm",gcc_options,x_flag_debug_asm> x_flag_debug_asm;
	 generic_field_name <"x_flag_dump_rtl_in_asm",gcc_options,x_flag_dump_rtl_in_asm> x_flag_dump_rtl_in_asm;
	 generic_field_name <"x_flag_evaluation_order",gcc_options,x_flag_evaluation_order> x_flag_evaluation_order;
	 generic_field_name <"x_flag_gen_aux_info",gcc_options,x_flag_gen_aux_info> x_flag_gen_aux_info;
	 generic_field_name <"x_flag_generate_lto",gcc_options,x_flag_generate_lto> x_flag_generate_lto;
	 generic_field_name <"x_flag_print_asm_name",gcc_options,x_flag_print_asm_name> x_flag_print_asm_name;
	 generic_field_name <"x_flag_shlib",gcc_options,x_flag_shlib> x_flag_shlib;
	 generic_field_name <"x_main_input_baselength",gcc_options,x_main_input_baselength> x_main_input_baselength;
	 generic_field_name <"x_optimize",gcc_options,x_optimize> x_optimize;
	 generic_field_name <"x_optimize_fast",gcc_options,x_optimize_fast> x_optimize_fast;
	 generic_field_name <"x_optimize_size",gcc_options,x_optimize_size> x_optimize_size;
	 generic_field_name <"x_recip_mask_explicit",gcc_options,x_recip_mask_explicit> x_recip_mask_explicit;
	 generic_field_name <"x_rtl_dump_and_exit",gcc_options,x_rtl_dump_and_exit> x_rtl_dump_and_exit;
	 generic_field_name <"x_target_flags",gcc_options,x_target_flags> x_target_flags;
	 generic_field_name <"x_help_columns",gcc_options,x_help_columns> x_help_columns;
	 generic_field_name <"x_initial_max_fld_align",gcc_options,x_initial_max_fld_align> x_initial_max_fld_align;
	 generic_field_name <"x_flag_instrument_functions_exclude_files",gcc_options,x_flag_instrument_functions_exclude_files> x_flag_instrument_functions_exclude_files;
	 generic_field_name <"x_flag_instrument_functions_exclude_functions",gcc_options,x_flag_instrument_functions_exclude_functions> x_flag_instrument_functions_exclude_functions;
	 generic_field_name <"x_help_flag",gcc_options,x_help_flag> x_help_flag;
	 generic_field_name <"x_flag_preprocess_only",gcc_options,x_flag_preprocess_only> x_flag_preprocess_only;
	 generic_field_name <"x_warn_abi",gcc_options,x_warn_abi> x_warn_abi;
	 generic_field_name <"x_warn_address",gcc_options,x_warn_address> x_warn_address;
	 generic_field_name <"x_warn_aggregate_return",gcc_options,x_warn_aggregate_return> x_warn_aggregate_return;
	 generic_field_name <"x_warn_array_bounds",gcc_options,x_warn_array_bounds> x_warn_array_bounds;
	 generic_field_name <"x_warn_assign_intercept",gcc_options,x_warn_assign_intercept> x_warn_assign_intercept;
	 generic_field_name <"x_warn_attributes",gcc_options,x_warn_attributes> x_warn_attributes;
	 generic_field_name <"x_warn_bad_function_cast",gcc_options,x_warn_bad_function_cast> x_warn_bad_function_cast;
	 generic_field_name <"x_warn_cxx_compat",gcc_options,x_warn_cxx_compat> x_warn_cxx_compat;
	 generic_field_name <"x_warn_cxx0x_compat",gcc_options,x_warn_cxx0x_compat> x_warn_cxx0x_compat;
	 generic_field_name <"x_warn_cast_align",gcc_options,x_warn_cast_align> x_warn_cast_align;
	 generic_field_name <"x_warn_cast_qual",gcc_options,x_warn_cast_qual> x_warn_cast_qual;
	 generic_field_name <"x_warn_char_subscripts",gcc_options,x_warn_char_subscripts> x_warn_char_subscripts;
	 generic_field_name <"x_warn_clobbered",gcc_options,x_warn_clobbered> x_warn_clobbered;
	 generic_field_name <"x_warn_conversion",gcc_options,x_warn_conversion> x_warn_conversion;
	 generic_field_name <"x_warn_conversion_null",gcc_options,x_warn_conversion_null> x_warn_conversion_null;
	 generic_field_name <"x_warn_coverage_mismatch",gcc_options,x_warn_coverage_mismatch> x_warn_coverage_mismatch;
	 generic_field_name <"x_warn_cpp",gcc_options,x_warn_cpp> x_warn_cpp;
	 generic_field_name <"x_warn_ctor_dtor_privacy",gcc_options,x_warn_ctor_dtor_privacy> x_warn_ctor_dtor_privacy;
	 generic_field_name <"x_warn_declaration_after_statement",gcc_options,x_warn_declaration_after_statement> x_warn_declaration_after_statement;
	 generic_field_name <"x_warn_delnonvdtor",gcc_options,x_warn_delnonvdtor> x_warn_delnonvdtor;
	 generic_field_name <"x_warn_deprecated",gcc_options,x_warn_deprecated> x_warn_deprecated;
	 generic_field_name <"x_warn_deprecated_decl",gcc_options,x_warn_deprecated_decl> x_warn_deprecated_decl;
	 generic_field_name <"x_warn_disabled_optimization",gcc_options,x_warn_disabled_optimization> x_warn_disabled_optimization;
	 generic_field_name <"x_warn_div_by_zero",gcc_options,x_warn_div_by_zero> x_warn_div_by_zero;
	 generic_field_name <"x_warn_double_promotion",gcc_options,x_warn_double_promotion> x_warn_double_promotion;
	 generic_field_name <"x_warn_ecpp",gcc_options,x_warn_ecpp> x_warn_ecpp;
	 generic_field_name <"x_warn_empty_body",gcc_options,x_warn_empty_body> x_warn_empty_body;
	 generic_field_name <"x_warn_enum_compare",gcc_options,x_warn_enum_compare> x_warn_enum_compare;
	 generic_field_name <"x_warnings_are_errors",gcc_options,x_warnings_are_errors> x_warnings_are_errors;
	 generic_field_name <"x_extra_warnings",gcc_options,x_extra_warnings> x_extra_warnings;
	 generic_field_name <"x_flag_extraneous_semicolon",gcc_options,x_flag_extraneous_semicolon> x_flag_extraneous_semicolon;
	 generic_field_name <"x_flag_fatal_errors",gcc_options,x_flag_fatal_errors> x_flag_fatal_errors;
	 generic_field_name <"x_warn_float_equal",gcc_options,x_warn_float_equal> x_warn_float_equal;
	 generic_field_name <"x_warn_format_contains_nul",gcc_options,x_warn_format_contains_nul> x_warn_format_contains_nul;
	 generic_field_name <"x_warn_format_extra_args",gcc_options,x_warn_format_extra_args> x_warn_format_extra_args;
	 generic_field_name <"x_warn_format_nonliteral",gcc_options,x_warn_format_nonliteral> x_warn_format_nonliteral;
	 generic_field_name <"x_warn_format_security",gcc_options,x_warn_format_security> x_warn_format_security;
	 generic_field_name <"x_warn_format_y2k",gcc_options,x_warn_format_y2k> x_warn_format_y2k;
	 generic_field_name <"x_warn_format_zero_length",gcc_options,x_warn_format_zero_length> x_warn_format_zero_length;
	 generic_field_name <"x_warn_free_nonheap_object",gcc_options,x_warn_free_nonheap_object> x_warn_free_nonheap_object;
	 generic_field_name <"x_warn_ignored_qualifiers",gcc_options,x_warn_ignored_qualifiers> x_warn_ignored_qualifiers;
	 generic_field_name <"x_warn_implicit",gcc_options,x_warn_implicit> x_warn_implicit;
	 generic_field_name <"x_warn_implicit_function_declaration",gcc_options,x_warn_implicit_function_declaration> x_warn_implicit_function_declaration;
	 generic_field_name <"x_warn_implicit_int",gcc_options,x_warn_implicit_int> x_warn_implicit_int;
	 generic_field_name <"x_warn_init_self",gcc_options,x_warn_init_self> x_warn_init_self;
	 generic_field_name <"x_warn_inline",gcc_options,x_warn_inline> x_warn_inline;
	 generic_field_name <"x_warn_int_to_pointer_cast",gcc_options,x_warn_int_to_pointer_cast> x_warn_int_to_pointer_cast;
	 generic_field_name <"x_warn_invalid_memory_model",gcc_options,x_warn_invalid_memory_model> x_warn_invalid_memory_model;
	 generic_field_name <"x_warn_invalid_offsetof",gcc_options,x_warn_invalid_offsetof> x_warn_invalid_offsetof;
	 generic_field_name <"x_warn_jump_misses_init",gcc_options,x_warn_jump_misses_init> x_warn_jump_misses_init;
	 generic_field_name <"x_warn_logical_op",gcc_options,x_warn_logical_op> x_warn_logical_op;
	 generic_field_name <"x_warn_long_long",gcc_options,x_warn_long_long> x_warn_long_long;
	 generic_field_name <"x_warn_main",gcc_options,x_warn_main> x_warn_main;
	 generic_field_name <"x_warn_maybe_uninitialized",gcc_options,x_warn_maybe_uninitialized> x_warn_maybe_uninitialized;
	 generic_field_name <"x_warn_missing_braces",gcc_options,x_warn_missing_braces> x_warn_missing_braces;
	 generic_field_name <"x_warn_missing_declarations",gcc_options,x_warn_missing_declarations> x_warn_missing_declarations;
	 generic_field_name <"x_warn_missing_field_initializers",gcc_options,x_warn_missing_field_initializers> x_warn_missing_field_initializers;
	 generic_field_name <"x_warn_missing_format_attribute",gcc_options,x_warn_missing_format_attribute> x_warn_missing_format_attribute;
	 generic_field_name <"x_warn_missing_noreturn",gcc_options,x_warn_missing_noreturn> x_warn_missing_noreturn;
	 generic_field_name <"x_warn_missing_parameter_type",gcc_options,x_warn_missing_parameter_type> x_warn_missing_parameter_type;
	 generic_field_name <"x_warn_missing_prototypes",gcc_options,x_warn_missing_prototypes> x_warn_missing_prototypes;
	 generic_field_name <"x_warn_mudflap",gcc_options,x_warn_mudflap> x_warn_mudflap;
	 generic_field_name <"x_warn_narrowing",gcc_options,x_warn_narrowing> x_warn_narrowing;
	 generic_field_name <"x_warn_nested_externs",gcc_options,x_warn_nested_externs> x_warn_nested_externs;
	 generic_field_name <"x_warn_noexcept",gcc_options,x_warn_noexcept> x_warn_noexcept;
	 generic_field_name <"x_warn_nontemplate_friend",gcc_options,x_warn_nontemplate_friend> x_warn_nontemplate_friend;
	 generic_field_name <"x_warn_nonvdtor",gcc_options,x_warn_nonvdtor> x_warn_nonvdtor;
	 generic_field_name <"x_warn_nonnull",gcc_options,x_warn_nonnull> x_warn_nonnull;
	 generic_field_name <"x_warn_old_style_cast",gcc_options,x_warn_old_style_cast> x_warn_old_style_cast;
	 generic_field_name <"x_warn_old_style_declaration",gcc_options,x_warn_old_style_declaration> x_warn_old_style_declaration;
	 generic_field_name <"x_warn_old_style_definition",gcc_options,x_warn_old_style_definition> x_warn_old_style_definition;
	 generic_field_name <"x_flag_newer",gcc_options,x_flag_newer> x_flag_newer;
	 generic_field_name <"x_warn_overflow",gcc_options,x_warn_overflow> x_warn_overflow;
	 generic_field_name <"x_warn_overlength_strings",gcc_options,x_warn_overlength_strings> x_warn_overlength_strings;
	 generic_field_name <"x_warn_overloaded_virtual",gcc_options,x_warn_overloaded_virtual> x_warn_overloaded_virtual;
	 generic_field_name <"x_warn_override_init",gcc_options,x_warn_override_init> x_warn_override_init;
	 generic_field_name <"x_warn_packed",gcc_options,x_warn_packed> x_warn_packed;
	 generic_field_name <"x_warn_packed_bitfield_compat",gcc_options,x_warn_packed_bitfield_compat> x_warn_packed_bitfield_compat;
	 generic_field_name <"x_warn_padded",gcc_options,x_warn_padded> x_warn_padded;
	 generic_field_name <"x_warn_parentheses",gcc_options,x_warn_parentheses> x_warn_parentheses;
	 generic_field_name <"x_warn_pmf2ptr",gcc_options,x_warn_pmf2ptr> x_warn_pmf2ptr;
	 generic_field_name <"x_warn_pointer_arith",gcc_options,x_warn_pointer_arith> x_warn_pointer_arith;
	 generic_field_name <"x_warn_pointer_sign",gcc_options,x_warn_pointer_sign> x_warn_pointer_sign;
	 generic_field_name <"x_warn_pointer_to_int_cast",gcc_options,x_warn_pointer_to_int_cast> x_warn_pointer_to_int_cast;
	 generic_field_name <"x_warn_pragmas",gcc_options,x_warn_pragmas> x_warn_pragmas;
	 generic_field_name <"x_warn_property_assign_default",gcc_options,x_warn_property_assign_default> x_warn_property_assign_default;
	 generic_field_name <"x_warn_protocol",gcc_options,x_warn_protocol> x_warn_protocol;
	 generic_field_name <"x_warn_psabi",gcc_options,x_warn_psabi> x_warn_psabi;
	 generic_field_name <"x_warn_redundant_decls",gcc_options,x_warn_redundant_decls> x_warn_redundant_decls;
	 generic_field_name <"x_flag_redundant",gcc_options,x_flag_redundant> x_flag_redundant;
	 generic_field_name <"x_warn_reorder",gcc_options,x_warn_reorder> x_warn_reorder;
	 generic_field_name <"x_warn_return_type",gcc_options,x_warn_return_type> x_warn_return_type;
	 generic_field_name <"x_warn_selector",gcc_options,x_warn_selector> x_warn_selector;
	 generic_field_name <"x_warn_sequence_point",gcc_options,x_warn_sequence_point> x_warn_sequence_point;
	 generic_field_name <"x_warn_shadow",gcc_options,x_warn_shadow> x_warn_shadow;
	 generic_field_name <"x_warn_sign_compare",gcc_options,x_warn_sign_compare> x_warn_sign_compare;
	 generic_field_name <"x_warn_sign_conversion",gcc_options,x_warn_sign_conversion> x_warn_sign_conversion;
	 generic_field_name <"x_warn_sign_promo",gcc_options,x_warn_sign_promo> x_warn_sign_promo;
	 generic_field_name <"x_warn_stack_protect",gcc_options,x_warn_stack_protect> x_warn_stack_protect;
	 generic_field_name <"x_warn_stack_usage",gcc_options,x_warn_stack_usage> x_warn_stack_usage;
	 generic_field_name <"x_warn_strict_aliasing",gcc_options,x_warn_strict_aliasing> x_warn_strict_aliasing;
	 generic_field_name <"x_warn_strict_null_sentinel",gcc_options,x_warn_strict_null_sentinel> x_warn_strict_null_sentinel;
	 generic_field_name <"x_warn_strict_overflow",gcc_options,x_warn_strict_overflow> x_warn_strict_overflow;
	 generic_field_name <"x_warn_strict_prototypes",gcc_options,x_warn_strict_prototypes> x_warn_strict_prototypes;
	 generic_field_name <"x_warn_strict_selector_match",gcc_options,x_warn_strict_selector_match> x_warn_strict_selector_match;
	 generic_field_name <"x_warn_suggest_attribute_const",gcc_options,x_warn_suggest_attribute_const> x_warn_suggest_attribute_const;
	 generic_field_name <"x_warn_suggest_attribute_noreturn",gcc_options,x_warn_suggest_attribute_noreturn> x_warn_suggest_attribute_noreturn;
	 generic_field_name <"x_warn_suggest_attribute_pure",gcc_options,x_warn_suggest_attribute_pure> x_warn_suggest_attribute_pure;
	 generic_field_name <"x_warn_switch",gcc_options,x_warn_switch> x_warn_switch;
	 generic_field_name <"x_warn_switch_default",gcc_options,x_warn_switch_default> x_warn_switch_default;
	 generic_field_name <"x_warn_switch_enum",gcc_options,x_warn_switch_enum> x_warn_switch_enum;
	 generic_field_name <"x_warn_sync_nand",gcc_options,x_warn_sync_nand> x_warn_sync_nand;
	 generic_field_name <"x_warn_synth",gcc_options,x_warn_synth> x_warn_synth;
	 generic_field_name <"x_warn_system_headers",gcc_options,x_warn_system_headers> x_warn_system_headers;
	 generic_field_name <"x_warn_traditional",gcc_options,x_warn_traditional> x_warn_traditional;
	 generic_field_name <"x_warn_traditional_conversion",gcc_options,x_warn_traditional_conversion> x_warn_traditional_conversion;
	 generic_field_name <"x_warn_trampolines",gcc_options,x_warn_trampolines> x_warn_trampolines;
	 generic_field_name <"x_warn_type_limits",gcc_options,x_warn_type_limits> x_warn_type_limits;
	 generic_field_name <"x_warn_undeclared_selector",gcc_options,x_warn_undeclared_selector> x_warn_undeclared_selector;
	 generic_field_name <"x_warn_uninitialized",gcc_options,x_warn_uninitialized> x_warn_uninitialized;
	 generic_field_name <"x_warn_unsafe_loop_optimizations",gcc_options,x_warn_unsafe_loop_optimizations> x_warn_unsafe_loop_optimizations;
	 generic_field_name <"x_warn_unsuffixed_float_constants",gcc_options,x_warn_unsuffixed_float_constants> x_warn_unsuffixed_float_constants;
	 generic_field_name <"x_warn_unused",gcc_options,x_warn_unused> x_warn_unused;
	 generic_field_name <"x_warn_unused_but_set_parameter",gcc_options,x_warn_unused_but_set_parameter> x_warn_unused_but_set_parameter;
	 generic_field_name <"x_warn_unused_but_set_variable",gcc_options,x_warn_unused_but_set_variable> x_warn_unused_but_set_variable;
	 generic_field_name <"x_warn_unused_function",gcc_options,x_warn_unused_function> x_warn_unused_function;
	 generic_field_name <"x_warn_unused_label",gcc_options,x_warn_unused_label> x_warn_unused_label;
	 generic_field_name <"x_warn_unused_local_typedefs",gcc_options,x_warn_unused_local_typedefs> x_warn_unused_local_typedefs;
	 generic_field_name <"x_warn_unused_parameter",gcc_options,x_warn_unused_parameter> x_warn_unused_parameter;
	 generic_field_name <"x_warn_unused_result",gcc_options,x_warn_unused_result> x_warn_unused_result;
	 generic_field_name <"x_warn_unused_value",gcc_options,x_warn_unused_value> x_warn_unused_value;
	 generic_field_name <"x_warn_unused_variable",gcc_options,x_warn_unused_variable> x_warn_unused_variable;
	 generic_field_name <"x_warn_vector_operation_performance",gcc_options,x_warn_vector_operation_performance> x_warn_vector_operation_performance;
	 generic_field_name <"x_warn_vla",gcc_options,x_warn_vla> x_warn_vla;
	 generic_field_name <"x_warn_volatile_register_var",gcc_options,x_warn_volatile_register_var> x_warn_volatile_register_var;
	 generic_field_name <"x_warn_write_strings",gcc_options,x_warn_write_strings> x_warn_write_strings;
	 generic_field_name <"x_warn_zero_as_null_pointer_constant",gcc_options,x_warn_zero_as_null_pointer_constant> x_warn_zero_as_null_pointer_constant;
	 generic_field_name <"x_aux_info_file_name",gcc_options,x_aux_info_file_name> x_aux_info_file_name;
	 generic_field_name <"x_aux_base_name",gcc_options,x_aux_base_name> x_aux_base_name;
	 generic_field_name <"x_dump_base_name",gcc_options,x_dump_base_name> x_dump_base_name;
	 generic_field_name <"x_dump_dir_name",gcc_options,x_dump_dir_name> x_dump_dir_name;
	 generic_field_name <"x_flag_pic",gcc_options,x_flag_pic> x_flag_pic;
	 generic_field_name <"x_flag_pie",gcc_options,x_flag_pie> x_flag_pie;
	 generic_field_name <"x_flag_abi_version",gcc_options,x_flag_abi_version> x_flag_abi_version;
	 generic_field_name <"x_flag_access_control",gcc_options,x_flag_access_control> x_flag_access_control;
	 generic_field_name <"x_align_functions",gcc_options,x_align_functions> x_align_functions;
	 generic_field_name <"x_align_jumps",gcc_options,x_align_jumps> x_align_jumps;
	 generic_field_name <"x_align_labels",gcc_options,x_align_labels> x_align_labels;
	 generic_field_name <"x_align_loops",gcc_options,x_align_loops> x_align_loops;
	 generic_field_name <"x_flag_allow_parameterless_variadic_functions",gcc_options,x_flag_allow_parameterless_variadic_functions> x_flag_allow_parameterless_variadic_functions;
	 generic_field_name <"x_flag_no_asm",gcc_options,x_flag_no_asm> x_flag_no_asm;
	 generic_field_name <"x_flag_assert",gcc_options,x_flag_assert> x_flag_assert;
	 generic_field_name <"x_flag_associative_math",gcc_options,x_flag_associative_math> x_flag_associative_math;
	 generic_field_name <"x_flag_asynchronous_unwind_tables",gcc_options,x_flag_asynchronous_unwind_tables> x_flag_asynchronous_unwind_tables;
	 generic_field_name <"x_flag_auto_inc_dec",gcc_options,x_flag_auto_inc_dec> x_flag_auto_inc_dec;
	 generic_field_name <"x_flag_bootstrap_classes",gcc_options,x_flag_bootstrap_classes> x_flag_bootstrap_classes;
	 generic_field_name <"x_flag_bounds_check",gcc_options,x_flag_bounds_check> x_flag_bounds_check;
	 generic_field_name <"x_flag_branch_on_count_reg",gcc_options,x_flag_branch_on_count_reg> x_flag_branch_on_count_reg;
	 generic_field_name <"x_flag_branch_probabilities",gcc_options,x_flag_branch_probabilities> x_flag_branch_probabilities;
	 generic_field_name <"x_flag_branch_target_load_optimize",gcc_options,x_flag_branch_target_load_optimize> x_flag_branch_target_load_optimize;
	 generic_field_name <"x_flag_branch_target_load_optimize2",gcc_options,x_flag_branch_target_load_optimize2> x_flag_branch_target_load_optimize2;
	 generic_field_name <"x_flag_btr_bb_exclusive",gcc_options,x_flag_btr_bb_exclusive> x_flag_btr_bb_exclusive;
	 generic_field_name <"x_flag_building_libgcc",gcc_options,x_flag_building_libgcc> x_flag_building_libgcc;
	 generic_field_name <"x_flag_no_builtin",gcc_options,x_flag_no_builtin> x_flag_no_builtin;
	 generic_field_name <"x_common_deferred_options",gcc_options,x_common_deferred_options> x_common_deferred_options;
	 generic_field_name <"x_flag_caller_saves",gcc_options,x_flag_caller_saves> x_flag_caller_saves;
	 generic_field_name <"x_flag_check_data_deps",gcc_options,x_flag_check_data_deps> x_flag_check_data_deps;
	 generic_field_name <"x_flag_check_new",gcc_options,x_flag_check_new> x_flag_check_new;
	 generic_field_name <"x_flag_check_references",gcc_options,x_flag_check_references> x_flag_check_references;
	 generic_field_name <"x_flag_combine_stack_adjustments",gcc_options,x_flag_combine_stack_adjustments> x_flag_combine_stack_adjustments;
	 generic_field_name <"x_flag_no_common",gcc_options,x_flag_no_common> x_flag_no_common;
	 generic_field_name <"x_flag_compare_debug",gcc_options,x_flag_compare_debug> x_flag_compare_debug;
	 generic_field_name <"x_flag_compare_debug_opt",gcc_options,x_flag_compare_debug_opt> x_flag_compare_debug_opt;
	 generic_field_name <"x_flag_compare_elim_after_reload",gcc_options,x_flag_compare_elim_after_reload> x_flag_compare_elim_after_reload;
	 generic_field_name <"x_flag_conserve_space",gcc_options,x_flag_conserve_space> x_flag_conserve_space;
	 generic_field_name <"x_flag_conserve_stack",gcc_options,x_flag_conserve_stack> x_flag_conserve_stack;
	 generic_field_name <"x_max_constexpr_depth",gcc_options,x_max_constexpr_depth> x_max_constexpr_depth;
	 generic_field_name <"x_flag_cprop_registers",gcc_options,x_flag_cprop_registers> x_flag_cprop_registers;
	 generic_field_name <"x_flag_crossjumping",gcc_options,x_flag_crossjumping> x_flag_crossjumping;
	 generic_field_name <"x_flag_cse_follow_jumps",gcc_options,x_flag_cse_follow_jumps> x_flag_cse_follow_jumps;
	 generic_field_name <"x_flag_cx_fortran_rules",gcc_options,x_flag_cx_fortran_rules> x_flag_cx_fortran_rules;
	 generic_field_name <"x_flag_cx_limited_range",gcc_options,x_flag_cx_limited_range> x_flag_cx_limited_range;
	 generic_field_name <"x_flag_data_sections",gcc_options,x_flag_data_sections> x_flag_data_sections;
	 generic_field_name <"x_flag_dce",gcc_options,x_flag_dce> x_flag_dce;
	 generic_field_name <"x_flag_debug_types_section",gcc_options,x_flag_debug_types_section> x_flag_debug_types_section;
	 generic_field_name <"x_flag_deduce_init_list",gcc_options,x_flag_deduce_init_list> x_flag_deduce_init_list;
	 generic_field_name <"x_flag_defer_pop",gcc_options,x_flag_defer_pop> x_flag_defer_pop;
	 generic_field_name <"x_flag_delayed_branch",gcc_options,x_flag_delayed_branch> x_flag_delayed_branch;
	 generic_field_name <"x_flag_delete_null_pointer_checks",gcc_options,x_flag_delete_null_pointer_checks> x_flag_delete_null_pointer_checks;
	 generic_field_name <"x_flag_devirtualize",gcc_options,x_flag_devirtualize> x_flag_devirtualize;
	 generic_field_name <"x_flag_diagnostics_show_option",gcc_options,x_flag_diagnostics_show_option> x_flag_diagnostics_show_option;
	 generic_field_name <"x_flag_dse",gcc_options,x_flag_dse> x_flag_dse;
	 generic_field_name <"x_flag_dump_final_insns",gcc_options,x_flag_dump_final_insns> x_flag_dump_final_insns;
	 generic_field_name <"x_flag_dump_go_spec",gcc_options,x_flag_dump_go_spec> x_flag_dump_go_spec;
	 generic_field_name <"x_flag_dump_noaddr",gcc_options,x_flag_dump_noaddr> x_flag_dump_noaddr;
	 generic_field_name <"x_flag_dump_passes",gcc_options,x_flag_dump_passes> x_flag_dump_passes;
	 generic_field_name <"x_flag_dump_unnumbered",gcc_options,x_flag_dump_unnumbered> x_flag_dump_unnumbered;
	 generic_field_name <"x_flag_dump_unnumbered_links",gcc_options,x_flag_dump_unnumbered_links> x_flag_dump_unnumbered_links;
	 generic_field_name <"x_flag_dwarf2_cfi_asm",gcc_options,x_flag_dwarf2_cfi_asm> x_flag_dwarf2_cfi_asm;
	 generic_field_name <"x_flag_early_inlining",gcc_options,x_flag_early_inlining> x_flag_early_inlining;
	 generic_field_name <"x_flag_elide_constructors",gcc_options,x_flag_elide_constructors> x_flag_elide_constructors;
	 generic_field_name <"x_flag_eliminate_dwarf2_dups",gcc_options,x_flag_eliminate_dwarf2_dups> x_flag_eliminate_dwarf2_dups;
	 generic_field_name <"x_flag_debug_only_used_symbols",gcc_options,x_flag_debug_only_used_symbols> x_flag_debug_only_used_symbols;
	 generic_field_name <"x_flag_eliminate_unused_debug_types",gcc_options,x_flag_eliminate_unused_debug_types> x_flag_eliminate_unused_debug_types;
	 generic_field_name <"x_flag_emit_class_debug_always",gcc_options,x_flag_emit_class_debug_always> x_flag_emit_class_debug_always;
	 generic_field_name <"x_flag_emit_class_files",gcc_options,x_flag_emit_class_files> x_flag_emit_class_files;
	 generic_field_name <"x_flag_enforce_eh_specs",gcc_options,x_flag_enforce_eh_specs> x_flag_enforce_eh_specs;
	 generic_field_name <"x_flag_exceptions",gcc_options,x_flag_exceptions> x_flag_exceptions;
	 generic_field_name <"x_flag_excess_precision_cmdline",gcc_options,x_flag_excess_precision_cmdline> x_flag_excess_precision_cmdline;
	 generic_field_name <"x_flag_expensive_optimizations",gcc_options,x_flag_expensive_optimizations> x_flag_expensive_optimizations;
	 generic_field_name <"x_flag_fat_lto_objects",gcc_options,x_flag_fat_lto_objects> x_flag_fat_lto_objects;
	 generic_field_name <"x_flag_filelist_file",gcc_options,x_flag_filelist_file> x_flag_filelist_file;
	 generic_field_name <"x_flag_finite_math_only",gcc_options,x_flag_finite_math_only> x_flag_finite_math_only;
	 generic_field_name <"x_flag_float_store",gcc_options,x_flag_float_store> x_flag_float_store;
	 generic_field_name <"x_flag_new_for_scope",gcc_options,x_flag_new_for_scope> x_flag_new_for_scope;
	 generic_field_name <"x_flag_force_classes_archive_check",gcc_options,x_flag_force_classes_archive_check> x_flag_force_classes_archive_check;
	 generic_field_name <"x_flag_forward_propagate",gcc_options,x_flag_forward_propagate> x_flag_forward_propagate;
	 generic_field_name <"x_flag_fp_contract_mode",gcc_options,x_flag_fp_contract_mode> x_flag_fp_contract_mode;
	 generic_field_name <"x_flag_friend_injection",gcc_options,x_flag_friend_injection> x_flag_friend_injection;
	 generic_field_name <"x_flag_no_function_cse",gcc_options,x_flag_no_function_cse> x_flag_no_function_cse;
	 generic_field_name <"x_flag_function_sections",gcc_options,x_flag_function_sections> x_flag_function_sections;
	 generic_field_name <"x_flag_gcse",gcc_options,x_flag_gcse> x_flag_gcse;
	 generic_field_name <"x_flag_gcse_after_reload",gcc_options,x_flag_gcse_after_reload> x_flag_gcse_after_reload;
	 generic_field_name <"x_flag_gcse_las",gcc_options,x_flag_gcse_las> x_flag_gcse_las;
	 generic_field_name <"x_flag_gcse_lm",gcc_options,x_flag_gcse_lm> x_flag_gcse_lm;
	 generic_field_name <"x_flag_gcse_sm",gcc_options,x_flag_gcse_sm> x_flag_gcse_sm;
	 generic_field_name <"x_flag_no_gnu_keywords",gcc_options,x_flag_no_gnu_keywords> x_flag_no_gnu_keywords;
	 generic_field_name <"x_flag_next_runtime",gcc_options,x_flag_next_runtime> x_flag_next_runtime;
	 generic_field_name <"x_flag_tm",gcc_options,x_flag_tm> x_flag_tm;
	 generic_field_name <"x_flag_gnu89_inline",gcc_options,x_flag_gnu89_inline> x_flag_gnu89_inline;
	 generic_field_name <"x_go_check_divide_overflow",gcc_options,x_go_check_divide_overflow> x_go_check_divide_overflow;
	 generic_field_name <"x_go_check_divide_zero",gcc_options,x_go_check_divide_zero> x_go_check_divide_zero;
	 generic_field_name <"x_flag_graphite",gcc_options,x_flag_graphite> x_flag_graphite;
	 generic_field_name <"x_flag_graphite_identity",gcc_options,x_flag_graphite_identity> x_flag_graphite_identity;
	 generic_field_name <"x_flag_guess_branch_prob",gcc_options,x_flag_guess_branch_prob> x_flag_guess_branch_prob;
	 generic_field_name <"x_flag_hash_synchronization",gcc_options,x_flag_hash_synchronization> x_flag_hash_synchronization;
	 generic_field_name <"x_flag_no_ident",gcc_options,x_flag_no_ident> x_flag_no_ident;
	 generic_field_name <"x_flag_if_conversion",gcc_options,x_flag_if_conversion> x_flag_if_conversion;
	 generic_field_name <"x_flag_if_conversion2",gcc_options,x_flag_if_conversion2> x_flag_if_conversion2;
	 generic_field_name <"x_flag_implement_inlines",gcc_options,x_flag_implement_inlines> x_flag_implement_inlines;
	 generic_field_name <"x_flag_implicit_inline_templates",gcc_options,x_flag_implicit_inline_templates> x_flag_implicit_inline_templates;
	 generic_field_name <"x_flag_implicit_templates",gcc_options,x_flag_implicit_templates> x_flag_implicit_templates;
	 generic_field_name <"x_flag_indirect_classes",gcc_options,x_flag_indirect_classes> x_flag_indirect_classes;
	 generic_field_name <"x_flag_indirect_dispatch",gcc_options,x_flag_indirect_dispatch> x_flag_indirect_dispatch;
	 generic_field_name <"x_flag_indirect_inlining",gcc_options,x_flag_indirect_inlining> x_flag_indirect_inlining;
	 generic_field_name <"x_flag_inhibit_size_directive",gcc_options,x_flag_inhibit_size_directive> x_flag_inhibit_size_directive;
	 generic_field_name <"x_flag_no_inline",gcc_options,x_flag_no_inline> x_flag_no_inline;
	 generic_field_name <"x_flag_inline_atomics",gcc_options,x_flag_inline_atomics> x_flag_inline_atomics;
	 generic_field_name <"x_flag_inline_functions",gcc_options,x_flag_inline_functions> x_flag_inline_functions;
	 generic_field_name <"x_flag_inline_functions_called_once",gcc_options,x_flag_inline_functions_called_once> x_flag_inline_functions_called_once;
	 generic_field_name <"x_flag_inline_small_functions",gcc_options,x_flag_inline_small_functions> x_flag_inline_small_functions;
	 generic_field_name <"x_flag_instrument_function_entry_exit",gcc_options,x_flag_instrument_function_entry_exit> x_flag_instrument_function_entry_exit;
	 generic_field_name <"x_flag_ipa_cp",gcc_options,x_flag_ipa_cp> x_flag_ipa_cp;
	 generic_field_name <"x_flag_ipa_cp_clone",gcc_options,x_flag_ipa_cp_clone> x_flag_ipa_cp_clone;
	 generic_field_name <"x_flag_ipa_matrix_reorg",gcc_options,x_flag_ipa_matrix_reorg> x_flag_ipa_matrix_reorg;
	 generic_field_name <"x_flag_ipa_profile",gcc_options,x_flag_ipa_profile> x_flag_ipa_profile;
	 generic_field_name <"x_flag_ipa_pta",gcc_options,x_flag_ipa_pta> x_flag_ipa_pta;
	 generic_field_name <"x_flag_ipa_pure_const",gcc_options,x_flag_ipa_pure_const> x_flag_ipa_pure_const;
	 generic_field_name <"x_flag_ipa_reference",gcc_options,x_flag_ipa_reference> x_flag_ipa_reference;
	 generic_field_name <"x_flag_ipa_sra",gcc_options,x_flag_ipa_sra> x_flag_ipa_sra;
	 generic_field_name <"x_flag_ira_algorithm",gcc_options,x_flag_ira_algorithm> x_flag_ira_algorithm;
	 generic_field_name <"x_flag_ira_loop_pressure",gcc_options,x_flag_ira_loop_pressure> x_flag_ira_loop_pressure;
	 generic_field_name <"x_flag_ira_region",gcc_options,x_flag_ira_region> x_flag_ira_region;
	 generic_field_name <"x_flag_ira_share_save_slots",gcc_options,x_flag_ira_share_save_slots> x_flag_ira_share_save_slots;
	 generic_field_name <"x_flag_ira_share_spill_slots",gcc_options,x_flag_ira_share_spill_slots> x_flag_ira_share_spill_slots;
	 generic_field_name <"x_flag_ira_verbose",gcc_options,x_flag_ira_verbose> x_flag_ira_verbose;
	 generic_field_name <"x_flag_ivopts",gcc_options,x_flag_ivopts> x_flag_ivopts;
	 generic_field_name <"x_flag_jni",gcc_options,x_flag_jni> x_flag_jni;
	 generic_field_name <"x_flag_jump_tables",gcc_options,x_flag_jump_tables> x_flag_jump_tables;
	 generic_field_name <"x_flag_keep_inline_dllexport",gcc_options,x_flag_keep_inline_dllexport> x_flag_keep_inline_dllexport;
	 generic_field_name <"x_flag_keep_inline_functions",gcc_options,x_flag_keep_inline_functions> x_flag_keep_inline_functions;
	 generic_field_name <"x_flag_keep_static_consts",gcc_options,x_flag_keep_static_consts> x_flag_keep_static_consts;
	 generic_field_name <"x_flag_lax_vector_conversions",gcc_options,x_flag_lax_vector_conversions> x_flag_lax_vector_conversions;
	 generic_field_name <"x_flag_leading_underscore",gcc_options,x_flag_leading_underscore> x_flag_leading_underscore;
	 generic_field_name <"x_flag_loop_block",gcc_options,x_flag_loop_block> x_flag_loop_block;
	 generic_field_name <"x_flag_loop_flatten",gcc_options,x_flag_loop_flatten> x_flag_loop_flatten;
	 generic_field_name <"x_flag_loop_interchange",gcc_options,x_flag_loop_interchange> x_flag_loop_interchange;
	 generic_field_name <"x_flag_loop_parallelize_all",gcc_options,x_flag_loop_parallelize_all> x_flag_loop_parallelize_all;
	 generic_field_name <"x_flag_loop_strip_mine",gcc_options,x_flag_loop_strip_mine> x_flag_loop_strip_mine;
	 generic_field_name <"x_flag_lto_compression_level",gcc_options,x_flag_lto_compression_level> x_flag_lto_compression_level;
	 generic_field_name <"x_flag_lto_partition_1to1",gcc_options,x_flag_lto_partition_1to1> x_flag_lto_partition_1to1;
	 generic_field_name <"x_flag_lto_partition_balanced",gcc_options,x_flag_lto_partition_balanced> x_flag_lto_partition_balanced;
	 generic_field_name <"x_flag_lto_partition_none",gcc_options,x_flag_lto_partition_none> x_flag_lto_partition_none;
	 generic_field_name <"x_flag_lto_report",gcc_options,x_flag_lto_report> x_flag_lto_report;
	 generic_field_name <"x_flag_lto",gcc_options,x_flag_lto> x_flag_lto;
	 generic_field_name <"x_flag_ltrans",gcc_options,x_flag_ltrans> x_flag_ltrans;
	 generic_field_name <"x_ltrans_output_list",gcc_options,x_ltrans_output_list> x_ltrans_output_list;
	 generic_field_name <"x_flag_errno_math",gcc_options,x_flag_errno_math> x_flag_errno_math;
	 generic_field_name <"x_flag_max_errors",gcc_options,x_flag_max_errors> x_flag_max_errors;
	 generic_field_name <"x_mem_report",gcc_options,x_mem_report> x_mem_report;
	 generic_field_name <"x_flag_merge_constants",gcc_options,x_flag_merge_constants> x_flag_merge_constants;
	 generic_field_name <"x_flag_merge_debug_strings",gcc_options,x_flag_merge_debug_strings> x_flag_merge_debug_strings;
	 generic_field_name <"x_flag_modulo_sched",gcc_options,x_flag_modulo_sched> x_flag_modulo_sched;
	 generic_field_name <"x_flag_modulo_sched_allow_regmoves",gcc_options,x_flag_modulo_sched_allow_regmoves> x_flag_modulo_sched_allow_regmoves;
	 generic_field_name <"x_flag_move_loop_invariants",gcc_options,x_flag_move_loop_invariants> x_flag_move_loop_invariants;
	 generic_field_name <"x_flag_ms_extensions",gcc_options,x_flag_ms_extensions> x_flag_ms_extensions;
	 generic_field_name <"x_flag_mudflap",gcc_options,x_flag_mudflap> x_flag_mudflap;
	 generic_field_name <"x_flag_mudflap_ignore_reads",gcc_options,x_flag_mudflap_ignore_reads> x_flag_mudflap_ignore_reads;
	 generic_field_name <"x_flag_nil_receivers",gcc_options,x_flag_nil_receivers> x_flag_nil_receivers;
	 generic_field_name <"x_flag_non_call_exceptions",gcc_options,x_flag_non_call_exceptions> x_flag_non_call_exceptions;
	 generic_field_name <"x_flag_no_nonansi_builtin",gcc_options,x_flag_no_nonansi_builtin> x_flag_no_nonansi_builtin;
	 generic_field_name <"x_flag_nothrow_opt",gcc_options,x_flag_nothrow_opt> x_flag_nothrow_opt;
	 generic_field_name <"x_flag_objc_abi",gcc_options,x_flag_objc_abi> x_flag_objc_abi;
	 generic_field_name <"x_flag_objc_call_cxx_cdtors",gcc_options,x_flag_objc_call_cxx_cdtors> x_flag_objc_call_cxx_cdtors;
	 generic_field_name <"x_flag_objc_direct_dispatch",gcc_options,x_flag_objc_direct_dispatch> x_flag_objc_direct_dispatch;
	 generic_field_name <"x_flag_objc_exceptions",gcc_options,x_flag_objc_exceptions> x_flag_objc_exceptions;
	 generic_field_name <"x_flag_objc_gc",gcc_options,x_flag_objc_gc> x_flag_objc_gc;
	 generic_field_name <"x_flag_objc_nilcheck",gcc_options,x_flag_objc_nilcheck> x_flag_objc_nilcheck;
	 generic_field_name <"x_flag_objc_sjlj_exceptions",gcc_options,x_flag_objc_sjlj_exceptions> x_flag_objc_sjlj_exceptions;
	 generic_field_name <"x_flag_objc1_only",gcc_options,x_flag_objc1_only> x_flag_objc1_only;
	 generic_field_name <"x_flag_omit_frame_pointer",gcc_options,x_flag_omit_frame_pointer> x_flag_omit_frame_pointer;
	 generic_field_name <"x_flag_openmp",gcc_options,x_flag_openmp> x_flag_openmp;
	 generic_field_name <"x_flag_regmove",gcc_options,x_flag_regmove> x_flag_regmove;
	 generic_field_name <"x_flag_optimize_sibling_calls",gcc_options,x_flag_optimize_sibling_calls> x_flag_optimize_sibling_calls;
	 generic_field_name <"x_flag_optimize_sci",gcc_options,x_flag_optimize_sci> x_flag_optimize_sci;
	 generic_field_name <"x_flag_optimize_strlen",gcc_options,x_flag_optimize_strlen> x_flag_optimize_strlen;
	 generic_field_name <"x_flag_pack_struct",gcc_options,x_flag_pack_struct> x_flag_pack_struct;
	 generic_field_name <"x_flag_partial_inlining",gcc_options,x_flag_partial_inlining> x_flag_partial_inlining;
	 generic_field_name <"x_flag_pcc_struct_return",gcc_options,x_flag_pcc_struct_return> x_flag_pcc_struct_return;
	 generic_field_name <"x_flag_peel_loops",gcc_options,x_flag_peel_loops> x_flag_peel_loops;
	 generic_field_name <"x_flag_no_peephole",gcc_options,x_flag_no_peephole> x_flag_no_peephole;
	 generic_field_name <"x_flag_peephole2",gcc_options,x_flag_peephole2> x_flag_peephole2;
	 generic_field_name <"x_flag_plan9_extensions",gcc_options,x_flag_plan9_extensions> x_flag_plan9_extensions;
	 generic_field_name <"x_post_ipa_mem_report",gcc_options,x_post_ipa_mem_report> x_post_ipa_mem_report;
	 generic_field_name <"x_pre_ipa_mem_report",gcc_options,x_pre_ipa_mem_report> x_pre_ipa_mem_report;
	 generic_field_name <"x_flag_predictive_commoning",gcc_options,x_flag_predictive_commoning> x_flag_predictive_commoning;
	 generic_field_name <"x_flag_prefetch_loop_arrays",gcc_options,x_flag_prefetch_loop_arrays> x_flag_prefetch_loop_arrays;
	 generic_field_name <"x_flag_pretty_templates",gcc_options,x_flag_pretty_templates> x_flag_pretty_templates;
	 generic_field_name <"x_profile_flag",gcc_options,x_profile_flag> x_profile_flag;
	 generic_field_name <"x_profile_arc_flag",gcc_options,x_profile_arc_flag> x_profile_arc_flag;
	 generic_field_name <"x_flag_profile_correction",gcc_options,x_flag_profile_correction> x_flag_profile_correction;
	 generic_field_name <"x_profile_data_prefix",gcc_options,x_profile_data_prefix> x_profile_data_prefix;
	 generic_field_name <"x_flag_profile_use",gcc_options,x_flag_profile_use> x_flag_profile_use;
	 generic_field_name <"x_flag_profile_values",gcc_options,x_flag_profile_values> x_flag_profile_values;
	 generic_field_name <"x_flag_reciprocal_math",gcc_options,x_flag_reciprocal_math> x_flag_reciprocal_math;
	 generic_field_name <"x_flag_record_gcc_switches",gcc_options,x_flag_record_gcc_switches> x_flag_record_gcc_switches;
	 generic_field_name <"x_flag_reduced_reflection",gcc_options,x_flag_reduced_reflection> x_flag_reduced_reflection;
	 generic_field_name <"x_flag_ree",gcc_options,x_flag_ree> x_flag_ree;
	 generic_field_name <"x_flag_rename_registers",gcc_options,x_flag_rename_registers> x_flag_rename_registers;
	 generic_field_name <"x_flag_reorder_blocks",gcc_options,x_flag_reorder_blocks> x_flag_reorder_blocks;
	 generic_field_name <"x_flag_reorder_blocks_and_partition",gcc_options,x_flag_reorder_blocks_and_partition> x_flag_reorder_blocks_and_partition;
	 generic_field_name <"x_flag_reorder_functions",gcc_options,x_flag_reorder_functions> x_flag_reorder_functions;
	 generic_field_name <"x_flag_replace_objc_classes",gcc_options,x_flag_replace_objc_classes> x_flag_replace_objc_classes;
	 generic_field_name <"x_go_require_return_statement",gcc_options,x_go_require_return_statement> x_go_require_return_statement;
	 generic_field_name <"x_flag_rerun_cse_after_loop",gcc_options,x_flag_rerun_cse_after_loop> x_flag_rerun_cse_after_loop;
	 generic_field_name <"x_flag_resched_modulo_sched",gcc_options,x_flag_resched_modulo_sched> x_flag_resched_modulo_sched;
	 generic_field_name <"x_flag_rounding_math",gcc_options,x_flag_rounding_math> x_flag_rounding_math;
	 generic_field_name <"x_flag_rtti",gcc_options,x_flag_rtti> x_flag_rtti;
	 generic_field_name <"x_flag_sched_critical_path_heuristic",gcc_options,x_flag_sched_critical_path_heuristic> x_flag_sched_critical_path_heuristic;
	 generic_field_name <"x_flag_sched_dep_count_heuristic",gcc_options,x_flag_sched_dep_count_heuristic> x_flag_sched_dep_count_heuristic;
	 generic_field_name <"x_flag_sched_group_heuristic",gcc_options,x_flag_sched_group_heuristic> x_flag_sched_group_heuristic;
	 generic_field_name <"x_flag_schedule_interblock",gcc_options,x_flag_schedule_interblock> x_flag_schedule_interblock;
	 generic_field_name <"x_flag_sched_last_insn_heuristic",gcc_options,x_flag_sched_last_insn_heuristic> x_flag_sched_last_insn_heuristic;
	 generic_field_name <"x_flag_sched_pressure",gcc_options,x_flag_sched_pressure> x_flag_sched_pressure;
	 generic_field_name <"x_flag_sched_pressure_algorithm",gcc_options,x_flag_sched_pressure_algorithm> x_flag_sched_pressure_algorithm;
	 generic_field_name <"x_flag_sched_rank_heuristic",gcc_options,x_flag_sched_rank_heuristic> x_flag_sched_rank_heuristic;
	 generic_field_name <"x_flag_schedule_speculative",gcc_options,x_flag_schedule_speculative> x_flag_schedule_speculative;
	 generic_field_name <"x_flag_sched_spec_insn_heuristic",gcc_options,x_flag_sched_spec_insn_heuristic> x_flag_sched_spec_insn_heuristic;
	 generic_field_name <"x_flag_schedule_speculative_load",gcc_options,x_flag_schedule_speculative_load> x_flag_schedule_speculative_load;
	 generic_field_name <"x_flag_schedule_speculative_load_dangerous",gcc_options,x_flag_schedule_speculative_load_dangerous> x_flag_schedule_speculative_load_dangerous;
	 generic_field_name <"x_flag_sched_stalled_insns",gcc_options,x_flag_sched_stalled_insns> x_flag_sched_stalled_insns;
	 generic_field_name <"x_flag_sched_stalled_insns_dep",gcc_options,x_flag_sched_stalled_insns_dep> x_flag_sched_stalled_insns_dep;
	 generic_field_name <"x_sched_verbose_param",gcc_options,x_sched_verbose_param> x_sched_verbose_param;
	 generic_field_name <"x_flag_sched2_use_superblocks",gcc_options,x_flag_sched2_use_superblocks> x_flag_sched2_use_superblocks;
	 generic_field_name <"x_flag_schedule_insns",gcc_options,x_flag_schedule_insns> x_flag_schedule_insns;
	 generic_field_name <"x_flag_schedule_insns_after_reload",gcc_options,x_flag_schedule_insns_after_reload> x_flag_schedule_insns_after_reload;
	 generic_field_name <"x_flag_section_anchors",gcc_options,x_flag_section_anchors> x_flag_section_anchors;
	 generic_field_name <"x_flag_sel_sched_pipelining",gcc_options,x_flag_sel_sched_pipelining> x_flag_sel_sched_pipelining;
	 generic_field_name <"x_flag_sel_sched_pipelining_outer_loops",gcc_options,x_flag_sel_sched_pipelining_outer_loops> x_flag_sel_sched_pipelining_outer_loops;
	 generic_field_name <"x_flag_sel_sched_reschedule_pipelined",gcc_options,x_flag_sel_sched_reschedule_pipelined> x_flag_sel_sched_reschedule_pipelined;
	 generic_field_name <"x_flag_selective_scheduling",gcc_options,x_flag_selective_scheduling> x_flag_selective_scheduling;
	 generic_field_name <"x_flag_selective_scheduling2",gcc_options,x_flag_selective_scheduling2> x_flag_selective_scheduling2;
	 generic_field_name <"x_flag_short_double",gcc_options,x_flag_short_double> x_flag_short_double;
	 generic_field_name <"x_flag_short_enums",gcc_options,x_flag_short_enums> x_flag_short_enums;
	 generic_field_name <"x_flag_short_wchar",gcc_options,x_flag_short_wchar> x_flag_short_wchar;
	 generic_field_name <"x_flag_show_column",gcc_options,x_flag_show_column> x_flag_show_column;
	 generic_field_name <"x_flag_shrink_wrap",gcc_options,x_flag_shrink_wrap> x_flag_shrink_wrap;
	 generic_field_name <"x_flag_signaling_nans",gcc_options,x_flag_signaling_nans> x_flag_signaling_nans;
	 generic_field_name <"x_flag_signed_bitfields",gcc_options,x_flag_signed_bitfields> x_flag_signed_bitfields;
	 generic_field_name <"x_flag_signed_char",gcc_options,x_flag_signed_char> x_flag_signed_char;
	 generic_field_name <"x_flag_signed_zeros",gcc_options,x_flag_signed_zeros> x_flag_signed_zeros;
	 generic_field_name <"x_flag_single_precision_constant",gcc_options,x_flag_single_precision_constant> x_flag_single_precision_constant;
	 generic_field_name <"x_flag_split_ivs_in_unroller",gcc_options,x_flag_split_ivs_in_unroller> x_flag_split_ivs_in_unroller;
	 generic_field_name <"x_flag_split_stack",gcc_options,x_flag_split_stack> x_flag_split_stack;
	 generic_field_name <"x_flag_split_wide_types",gcc_options,x_flag_split_wide_types> x_flag_split_wide_types;
	 generic_field_name <"x_flag_stack_protect",gcc_options,x_flag_stack_protect> x_flag_stack_protect;
	 generic_field_name <"x_flag_stack_usage",gcc_options,x_flag_stack_usage> x_flag_stack_usage;
	 generic_field_name <"x_flag_detailed_statistics",gcc_options,x_flag_detailed_statistics> x_flag_detailed_statistics;
	 generic_field_name <"x_flag_store_check",gcc_options,x_flag_store_check> x_flag_store_check;
	 generic_field_name <"x_flag_strict_aliasing",gcc_options,x_flag_strict_aliasing> x_flag_strict_aliasing;
	 generic_field_name <"x_flag_strict_enums",gcc_options,x_flag_strict_enums> x_flag_strict_enums;
	 generic_field_name <"x_flag_strict_overflow",gcc_options,x_flag_strict_overflow> x_flag_strict_overflow;
	 generic_field_name <"x_flag_strict_volatile_bitfields",gcc_options,x_flag_strict_volatile_bitfields> x_flag_strict_volatile_bitfields;
	 generic_field_name <"x_flag_syntax_only",gcc_options,x_flag_syntax_only> x_flag_syntax_only;
	 generic_field_name <"x_flag_test_coverage",gcc_options,x_flag_test_coverage> x_flag_test_coverage;
	 generic_field_name <"x_flag_thread_jumps",gcc_options,x_flag_thread_jumps> x_flag_thread_jumps;
	 generic_field_name <"x_flag_threadsafe_statics",gcc_options,x_flag_threadsafe_statics> x_flag_threadsafe_statics;
	 generic_field_name <"x_time_report",gcc_options,x_time_report> x_time_report;
	 generic_field_name <"x_flag_tls_default",gcc_options,x_flag_tls_default> x_flag_tls_default;
	 generic_field_name <"x_flag_toplevel_reorder",gcc_options,x_flag_toplevel_reorder> x_flag_toplevel_reorder;
	 generic_field_name <"x_flag_tracer",gcc_options,x_flag_tracer> x_flag_tracer;
	 generic_field_name <"x_flag_trapping_math",gcc_options,x_flag_trapping_math> x_flag_trapping_math;
	 generic_field_name <"x_flag_trapv",gcc_options,x_flag_trapv> x_flag_trapv;
	 generic_field_name <"x_flag_tree_bit_ccp",gcc_options,x_flag_tree_bit_ccp> x_flag_tree_bit_ccp;
	 generic_field_name <"x_flag_tree_builtin_call_dce",gcc_options,x_flag_tree_builtin_call_dce> x_flag_tree_builtin_call_dce;
	 generic_field_name <"x_flag_tree_ccp",gcc_options,x_flag_tree_ccp> x_flag_tree_ccp;
	 generic_field_name <"x_flag_tree_ch",gcc_options,x_flag_tree_ch> x_flag_tree_ch;
	 generic_field_name <"x_flag_tree_copy_prop",gcc_options,x_flag_tree_copy_prop> x_flag_tree_copy_prop;
	 generic_field_name <"x_flag_tree_copyrename",gcc_options,x_flag_tree_copyrename> x_flag_tree_copyrename;
	 generic_field_name <"x_flag_tree_cselim",gcc_options,x_flag_tree_cselim> x_flag_tree_cselim;
	 generic_field_name <"x_flag_tree_dce",gcc_options,x_flag_tree_dce> x_flag_tree_dce;
	 generic_field_name <"x_flag_tree_dom",gcc_options,x_flag_tree_dom> x_flag_tree_dom;
	 generic_field_name <"x_flag_tree_dse",gcc_options,x_flag_tree_dse> x_flag_tree_dse;
	 generic_field_name <"x_flag_tree_forwprop",gcc_options,x_flag_tree_forwprop> x_flag_tree_forwprop;
	 generic_field_name <"x_flag_tree_fre",gcc_options,x_flag_tree_fre> x_flag_tree_fre;
	 generic_field_name <"x_flag_tree_loop_distribute_patterns",gcc_options,x_flag_tree_loop_distribute_patterns> x_flag_tree_loop_distribute_patterns;
	 generic_field_name <"x_flag_tree_loop_distribution",gcc_options,x_flag_tree_loop_distribution> x_flag_tree_loop_distribution;
	 generic_field_name <"x_flag_tree_loop_if_convert",gcc_options,x_flag_tree_loop_if_convert> x_flag_tree_loop_if_convert;
	 generic_field_name <"x_flag_tree_loop_if_convert_stores",gcc_options,x_flag_tree_loop_if_convert_stores> x_flag_tree_loop_if_convert_stores;
	 generic_field_name <"x_flag_tree_loop_im",gcc_options,x_flag_tree_loop_im> x_flag_tree_loop_im;
	 generic_field_name <"x_flag_tree_loop_ivcanon",gcc_options,x_flag_tree_loop_ivcanon> x_flag_tree_loop_ivcanon;
	 generic_field_name <"x_flag_tree_loop_optimize",gcc_options,x_flag_tree_loop_optimize> x_flag_tree_loop_optimize;
	 generic_field_name <"x_flag_tree_live_range_split",gcc_options,x_flag_tree_live_range_split> x_flag_tree_live_range_split;
	 generic_field_name <"x_flag_tree_parallelize_loops",gcc_options,x_flag_tree_parallelize_loops> x_flag_tree_parallelize_loops;
	 generic_field_name <"x_flag_tree_partial_pre",gcc_options,x_flag_tree_partial_pre> x_flag_tree_partial_pre;
	 generic_field_name <"x_flag_tree_phiprop",gcc_options,x_flag_tree_phiprop> x_flag_tree_phiprop;
	 generic_field_name <"x_flag_tree_pre",gcc_options,x_flag_tree_pre> x_flag_tree_pre;
	 generic_field_name <"x_flag_tree_pta",gcc_options,x_flag_tree_pta> x_flag_tree_pta;
	 generic_field_name <"x_flag_tree_reassoc",gcc_options,x_flag_tree_reassoc> x_flag_tree_reassoc;
	 generic_field_name <"x_flag_tree_scev_cprop",gcc_options,x_flag_tree_scev_cprop> x_flag_tree_scev_cprop;
	 generic_field_name <"x_flag_tree_sink",gcc_options,x_flag_tree_sink> x_flag_tree_sink;
	 generic_field_name <"x_flag_tree_slp_vectorize",gcc_options,x_flag_tree_slp_vectorize> x_flag_tree_slp_vectorize;
	 generic_field_name <"x_flag_tree_sra",gcc_options,x_flag_tree_sra> x_flag_tree_sra;
	 generic_field_name <"x_flag_tree_switch_conversion",gcc_options,x_flag_tree_switch_conversion> x_flag_tree_switch_conversion;
	 generic_field_name <"x_flag_tree_tail_merge",gcc_options,x_flag_tree_tail_merge> x_flag_tree_tail_merge;
	 generic_field_name <"x_flag_tree_ter",gcc_options,x_flag_tree_ter> x_flag_tree_ter;
	 generic_field_name <"x_flag_tree_vect_loop_version",gcc_options,x_flag_tree_vect_loop_version> x_flag_tree_vect_loop_version;
	 generic_field_name <"x_flag_tree_vectorize",gcc_options,x_flag_tree_vectorize> x_flag_tree_vectorize;
	 generic_field_name <"x_flag_tree_vrp",gcc_options,x_flag_tree_vrp> x_flag_tree_vrp;
	 generic_field_name <"x_flag_unit_at_a_time",gcc_options,x_flag_unit_at_a_time> x_flag_unit_at_a_time;
	 generic_field_name <"x_flag_unroll_all_loops",gcc_options,x_flag_unroll_all_loops> x_flag_unroll_all_loops;
	 generic_field_name <"x_flag_unroll_loops",gcc_options,x_flag_unroll_loops> x_flag_unroll_loops;
	 generic_field_name <"x_flag_unsafe_loop_optimizations",gcc_options,x_flag_unsafe_loop_optimizations> x_flag_unsafe_loop_optimizations;
	 generic_field_name <"x_flag_unsafe_math_optimizations",gcc_options,x_flag_unsafe_math_optimizations> x_flag_unsafe_math_optimizations;
	 generic_field_name <"x_flag_unswitch_loops",gcc_options,x_flag_unswitch_loops> x_flag_unswitch_loops;
	 generic_field_name <"x_flag_unwind_tables",gcc_options,x_flag_unwind_tables> x_flag_unwind_tables;
	 generic_field_name <"x_flag_use_atomic_builtins",gcc_options,x_flag_use_atomic_builtins> x_flag_use_atomic_builtins;
	 generic_field_name <"x_flag_use_boehm_gc",gcc_options,x_flag_use_boehm_gc> x_flag_use_boehm_gc;
	 generic_field_name <"x_flag_use_cxa_atexit",gcc_options,x_flag_use_cxa_atexit> x_flag_use_cxa_atexit;
	 generic_field_name <"x_flag_use_cxa_get_exception_ptr",gcc_options,x_flag_use_cxa_get_exception_ptr> x_flag_use_cxa_get_exception_ptr;
	 generic_field_name <"x_flag_use_divide_subroutine",gcc_options,x_flag_use_divide_subroutine> x_flag_use_divide_subroutine;
	 generic_field_name <"x_flag_var_tracking",gcc_options,x_flag_var_tracking> x_flag_var_tracking;
	 generic_field_name <"x_flag_var_tracking_assignments",gcc_options,x_flag_var_tracking_assignments> x_flag_var_tracking_assignments;
	 generic_field_name <"x_flag_var_tracking_assignments_toggle",gcc_options,x_flag_var_tracking_assignments_toggle> x_flag_var_tracking_assignments_toggle;
	 generic_field_name <"x_flag_var_tracking_uninit",gcc_options,x_flag_var_tracking_uninit> x_flag_var_tracking_uninit;
	 generic_field_name <"x_flag_variable_expansion_in_unroller",gcc_options,x_flag_variable_expansion_in_unroller> x_flag_variable_expansion_in_unroller;
	 generic_field_name <"x_flag_vect_cost_model",gcc_options,x_flag_vect_cost_model> x_flag_vect_cost_model;
	 generic_field_name <"x_flag_verbose_asm",gcc_options,x_flag_verbose_asm> x_flag_verbose_asm;
	 generic_field_name <"x_flag_visibility_ms_compat",gcc_options,x_flag_visibility_ms_compat> x_flag_visibility_ms_compat;
	 generic_field_name <"x_default_visibility",gcc_options,x_default_visibility> x_default_visibility;
	 generic_field_name <"x_flag_value_profile_transformations",gcc_options,x_flag_value_profile_transformations> x_flag_value_profile_transformations;
	 generic_field_name <"x_flag_weak",gcc_options,x_flag_weak> x_flag_weak;
	 generic_field_name <"x_flag_web",gcc_options,x_flag_web> x_flag_web;
	 generic_field_name <"x_flag_whole_program",gcc_options,x_flag_whole_program> x_flag_whole_program;
	 generic_field_name <"x_flag_working_directory",gcc_options,x_flag_working_directory> x_flag_working_directory;
	 generic_field_name <"x_flag_wpa",gcc_options,x_flag_wpa> x_flag_wpa;
	 generic_field_name <"x_flag_wrapv",gcc_options,x_flag_wrapv> x_flag_wrapv;
	 generic_field_name <"x_flag_zero_initialized_in_bss",gcc_options,x_flag_zero_initialized_in_bss> x_flag_zero_initialized_in_bss;
	 generic_field_name <"x_flag_zero_link",gcc_options,x_flag_zero_link> x_flag_zero_link;
	 generic_field_name <"x_dwarf_version",gcc_options,x_dwarf_version> x_dwarf_version;
	 generic_field_name <"x_flag_gen_declaration",gcc_options,x_flag_gen_declaration> x_flag_gen_declaration;
	 generic_field_name <"x_dwarf_record_gcc_switches",gcc_options,x_dwarf_record_gcc_switches> x_dwarf_record_gcc_switches;
	 generic_field_name <"x_dwarf_strict",gcc_options,x_dwarf_strict> x_dwarf_strict;
	 generic_field_name <"x_flag_gtoggle",gcc_options,x_flag_gtoggle> x_flag_gtoggle;
	 generic_field_name <"x_imultiarch",gcc_options,x_imultiarch> x_imultiarch;
	 generic_field_name <"x_plugindir_string",gcc_options,x_plugindir_string> x_plugindir_string;
	 generic_field_name <"x_ix86_abi",gcc_options,x_ix86_abi> x_ix86_abi;
	 generic_field_name <"x_flag_android",gcc_options,x_flag_android> x_flag_android;
	 generic_field_name <"x_ix86_arch_string",gcc_options,x_ix86_arch_string> x_ix86_arch_string;
	 generic_field_name <"x_ix86_asm_dialect",gcc_options,x_ix86_asm_dialect> x_ix86_asm_dialect;
	 generic_field_name <"x_linux_libc",gcc_options,x_linux_libc> x_linux_libc;
	 generic_field_name <"x_ix86_branch_cost",gcc_options,x_ix86_branch_cost> x_ix86_branch_cost;
	 generic_field_name <"x_ix86_cmodel",gcc_options,x_ix86_cmodel> x_ix86_cmodel;
	 generic_field_name <"x_flag_dispatch_scheduler",gcc_options,x_flag_dispatch_scheduler> x_flag_dispatch_scheduler;
	 generic_field_name <"x_flag_fentry",gcc_options,x_flag_fentry> x_flag_fentry;
	 generic_field_name <"x_ix86_force_drap",gcc_options,x_ix86_force_drap> x_ix86_force_drap;
	 generic_field_name <"x_ix86_fpmath",gcc_options,x_ix86_fpmath> x_ix86_fpmath;
	 generic_field_name <"x_ix86_incoming_stack_boundary_arg",gcc_options,x_ix86_incoming_stack_boundary_arg> x_ix86_incoming_stack_boundary_arg;
	 generic_field_name <"x_ix86_section_threshold",gcc_options,x_ix86_section_threshold> x_ix86_section_threshold;
	 generic_field_name <"x_ix86_preferred_stack_boundary_arg",gcc_options,x_ix86_preferred_stack_boundary_arg> x_ix86_preferred_stack_boundary_arg;
	 generic_field_name <"x_ix86_recip_name",gcc_options,x_ix86_recip_name> x_ix86_recip_name;
	 generic_field_name <"x_ix86_regparm",gcc_options,x_ix86_regparm> x_ix86_regparm;
	 generic_field_name <"x_ix86_sse2avx",gcc_options,x_ix86_sse2avx> x_ix86_sse2avx;
	 generic_field_name <"x_ix86_force_align_arg_pointer",gcc_options,x_ix86_force_align_arg_pointer> x_ix86_force_align_arg_pointer;
	 generic_field_name <"x_ix86_stringop_alg",gcc_options,x_ix86_stringop_alg> x_ix86_stringop_alg;
	 generic_field_name <"x_ix86_tls_dialect",gcc_options,x_ix86_tls_dialect> x_ix86_tls_dialect;
	 generic_field_name <"x_ix86_tune_string",gcc_options,x_ix86_tune_string> x_ix86_tune_string;
	 generic_field_name <"x_ix86_veclibabi_type",gcc_options,x_ix86_veclibabi_type> x_ix86_veclibabi_type;
	 generic_field_name <"x_asm_file_name",gcc_options,x_asm_file_name> x_asm_file_name;
	 generic_field_name <"x_pass_exit_codes",gcc_options,x_pass_exit_codes> x_pass_exit_codes;
	 generic_field_name <"x_pedantic",gcc_options,x_pedantic> x_pedantic;
	 generic_field_name <"x_flag_pedantic_errors",gcc_options,x_flag_pedantic_errors> x_flag_pedantic_errors;
	 generic_field_name <"x_use_pipes",gcc_options,x_use_pipes> x_use_pipes;
	 generic_field_name <"x_print_file_name",gcc_options,x_print_file_name> x_print_file_name;
	 generic_field_name <"x_print_multi_directory",gcc_options,x_print_multi_directory> x_print_multi_directory;
	 generic_field_name <"x_print_multi_lib",gcc_options,x_print_multi_lib> x_print_multi_lib;
	 generic_field_name <"x_print_multi_os_directory",gcc_options,x_print_multi_os_directory> x_print_multi_os_directory;
	 generic_field_name <"x_print_multiarch",gcc_options,x_print_multiarch> x_print_multiarch;
	 generic_field_name <"x_print_prog_name",gcc_options,x_print_prog_name> x_print_prog_name;
	 generic_field_name <"x_print_search_dirs",gcc_options,x_print_search_dirs> x_print_search_dirs;
	 generic_field_name <"x_print_sysroot",gcc_options,x_print_sysroot> x_print_sysroot;
	 generic_field_name <"x_print_sysroot_headers_suffix",gcc_options,x_print_sysroot_headers_suffix> x_print_sysroot_headers_suffix;
	 generic_field_name <"x_quiet_flag",gcc_options,x_quiet_flag> x_quiet_flag;
	 generic_field_name <"x_report_times",gcc_options,x_report_times> x_report_times;
	 generic_field_name <"x_flag_undef",gcc_options,x_flag_undef> x_flag_undef;
	 generic_field_name <"x_verbose_flag",gcc_options,x_verbose_flag> x_verbose_flag;
	 generic_field_name <"x_version_flag",gcc_options,x_version_flag> x_version_flag;
	 generic_field_name <"x_inhibit_warnings",gcc_options,x_inhibit_warnings> x_inhibit_warnings;
	 generic_field_name <"x_wrapper_string",gcc_options,x_wrapper_string> x_wrapper_string;
	 generic_field_name <"x_VAR_malign_functions_",gcc_options,x_VAR_malign_functions_> x_VAR_malign_functions_;
	 generic_field_name <"x_VAR_malign_jumps_",gcc_options,x_VAR_malign_jumps_> x_VAR_malign_jumps_;
	 generic_field_name <"x_VAR_malign_loops_",gcc_options,x_VAR_malign_loops_> x_VAR_malign_loops_;
	 generic_field_name <"x_VAR_mpc32",gcc_options,x_VAR_mpc32> x_VAR_mpc32;
	 generic_field_name <"x_VAR_mpc64",gcc_options,x_VAR_mpc64> x_VAR_mpc64;
	 generic_field_name <"x_VAR_mpc80",gcc_options,x_VAR_mpc80> x_VAR_mpc80;
	 generic_field_name <"frontend_set_flag_associative_math",gcc_options,frontend_set_flag_associative_math> frontend_set_flag_associative_math;
	 generic_field_name <"frontend_set_flag_cx_limited_range",gcc_options,frontend_set_flag_cx_limited_range> frontend_set_flag_cx_limited_range;
	 generic_field_name <"frontend_set_flag_finite_math_only",gcc_options,frontend_set_flag_finite_math_only> frontend_set_flag_finite_math_only;
	 generic_field_name <"frontend_set_flag_errno_math",gcc_options,frontend_set_flag_errno_math> frontend_set_flag_errno_math;
	 generic_field_name <"frontend_set_flag_reciprocal_math",gcc_options,frontend_set_flag_reciprocal_math> frontend_set_flag_reciprocal_math;
	 generic_field_name <"frontend_set_flag_rounding_math",gcc_options,frontend_set_flag_rounding_math> frontend_set_flag_rounding_math;
	 generic_field_name <"frontend_set_flag_signaling_nans",gcc_options,frontend_set_flag_signaling_nans> frontend_set_flag_signaling_nans;
	 generic_field_name <"frontend_set_flag_signed_zeros",gcc_options,frontend_set_flag_signed_zeros> frontend_set_flag_signed_zeros;
	 generic_field_name <"frontend_set_flag_trapping_math",gcc_options,frontend_set_flag_trapping_math> frontend_set_flag_trapping_math;
	 generic_field_name <"frontend_set_flag_unsafe_math_optimizations",gcc_options,frontend_set_flag_unsafe_math_optimizations> frontend_set_flag_unsafe_math_optimizations;
}; 
class CLS_430_cl_target_option{ 
	 generic_class_name <"cl_target_option",cl_target_option> the_class_name;
	 generic_field_name <"x_ix86_isa_flags_explicit",cl_target_option,x_ix86_isa_flags_explicit> x_ix86_isa_flags_explicit;
	 generic_field_name <"x_ix86_isa_flags",cl_target_option,x_ix86_isa_flags> x_ix86_isa_flags;
	 generic_field_name <"x_ix86_fpmath",cl_target_option,x_ix86_fpmath> x_ix86_fpmath;
	 generic_field_name <"ix86_target_flags_explicit",cl_target_option,ix86_target_flags_explicit> ix86_target_flags_explicit;
	 generic_field_name <"x_recip_mask_explicit",cl_target_option,x_recip_mask_explicit> x_recip_mask_explicit;
	 generic_field_name <"x_recip_mask",cl_target_option,x_recip_mask> x_recip_mask;
	 generic_field_name <"x_target_flags",cl_target_option,x_target_flags> x_target_flags;
	 generic_field_name <"arch",cl_target_option,arch> arch;
	 generic_field_name <"arch_specified",cl_target_option,arch_specified> arch_specified;
	 generic_field_name <"branch_cost",cl_target_option,branch_cost> branch_cost;
	 generic_field_name <"schedule",cl_target_option,schedule> schedule;
	 generic_field_name <"tune",cl_target_option,tune> tune;
	 generic_field_name <"tune_defaulted",cl_target_option,tune_defaulted> tune_defaulted;
}; 
class CLS_431_cl_target_option{ 
	 generic_class_name <"cl_target_option",cl_target_option> the_class_name;
	 generic_field_name <"x_ix86_isa_flags_explicit",cl_target_option,x_ix86_isa_flags_explicit> x_ix86_isa_flags_explicit;
	 generic_field_name <"x_ix86_isa_flags",cl_target_option,x_ix86_isa_flags> x_ix86_isa_flags;
	 generic_field_name <"x_ix86_fpmath",cl_target_option,x_ix86_fpmath> x_ix86_fpmath;
	 generic_field_name <"ix86_target_flags_explicit",cl_target_option,ix86_target_flags_explicit> ix86_target_flags_explicit;
	 generic_field_name <"x_recip_mask_explicit",cl_target_option,x_recip_mask_explicit> x_recip_mask_explicit;
	 generic_field_name <"x_recip_mask",cl_target_option,x_recip_mask> x_recip_mask;
	 generic_field_name <"x_target_flags",cl_target_option,x_target_flags> x_target_flags;
	 generic_field_name <"arch",cl_target_option,arch> arch;
	 generic_field_name <"arch_specified",cl_target_option,arch_specified> arch_specified;
	 generic_field_name <"branch_cost",cl_target_option,branch_cost> branch_cost;
	 generic_field_name <"schedule",cl_target_option,schedule> schedule;
	 generic_field_name <"tune",cl_target_option,tune> tune;
	 generic_field_name <"tune_defaulted",cl_target_option,tune_defaulted> tune_defaulted;
}; 
class CLS_432_gcc_options{ 
	 generic_class_name <"gcc_options",gcc_options> the_class_name;
	 generic_field_name <"x_recip_mask",gcc_options,x_recip_mask> x_recip_mask;
	 generic_field_name <"x_frame_larger_than_size",gcc_options,x_frame_larger_than_size> x_frame_larger_than_size;
	 generic_field_name <"x_ix86_isa_flags",gcc_options,x_ix86_isa_flags> x_ix86_isa_flags;
	 generic_field_name <"x_ix86_isa_flags_explicit",gcc_options,x_ix86_isa_flags_explicit> x_ix86_isa_flags_explicit;
	 generic_field_name <"x_larger_than_size",gcc_options,x_larger_than_size> x_larger_than_size;
	 generic_field_name <"x_exit_after_options",gcc_options,x_exit_after_options> x_exit_after_options;
	 generic_field_name <"x_flag_dump_all_passed",gcc_options,x_flag_dump_all_passed> x_flag_dump_all_passed;
	 generic_field_name <"x_flag_opts_finished",gcc_options,x_flag_opts_finished> x_flag_opts_finished;
	 generic_field_name <"x_flag_stack_usage_info",gcc_options,x_flag_stack_usage_info> x_flag_stack_usage_info;
	 generic_field_name <"x_flag_warn_unused_result",gcc_options,x_flag_warn_unused_result> x_flag_warn_unused_result;
	 generic_field_name <"x_in_lto_p",gcc_options,x_in_lto_p> x_in_lto_p;
	 generic_field_name <"x_use_gnu_debug_info_extensions",gcc_options,x_use_gnu_debug_info_extensions> x_use_gnu_debug_info_extensions;
	 generic_field_name <"x_warn_frame_larger_than",gcc_options,x_warn_frame_larger_than> x_warn_frame_larger_than;
	 generic_field_name <"x_warn_larger_than",gcc_options,x_warn_larger_than> x_warn_larger_than;
	 generic_field_name <"x_help_enum_printed",gcc_options,x_help_enum_printed> x_help_enum_printed;
	 generic_field_name <"x_help_printed",gcc_options,x_help_printed> x_help_printed;
	 generic_field_name <"x_main_input_basename",gcc_options,x_main_input_basename> x_main_input_basename;
	 generic_field_name <"x_main_input_filename",gcc_options,x_main_input_filename> x_main_input_filename;
	 generic_field_name <"x_debug_info_level",gcc_options,x_debug_info_level> x_debug_info_level;
	 generic_field_name <"x_write_symbols",gcc_options,x_write_symbols> x_write_symbols;
	 generic_field_name <"x_debug_struct_generic",gcc_options,x_debug_struct_generic> x_debug_struct_generic;
	 generic_field_name <"x_debug_struct_ordinary",gcc_options,x_debug_struct_ordinary> x_debug_struct_ordinary;
	 generic_field_name <"x_graph_dump_format",gcc_options,x_graph_dump_format> x_graph_dump_format;
	 generic_field_name <"x_flag_stack_check",gcc_options,x_flag_stack_check> x_flag_stack_check;
	 generic_field_name <"x_user_vect_verbosity_level",gcc_options,x_user_vect_verbosity_level> x_user_vect_verbosity_level;
	 generic_field_name <"x_param_values",gcc_options,x_param_values> x_param_values;
	 generic_field_name <"x_flag_complex_method",gcc_options,x_flag_complex_method> x_flag_complex_method;
	 generic_field_name <"x_flag_debug_asm",gcc_options,x_flag_debug_asm> x_flag_debug_asm;
	 generic_field_name <"x_flag_dump_rtl_in_asm",gcc_options,x_flag_dump_rtl_in_asm> x_flag_dump_rtl_in_asm;
	 generic_field_name <"x_flag_evaluation_order",gcc_options,x_flag_evaluation_order> x_flag_evaluation_order;
	 generic_field_name <"x_flag_gen_aux_info",gcc_options,x_flag_gen_aux_info> x_flag_gen_aux_info;
	 generic_field_name <"x_flag_generate_lto",gcc_options,x_flag_generate_lto> x_flag_generate_lto;
	 generic_field_name <"x_flag_print_asm_name",gcc_options,x_flag_print_asm_name> x_flag_print_asm_name;
	 generic_field_name <"x_flag_shlib",gcc_options,x_flag_shlib> x_flag_shlib;
	 generic_field_name <"x_main_input_baselength",gcc_options,x_main_input_baselength> x_main_input_baselength;
	 generic_field_name <"x_optimize",gcc_options,x_optimize> x_optimize;
	 generic_field_name <"x_optimize_fast",gcc_options,x_optimize_fast> x_optimize_fast;
	 generic_field_name <"x_optimize_size",gcc_options,x_optimize_size> x_optimize_size;
	 generic_field_name <"x_recip_mask_explicit",gcc_options,x_recip_mask_explicit> x_recip_mask_explicit;
	 generic_field_name <"x_rtl_dump_and_exit",gcc_options,x_rtl_dump_and_exit> x_rtl_dump_and_exit;
	 generic_field_name <"x_target_flags",gcc_options,x_target_flags> x_target_flags;
	 generic_field_name <"x_help_columns",gcc_options,x_help_columns> x_help_columns;
	 generic_field_name <"x_initial_max_fld_align",gcc_options,x_initial_max_fld_align> x_initial_max_fld_align;
	 generic_field_name <"x_flag_instrument_functions_exclude_files",gcc_options,x_flag_instrument_functions_exclude_files> x_flag_instrument_functions_exclude_files;
	 generic_field_name <"x_flag_instrument_functions_exclude_functions",gcc_options,x_flag_instrument_functions_exclude_functions> x_flag_instrument_functions_exclude_functions;
	 generic_field_name <"x_help_flag",gcc_options,x_help_flag> x_help_flag;
	 generic_field_name <"x_flag_preprocess_only",gcc_options,x_flag_preprocess_only> x_flag_preprocess_only;
	 generic_field_name <"x_warn_abi",gcc_options,x_warn_abi> x_warn_abi;
	 generic_field_name <"x_warn_address",gcc_options,x_warn_address> x_warn_address;
	 generic_field_name <"x_warn_aggregate_return",gcc_options,x_warn_aggregate_return> x_warn_aggregate_return;
	 generic_field_name <"x_warn_array_bounds",gcc_options,x_warn_array_bounds> x_warn_array_bounds;
	 generic_field_name <"x_warn_assign_intercept",gcc_options,x_warn_assign_intercept> x_warn_assign_intercept;
	 generic_field_name <"x_warn_attributes",gcc_options,x_warn_attributes> x_warn_attributes;
	 generic_field_name <"x_warn_bad_function_cast",gcc_options,x_warn_bad_function_cast> x_warn_bad_function_cast;
	 generic_field_name <"x_warn_cxx_compat",gcc_options,x_warn_cxx_compat> x_warn_cxx_compat;
	 generic_field_name <"x_warn_cxx0x_compat",gcc_options,x_warn_cxx0x_compat> x_warn_cxx0x_compat;
	 generic_field_name <"x_warn_cast_align",gcc_options,x_warn_cast_align> x_warn_cast_align;
	 generic_field_name <"x_warn_cast_qual",gcc_options,x_warn_cast_qual> x_warn_cast_qual;
	 generic_field_name <"x_warn_char_subscripts",gcc_options,x_warn_char_subscripts> x_warn_char_subscripts;
	 generic_field_name <"x_warn_clobbered",gcc_options,x_warn_clobbered> x_warn_clobbered;
	 generic_field_name <"x_warn_conversion",gcc_options,x_warn_conversion> x_warn_conversion;
	 generic_field_name <"x_warn_conversion_null",gcc_options,x_warn_conversion_null> x_warn_conversion_null;
	 generic_field_name <"x_warn_coverage_mismatch",gcc_options,x_warn_coverage_mismatch> x_warn_coverage_mismatch;
	 generic_field_name <"x_warn_cpp",gcc_options,x_warn_cpp> x_warn_cpp;
	 generic_field_name <"x_warn_ctor_dtor_privacy",gcc_options,x_warn_ctor_dtor_privacy> x_warn_ctor_dtor_privacy;
	 generic_field_name <"x_warn_declaration_after_statement",gcc_options,x_warn_declaration_after_statement> x_warn_declaration_after_statement;
	 generic_field_name <"x_warn_delnonvdtor",gcc_options,x_warn_delnonvdtor> x_warn_delnonvdtor;
	 generic_field_name <"x_warn_deprecated",gcc_options,x_warn_deprecated> x_warn_deprecated;
	 generic_field_name <"x_warn_deprecated_decl",gcc_options,x_warn_deprecated_decl> x_warn_deprecated_decl;
	 generic_field_name <"x_warn_disabled_optimization",gcc_options,x_warn_disabled_optimization> x_warn_disabled_optimization;
	 generic_field_name <"x_warn_div_by_zero",gcc_options,x_warn_div_by_zero> x_warn_div_by_zero;
	 generic_field_name <"x_warn_double_promotion",gcc_options,x_warn_double_promotion> x_warn_double_promotion;
	 generic_field_name <"x_warn_ecpp",gcc_options,x_warn_ecpp> x_warn_ecpp;
	 generic_field_name <"x_warn_empty_body",gcc_options,x_warn_empty_body> x_warn_empty_body;
	 generic_field_name <"x_warn_enum_compare",gcc_options,x_warn_enum_compare> x_warn_enum_compare;
	 generic_field_name <"x_warnings_are_errors",gcc_options,x_warnings_are_errors> x_warnings_are_errors;
	 generic_field_name <"x_extra_warnings",gcc_options,x_extra_warnings> x_extra_warnings;
	 generic_field_name <"x_flag_extraneous_semicolon",gcc_options,x_flag_extraneous_semicolon> x_flag_extraneous_semicolon;
	 generic_field_name <"x_flag_fatal_errors",gcc_options,x_flag_fatal_errors> x_flag_fatal_errors;
	 generic_field_name <"x_warn_float_equal",gcc_options,x_warn_float_equal> x_warn_float_equal;
	 generic_field_name <"x_warn_format_contains_nul",gcc_options,x_warn_format_contains_nul> x_warn_format_contains_nul;
	 generic_field_name <"x_warn_format_extra_args",gcc_options,x_warn_format_extra_args> x_warn_format_extra_args;
	 generic_field_name <"x_warn_format_nonliteral",gcc_options,x_warn_format_nonliteral> x_warn_format_nonliteral;
	 generic_field_name <"x_warn_format_security",gcc_options,x_warn_format_security> x_warn_format_security;
	 generic_field_name <"x_warn_format_y2k",gcc_options,x_warn_format_y2k> x_warn_format_y2k;
	 generic_field_name <"x_warn_format_zero_length",gcc_options,x_warn_format_zero_length> x_warn_format_zero_length;
	 generic_field_name <"x_warn_free_nonheap_object",gcc_options,x_warn_free_nonheap_object> x_warn_free_nonheap_object;
	 generic_field_name <"x_warn_ignored_qualifiers",gcc_options,x_warn_ignored_qualifiers> x_warn_ignored_qualifiers;
	 generic_field_name <"x_warn_implicit",gcc_options,x_warn_implicit> x_warn_implicit;
	 generic_field_name <"x_warn_implicit_function_declaration",gcc_options,x_warn_implicit_function_declaration> x_warn_implicit_function_declaration;
	 generic_field_name <"x_warn_implicit_int",gcc_options,x_warn_implicit_int> x_warn_implicit_int;
	 generic_field_name <"x_warn_init_self",gcc_options,x_warn_init_self> x_warn_init_self;
	 generic_field_name <"x_warn_inline",gcc_options,x_warn_inline> x_warn_inline;
	 generic_field_name <"x_warn_int_to_pointer_cast",gcc_options,x_warn_int_to_pointer_cast> x_warn_int_to_pointer_cast;
	 generic_field_name <"x_warn_invalid_memory_model",gcc_options,x_warn_invalid_memory_model> x_warn_invalid_memory_model;
	 generic_field_name <"x_warn_invalid_offsetof",gcc_options,x_warn_invalid_offsetof> x_warn_invalid_offsetof;
	 generic_field_name <"x_warn_jump_misses_init",gcc_options,x_warn_jump_misses_init> x_warn_jump_misses_init;
	 generic_field_name <"x_warn_logical_op",gcc_options,x_warn_logical_op> x_warn_logical_op;
	 generic_field_name <"x_warn_long_long",gcc_options,x_warn_long_long> x_warn_long_long;
	 generic_field_name <"x_warn_main",gcc_options,x_warn_main> x_warn_main;
	 generic_field_name <"x_warn_maybe_uninitialized",gcc_options,x_warn_maybe_uninitialized> x_warn_maybe_uninitialized;
	 generic_field_name <"x_warn_missing_braces",gcc_options,x_warn_missing_braces> x_warn_missing_braces;
	 generic_field_name <"x_warn_missing_declarations",gcc_options,x_warn_missing_declarations> x_warn_missing_declarations;
	 generic_field_name <"x_warn_missing_field_initializers",gcc_options,x_warn_missing_field_initializers> x_warn_missing_field_initializers;
	 generic_field_name <"x_warn_missing_format_attribute",gcc_options,x_warn_missing_format_attribute> x_warn_missing_format_attribute;
	 generic_field_name <"x_warn_missing_noreturn",gcc_options,x_warn_missing_noreturn> x_warn_missing_noreturn;
	 generic_field_name <"x_warn_missing_parameter_type",gcc_options,x_warn_missing_parameter_type> x_warn_missing_parameter_type;
	 generic_field_name <"x_warn_missing_prototypes",gcc_options,x_warn_missing_prototypes> x_warn_missing_prototypes;
	 generic_field_name <"x_warn_mudflap",gcc_options,x_warn_mudflap> x_warn_mudflap;
	 generic_field_name <"x_warn_narrowing",gcc_options,x_warn_narrowing> x_warn_narrowing;
	 generic_field_name <"x_warn_nested_externs",gcc_options,x_warn_nested_externs> x_warn_nested_externs;
	 generic_field_name <"x_warn_noexcept",gcc_options,x_warn_noexcept> x_warn_noexcept;
	 generic_field_name <"x_warn_nontemplate_friend",gcc_options,x_warn_nontemplate_friend> x_warn_nontemplate_friend;
	 generic_field_name <"x_warn_nonvdtor",gcc_options,x_warn_nonvdtor> x_warn_nonvdtor;
	 generic_field_name <"x_warn_nonnull",gcc_options,x_warn_nonnull> x_warn_nonnull;
	 generic_field_name <"x_warn_old_style_cast",gcc_options,x_warn_old_style_cast> x_warn_old_style_cast;
	 generic_field_name <"x_warn_old_style_declaration",gcc_options,x_warn_old_style_declaration> x_warn_old_style_declaration;
	 generic_field_name <"x_warn_old_style_definition",gcc_options,x_warn_old_style_definition> x_warn_old_style_definition;
	 generic_field_name <"x_flag_newer",gcc_options,x_flag_newer> x_flag_newer;
	 generic_field_name <"x_warn_overflow",gcc_options,x_warn_overflow> x_warn_overflow;
	 generic_field_name <"x_warn_overlength_strings",gcc_options,x_warn_overlength_strings> x_warn_overlength_strings;
	 generic_field_name <"x_warn_overloaded_virtual",gcc_options,x_warn_overloaded_virtual> x_warn_overloaded_virtual;
	 generic_field_name <"x_warn_override_init",gcc_options,x_warn_override_init> x_warn_override_init;
	 generic_field_name <"x_warn_packed",gcc_options,x_warn_packed> x_warn_packed;
	 generic_field_name <"x_warn_packed_bitfield_compat",gcc_options,x_warn_packed_bitfield_compat> x_warn_packed_bitfield_compat;
	 generic_field_name <"x_warn_padded",gcc_options,x_warn_padded> x_warn_padded;
	 generic_field_name <"x_warn_parentheses",gcc_options,x_warn_parentheses> x_warn_parentheses;
	 generic_field_name <"x_warn_pmf2ptr",gcc_options,x_warn_pmf2ptr> x_warn_pmf2ptr;
	 generic_field_name <"x_warn_pointer_arith",gcc_options,x_warn_pointer_arith> x_warn_pointer_arith;
	 generic_field_name <"x_warn_pointer_sign",gcc_options,x_warn_pointer_sign> x_warn_pointer_sign;
	 generic_field_name <"x_warn_pointer_to_int_cast",gcc_options,x_warn_pointer_to_int_cast> x_warn_pointer_to_int_cast;
	 generic_field_name <"x_warn_pragmas",gcc_options,x_warn_pragmas> x_warn_pragmas;
	 generic_field_name <"x_warn_property_assign_default",gcc_options,x_warn_property_assign_default> x_warn_property_assign_default;
	 generic_field_name <"x_warn_protocol",gcc_options,x_warn_protocol> x_warn_protocol;
	 generic_field_name <"x_warn_psabi",gcc_options,x_warn_psabi> x_warn_psabi;
	 generic_field_name <"x_warn_redundant_decls",gcc_options,x_warn_redundant_decls> x_warn_redundant_decls;
	 generic_field_name <"x_flag_redundant",gcc_options,x_flag_redundant> x_flag_redundant;
	 generic_field_name <"x_warn_reorder",gcc_options,x_warn_reorder> x_warn_reorder;
	 generic_field_name <"x_warn_return_type",gcc_options,x_warn_return_type> x_warn_return_type;
	 generic_field_name <"x_warn_selector",gcc_options,x_warn_selector> x_warn_selector;
	 generic_field_name <"x_warn_sequence_point",gcc_options,x_warn_sequence_point> x_warn_sequence_point;
	 generic_field_name <"x_warn_shadow",gcc_options,x_warn_shadow> x_warn_shadow;
	 generic_field_name <"x_warn_sign_compare",gcc_options,x_warn_sign_compare> x_warn_sign_compare;
	 generic_field_name <"x_warn_sign_conversion",gcc_options,x_warn_sign_conversion> x_warn_sign_conversion;
	 generic_field_name <"x_warn_sign_promo",gcc_options,x_warn_sign_promo> x_warn_sign_promo;
	 generic_field_name <"x_warn_stack_protect",gcc_options,x_warn_stack_protect> x_warn_stack_protect;
	 generic_field_name <"x_warn_stack_usage",gcc_options,x_warn_stack_usage> x_warn_stack_usage;
	 generic_field_name <"x_warn_strict_aliasing",gcc_options,x_warn_strict_aliasing> x_warn_strict_aliasing;
	 generic_field_name <"x_warn_strict_null_sentinel",gcc_options,x_warn_strict_null_sentinel> x_warn_strict_null_sentinel;
	 generic_field_name <"x_warn_strict_overflow",gcc_options,x_warn_strict_overflow> x_warn_strict_overflow;
	 generic_field_name <"x_warn_strict_prototypes",gcc_options,x_warn_strict_prototypes> x_warn_strict_prototypes;
	 generic_field_name <"x_warn_strict_selector_match",gcc_options,x_warn_strict_selector_match> x_warn_strict_selector_match;
	 generic_field_name <"x_warn_suggest_attribute_const",gcc_options,x_warn_suggest_attribute_const> x_warn_suggest_attribute_const;
	 generic_field_name <"x_warn_suggest_attribute_noreturn",gcc_options,x_warn_suggest_attribute_noreturn> x_warn_suggest_attribute_noreturn;
	 generic_field_name <"x_warn_suggest_attribute_pure",gcc_options,x_warn_suggest_attribute_pure> x_warn_suggest_attribute_pure;
	 generic_field_name <"x_warn_switch",gcc_options,x_warn_switch> x_warn_switch;
	 generic_field_name <"x_warn_switch_default",gcc_options,x_warn_switch_default> x_warn_switch_default;
	 generic_field_name <"x_warn_switch_enum",gcc_options,x_warn_switch_enum> x_warn_switch_enum;
	 generic_field_name <"x_warn_sync_nand",gcc_options,x_warn_sync_nand> x_warn_sync_nand;
	 generic_field_name <"x_warn_synth",gcc_options,x_warn_synth> x_warn_synth;
	 generic_field_name <"x_warn_system_headers",gcc_options,x_warn_system_headers> x_warn_system_headers;
	 generic_field_name <"x_warn_traditional",gcc_options,x_warn_traditional> x_warn_traditional;
	 generic_field_name <"x_warn_traditional_conversion",gcc_options,x_warn_traditional_conversion> x_warn_traditional_conversion;
	 generic_field_name <"x_warn_trampolines",gcc_options,x_warn_trampolines> x_warn_trampolines;
	 generic_field_name <"x_warn_type_limits",gcc_options,x_warn_type_limits> x_warn_type_limits;
	 generic_field_name <"x_warn_undeclared_selector",gcc_options,x_warn_undeclared_selector> x_warn_undeclared_selector;
	 generic_field_name <"x_warn_uninitialized",gcc_options,x_warn_uninitialized> x_warn_uninitialized;
	 generic_field_name <"x_warn_unsafe_loop_optimizations",gcc_options,x_warn_unsafe_loop_optimizations> x_warn_unsafe_loop_optimizations;
	 generic_field_name <"x_warn_unsuffixed_float_constants",gcc_options,x_warn_unsuffixed_float_constants> x_warn_unsuffixed_float_constants;
	 generic_field_name <"x_warn_unused",gcc_options,x_warn_unused> x_warn_unused;
	 generic_field_name <"x_warn_unused_but_set_parameter",gcc_options,x_warn_unused_but_set_parameter> x_warn_unused_but_set_parameter;
	 generic_field_name <"x_warn_unused_but_set_variable",gcc_options,x_warn_unused_but_set_variable> x_warn_unused_but_set_variable;
	 generic_field_name <"x_warn_unused_function",gcc_options,x_warn_unused_function> x_warn_unused_function;
	 generic_field_name <"x_warn_unused_label",gcc_options,x_warn_unused_label> x_warn_unused_label;
	 generic_field_name <"x_warn_unused_local_typedefs",gcc_options,x_warn_unused_local_typedefs> x_warn_unused_local_typedefs;
	 generic_field_name <"x_warn_unused_parameter",gcc_options,x_warn_unused_parameter> x_warn_unused_parameter;
	 generic_field_name <"x_warn_unused_result",gcc_options,x_warn_unused_result> x_warn_unused_result;
	 generic_field_name <"x_warn_unused_value",gcc_options,x_warn_unused_value> x_warn_unused_value;
	 generic_field_name <"x_warn_unused_variable",gcc_options,x_warn_unused_variable> x_warn_unused_variable;
	 generic_field_name <"x_warn_vector_operation_performance",gcc_options,x_warn_vector_operation_performance> x_warn_vector_operation_performance;
	 generic_field_name <"x_warn_vla",gcc_options,x_warn_vla> x_warn_vla;
	 generic_field_name <"x_warn_volatile_register_var",gcc_options,x_warn_volatile_register_var> x_warn_volatile_register_var;
	 generic_field_name <"x_warn_write_strings",gcc_options,x_warn_write_strings> x_warn_write_strings;
	 generic_field_name <"x_warn_zero_as_null_pointer_constant",gcc_options,x_warn_zero_as_null_pointer_constant> x_warn_zero_as_null_pointer_constant;
	 generic_field_name <"x_aux_info_file_name",gcc_options,x_aux_info_file_name> x_aux_info_file_name;
	 generic_field_name <"x_aux_base_name",gcc_options,x_aux_base_name> x_aux_base_name;
	 generic_field_name <"x_dump_base_name",gcc_options,x_dump_base_name> x_dump_base_name;
	 generic_field_name <"x_dump_dir_name",gcc_options,x_dump_dir_name> x_dump_dir_name;
	 generic_field_name <"x_flag_pic",gcc_options,x_flag_pic> x_flag_pic;
	 generic_field_name <"x_flag_pie",gcc_options,x_flag_pie> x_flag_pie;
	 generic_field_name <"x_flag_abi_version",gcc_options,x_flag_abi_version> x_flag_abi_version;
	 generic_field_name <"x_flag_access_control",gcc_options,x_flag_access_control> x_flag_access_control;
	 generic_field_name <"x_align_functions",gcc_options,x_align_functions> x_align_functions;
	 generic_field_name <"x_align_jumps",gcc_options,x_align_jumps> x_align_jumps;
	 generic_field_name <"x_align_labels",gcc_options,x_align_labels> x_align_labels;
	 generic_field_name <"x_align_loops",gcc_options,x_align_loops> x_align_loops;
	 generic_field_name <"x_flag_allow_parameterless_variadic_functions",gcc_options,x_flag_allow_parameterless_variadic_functions> x_flag_allow_parameterless_variadic_functions;
	 generic_field_name <"x_flag_no_asm",gcc_options,x_flag_no_asm> x_flag_no_asm;
	 generic_field_name <"x_flag_assert",gcc_options,x_flag_assert> x_flag_assert;
	 generic_field_name <"x_flag_associative_math",gcc_options,x_flag_associative_math> x_flag_associative_math;
	 generic_field_name <"x_flag_asynchronous_unwind_tables",gcc_options,x_flag_asynchronous_unwind_tables> x_flag_asynchronous_unwind_tables;
	 generic_field_name <"x_flag_auto_inc_dec",gcc_options,x_flag_auto_inc_dec> x_flag_auto_inc_dec;
	 generic_field_name <"x_flag_bootstrap_classes",gcc_options,x_flag_bootstrap_classes> x_flag_bootstrap_classes;
	 generic_field_name <"x_flag_bounds_check",gcc_options,x_flag_bounds_check> x_flag_bounds_check;
	 generic_field_name <"x_flag_branch_on_count_reg",gcc_options,x_flag_branch_on_count_reg> x_flag_branch_on_count_reg;
	 generic_field_name <"x_flag_branch_probabilities",gcc_options,x_flag_branch_probabilities> x_flag_branch_probabilities;
	 generic_field_name <"x_flag_branch_target_load_optimize",gcc_options,x_flag_branch_target_load_optimize> x_flag_branch_target_load_optimize;
	 generic_field_name <"x_flag_branch_target_load_optimize2",gcc_options,x_flag_branch_target_load_optimize2> x_flag_branch_target_load_optimize2;
	 generic_field_name <"x_flag_btr_bb_exclusive",gcc_options,x_flag_btr_bb_exclusive> x_flag_btr_bb_exclusive;
	 generic_field_name <"x_flag_building_libgcc",gcc_options,x_flag_building_libgcc> x_flag_building_libgcc;
	 generic_field_name <"x_flag_no_builtin",gcc_options,x_flag_no_builtin> x_flag_no_builtin;
	 generic_field_name <"x_common_deferred_options",gcc_options,x_common_deferred_options> x_common_deferred_options;
	 generic_field_name <"x_flag_caller_saves",gcc_options,x_flag_caller_saves> x_flag_caller_saves;
	 generic_field_name <"x_flag_check_data_deps",gcc_options,x_flag_check_data_deps> x_flag_check_data_deps;
	 generic_field_name <"x_flag_check_new",gcc_options,x_flag_check_new> x_flag_check_new;
	 generic_field_name <"x_flag_check_references",gcc_options,x_flag_check_references> x_flag_check_references;
	 generic_field_name <"x_flag_combine_stack_adjustments",gcc_options,x_flag_combine_stack_adjustments> x_flag_combine_stack_adjustments;
	 generic_field_name <"x_flag_no_common",gcc_options,x_flag_no_common> x_flag_no_common;
	 generic_field_name <"x_flag_compare_debug",gcc_options,x_flag_compare_debug> x_flag_compare_debug;
	 generic_field_name <"x_flag_compare_debug_opt",gcc_options,x_flag_compare_debug_opt> x_flag_compare_debug_opt;
	 generic_field_name <"x_flag_compare_elim_after_reload",gcc_options,x_flag_compare_elim_after_reload> x_flag_compare_elim_after_reload;
	 generic_field_name <"x_flag_conserve_space",gcc_options,x_flag_conserve_space> x_flag_conserve_space;
	 generic_field_name <"x_flag_conserve_stack",gcc_options,x_flag_conserve_stack> x_flag_conserve_stack;
	 generic_field_name <"x_max_constexpr_depth",gcc_options,x_max_constexpr_depth> x_max_constexpr_depth;
	 generic_field_name <"x_flag_cprop_registers",gcc_options,x_flag_cprop_registers> x_flag_cprop_registers;
	 generic_field_name <"x_flag_crossjumping",gcc_options,x_flag_crossjumping> x_flag_crossjumping;
	 generic_field_name <"x_flag_cse_follow_jumps",gcc_options,x_flag_cse_follow_jumps> x_flag_cse_follow_jumps;
	 generic_field_name <"x_flag_cx_fortran_rules",gcc_options,x_flag_cx_fortran_rules> x_flag_cx_fortran_rules;
	 generic_field_name <"x_flag_cx_limited_range",gcc_options,x_flag_cx_limited_range> x_flag_cx_limited_range;
	 generic_field_name <"x_flag_data_sections",gcc_options,x_flag_data_sections> x_flag_data_sections;
	 generic_field_name <"x_flag_dce",gcc_options,x_flag_dce> x_flag_dce;
	 generic_field_name <"x_flag_debug_types_section",gcc_options,x_flag_debug_types_section> x_flag_debug_types_section;
	 generic_field_name <"x_flag_deduce_init_list",gcc_options,x_flag_deduce_init_list> x_flag_deduce_init_list;
	 generic_field_name <"x_flag_defer_pop",gcc_options,x_flag_defer_pop> x_flag_defer_pop;
	 generic_field_name <"x_flag_delayed_branch",gcc_options,x_flag_delayed_branch> x_flag_delayed_branch;
	 generic_field_name <"x_flag_delete_null_pointer_checks",gcc_options,x_flag_delete_null_pointer_checks> x_flag_delete_null_pointer_checks;
	 generic_field_name <"x_flag_devirtualize",gcc_options,x_flag_devirtualize> x_flag_devirtualize;
	 generic_field_name <"x_flag_diagnostics_show_option",gcc_options,x_flag_diagnostics_show_option> x_flag_diagnostics_show_option;
	 generic_field_name <"x_flag_dse",gcc_options,x_flag_dse> x_flag_dse;
	 generic_field_name <"x_flag_dump_final_insns",gcc_options,x_flag_dump_final_insns> x_flag_dump_final_insns;
	 generic_field_name <"x_flag_dump_go_spec",gcc_options,x_flag_dump_go_spec> x_flag_dump_go_spec;
	 generic_field_name <"x_flag_dump_noaddr",gcc_options,x_flag_dump_noaddr> x_flag_dump_noaddr;
	 generic_field_name <"x_flag_dump_passes",gcc_options,x_flag_dump_passes> x_flag_dump_passes;
	 generic_field_name <"x_flag_dump_unnumbered",gcc_options,x_flag_dump_unnumbered> x_flag_dump_unnumbered;
	 generic_field_name <"x_flag_dump_unnumbered_links",gcc_options,x_flag_dump_unnumbered_links> x_flag_dump_unnumbered_links;
	 generic_field_name <"x_flag_dwarf2_cfi_asm",gcc_options,x_flag_dwarf2_cfi_asm> x_flag_dwarf2_cfi_asm;
	 generic_field_name <"x_flag_early_inlining",gcc_options,x_flag_early_inlining> x_flag_early_inlining;
	 generic_field_name <"x_flag_elide_constructors",gcc_options,x_flag_elide_constructors> x_flag_elide_constructors;
	 generic_field_name <"x_flag_eliminate_dwarf2_dups",gcc_options,x_flag_eliminate_dwarf2_dups> x_flag_eliminate_dwarf2_dups;
	 generic_field_name <"x_flag_debug_only_used_symbols",gcc_options,x_flag_debug_only_used_symbols> x_flag_debug_only_used_symbols;
	 generic_field_name <"x_flag_eliminate_unused_debug_types",gcc_options,x_flag_eliminate_unused_debug_types> x_flag_eliminate_unused_debug_types;
	 generic_field_name <"x_flag_emit_class_debug_always",gcc_options,x_flag_emit_class_debug_always> x_flag_emit_class_debug_always;
	 generic_field_name <"x_flag_emit_class_files",gcc_options,x_flag_emit_class_files> x_flag_emit_class_files;
	 generic_field_name <"x_flag_enforce_eh_specs",gcc_options,x_flag_enforce_eh_specs> x_flag_enforce_eh_specs;
	 generic_field_name <"x_flag_exceptions",gcc_options,x_flag_exceptions> x_flag_exceptions;
	 generic_field_name <"x_flag_excess_precision_cmdline",gcc_options,x_flag_excess_precision_cmdline> x_flag_excess_precision_cmdline;
	 generic_field_name <"x_flag_expensive_optimizations",gcc_options,x_flag_expensive_optimizations> x_flag_expensive_optimizations;
	 generic_field_name <"x_flag_fat_lto_objects",gcc_options,x_flag_fat_lto_objects> x_flag_fat_lto_objects;
	 generic_field_name <"x_flag_filelist_file",gcc_options,x_flag_filelist_file> x_flag_filelist_file;
	 generic_field_name <"x_flag_finite_math_only",gcc_options,x_flag_finite_math_only> x_flag_finite_math_only;
	 generic_field_name <"x_flag_float_store",gcc_options,x_flag_float_store> x_flag_float_store;
	 generic_field_name <"x_flag_new_for_scope",gcc_options,x_flag_new_for_scope> x_flag_new_for_scope;
	 generic_field_name <"x_flag_force_classes_archive_check",gcc_options,x_flag_force_classes_archive_check> x_flag_force_classes_archive_check;
	 generic_field_name <"x_flag_forward_propagate",gcc_options,x_flag_forward_propagate> x_flag_forward_propagate;
	 generic_field_name <"x_flag_fp_contract_mode",gcc_options,x_flag_fp_contract_mode> x_flag_fp_contract_mode;
	 generic_field_name <"x_flag_friend_injection",gcc_options,x_flag_friend_injection> x_flag_friend_injection;
	 generic_field_name <"x_flag_no_function_cse",gcc_options,x_flag_no_function_cse> x_flag_no_function_cse;
	 generic_field_name <"x_flag_function_sections",gcc_options,x_flag_function_sections> x_flag_function_sections;
	 generic_field_name <"x_flag_gcse",gcc_options,x_flag_gcse> x_flag_gcse;
	 generic_field_name <"x_flag_gcse_after_reload",gcc_options,x_flag_gcse_after_reload> x_flag_gcse_after_reload;
	 generic_field_name <"x_flag_gcse_las",gcc_options,x_flag_gcse_las> x_flag_gcse_las;
	 generic_field_name <"x_flag_gcse_lm",gcc_options,x_flag_gcse_lm> x_flag_gcse_lm;
	 generic_field_name <"x_flag_gcse_sm",gcc_options,x_flag_gcse_sm> x_flag_gcse_sm;
	 generic_field_name <"x_flag_no_gnu_keywords",gcc_options,x_flag_no_gnu_keywords> x_flag_no_gnu_keywords;
	 generic_field_name <"x_flag_next_runtime",gcc_options,x_flag_next_runtime> x_flag_next_runtime;
	 generic_field_name <"x_flag_tm",gcc_options,x_flag_tm> x_flag_tm;
	 generic_field_name <"x_flag_gnu89_inline",gcc_options,x_flag_gnu89_inline> x_flag_gnu89_inline;
	 generic_field_name <"x_go_check_divide_overflow",gcc_options,x_go_check_divide_overflow> x_go_check_divide_overflow;
	 generic_field_name <"x_go_check_divide_zero",gcc_options,x_go_check_divide_zero> x_go_check_divide_zero;
	 generic_field_name <"x_flag_graphite",gcc_options,x_flag_graphite> x_flag_graphite;
	 generic_field_name <"x_flag_graphite_identity",gcc_options,x_flag_graphite_identity> x_flag_graphite_identity;
	 generic_field_name <"x_flag_guess_branch_prob",gcc_options,x_flag_guess_branch_prob> x_flag_guess_branch_prob;
	 generic_field_name <"x_flag_hash_synchronization",gcc_options,x_flag_hash_synchronization> x_flag_hash_synchronization;
	 generic_field_name <"x_flag_no_ident",gcc_options,x_flag_no_ident> x_flag_no_ident;
	 generic_field_name <"x_flag_if_conversion",gcc_options,x_flag_if_conversion> x_flag_if_conversion;
	 generic_field_name <"x_flag_if_conversion2",gcc_options,x_flag_if_conversion2> x_flag_if_conversion2;
	 generic_field_name <"x_flag_implement_inlines",gcc_options,x_flag_implement_inlines> x_flag_implement_inlines;
	 generic_field_name <"x_flag_implicit_inline_templates",gcc_options,x_flag_implicit_inline_templates> x_flag_implicit_inline_templates;
	 generic_field_name <"x_flag_implicit_templates",gcc_options,x_flag_implicit_templates> x_flag_implicit_templates;
	 generic_field_name <"x_flag_indirect_classes",gcc_options,x_flag_indirect_classes> x_flag_indirect_classes;
	 generic_field_name <"x_flag_indirect_dispatch",gcc_options,x_flag_indirect_dispatch> x_flag_indirect_dispatch;
	 generic_field_name <"x_flag_indirect_inlining",gcc_options,x_flag_indirect_inlining> x_flag_indirect_inlining;
	 generic_field_name <"x_flag_inhibit_size_directive",gcc_options,x_flag_inhibit_size_directive> x_flag_inhibit_size_directive;
	 generic_field_name <"x_flag_no_inline",gcc_options,x_flag_no_inline> x_flag_no_inline;
	 generic_field_name <"x_flag_inline_atomics",gcc_options,x_flag_inline_atomics> x_flag_inline_atomics;
	 generic_field_name <"x_flag_inline_functions",gcc_options,x_flag_inline_functions> x_flag_inline_functions;
	 generic_field_name <"x_flag_inline_functions_called_once",gcc_options,x_flag_inline_functions_called_once> x_flag_inline_functions_called_once;
	 generic_field_name <"x_flag_inline_small_functions",gcc_options,x_flag_inline_small_functions> x_flag_inline_small_functions;
	 generic_field_name <"x_flag_instrument_function_entry_exit",gcc_options,x_flag_instrument_function_entry_exit> x_flag_instrument_function_entry_exit;
	 generic_field_name <"x_flag_ipa_cp",gcc_options,x_flag_ipa_cp> x_flag_ipa_cp;
	 generic_field_name <"x_flag_ipa_cp_clone",gcc_options,x_flag_ipa_cp_clone> x_flag_ipa_cp_clone;
	 generic_field_name <"x_flag_ipa_matrix_reorg",gcc_options,x_flag_ipa_matrix_reorg> x_flag_ipa_matrix_reorg;
	 generic_field_name <"x_flag_ipa_profile",gcc_options,x_flag_ipa_profile> x_flag_ipa_profile;
	 generic_field_name <"x_flag_ipa_pta",gcc_options,x_flag_ipa_pta> x_flag_ipa_pta;
	 generic_field_name <"x_flag_ipa_pure_const",gcc_options,x_flag_ipa_pure_const> x_flag_ipa_pure_const;
	 generic_field_name <"x_flag_ipa_reference",gcc_options,x_flag_ipa_reference> x_flag_ipa_reference;
	 generic_field_name <"x_flag_ipa_sra",gcc_options,x_flag_ipa_sra> x_flag_ipa_sra;
	 generic_field_name <"x_flag_ira_algorithm",gcc_options,x_flag_ira_algorithm> x_flag_ira_algorithm;
	 generic_field_name <"x_flag_ira_loop_pressure",gcc_options,x_flag_ira_loop_pressure> x_flag_ira_loop_pressure;
	 generic_field_name <"x_flag_ira_region",gcc_options,x_flag_ira_region> x_flag_ira_region;
	 generic_field_name <"x_flag_ira_share_save_slots",gcc_options,x_flag_ira_share_save_slots> x_flag_ira_share_save_slots;
	 generic_field_name <"x_flag_ira_share_spill_slots",gcc_options,x_flag_ira_share_spill_slots> x_flag_ira_share_spill_slots;
	 generic_field_name <"x_flag_ira_verbose",gcc_options,x_flag_ira_verbose> x_flag_ira_verbose;
	 generic_field_name <"x_flag_ivopts",gcc_options,x_flag_ivopts> x_flag_ivopts;
	 generic_field_name <"x_flag_jni",gcc_options,x_flag_jni> x_flag_jni;
	 generic_field_name <"x_flag_jump_tables",gcc_options,x_flag_jump_tables> x_flag_jump_tables;
	 generic_field_name <"x_flag_keep_inline_dllexport",gcc_options,x_flag_keep_inline_dllexport> x_flag_keep_inline_dllexport;
	 generic_field_name <"x_flag_keep_inline_functions",gcc_options,x_flag_keep_inline_functions> x_flag_keep_inline_functions;
	 generic_field_name <"x_flag_keep_static_consts",gcc_options,x_flag_keep_static_consts> x_flag_keep_static_consts;
	 generic_field_name <"x_flag_lax_vector_conversions",gcc_options,x_flag_lax_vector_conversions> x_flag_lax_vector_conversions;
	 generic_field_name <"x_flag_leading_underscore",gcc_options,x_flag_leading_underscore> x_flag_leading_underscore;
	 generic_field_name <"x_flag_loop_block",gcc_options,x_flag_loop_block> x_flag_loop_block;
	 generic_field_name <"x_flag_loop_flatten",gcc_options,x_flag_loop_flatten> x_flag_loop_flatten;
	 generic_field_name <"x_flag_loop_interchange",gcc_options,x_flag_loop_interchange> x_flag_loop_interchange;
	 generic_field_name <"x_flag_loop_parallelize_all",gcc_options,x_flag_loop_parallelize_all> x_flag_loop_parallelize_all;
	 generic_field_name <"x_flag_loop_strip_mine",gcc_options,x_flag_loop_strip_mine> x_flag_loop_strip_mine;
	 generic_field_name <"x_flag_lto_compression_level",gcc_options,x_flag_lto_compression_level> x_flag_lto_compression_level;
	 generic_field_name <"x_flag_lto_partition_1to1",gcc_options,x_flag_lto_partition_1to1> x_flag_lto_partition_1to1;
	 generic_field_name <"x_flag_lto_partition_balanced",gcc_options,x_flag_lto_partition_balanced> x_flag_lto_partition_balanced;
	 generic_field_name <"x_flag_lto_partition_none",gcc_options,x_flag_lto_partition_none> x_flag_lto_partition_none;
	 generic_field_name <"x_flag_lto_report",gcc_options,x_flag_lto_report> x_flag_lto_report;
	 generic_field_name <"x_flag_lto",gcc_options,x_flag_lto> x_flag_lto;
	 generic_field_name <"x_flag_ltrans",gcc_options,x_flag_ltrans> x_flag_ltrans;
	 generic_field_name <"x_ltrans_output_list",gcc_options,x_ltrans_output_list> x_ltrans_output_list;
	 generic_field_name <"x_flag_errno_math",gcc_options,x_flag_errno_math> x_flag_errno_math;
	 generic_field_name <"x_flag_max_errors",gcc_options,x_flag_max_errors> x_flag_max_errors;
	 generic_field_name <"x_mem_report",gcc_options,x_mem_report> x_mem_report;
	 generic_field_name <"x_flag_merge_constants",gcc_options,x_flag_merge_constants> x_flag_merge_constants;
	 generic_field_name <"x_flag_merge_debug_strings",gcc_options,x_flag_merge_debug_strings> x_flag_merge_debug_strings;
	 generic_field_name <"x_flag_modulo_sched",gcc_options,x_flag_modulo_sched> x_flag_modulo_sched;
	 generic_field_name <"x_flag_modulo_sched_allow_regmoves",gcc_options,x_flag_modulo_sched_allow_regmoves> x_flag_modulo_sched_allow_regmoves;
	 generic_field_name <"x_flag_move_loop_invariants",gcc_options,x_flag_move_loop_invariants> x_flag_move_loop_invariants;
	 generic_field_name <"x_flag_ms_extensions",gcc_options,x_flag_ms_extensions> x_flag_ms_extensions;
	 generic_field_name <"x_flag_mudflap",gcc_options,x_flag_mudflap> x_flag_mudflap;
	 generic_field_name <"x_flag_mudflap_ignore_reads",gcc_options,x_flag_mudflap_ignore_reads> x_flag_mudflap_ignore_reads;
	 generic_field_name <"x_flag_nil_receivers",gcc_options,x_flag_nil_receivers> x_flag_nil_receivers;
	 generic_field_name <"x_flag_non_call_exceptions",gcc_options,x_flag_non_call_exceptions> x_flag_non_call_exceptions;
	 generic_field_name <"x_flag_no_nonansi_builtin",gcc_options,x_flag_no_nonansi_builtin> x_flag_no_nonansi_builtin;
	 generic_field_name <"x_flag_nothrow_opt",gcc_options,x_flag_nothrow_opt> x_flag_nothrow_opt;
	 generic_field_name <"x_flag_objc_abi",gcc_options,x_flag_objc_abi> x_flag_objc_abi;
	 generic_field_name <"x_flag_objc_call_cxx_cdtors",gcc_options,x_flag_objc_call_cxx_cdtors> x_flag_objc_call_cxx_cdtors;
	 generic_field_name <"x_flag_objc_direct_dispatch",gcc_options,x_flag_objc_direct_dispatch> x_flag_objc_direct_dispatch;
	 generic_field_name <"x_flag_objc_exceptions",gcc_options,x_flag_objc_exceptions> x_flag_objc_exceptions;
	 generic_field_name <"x_flag_objc_gc",gcc_options,x_flag_objc_gc> x_flag_objc_gc;
	 generic_field_name <"x_flag_objc_nilcheck",gcc_options,x_flag_objc_nilcheck> x_flag_objc_nilcheck;
	 generic_field_name <"x_flag_objc_sjlj_exceptions",gcc_options,x_flag_objc_sjlj_exceptions> x_flag_objc_sjlj_exceptions;
	 generic_field_name <"x_flag_objc1_only",gcc_options,x_flag_objc1_only> x_flag_objc1_only;
	 generic_field_name <"x_flag_omit_frame_pointer",gcc_options,x_flag_omit_frame_pointer> x_flag_omit_frame_pointer;
	 generic_field_name <"x_flag_openmp",gcc_options,x_flag_openmp> x_flag_openmp;
	 generic_field_name <"x_flag_regmove",gcc_options,x_flag_regmove> x_flag_regmove;
	 generic_field_name <"x_flag_optimize_sibling_calls",gcc_options,x_flag_optimize_sibling_calls> x_flag_optimize_sibling_calls;
	 generic_field_name <"x_flag_optimize_sci",gcc_options,x_flag_optimize_sci> x_flag_optimize_sci;
	 generic_field_name <"x_flag_optimize_strlen",gcc_options,x_flag_optimize_strlen> x_flag_optimize_strlen;
	 generic_field_name <"x_flag_pack_struct",gcc_options,x_flag_pack_struct> x_flag_pack_struct;
	 generic_field_name <"x_flag_partial_inlining",gcc_options,x_flag_partial_inlining> x_flag_partial_inlining;
	 generic_field_name <"x_flag_pcc_struct_return",gcc_options,x_flag_pcc_struct_return> x_flag_pcc_struct_return;
	 generic_field_name <"x_flag_peel_loops",gcc_options,x_flag_peel_loops> x_flag_peel_loops;
	 generic_field_name <"x_flag_no_peephole",gcc_options,x_flag_no_peephole> x_flag_no_peephole;
	 generic_field_name <"x_flag_peephole2",gcc_options,x_flag_peephole2> x_flag_peephole2;
	 generic_field_name <"x_flag_plan9_extensions",gcc_options,x_flag_plan9_extensions> x_flag_plan9_extensions;
	 generic_field_name <"x_post_ipa_mem_report",gcc_options,x_post_ipa_mem_report> x_post_ipa_mem_report;
	 generic_field_name <"x_pre_ipa_mem_report",gcc_options,x_pre_ipa_mem_report> x_pre_ipa_mem_report;
	 generic_field_name <"x_flag_predictive_commoning",gcc_options,x_flag_predictive_commoning> x_flag_predictive_commoning;
	 generic_field_name <"x_flag_prefetch_loop_arrays",gcc_options,x_flag_prefetch_loop_arrays> x_flag_prefetch_loop_arrays;
	 generic_field_name <"x_flag_pretty_templates",gcc_options,x_flag_pretty_templates> x_flag_pretty_templates;
	 generic_field_name <"x_profile_flag",gcc_options,x_profile_flag> x_profile_flag;
	 generic_field_name <"x_profile_arc_flag",gcc_options,x_profile_arc_flag> x_profile_arc_flag;
	 generic_field_name <"x_flag_profile_correction",gcc_options,x_flag_profile_correction> x_flag_profile_correction;
	 generic_field_name <"x_profile_data_prefix",gcc_options,x_profile_data_prefix> x_profile_data_prefix;
	 generic_field_name <"x_flag_profile_use",gcc_options,x_flag_profile_use> x_flag_profile_use;
	 generic_field_name <"x_flag_profile_values",gcc_options,x_flag_profile_values> x_flag_profile_values;
	 generic_field_name <"x_flag_reciprocal_math",gcc_options,x_flag_reciprocal_math> x_flag_reciprocal_math;
	 generic_field_name <"x_flag_record_gcc_switches",gcc_options,x_flag_record_gcc_switches> x_flag_record_gcc_switches;
	 generic_field_name <"x_flag_reduced_reflection",gcc_options,x_flag_reduced_reflection> x_flag_reduced_reflection;
	 generic_field_name <"x_flag_ree",gcc_options,x_flag_ree> x_flag_ree;
	 generic_field_name <"x_flag_rename_registers",gcc_options,x_flag_rename_registers> x_flag_rename_registers;
	 generic_field_name <"x_flag_reorder_blocks",gcc_options,x_flag_reorder_blocks> x_flag_reorder_blocks;
	 generic_field_name <"x_flag_reorder_blocks_and_partition",gcc_options,x_flag_reorder_blocks_and_partition> x_flag_reorder_blocks_and_partition;
	 generic_field_name <"x_flag_reorder_functions",gcc_options,x_flag_reorder_functions> x_flag_reorder_functions;
	 generic_field_name <"x_flag_replace_objc_classes",gcc_options,x_flag_replace_objc_classes> x_flag_replace_objc_classes;
	 generic_field_name <"x_go_require_return_statement",gcc_options,x_go_require_return_statement> x_go_require_return_statement;
	 generic_field_name <"x_flag_rerun_cse_after_loop",gcc_options,x_flag_rerun_cse_after_loop> x_flag_rerun_cse_after_loop;
	 generic_field_name <"x_flag_resched_modulo_sched",gcc_options,x_flag_resched_modulo_sched> x_flag_resched_modulo_sched;
	 generic_field_name <"x_flag_rounding_math",gcc_options,x_flag_rounding_math> x_flag_rounding_math;
	 generic_field_name <"x_flag_rtti",gcc_options,x_flag_rtti> x_flag_rtti;
	 generic_field_name <"x_flag_sched_critical_path_heuristic",gcc_options,x_flag_sched_critical_path_heuristic> x_flag_sched_critical_path_heuristic;
	 generic_field_name <"x_flag_sched_dep_count_heuristic",gcc_options,x_flag_sched_dep_count_heuristic> x_flag_sched_dep_count_heuristic;
	 generic_field_name <"x_flag_sched_group_heuristic",gcc_options,x_flag_sched_group_heuristic> x_flag_sched_group_heuristic;
	 generic_field_name <"x_flag_schedule_interblock",gcc_options,x_flag_schedule_interblock> x_flag_schedule_interblock;
	 generic_field_name <"x_flag_sched_last_insn_heuristic",gcc_options,x_flag_sched_last_insn_heuristic> x_flag_sched_last_insn_heuristic;
	 generic_field_name <"x_flag_sched_pressure",gcc_options,x_flag_sched_pressure> x_flag_sched_pressure;
	 generic_field_name <"x_flag_sched_pressure_algorithm",gcc_options,x_flag_sched_pressure_algorithm> x_flag_sched_pressure_algorithm;
	 generic_field_name <"x_flag_sched_rank_heuristic",gcc_options,x_flag_sched_rank_heuristic> x_flag_sched_rank_heuristic;
	 generic_field_name <"x_flag_schedule_speculative",gcc_options,x_flag_schedule_speculative> x_flag_schedule_speculative;
	 generic_field_name <"x_flag_sched_spec_insn_heuristic",gcc_options,x_flag_sched_spec_insn_heuristic> x_flag_sched_spec_insn_heuristic;
	 generic_field_name <"x_flag_schedule_speculative_load",gcc_options,x_flag_schedule_speculative_load> x_flag_schedule_speculative_load;
	 generic_field_name <"x_flag_schedule_speculative_load_dangerous",gcc_options,x_flag_schedule_speculative_load_dangerous> x_flag_schedule_speculative_load_dangerous;
	 generic_field_name <"x_flag_sched_stalled_insns",gcc_options,x_flag_sched_stalled_insns> x_flag_sched_stalled_insns;
	 generic_field_name <"x_flag_sched_stalled_insns_dep",gcc_options,x_flag_sched_stalled_insns_dep> x_flag_sched_stalled_insns_dep;
	 generic_field_name <"x_sched_verbose_param",gcc_options,x_sched_verbose_param> x_sched_verbose_param;
	 generic_field_name <"x_flag_sched2_use_superblocks",gcc_options,x_flag_sched2_use_superblocks> x_flag_sched2_use_superblocks;
	 generic_field_name <"x_flag_schedule_insns",gcc_options,x_flag_schedule_insns> x_flag_schedule_insns;
	 generic_field_name <"x_flag_schedule_insns_after_reload",gcc_options,x_flag_schedule_insns_after_reload> x_flag_schedule_insns_after_reload;
	 generic_field_name <"x_flag_section_anchors",gcc_options,x_flag_section_anchors> x_flag_section_anchors;
	 generic_field_name <"x_flag_sel_sched_pipelining",gcc_options,x_flag_sel_sched_pipelining> x_flag_sel_sched_pipelining;
	 generic_field_name <"x_flag_sel_sched_pipelining_outer_loops",gcc_options,x_flag_sel_sched_pipelining_outer_loops> x_flag_sel_sched_pipelining_outer_loops;
	 generic_field_name <"x_flag_sel_sched_reschedule_pipelined",gcc_options,x_flag_sel_sched_reschedule_pipelined> x_flag_sel_sched_reschedule_pipelined;
	 generic_field_name <"x_flag_selective_scheduling",gcc_options,x_flag_selective_scheduling> x_flag_selective_scheduling;
	 generic_field_name <"x_flag_selective_scheduling2",gcc_options,x_flag_selective_scheduling2> x_flag_selective_scheduling2;
	 generic_field_name <"x_flag_short_double",gcc_options,x_flag_short_double> x_flag_short_double;
	 generic_field_name <"x_flag_short_enums",gcc_options,x_flag_short_enums> x_flag_short_enums;
	 generic_field_name <"x_flag_short_wchar",gcc_options,x_flag_short_wchar> x_flag_short_wchar;
	 generic_field_name <"x_flag_show_column",gcc_options,x_flag_show_column> x_flag_show_column;
	 generic_field_name <"x_flag_shrink_wrap",gcc_options,x_flag_shrink_wrap> x_flag_shrink_wrap;
	 generic_field_name <"x_flag_signaling_nans",gcc_options,x_flag_signaling_nans> x_flag_signaling_nans;
	 generic_field_name <"x_flag_signed_bitfields",gcc_options,x_flag_signed_bitfields> x_flag_signed_bitfields;
	 generic_field_name <"x_flag_signed_char",gcc_options,x_flag_signed_char> x_flag_signed_char;
	 generic_field_name <"x_flag_signed_zeros",gcc_options,x_flag_signed_zeros> x_flag_signed_zeros;
	 generic_field_name <"x_flag_single_precision_constant",gcc_options,x_flag_single_precision_constant> x_flag_single_precision_constant;
	 generic_field_name <"x_flag_split_ivs_in_unroller",gcc_options,x_flag_split_ivs_in_unroller> x_flag_split_ivs_in_unroller;
	 generic_field_name <"x_flag_split_stack",gcc_options,x_flag_split_stack> x_flag_split_stack;
	 generic_field_name <"x_flag_split_wide_types",gcc_options,x_flag_split_wide_types> x_flag_split_wide_types;
	 generic_field_name <"x_flag_stack_protect",gcc_options,x_flag_stack_protect> x_flag_stack_protect;
	 generic_field_name <"x_flag_stack_usage",gcc_options,x_flag_stack_usage> x_flag_stack_usage;
	 generic_field_name <"x_flag_detailed_statistics",gcc_options,x_flag_detailed_statistics> x_flag_detailed_statistics;
	 generic_field_name <"x_flag_store_check",gcc_options,x_flag_store_check> x_flag_store_check;
	 generic_field_name <"x_flag_strict_aliasing",gcc_options,x_flag_strict_aliasing> x_flag_strict_aliasing;
	 generic_field_name <"x_flag_strict_enums",gcc_options,x_flag_strict_enums> x_flag_strict_enums;
	 generic_field_name <"x_flag_strict_overflow",gcc_options,x_flag_strict_overflow> x_flag_strict_overflow;
	 generic_field_name <"x_flag_strict_volatile_bitfields",gcc_options,x_flag_strict_volatile_bitfields> x_flag_strict_volatile_bitfields;
	 generic_field_name <"x_flag_syntax_only",gcc_options,x_flag_syntax_only> x_flag_syntax_only;
	 generic_field_name <"x_flag_test_coverage",gcc_options,x_flag_test_coverage> x_flag_test_coverage;
	 generic_field_name <"x_flag_thread_jumps",gcc_options,x_flag_thread_jumps> x_flag_thread_jumps;
	 generic_field_name <"x_flag_threadsafe_statics",gcc_options,x_flag_threadsafe_statics> x_flag_threadsafe_statics;
	 generic_field_name <"x_time_report",gcc_options,x_time_report> x_time_report;
	 generic_field_name <"x_flag_tls_default",gcc_options,x_flag_tls_default> x_flag_tls_default;
	 generic_field_name <"x_flag_toplevel_reorder",gcc_options,x_flag_toplevel_reorder> x_flag_toplevel_reorder;
	 generic_field_name <"x_flag_tracer",gcc_options,x_flag_tracer> x_flag_tracer;
	 generic_field_name <"x_flag_trapping_math",gcc_options,x_flag_trapping_math> x_flag_trapping_math;
	 generic_field_name <"x_flag_trapv",gcc_options,x_flag_trapv> x_flag_trapv;
	 generic_field_name <"x_flag_tree_bit_ccp",gcc_options,x_flag_tree_bit_ccp> x_flag_tree_bit_ccp;
	 generic_field_name <"x_flag_tree_builtin_call_dce",gcc_options,x_flag_tree_builtin_call_dce> x_flag_tree_builtin_call_dce;
	 generic_field_name <"x_flag_tree_ccp",gcc_options,x_flag_tree_ccp> x_flag_tree_ccp;
	 generic_field_name <"x_flag_tree_ch",gcc_options,x_flag_tree_ch> x_flag_tree_ch;
	 generic_field_name <"x_flag_tree_copy_prop",gcc_options,x_flag_tree_copy_prop> x_flag_tree_copy_prop;
	 generic_field_name <"x_flag_tree_copyrename",gcc_options,x_flag_tree_copyrename> x_flag_tree_copyrename;
	 generic_field_name <"x_flag_tree_cselim",gcc_options,x_flag_tree_cselim> x_flag_tree_cselim;
	 generic_field_name <"x_flag_tree_dce",gcc_options,x_flag_tree_dce> x_flag_tree_dce;
	 generic_field_name <"x_flag_tree_dom",gcc_options,x_flag_tree_dom> x_flag_tree_dom;
	 generic_field_name <"x_flag_tree_dse",gcc_options,x_flag_tree_dse> x_flag_tree_dse;
	 generic_field_name <"x_flag_tree_forwprop",gcc_options,x_flag_tree_forwprop> x_flag_tree_forwprop;
	 generic_field_name <"x_flag_tree_fre",gcc_options,x_flag_tree_fre> x_flag_tree_fre;
	 generic_field_name <"x_flag_tree_loop_distribute_patterns",gcc_options,x_flag_tree_loop_distribute_patterns> x_flag_tree_loop_distribute_patterns;
	 generic_field_name <"x_flag_tree_loop_distribution",gcc_options,x_flag_tree_loop_distribution> x_flag_tree_loop_distribution;
	 generic_field_name <"x_flag_tree_loop_if_convert",gcc_options,x_flag_tree_loop_if_convert> x_flag_tree_loop_if_convert;
	 generic_field_name <"x_flag_tree_loop_if_convert_stores",gcc_options,x_flag_tree_loop_if_convert_stores> x_flag_tree_loop_if_convert_stores;
	 generic_field_name <"x_flag_tree_loop_im",gcc_options,x_flag_tree_loop_im> x_flag_tree_loop_im;
	 generic_field_name <"x_flag_tree_loop_ivcanon",gcc_options,x_flag_tree_loop_ivcanon> x_flag_tree_loop_ivcanon;
	 generic_field_name <"x_flag_tree_loop_optimize",gcc_options,x_flag_tree_loop_optimize> x_flag_tree_loop_optimize;
	 generic_field_name <"x_flag_tree_live_range_split",gcc_options,x_flag_tree_live_range_split> x_flag_tree_live_range_split;
	 generic_field_name <"x_flag_tree_parallelize_loops",gcc_options,x_flag_tree_parallelize_loops> x_flag_tree_parallelize_loops;
	 generic_field_name <"x_flag_tree_partial_pre",gcc_options,x_flag_tree_partial_pre> x_flag_tree_partial_pre;
	 generic_field_name <"x_flag_tree_phiprop",gcc_options,x_flag_tree_phiprop> x_flag_tree_phiprop;
	 generic_field_name <"x_flag_tree_pre",gcc_options,x_flag_tree_pre> x_flag_tree_pre;
	 generic_field_name <"x_flag_tree_pta",gcc_options,x_flag_tree_pta> x_flag_tree_pta;
	 generic_field_name <"x_flag_tree_reassoc",gcc_options,x_flag_tree_reassoc> x_flag_tree_reassoc;
	 generic_field_name <"x_flag_tree_scev_cprop",gcc_options,x_flag_tree_scev_cprop> x_flag_tree_scev_cprop;
	 generic_field_name <"x_flag_tree_sink",gcc_options,x_flag_tree_sink> x_flag_tree_sink;
	 generic_field_name <"x_flag_tree_slp_vectorize",gcc_options,x_flag_tree_slp_vectorize> x_flag_tree_slp_vectorize;
	 generic_field_name <"x_flag_tree_sra",gcc_options,x_flag_tree_sra> x_flag_tree_sra;
	 generic_field_name <"x_flag_tree_switch_conversion",gcc_options,x_flag_tree_switch_conversion> x_flag_tree_switch_conversion;
	 generic_field_name <"x_flag_tree_tail_merge",gcc_options,x_flag_tree_tail_merge> x_flag_tree_tail_merge;
	 generic_field_name <"x_flag_tree_ter",gcc_options,x_flag_tree_ter> x_flag_tree_ter;
	 generic_field_name <"x_flag_tree_vect_loop_version",gcc_options,x_flag_tree_vect_loop_version> x_flag_tree_vect_loop_version;
	 generic_field_name <"x_flag_tree_vectorize",gcc_options,x_flag_tree_vectorize> x_flag_tree_vectorize;
	 generic_field_name <"x_flag_tree_vrp",gcc_options,x_flag_tree_vrp> x_flag_tree_vrp;
	 generic_field_name <"x_flag_unit_at_a_time",gcc_options,x_flag_unit_at_a_time> x_flag_unit_at_a_time;
	 generic_field_name <"x_flag_unroll_all_loops",gcc_options,x_flag_unroll_all_loops> x_flag_unroll_all_loops;
	 generic_field_name <"x_flag_unroll_loops",gcc_options,x_flag_unroll_loops> x_flag_unroll_loops;
	 generic_field_name <"x_flag_unsafe_loop_optimizations",gcc_options,x_flag_unsafe_loop_optimizations> x_flag_unsafe_loop_optimizations;
	 generic_field_name <"x_flag_unsafe_math_optimizations",gcc_options,x_flag_unsafe_math_optimizations> x_flag_unsafe_math_optimizations;
	 generic_field_name <"x_flag_unswitch_loops",gcc_options,x_flag_unswitch_loops> x_flag_unswitch_loops;
	 generic_field_name <"x_flag_unwind_tables",gcc_options,x_flag_unwind_tables> x_flag_unwind_tables;
	 generic_field_name <"x_flag_use_atomic_builtins",gcc_options,x_flag_use_atomic_builtins> x_flag_use_atomic_builtins;
	 generic_field_name <"x_flag_use_boehm_gc",gcc_options,x_flag_use_boehm_gc> x_flag_use_boehm_gc;
	 generic_field_name <"x_flag_use_cxa_atexit",gcc_options,x_flag_use_cxa_atexit> x_flag_use_cxa_atexit;
	 generic_field_name <"x_flag_use_cxa_get_exception_ptr",gcc_options,x_flag_use_cxa_get_exception_ptr> x_flag_use_cxa_get_exception_ptr;
	 generic_field_name <"x_flag_use_divide_subroutine",gcc_options,x_flag_use_divide_subroutine> x_flag_use_divide_subroutine;
	 generic_field_name <"x_flag_var_tracking",gcc_options,x_flag_var_tracking> x_flag_var_tracking;
	 generic_field_name <"x_flag_var_tracking_assignments",gcc_options,x_flag_var_tracking_assignments> x_flag_var_tracking_assignments;
	 generic_field_name <"x_flag_var_tracking_assignments_toggle",gcc_options,x_flag_var_tracking_assignments_toggle> x_flag_var_tracking_assignments_toggle;
	 generic_field_name <"x_flag_var_tracking_uninit",gcc_options,x_flag_var_tracking_uninit> x_flag_var_tracking_uninit;
	 generic_field_name <"x_flag_variable_expansion_in_unroller",gcc_options,x_flag_variable_expansion_in_unroller> x_flag_variable_expansion_in_unroller;
	 generic_field_name <"x_flag_vect_cost_model",gcc_options,x_flag_vect_cost_model> x_flag_vect_cost_model;
	 generic_field_name <"x_flag_verbose_asm",gcc_options,x_flag_verbose_asm> x_flag_verbose_asm;
	 generic_field_name <"x_flag_visibility_ms_compat",gcc_options,x_flag_visibility_ms_compat> x_flag_visibility_ms_compat;
	 generic_field_name <"x_default_visibility",gcc_options,x_default_visibility> x_default_visibility;
	 generic_field_name <"x_flag_value_profile_transformations",gcc_options,x_flag_value_profile_transformations> x_flag_value_profile_transformations;
	 generic_field_name <"x_flag_weak",gcc_options,x_flag_weak> x_flag_weak;
	 generic_field_name <"x_flag_web",gcc_options,x_flag_web> x_flag_web;
	 generic_field_name <"x_flag_whole_program",gcc_options,x_flag_whole_program> x_flag_whole_program;
	 generic_field_name <"x_flag_working_directory",gcc_options,x_flag_working_directory> x_flag_working_directory;
	 generic_field_name <"x_flag_wpa",gcc_options,x_flag_wpa> x_flag_wpa;
	 generic_field_name <"x_flag_wrapv",gcc_options,x_flag_wrapv> x_flag_wrapv;
	 generic_field_name <"x_flag_zero_initialized_in_bss",gcc_options,x_flag_zero_initialized_in_bss> x_flag_zero_initialized_in_bss;
	 generic_field_name <"x_flag_zero_link",gcc_options,x_flag_zero_link> x_flag_zero_link;
	 generic_field_name <"x_dwarf_version",gcc_options,x_dwarf_version> x_dwarf_version;
	 generic_field_name <"x_flag_gen_declaration",gcc_options,x_flag_gen_declaration> x_flag_gen_declaration;
	 generic_field_name <"x_dwarf_record_gcc_switches",gcc_options,x_dwarf_record_gcc_switches> x_dwarf_record_gcc_switches;
	 generic_field_name <"x_dwarf_strict",gcc_options,x_dwarf_strict> x_dwarf_strict;
	 generic_field_name <"x_flag_gtoggle",gcc_options,x_flag_gtoggle> x_flag_gtoggle;
	 generic_field_name <"x_imultiarch",gcc_options,x_imultiarch> x_imultiarch;
	 generic_field_name <"x_plugindir_string",gcc_options,x_plugindir_string> x_plugindir_string;
	 generic_field_name <"x_ix86_abi",gcc_options,x_ix86_abi> x_ix86_abi;
	 generic_field_name <"x_flag_android",gcc_options,x_flag_android> x_flag_android;
	 generic_field_name <"x_ix86_arch_string",gcc_options,x_ix86_arch_string> x_ix86_arch_string;
	 generic_field_name <"x_ix86_asm_dialect",gcc_options,x_ix86_asm_dialect> x_ix86_asm_dialect;
	 generic_field_name <"x_linux_libc",gcc_options,x_linux_libc> x_linux_libc;
	 generic_field_name <"x_ix86_branch_cost",gcc_options,x_ix86_branch_cost> x_ix86_branch_cost;
	 generic_field_name <"x_ix86_cmodel",gcc_options,x_ix86_cmodel> x_ix86_cmodel;
	 generic_field_name <"x_flag_dispatch_scheduler",gcc_options,x_flag_dispatch_scheduler> x_flag_dispatch_scheduler;
	 generic_field_name <"x_flag_fentry",gcc_options,x_flag_fentry> x_flag_fentry;
	 generic_field_name <"x_ix86_force_drap",gcc_options,x_ix86_force_drap> x_ix86_force_drap;
	 generic_field_name <"x_ix86_fpmath",gcc_options,x_ix86_fpmath> x_ix86_fpmath;
	 generic_field_name <"x_ix86_incoming_stack_boundary_arg",gcc_options,x_ix86_incoming_stack_boundary_arg> x_ix86_incoming_stack_boundary_arg;
	 generic_field_name <"x_ix86_section_threshold",gcc_options,x_ix86_section_threshold> x_ix86_section_threshold;
	 generic_field_name <"x_ix86_preferred_stack_boundary_arg",gcc_options,x_ix86_preferred_stack_boundary_arg> x_ix86_preferred_stack_boundary_arg;
	 generic_field_name <"x_ix86_recip_name",gcc_options,x_ix86_recip_name> x_ix86_recip_name;
	 generic_field_name <"x_ix86_regparm",gcc_options,x_ix86_regparm> x_ix86_regparm;
	 generic_field_name <"x_ix86_sse2avx",gcc_options,x_ix86_sse2avx> x_ix86_sse2avx;
	 generic_field_name <"x_ix86_force_align_arg_pointer",gcc_options,x_ix86_force_align_arg_pointer> x_ix86_force_align_arg_pointer;
	 generic_field_name <"x_ix86_stringop_alg",gcc_options,x_ix86_stringop_alg> x_ix86_stringop_alg;
	 generic_field_name <"x_ix86_tls_dialect",gcc_options,x_ix86_tls_dialect> x_ix86_tls_dialect;
	 generic_field_name <"x_ix86_tune_string",gcc_options,x_ix86_tune_string> x_ix86_tune_string;
	 generic_field_name <"x_ix86_veclibabi_type",gcc_options,x_ix86_veclibabi_type> x_ix86_veclibabi_type;
	 generic_field_name <"x_asm_file_name",gcc_options,x_asm_file_name> x_asm_file_name;
	 generic_field_name <"x_pass_exit_codes",gcc_options,x_pass_exit_codes> x_pass_exit_codes;
	 generic_field_name <"x_pedantic",gcc_options,x_pedantic> x_pedantic;
	 generic_field_name <"x_flag_pedantic_errors",gcc_options,x_flag_pedantic_errors> x_flag_pedantic_errors;
	 generic_field_name <"x_use_pipes",gcc_options,x_use_pipes> x_use_pipes;
	 generic_field_name <"x_print_file_name",gcc_options,x_print_file_name> x_print_file_name;
	 generic_field_name <"x_print_multi_directory",gcc_options,x_print_multi_directory> x_print_multi_directory;
	 generic_field_name <"x_print_multi_lib",gcc_options,x_print_multi_lib> x_print_multi_lib;
	 generic_field_name <"x_print_multi_os_directory",gcc_options,x_print_multi_os_directory> x_print_multi_os_directory;
	 generic_field_name <"x_print_multiarch",gcc_options,x_print_multiarch> x_print_multiarch;
	 generic_field_name <"x_print_prog_name",gcc_options,x_print_prog_name> x_print_prog_name;
	 generic_field_name <"x_print_search_dirs",gcc_options,x_print_search_dirs> x_print_search_dirs;
	 generic_field_name <"x_print_sysroot",gcc_options,x_print_sysroot> x_print_sysroot;
	 generic_field_name <"x_print_sysroot_headers_suffix",gcc_options,x_print_sysroot_headers_suffix> x_print_sysroot_headers_suffix;
	 generic_field_name <"x_quiet_flag",gcc_options,x_quiet_flag> x_quiet_flag;
	 generic_field_name <"x_report_times",gcc_options,x_report_times> x_report_times;
	 generic_field_name <"x_flag_undef",gcc_options,x_flag_undef> x_flag_undef;
	 generic_field_name <"x_verbose_flag",gcc_options,x_verbose_flag> x_verbose_flag;
	 generic_field_name <"x_version_flag",gcc_options,x_version_flag> x_version_flag;
	 generic_field_name <"x_inhibit_warnings",gcc_options,x_inhibit_warnings> x_inhibit_warnings;
	 generic_field_name <"x_wrapper_string",gcc_options,x_wrapper_string> x_wrapper_string;
	 generic_field_name <"x_VAR_malign_functions_",gcc_options,x_VAR_malign_functions_> x_VAR_malign_functions_;
	 generic_field_name <"x_VAR_malign_jumps_",gcc_options,x_VAR_malign_jumps_> x_VAR_malign_jumps_;
	 generic_field_name <"x_VAR_malign_loops_",gcc_options,x_VAR_malign_loops_> x_VAR_malign_loops_;
	 generic_field_name <"x_VAR_mpc32",gcc_options,x_VAR_mpc32> x_VAR_mpc32;
	 generic_field_name <"x_VAR_mpc64",gcc_options,x_VAR_mpc64> x_VAR_mpc64;
	 generic_field_name <"x_VAR_mpc80",gcc_options,x_VAR_mpc80> x_VAR_mpc80;
	 generic_field_name <"frontend_set_flag_associative_math",gcc_options,frontend_set_flag_associative_math> frontend_set_flag_associative_math;
	 generic_field_name <"frontend_set_flag_cx_limited_range",gcc_options,frontend_set_flag_cx_limited_range> frontend_set_flag_cx_limited_range;
	 generic_field_name <"frontend_set_flag_finite_math_only",gcc_options,frontend_set_flag_finite_math_only> frontend_set_flag_finite_math_only;
	 generic_field_name <"frontend_set_flag_errno_math",gcc_options,frontend_set_flag_errno_math> frontend_set_flag_errno_math;
	 generic_field_name <"frontend_set_flag_reciprocal_math",gcc_options,frontend_set_flag_reciprocal_math> frontend_set_flag_reciprocal_math;
	 generic_field_name <"frontend_set_flag_rounding_math",gcc_options,frontend_set_flag_rounding_math> frontend_set_flag_rounding_math;
	 generic_field_name <"frontend_set_flag_signaling_nans",gcc_options,frontend_set_flag_signaling_nans> frontend_set_flag_signaling_nans;
	 generic_field_name <"frontend_set_flag_signed_zeros",gcc_options,frontend_set_flag_signed_zeros> frontend_set_flag_signed_zeros;
	 generic_field_name <"frontend_set_flag_trapping_math",gcc_options,frontend_set_flag_trapping_math> frontend_set_flag_trapping_math;
	 generic_field_name <"frontend_set_flag_unsafe_math_optimizations",gcc_options,frontend_set_flag_unsafe_math_optimizations> frontend_set_flag_unsafe_math_optimizations;
}; 
class CLS_433_cl_optimization{ 
	 generic_class_name <"cl_optimization",cl_optimization> the_class_name;
	 generic_field_name <"x_align_functions",cl_optimization,x_align_functions> x_align_functions;
	 generic_field_name <"x_align_jumps",cl_optimization,x_align_jumps> x_align_jumps;
	 generic_field_name <"x_align_labels",cl_optimization,x_align_labels> x_align_labels;
	 generic_field_name <"x_align_loops",cl_optimization,x_align_loops> x_align_loops;
	 generic_field_name <"x_flag_sched_stalled_insns",cl_optimization,x_flag_sched_stalled_insns> x_flag_sched_stalled_insns;
	 generic_field_name <"x_flag_sched_stalled_insns_dep",cl_optimization,x_flag_sched_stalled_insns_dep> x_flag_sched_stalled_insns_dep;
	 generic_field_name <"x_flag_fp_contract_mode",cl_optimization,x_flag_fp_contract_mode> x_flag_fp_contract_mode;
	 generic_field_name <"x_optimize",cl_optimization,x_optimize> x_optimize;
	 generic_field_name <"x_optimize_size",cl_optimization,x_optimize_size> x_optimize_size;
	 generic_field_name <"x_flag_asynchronous_unwind_tables",cl_optimization,x_flag_asynchronous_unwind_tables> x_flag_asynchronous_unwind_tables;
	 generic_field_name <"x_flag_branch_on_count_reg",cl_optimization,x_flag_branch_on_count_reg> x_flag_branch_on_count_reg;
	 generic_field_name <"x_flag_branch_probabilities",cl_optimization,x_flag_branch_probabilities> x_flag_branch_probabilities;
	 generic_field_name <"x_flag_branch_target_load_optimize",cl_optimization,x_flag_branch_target_load_optimize> x_flag_branch_target_load_optimize;
	 generic_field_name <"x_flag_branch_target_load_optimize2",cl_optimization,x_flag_branch_target_load_optimize2> x_flag_branch_target_load_optimize2;
	 generic_field_name <"x_flag_btr_bb_exclusive",cl_optimization,x_flag_btr_bb_exclusive> x_flag_btr_bb_exclusive;
	 generic_field_name <"x_flag_caller_saves",cl_optimization,x_flag_caller_saves> x_flag_caller_saves;
	 generic_field_name <"x_flag_combine_stack_adjustments",cl_optimization,x_flag_combine_stack_adjustments> x_flag_combine_stack_adjustments;
	 generic_field_name <"x_flag_no_common",cl_optimization,x_flag_no_common> x_flag_no_common;
	 generic_field_name <"x_flag_compare_elim_after_reload",cl_optimization,x_flag_compare_elim_after_reload> x_flag_compare_elim_after_reload;
	 generic_field_name <"x_flag_conserve_stack",cl_optimization,x_flag_conserve_stack> x_flag_conserve_stack;
	 generic_field_name <"x_flag_cprop_registers",cl_optimization,x_flag_cprop_registers> x_flag_cprop_registers;
	 generic_field_name <"x_flag_crossjumping",cl_optimization,x_flag_crossjumping> x_flag_crossjumping;
	 generic_field_name <"x_flag_cse_follow_jumps",cl_optimization,x_flag_cse_follow_jumps> x_flag_cse_follow_jumps;
	 generic_field_name <"x_flag_cx_fortran_rules",cl_optimization,x_flag_cx_fortran_rules> x_flag_cx_fortran_rules;
	 generic_field_name <"x_flag_cx_limited_range",cl_optimization,x_flag_cx_limited_range> x_flag_cx_limited_range;
	 generic_field_name <"x_flag_data_sections",cl_optimization,x_flag_data_sections> x_flag_data_sections;
	 generic_field_name <"x_flag_dce",cl_optimization,x_flag_dce> x_flag_dce;
	 generic_field_name <"x_flag_defer_pop",cl_optimization,x_flag_defer_pop> x_flag_defer_pop;
	 generic_field_name <"x_flag_delayed_branch",cl_optimization,x_flag_delayed_branch> x_flag_delayed_branch;
	 generic_field_name <"x_flag_delete_null_pointer_checks",cl_optimization,x_flag_delete_null_pointer_checks> x_flag_delete_null_pointer_checks;
	 generic_field_name <"x_flag_devirtualize",cl_optimization,x_flag_devirtualize> x_flag_devirtualize;
	 generic_field_name <"x_flag_dse",cl_optimization,x_flag_dse> x_flag_dse;
	 generic_field_name <"x_flag_early_inlining",cl_optimization,x_flag_early_inlining> x_flag_early_inlining;
	 generic_field_name <"x_flag_exceptions",cl_optimization,x_flag_exceptions> x_flag_exceptions;
	 generic_field_name <"x_flag_expensive_optimizations",cl_optimization,x_flag_expensive_optimizations> x_flag_expensive_optimizations;
	 generic_field_name <"x_flag_finite_math_only",cl_optimization,x_flag_finite_math_only> x_flag_finite_math_only;
	 generic_field_name <"x_flag_float_store",cl_optimization,x_flag_float_store> x_flag_float_store;
	 generic_field_name <"x_flag_forward_propagate",cl_optimization,x_flag_forward_propagate> x_flag_forward_propagate;
	 generic_field_name <"x_flag_gcse",cl_optimization,x_flag_gcse> x_flag_gcse;
	 generic_field_name <"x_flag_gcse_after_reload",cl_optimization,x_flag_gcse_after_reload> x_flag_gcse_after_reload;
	 generic_field_name <"x_flag_gcse_las",cl_optimization,x_flag_gcse_las> x_flag_gcse_las;
	 generic_field_name <"x_flag_gcse_lm",cl_optimization,x_flag_gcse_lm> x_flag_gcse_lm;
	 generic_field_name <"x_flag_gcse_sm",cl_optimization,x_flag_gcse_sm> x_flag_gcse_sm;
	 generic_field_name <"x_flag_graphite_identity",cl_optimization,x_flag_graphite_identity> x_flag_graphite_identity;
	 generic_field_name <"x_flag_guess_branch_prob",cl_optimization,x_flag_guess_branch_prob> x_flag_guess_branch_prob;
	 generic_field_name <"x_flag_if_conversion",cl_optimization,x_flag_if_conversion> x_flag_if_conversion;
	 generic_field_name <"x_flag_if_conversion2",cl_optimization,x_flag_if_conversion2> x_flag_if_conversion2;
	 generic_field_name <"x_flag_inline_atomics",cl_optimization,x_flag_inline_atomics> x_flag_inline_atomics;
	 generic_field_name <"x_flag_inline_functions",cl_optimization,x_flag_inline_functions> x_flag_inline_functions;
	 generic_field_name <"x_flag_inline_functions_called_once",cl_optimization,x_flag_inline_functions_called_once> x_flag_inline_functions_called_once;
	 generic_field_name <"x_flag_inline_small_functions",cl_optimization,x_flag_inline_small_functions> x_flag_inline_small_functions;
	 generic_field_name <"x_flag_ipa_cp",cl_optimization,x_flag_ipa_cp> x_flag_ipa_cp;
	 generic_field_name <"x_flag_ipa_cp_clone",cl_optimization,x_flag_ipa_cp_clone> x_flag_ipa_cp_clone;
	 generic_field_name <"x_flag_ipa_matrix_reorg",cl_optimization,x_flag_ipa_matrix_reorg> x_flag_ipa_matrix_reorg;
	 generic_field_name <"x_flag_ipa_profile",cl_optimization,x_flag_ipa_profile> x_flag_ipa_profile;
	 generic_field_name <"x_flag_ipa_pta",cl_optimization,x_flag_ipa_pta> x_flag_ipa_pta;
	 generic_field_name <"x_flag_ipa_pure_const",cl_optimization,x_flag_ipa_pure_const> x_flag_ipa_pure_const;
	 generic_field_name <"x_flag_ipa_reference",cl_optimization,x_flag_ipa_reference> x_flag_ipa_reference;
	 generic_field_name <"x_flag_ipa_sra",cl_optimization,x_flag_ipa_sra> x_flag_ipa_sra;
	 generic_field_name <"x_flag_ivopts",cl_optimization,x_flag_ivopts> x_flag_ivopts;
	 generic_field_name <"x_flag_jump_tables",cl_optimization,x_flag_jump_tables> x_flag_jump_tables;
	 generic_field_name <"x_flag_loop_block",cl_optimization,x_flag_loop_block> x_flag_loop_block;
	 generic_field_name <"x_flag_loop_flatten",cl_optimization,x_flag_loop_flatten> x_flag_loop_flatten;
	 generic_field_name <"x_flag_loop_interchange",cl_optimization,x_flag_loop_interchange> x_flag_loop_interchange;
	 generic_field_name <"x_flag_loop_parallelize_all",cl_optimization,x_flag_loop_parallelize_all> x_flag_loop_parallelize_all;
	 generic_field_name <"x_flag_loop_strip_mine",cl_optimization,x_flag_loop_strip_mine> x_flag_loop_strip_mine;
	 generic_field_name <"x_flag_errno_math",cl_optimization,x_flag_errno_math> x_flag_errno_math;
	 generic_field_name <"x_flag_merge_constants",cl_optimization,x_flag_merge_constants> x_flag_merge_constants;
	 generic_field_name <"x_flag_modulo_sched",cl_optimization,x_flag_modulo_sched> x_flag_modulo_sched;
	 generic_field_name <"x_flag_move_loop_invariants",cl_optimization,x_flag_move_loop_invariants> x_flag_move_loop_invariants;
	 generic_field_name <"x_flag_non_call_exceptions",cl_optimization,x_flag_non_call_exceptions> x_flag_non_call_exceptions;
	 generic_field_name <"x_flag_nothrow_opt",cl_optimization,x_flag_nothrow_opt> x_flag_nothrow_opt;
	 generic_field_name <"x_flag_omit_frame_pointer",cl_optimization,x_flag_omit_frame_pointer> x_flag_omit_frame_pointer;
	 generic_field_name <"x_flag_regmove",cl_optimization,x_flag_regmove> x_flag_regmove;
	 generic_field_name <"x_flag_optimize_sibling_calls",cl_optimization,x_flag_optimize_sibling_calls> x_flag_optimize_sibling_calls;
	 generic_field_name <"x_flag_optimize_strlen",cl_optimization,x_flag_optimize_strlen> x_flag_optimize_strlen;
	 generic_field_name <"x_flag_pack_struct",cl_optimization,x_flag_pack_struct> x_flag_pack_struct;
	 generic_field_name <"x_flag_peel_loops",cl_optimization,x_flag_peel_loops> x_flag_peel_loops;
	 generic_field_name <"x_flag_no_peephole",cl_optimization,x_flag_no_peephole> x_flag_no_peephole;
	 generic_field_name <"x_flag_peephole2",cl_optimization,x_flag_peephole2> x_flag_peephole2;
	 generic_field_name <"x_flag_predictive_commoning",cl_optimization,x_flag_predictive_commoning> x_flag_predictive_commoning;
	 generic_field_name <"x_flag_prefetch_loop_arrays",cl_optimization,x_flag_prefetch_loop_arrays> x_flag_prefetch_loop_arrays;
	 generic_field_name <"x_flag_pcc_struct_return",cl_optimization,x_flag_pcc_struct_return> x_flag_pcc_struct_return;
	 generic_field_name <"x_flag_rename_registers",cl_optimization,x_flag_rename_registers> x_flag_rename_registers;
	 generic_field_name <"x_flag_reorder_blocks",cl_optimization,x_flag_reorder_blocks> x_flag_reorder_blocks;
	 generic_field_name <"x_flag_reorder_blocks_and_partition",cl_optimization,x_flag_reorder_blocks_and_partition> x_flag_reorder_blocks_and_partition;
	 generic_field_name <"x_flag_reorder_functions",cl_optimization,x_flag_reorder_functions> x_flag_reorder_functions;
	 generic_field_name <"x_flag_rerun_cse_after_loop",cl_optimization,x_flag_rerun_cse_after_loop> x_flag_rerun_cse_after_loop;
	 generic_field_name <"x_flag_resched_modulo_sched",cl_optimization,x_flag_resched_modulo_sched> x_flag_resched_modulo_sched;
	 generic_field_name <"x_flag_rounding_math",cl_optimization,x_flag_rounding_math> x_flag_rounding_math;
	 generic_field_name <"x_flag_rtti",cl_optimization,x_flag_rtti> x_flag_rtti;
	 generic_field_name <"x_flag_sched_critical_path_heuristic",cl_optimization,x_flag_sched_critical_path_heuristic> x_flag_sched_critical_path_heuristic;
	 generic_field_name <"x_flag_sched_dep_count_heuristic",cl_optimization,x_flag_sched_dep_count_heuristic> x_flag_sched_dep_count_heuristic;
	 generic_field_name <"x_flag_sched_group_heuristic",cl_optimization,x_flag_sched_group_heuristic> x_flag_sched_group_heuristic;
	 generic_field_name <"x_flag_schedule_interblock",cl_optimization,x_flag_schedule_interblock> x_flag_schedule_interblock;
	 generic_field_name <"x_flag_sched_last_insn_heuristic",cl_optimization,x_flag_sched_last_insn_heuristic> x_flag_sched_last_insn_heuristic;
	 generic_field_name <"x_flag_sched_pressure",cl_optimization,x_flag_sched_pressure> x_flag_sched_pressure;
	 generic_field_name <"x_flag_sched_rank_heuristic",cl_optimization,x_flag_sched_rank_heuristic> x_flag_sched_rank_heuristic;
	 generic_field_name <"x_flag_schedule_speculative",cl_optimization,x_flag_schedule_speculative> x_flag_schedule_speculative;
	 generic_field_name <"x_flag_sched_spec_insn_heuristic",cl_optimization,x_flag_sched_spec_insn_heuristic> x_flag_sched_spec_insn_heuristic;
	 generic_field_name <"x_flag_schedule_speculative_load",cl_optimization,x_flag_schedule_speculative_load> x_flag_schedule_speculative_load;
	 generic_field_name <"x_flag_schedule_speculative_load_dangerous",cl_optimization,x_flag_schedule_speculative_load_dangerous> x_flag_schedule_speculative_load_dangerous;
	 generic_field_name <"x_flag_sched2_use_superblocks",cl_optimization,x_flag_sched2_use_superblocks> x_flag_sched2_use_superblocks;
	 generic_field_name <"x_flag_schedule_insns",cl_optimization,x_flag_schedule_insns> x_flag_schedule_insns;
	 generic_field_name <"x_flag_schedule_insns_after_reload",cl_optimization,x_flag_schedule_insns_after_reload> x_flag_schedule_insns_after_reload;
	 generic_field_name <"x_flag_section_anchors",cl_optimization,x_flag_section_anchors> x_flag_section_anchors;
	 generic_field_name <"x_flag_sel_sched_pipelining",cl_optimization,x_flag_sel_sched_pipelining> x_flag_sel_sched_pipelining;
	 generic_field_name <"x_flag_sel_sched_pipelining_outer_loops",cl_optimization,x_flag_sel_sched_pipelining_outer_loops> x_flag_sel_sched_pipelining_outer_loops;
	 generic_field_name <"x_flag_sel_sched_reschedule_pipelined",cl_optimization,x_flag_sel_sched_reschedule_pipelined> x_flag_sel_sched_reschedule_pipelined;
	 generic_field_name <"x_flag_selective_scheduling",cl_optimization,x_flag_selective_scheduling> x_flag_selective_scheduling;
	 generic_field_name <"x_flag_selective_scheduling2",cl_optimization,x_flag_selective_scheduling2> x_flag_selective_scheduling2;
	 generic_field_name <"x_flag_short_double",cl_optimization,x_flag_short_double> x_flag_short_double;
	 generic_field_name <"x_flag_short_enums",cl_optimization,x_flag_short_enums> x_flag_short_enums;
	 generic_field_name <"x_flag_short_wchar",cl_optimization,x_flag_short_wchar> x_flag_short_wchar;
	 generic_field_name <"x_flag_shrink_wrap",cl_optimization,x_flag_shrink_wrap> x_flag_shrink_wrap;
	 generic_field_name <"x_flag_signaling_nans",cl_optimization,x_flag_signaling_nans> x_flag_signaling_nans;
	 generic_field_name <"x_flag_signed_zeros",cl_optimization,x_flag_signed_zeros> x_flag_signed_zeros;
	 generic_field_name <"x_flag_single_precision_constant",cl_optimization,x_flag_single_precision_constant> x_flag_single_precision_constant;
	 generic_field_name <"x_flag_split_ivs_in_unroller",cl_optimization,x_flag_split_ivs_in_unroller> x_flag_split_ivs_in_unroller;
	 generic_field_name <"x_flag_split_wide_types",cl_optimization,x_flag_split_wide_types> x_flag_split_wide_types;
	 generic_field_name <"x_flag_strict_aliasing",cl_optimization,x_flag_strict_aliasing> x_flag_strict_aliasing;
	 generic_field_name <"x_flag_strict_enums",cl_optimization,x_flag_strict_enums> x_flag_strict_enums;
	 generic_field_name <"x_flag_thread_jumps",cl_optimization,x_flag_thread_jumps> x_flag_thread_jumps;
	 generic_field_name <"x_flag_threadsafe_statics",cl_optimization,x_flag_threadsafe_statics> x_flag_threadsafe_statics;
	 generic_field_name <"x_flag_toplevel_reorder",cl_optimization,x_flag_toplevel_reorder> x_flag_toplevel_reorder;
	 generic_field_name <"x_flag_trapping_math",cl_optimization,x_flag_trapping_math> x_flag_trapping_math;
	 generic_field_name <"x_flag_trapv",cl_optimization,x_flag_trapv> x_flag_trapv;
	 generic_field_name <"x_flag_tree_bit_ccp",cl_optimization,x_flag_tree_bit_ccp> x_flag_tree_bit_ccp;
	 generic_field_name <"x_flag_tree_builtin_call_dce",cl_optimization,x_flag_tree_builtin_call_dce> x_flag_tree_builtin_call_dce;
	 generic_field_name <"x_flag_tree_ccp",cl_optimization,x_flag_tree_ccp> x_flag_tree_ccp;
	 generic_field_name <"x_flag_tree_ch",cl_optimization,x_flag_tree_ch> x_flag_tree_ch;
	 generic_field_name <"x_flag_tree_copy_prop",cl_optimization,x_flag_tree_copy_prop> x_flag_tree_copy_prop;
	 generic_field_name <"x_flag_tree_copyrename",cl_optimization,x_flag_tree_copyrename> x_flag_tree_copyrename;
	 generic_field_name <"x_flag_tree_cselim",cl_optimization,x_flag_tree_cselim> x_flag_tree_cselim;
	 generic_field_name <"x_flag_tree_dce",cl_optimization,x_flag_tree_dce> x_flag_tree_dce;
	 generic_field_name <"x_flag_tree_dom",cl_optimization,x_flag_tree_dom> x_flag_tree_dom;
	 generic_field_name <"x_flag_tree_dse",cl_optimization,x_flag_tree_dse> x_flag_tree_dse;
	 generic_field_name <"x_flag_tree_forwprop",cl_optimization,x_flag_tree_forwprop> x_flag_tree_forwprop;
	 generic_field_name <"x_flag_tree_fre",cl_optimization,x_flag_tree_fre> x_flag_tree_fre;
	 generic_field_name <"x_flag_tree_loop_distribute_patterns",cl_optimization,x_flag_tree_loop_distribute_patterns> x_flag_tree_loop_distribute_patterns;
	 generic_field_name <"x_flag_tree_loop_distribution",cl_optimization,x_flag_tree_loop_distribution> x_flag_tree_loop_distribution;
	 generic_field_name <"x_flag_tree_loop_if_convert",cl_optimization,x_flag_tree_loop_if_convert> x_flag_tree_loop_if_convert;
	 generic_field_name <"x_flag_tree_loop_if_convert_stores",cl_optimization,x_flag_tree_loop_if_convert_stores> x_flag_tree_loop_if_convert_stores;
	 generic_field_name <"x_flag_tree_loop_im",cl_optimization,x_flag_tree_loop_im> x_flag_tree_loop_im;
	 generic_field_name <"x_flag_tree_loop_ivcanon",cl_optimization,x_flag_tree_loop_ivcanon> x_flag_tree_loop_ivcanon;
	 generic_field_name <"x_flag_tree_loop_optimize",cl_optimization,x_flag_tree_loop_optimize> x_flag_tree_loop_optimize;
	 generic_field_name <"x_flag_tree_live_range_split",cl_optimization,x_flag_tree_live_range_split> x_flag_tree_live_range_split;
	 generic_field_name <"x_flag_tree_partial_pre",cl_optimization,x_flag_tree_partial_pre> x_flag_tree_partial_pre;
	 generic_field_name <"x_flag_tree_phiprop",cl_optimization,x_flag_tree_phiprop> x_flag_tree_phiprop;
	 generic_field_name <"x_flag_tree_pre",cl_optimization,x_flag_tree_pre> x_flag_tree_pre;
	 generic_field_name <"x_flag_tree_pta",cl_optimization,x_flag_tree_pta> x_flag_tree_pta;
	 generic_field_name <"x_flag_tree_reassoc",cl_optimization,x_flag_tree_reassoc> x_flag_tree_reassoc;
	 generic_field_name <"x_flag_tree_scev_cprop",cl_optimization,x_flag_tree_scev_cprop> x_flag_tree_scev_cprop;
	 generic_field_name <"x_flag_tree_sink",cl_optimization,x_flag_tree_sink> x_flag_tree_sink;
	 generic_field_name <"x_flag_tree_slp_vectorize",cl_optimization,x_flag_tree_slp_vectorize> x_flag_tree_slp_vectorize;
	 generic_field_name <"x_flag_tree_sra",cl_optimization,x_flag_tree_sra> x_flag_tree_sra;
	 generic_field_name <"x_flag_tree_switch_conversion",cl_optimization,x_flag_tree_switch_conversion> x_flag_tree_switch_conversion;
	 generic_field_name <"x_flag_tree_tail_merge",cl_optimization,x_flag_tree_tail_merge> x_flag_tree_tail_merge;
	 generic_field_name <"x_flag_tree_ter",cl_optimization,x_flag_tree_ter> x_flag_tree_ter;
	 generic_field_name <"x_flag_tree_vect_loop_version",cl_optimization,x_flag_tree_vect_loop_version> x_flag_tree_vect_loop_version;
	 generic_field_name <"x_flag_tree_vectorize",cl_optimization,x_flag_tree_vectorize> x_flag_tree_vectorize;
	 generic_field_name <"x_flag_tree_vrp",cl_optimization,x_flag_tree_vrp> x_flag_tree_vrp;
	 generic_field_name <"x_flag_unit_at_a_time",cl_optimization,x_flag_unit_at_a_time> x_flag_unit_at_a_time;
	 generic_field_name <"x_flag_unroll_all_loops",cl_optimization,x_flag_unroll_all_loops> x_flag_unroll_all_loops;
	 generic_field_name <"x_flag_unroll_loops",cl_optimization,x_flag_unroll_loops> x_flag_unroll_loops;
	 generic_field_name <"x_flag_unsafe_loop_optimizations",cl_optimization,x_flag_unsafe_loop_optimizations> x_flag_unsafe_loop_optimizations;
	 generic_field_name <"x_flag_unsafe_math_optimizations",cl_optimization,x_flag_unsafe_math_optimizations> x_flag_unsafe_math_optimizations;
	 generic_field_name <"x_flag_unswitch_loops",cl_optimization,x_flag_unswitch_loops> x_flag_unswitch_loops;
	 generic_field_name <"x_flag_unwind_tables",cl_optimization,x_flag_unwind_tables> x_flag_unwind_tables;
	 generic_field_name <"x_flag_var_tracking",cl_optimization,x_flag_var_tracking> x_flag_var_tracking;
	 generic_field_name <"x_flag_var_tracking_assignments",cl_optimization,x_flag_var_tracking_assignments> x_flag_var_tracking_assignments;
	 generic_field_name <"x_flag_var_tracking_assignments_toggle",cl_optimization,x_flag_var_tracking_assignments_toggle> x_flag_var_tracking_assignments_toggle;
	 generic_field_name <"x_flag_var_tracking_uninit",cl_optimization,x_flag_var_tracking_uninit> x_flag_var_tracking_uninit;
	 generic_field_name <"x_flag_variable_expansion_in_unroller",cl_optimization,x_flag_variable_expansion_in_unroller> x_flag_variable_expansion_in_unroller;
	 generic_field_name <"x_flag_vect_cost_model",cl_optimization,x_flag_vect_cost_model> x_flag_vect_cost_model;
	 generic_field_name <"x_flag_value_profile_transformations",cl_optimization,x_flag_value_profile_transformations> x_flag_value_profile_transformations;
	 generic_field_name <"x_flag_web",cl_optimization,x_flag_web> x_flag_web;
	 generic_field_name <"x_flag_whole_program",cl_optimization,x_flag_whole_program> x_flag_whole_program;
	 generic_field_name <"x_flag_wrapv",cl_optimization,x_flag_wrapv> x_flag_wrapv;
}; 
class CLS_434_gcc_options{ 
	 generic_class_name <"gcc_options",gcc_options> the_class_name;
	 generic_field_name <"x_recip_mask",gcc_options,x_recip_mask> x_recip_mask;
	 generic_field_name <"x_frame_larger_than_size",gcc_options,x_frame_larger_than_size> x_frame_larger_than_size;
	 generic_field_name <"x_ix86_isa_flags",gcc_options,x_ix86_isa_flags> x_ix86_isa_flags;
	 generic_field_name <"x_ix86_isa_flags_explicit",gcc_options,x_ix86_isa_flags_explicit> x_ix86_isa_flags_explicit;
	 generic_field_name <"x_larger_than_size",gcc_options,x_larger_than_size> x_larger_than_size;
	 generic_field_name <"x_exit_after_options",gcc_options,x_exit_after_options> x_exit_after_options;
	 generic_field_name <"x_flag_dump_all_passed",gcc_options,x_flag_dump_all_passed> x_flag_dump_all_passed;
	 generic_field_name <"x_flag_opts_finished",gcc_options,x_flag_opts_finished> x_flag_opts_finished;
	 generic_field_name <"x_flag_stack_usage_info",gcc_options,x_flag_stack_usage_info> x_flag_stack_usage_info;
	 generic_field_name <"x_flag_warn_unused_result",gcc_options,x_flag_warn_unused_result> x_flag_warn_unused_result;
	 generic_field_name <"x_in_lto_p",gcc_options,x_in_lto_p> x_in_lto_p;
	 generic_field_name <"x_use_gnu_debug_info_extensions",gcc_options,x_use_gnu_debug_info_extensions> x_use_gnu_debug_info_extensions;
	 generic_field_name <"x_warn_frame_larger_than",gcc_options,x_warn_frame_larger_than> x_warn_frame_larger_than;
	 generic_field_name <"x_warn_larger_than",gcc_options,x_warn_larger_than> x_warn_larger_than;
	 generic_field_name <"x_help_enum_printed",gcc_options,x_help_enum_printed> x_help_enum_printed;
	 generic_field_name <"x_help_printed",gcc_options,x_help_printed> x_help_printed;
	 generic_field_name <"x_main_input_basename",gcc_options,x_main_input_basename> x_main_input_basename;
	 generic_field_name <"x_main_input_filename",gcc_options,x_main_input_filename> x_main_input_filename;
	 generic_field_name <"x_debug_info_level",gcc_options,x_debug_info_level> x_debug_info_level;
	 generic_field_name <"x_write_symbols",gcc_options,x_write_symbols> x_write_symbols;
	 generic_field_name <"x_debug_struct_generic",gcc_options,x_debug_struct_generic> x_debug_struct_generic;
	 generic_field_name <"x_debug_struct_ordinary",gcc_options,x_debug_struct_ordinary> x_debug_struct_ordinary;
	 generic_field_name <"x_graph_dump_format",gcc_options,x_graph_dump_format> x_graph_dump_format;
	 generic_field_name <"x_flag_stack_check",gcc_options,x_flag_stack_check> x_flag_stack_check;
	 generic_field_name <"x_user_vect_verbosity_level",gcc_options,x_user_vect_verbosity_level> x_user_vect_verbosity_level;
	 generic_field_name <"x_param_values",gcc_options,x_param_values> x_param_values;
	 generic_field_name <"x_flag_complex_method",gcc_options,x_flag_complex_method> x_flag_complex_method;
	 generic_field_name <"x_flag_debug_asm",gcc_options,x_flag_debug_asm> x_flag_debug_asm;
	 generic_field_name <"x_flag_dump_rtl_in_asm",gcc_options,x_flag_dump_rtl_in_asm> x_flag_dump_rtl_in_asm;
	 generic_field_name <"x_flag_evaluation_order",gcc_options,x_flag_evaluation_order> x_flag_evaluation_order;
	 generic_field_name <"x_flag_gen_aux_info",gcc_options,x_flag_gen_aux_info> x_flag_gen_aux_info;
	 generic_field_name <"x_flag_generate_lto",gcc_options,x_flag_generate_lto> x_flag_generate_lto;
	 generic_field_name <"x_flag_print_asm_name",gcc_options,x_flag_print_asm_name> x_flag_print_asm_name;
	 generic_field_name <"x_flag_shlib",gcc_options,x_flag_shlib> x_flag_shlib;
	 generic_field_name <"x_main_input_baselength",gcc_options,x_main_input_baselength> x_main_input_baselength;
	 generic_field_name <"x_optimize",gcc_options,x_optimize> x_optimize;
	 generic_field_name <"x_optimize_fast",gcc_options,x_optimize_fast> x_optimize_fast;
	 generic_field_name <"x_optimize_size",gcc_options,x_optimize_size> x_optimize_size;
	 generic_field_name <"x_recip_mask_explicit",gcc_options,x_recip_mask_explicit> x_recip_mask_explicit;
	 generic_field_name <"x_rtl_dump_and_exit",gcc_options,x_rtl_dump_and_exit> x_rtl_dump_and_exit;
	 generic_field_name <"x_target_flags",gcc_options,x_target_flags> x_target_flags;
	 generic_field_name <"x_help_columns",gcc_options,x_help_columns> x_help_columns;
	 generic_field_name <"x_initial_max_fld_align",gcc_options,x_initial_max_fld_align> x_initial_max_fld_align;
	 generic_field_name <"x_flag_instrument_functions_exclude_files",gcc_options,x_flag_instrument_functions_exclude_files> x_flag_instrument_functions_exclude_files;
	 generic_field_name <"x_flag_instrument_functions_exclude_functions",gcc_options,x_flag_instrument_functions_exclude_functions> x_flag_instrument_functions_exclude_functions;
	 generic_field_name <"x_help_flag",gcc_options,x_help_flag> x_help_flag;
	 generic_field_name <"x_flag_preprocess_only",gcc_options,x_flag_preprocess_only> x_flag_preprocess_only;
	 generic_field_name <"x_warn_abi",gcc_options,x_warn_abi> x_warn_abi;
	 generic_field_name <"x_warn_address",gcc_options,x_warn_address> x_warn_address;
	 generic_field_name <"x_warn_aggregate_return",gcc_options,x_warn_aggregate_return> x_warn_aggregate_return;
	 generic_field_name <"x_warn_array_bounds",gcc_options,x_warn_array_bounds> x_warn_array_bounds;
	 generic_field_name <"x_warn_assign_intercept",gcc_options,x_warn_assign_intercept> x_warn_assign_intercept;
	 generic_field_name <"x_warn_attributes",gcc_options,x_warn_attributes> x_warn_attributes;
	 generic_field_name <"x_warn_bad_function_cast",gcc_options,x_warn_bad_function_cast> x_warn_bad_function_cast;
	 generic_field_name <"x_warn_cxx_compat",gcc_options,x_warn_cxx_compat> x_warn_cxx_compat;
	 generic_field_name <"x_warn_cxx0x_compat",gcc_options,x_warn_cxx0x_compat> x_warn_cxx0x_compat;
	 generic_field_name <"x_warn_cast_align",gcc_options,x_warn_cast_align> x_warn_cast_align;
	 generic_field_name <"x_warn_cast_qual",gcc_options,x_warn_cast_qual> x_warn_cast_qual;
	 generic_field_name <"x_warn_char_subscripts",gcc_options,x_warn_char_subscripts> x_warn_char_subscripts;
	 generic_field_name <"x_warn_clobbered",gcc_options,x_warn_clobbered> x_warn_clobbered;
	 generic_field_name <"x_warn_conversion",gcc_options,x_warn_conversion> x_warn_conversion;
	 generic_field_name <"x_warn_conversion_null",gcc_options,x_warn_conversion_null> x_warn_conversion_null;
	 generic_field_name <"x_warn_coverage_mismatch",gcc_options,x_warn_coverage_mismatch> x_warn_coverage_mismatch;
	 generic_field_name <"x_warn_cpp",gcc_options,x_warn_cpp> x_warn_cpp;
	 generic_field_name <"x_warn_ctor_dtor_privacy",gcc_options,x_warn_ctor_dtor_privacy> x_warn_ctor_dtor_privacy;
	 generic_field_name <"x_warn_declaration_after_statement",gcc_options,x_warn_declaration_after_statement> x_warn_declaration_after_statement;
	 generic_field_name <"x_warn_delnonvdtor",gcc_options,x_warn_delnonvdtor> x_warn_delnonvdtor;
	 generic_field_name <"x_warn_deprecated",gcc_options,x_warn_deprecated> x_warn_deprecated;
	 generic_field_name <"x_warn_deprecated_decl",gcc_options,x_warn_deprecated_decl> x_warn_deprecated_decl;
	 generic_field_name <"x_warn_disabled_optimization",gcc_options,x_warn_disabled_optimization> x_warn_disabled_optimization;
	 generic_field_name <"x_warn_div_by_zero",gcc_options,x_warn_div_by_zero> x_warn_div_by_zero;
	 generic_field_name <"x_warn_double_promotion",gcc_options,x_warn_double_promotion> x_warn_double_promotion;
	 generic_field_name <"x_warn_ecpp",gcc_options,x_warn_ecpp> x_warn_ecpp;
	 generic_field_name <"x_warn_empty_body",gcc_options,x_warn_empty_body> x_warn_empty_body;
	 generic_field_name <"x_warn_enum_compare",gcc_options,x_warn_enum_compare> x_warn_enum_compare;
	 generic_field_name <"x_warnings_are_errors",gcc_options,x_warnings_are_errors> x_warnings_are_errors;
	 generic_field_name <"x_extra_warnings",gcc_options,x_extra_warnings> x_extra_warnings;
	 generic_field_name <"x_flag_extraneous_semicolon",gcc_options,x_flag_extraneous_semicolon> x_flag_extraneous_semicolon;
	 generic_field_name <"x_flag_fatal_errors",gcc_options,x_flag_fatal_errors> x_flag_fatal_errors;
	 generic_field_name <"x_warn_float_equal",gcc_options,x_warn_float_equal> x_warn_float_equal;
	 generic_field_name <"x_warn_format_contains_nul",gcc_options,x_warn_format_contains_nul> x_warn_format_contains_nul;
	 generic_field_name <"x_warn_format_extra_args",gcc_options,x_warn_format_extra_args> x_warn_format_extra_args;
	 generic_field_name <"x_warn_format_nonliteral",gcc_options,x_warn_format_nonliteral> x_warn_format_nonliteral;
	 generic_field_name <"x_warn_format_security",gcc_options,x_warn_format_security> x_warn_format_security;
	 generic_field_name <"x_warn_format_y2k",gcc_options,x_warn_format_y2k> x_warn_format_y2k;
	 generic_field_name <"x_warn_format_zero_length",gcc_options,x_warn_format_zero_length> x_warn_format_zero_length;
	 generic_field_name <"x_warn_free_nonheap_object",gcc_options,x_warn_free_nonheap_object> x_warn_free_nonheap_object;
	 generic_field_name <"x_warn_ignored_qualifiers",gcc_options,x_warn_ignored_qualifiers> x_warn_ignored_qualifiers;
	 generic_field_name <"x_warn_implicit",gcc_options,x_warn_implicit> x_warn_implicit;
	 generic_field_name <"x_warn_implicit_function_declaration",gcc_options,x_warn_implicit_function_declaration> x_warn_implicit_function_declaration;
	 generic_field_name <"x_warn_implicit_int",gcc_options,x_warn_implicit_int> x_warn_implicit_int;
	 generic_field_name <"x_warn_init_self",gcc_options,x_warn_init_self> x_warn_init_self;
	 generic_field_name <"x_warn_inline",gcc_options,x_warn_inline> x_warn_inline;
	 generic_field_name <"x_warn_int_to_pointer_cast",gcc_options,x_warn_int_to_pointer_cast> x_warn_int_to_pointer_cast;
	 generic_field_name <"x_warn_invalid_memory_model",gcc_options,x_warn_invalid_memory_model> x_warn_invalid_memory_model;
	 generic_field_name <"x_warn_invalid_offsetof",gcc_options,x_warn_invalid_offsetof> x_warn_invalid_offsetof;
	 generic_field_name <"x_warn_jump_misses_init",gcc_options,x_warn_jump_misses_init> x_warn_jump_misses_init;
	 generic_field_name <"x_warn_logical_op",gcc_options,x_warn_logical_op> x_warn_logical_op;
	 generic_field_name <"x_warn_long_long",gcc_options,x_warn_long_long> x_warn_long_long;
	 generic_field_name <"x_warn_main",gcc_options,x_warn_main> x_warn_main;
	 generic_field_name <"x_warn_maybe_uninitialized",gcc_options,x_warn_maybe_uninitialized> x_warn_maybe_uninitialized;
	 generic_field_name <"x_warn_missing_braces",gcc_options,x_warn_missing_braces> x_warn_missing_braces;
	 generic_field_name <"x_warn_missing_declarations",gcc_options,x_warn_missing_declarations> x_warn_missing_declarations;
	 generic_field_name <"x_warn_missing_field_initializers",gcc_options,x_warn_missing_field_initializers> x_warn_missing_field_initializers;
	 generic_field_name <"x_warn_missing_format_attribute",gcc_options,x_warn_missing_format_attribute> x_warn_missing_format_attribute;
	 generic_field_name <"x_warn_missing_noreturn",gcc_options,x_warn_missing_noreturn> x_warn_missing_noreturn;
	 generic_field_name <"x_warn_missing_parameter_type",gcc_options,x_warn_missing_parameter_type> x_warn_missing_parameter_type;
	 generic_field_name <"x_warn_missing_prototypes",gcc_options,x_warn_missing_prototypes> x_warn_missing_prototypes;
	 generic_field_name <"x_warn_mudflap",gcc_options,x_warn_mudflap> x_warn_mudflap;
	 generic_field_name <"x_warn_narrowing",gcc_options,x_warn_narrowing> x_warn_narrowing;
	 generic_field_name <"x_warn_nested_externs",gcc_options,x_warn_nested_externs> x_warn_nested_externs;
	 generic_field_name <"x_warn_noexcept",gcc_options,x_warn_noexcept> x_warn_noexcept;
	 generic_field_name <"x_warn_nontemplate_friend",gcc_options,x_warn_nontemplate_friend> x_warn_nontemplate_friend;
	 generic_field_name <"x_warn_nonvdtor",gcc_options,x_warn_nonvdtor> x_warn_nonvdtor;
	 generic_field_name <"x_warn_nonnull",gcc_options,x_warn_nonnull> x_warn_nonnull;
	 generic_field_name <"x_warn_old_style_cast",gcc_options,x_warn_old_style_cast> x_warn_old_style_cast;
	 generic_field_name <"x_warn_old_style_declaration",gcc_options,x_warn_old_style_declaration> x_warn_old_style_declaration;
	 generic_field_name <"x_warn_old_style_definition",gcc_options,x_warn_old_style_definition> x_warn_old_style_definition;
	 generic_field_name <"x_flag_newer",gcc_options,x_flag_newer> x_flag_newer;
	 generic_field_name <"x_warn_overflow",gcc_options,x_warn_overflow> x_warn_overflow;
	 generic_field_name <"x_warn_overlength_strings",gcc_options,x_warn_overlength_strings> x_warn_overlength_strings;
	 generic_field_name <"x_warn_overloaded_virtual",gcc_options,x_warn_overloaded_virtual> x_warn_overloaded_virtual;
	 generic_field_name <"x_warn_override_init",gcc_options,x_warn_override_init> x_warn_override_init;
	 generic_field_name <"x_warn_packed",gcc_options,x_warn_packed> x_warn_packed;
	 generic_field_name <"x_warn_packed_bitfield_compat",gcc_options,x_warn_packed_bitfield_compat> x_warn_packed_bitfield_compat;
	 generic_field_name <"x_warn_padded",gcc_options,x_warn_padded> x_warn_padded;
	 generic_field_name <"x_warn_parentheses",gcc_options,x_warn_parentheses> x_warn_parentheses;
	 generic_field_name <"x_warn_pmf2ptr",gcc_options,x_warn_pmf2ptr> x_warn_pmf2ptr;
	 generic_field_name <"x_warn_pointer_arith",gcc_options,x_warn_pointer_arith> x_warn_pointer_arith;
	 generic_field_name <"x_warn_pointer_sign",gcc_options,x_warn_pointer_sign> x_warn_pointer_sign;
	 generic_field_name <"x_warn_pointer_to_int_cast",gcc_options,x_warn_pointer_to_int_cast> x_warn_pointer_to_int_cast;
	 generic_field_name <"x_warn_pragmas",gcc_options,x_warn_pragmas> x_warn_pragmas;
	 generic_field_name <"x_warn_property_assign_default",gcc_options,x_warn_property_assign_default> x_warn_property_assign_default;
	 generic_field_name <"x_warn_protocol",gcc_options,x_warn_protocol> x_warn_protocol;
	 generic_field_name <"x_warn_psabi",gcc_options,x_warn_psabi> x_warn_psabi;
	 generic_field_name <"x_warn_redundant_decls",gcc_options,x_warn_redundant_decls> x_warn_redundant_decls;
	 generic_field_name <"x_flag_redundant",gcc_options,x_flag_redundant> x_flag_redundant;
	 generic_field_name <"x_warn_reorder",gcc_options,x_warn_reorder> x_warn_reorder;
	 generic_field_name <"x_warn_return_type",gcc_options,x_warn_return_type> x_warn_return_type;
	 generic_field_name <"x_warn_selector",gcc_options,x_warn_selector> x_warn_selector;
	 generic_field_name <"x_warn_sequence_point",gcc_options,x_warn_sequence_point> x_warn_sequence_point;
	 generic_field_name <"x_warn_shadow",gcc_options,x_warn_shadow> x_warn_shadow;
	 generic_field_name <"x_warn_sign_compare",gcc_options,x_warn_sign_compare> x_warn_sign_compare;
	 generic_field_name <"x_warn_sign_conversion",gcc_options,x_warn_sign_conversion> x_warn_sign_conversion;
	 generic_field_name <"x_warn_sign_promo",gcc_options,x_warn_sign_promo> x_warn_sign_promo;
	 generic_field_name <"x_warn_stack_protect",gcc_options,x_warn_stack_protect> x_warn_stack_protect;
	 generic_field_name <"x_warn_stack_usage",gcc_options,x_warn_stack_usage> x_warn_stack_usage;
	 generic_field_name <"x_warn_strict_aliasing",gcc_options,x_warn_strict_aliasing> x_warn_strict_aliasing;
	 generic_field_name <"x_warn_strict_null_sentinel",gcc_options,x_warn_strict_null_sentinel> x_warn_strict_null_sentinel;
	 generic_field_name <"x_warn_strict_overflow",gcc_options,x_warn_strict_overflow> x_warn_strict_overflow;
	 generic_field_name <"x_warn_strict_prototypes",gcc_options,x_warn_strict_prototypes> x_warn_strict_prototypes;
	 generic_field_name <"x_warn_strict_selector_match",gcc_options,x_warn_strict_selector_match> x_warn_strict_selector_match;
	 generic_field_name <"x_warn_suggest_attribute_const",gcc_options,x_warn_suggest_attribute_const> x_warn_suggest_attribute_const;
	 generic_field_name <"x_warn_suggest_attribute_noreturn",gcc_options,x_warn_suggest_attribute_noreturn> x_warn_suggest_attribute_noreturn;
	 generic_field_name <"x_warn_suggest_attribute_pure",gcc_options,x_warn_suggest_attribute_pure> x_warn_suggest_attribute_pure;
	 generic_field_name <"x_warn_switch",gcc_options,x_warn_switch> x_warn_switch;
	 generic_field_name <"x_warn_switch_default",gcc_options,x_warn_switch_default> x_warn_switch_default;
	 generic_field_name <"x_warn_switch_enum",gcc_options,x_warn_switch_enum> x_warn_switch_enum;
	 generic_field_name <"x_warn_sync_nand",gcc_options,x_warn_sync_nand> x_warn_sync_nand;
	 generic_field_name <"x_warn_synth",gcc_options,x_warn_synth> x_warn_synth;
	 generic_field_name <"x_warn_system_headers",gcc_options,x_warn_system_headers> x_warn_system_headers;
	 generic_field_name <"x_warn_traditional",gcc_options,x_warn_traditional> x_warn_traditional;
	 generic_field_name <"x_warn_traditional_conversion",gcc_options,x_warn_traditional_conversion> x_warn_traditional_conversion;
	 generic_field_name <"x_warn_trampolines",gcc_options,x_warn_trampolines> x_warn_trampolines;
	 generic_field_name <"x_warn_type_limits",gcc_options,x_warn_type_limits> x_warn_type_limits;
	 generic_field_name <"x_warn_undeclared_selector",gcc_options,x_warn_undeclared_selector> x_warn_undeclared_selector;
	 generic_field_name <"x_warn_uninitialized",gcc_options,x_warn_uninitialized> x_warn_uninitialized;
	 generic_field_name <"x_warn_unsafe_loop_optimizations",gcc_options,x_warn_unsafe_loop_optimizations> x_warn_unsafe_loop_optimizations;
	 generic_field_name <"x_warn_unsuffixed_float_constants",gcc_options,x_warn_unsuffixed_float_constants> x_warn_unsuffixed_float_constants;
	 generic_field_name <"x_warn_unused",gcc_options,x_warn_unused> x_warn_unused;
	 generic_field_name <"x_warn_unused_but_set_parameter",gcc_options,x_warn_unused_but_set_parameter> x_warn_unused_but_set_parameter;
	 generic_field_name <"x_warn_unused_but_set_variable",gcc_options,x_warn_unused_but_set_variable> x_warn_unused_but_set_variable;
	 generic_field_name <"x_warn_unused_function",gcc_options,x_warn_unused_function> x_warn_unused_function;
	 generic_field_name <"x_warn_unused_label",gcc_options,x_warn_unused_label> x_warn_unused_label;
	 generic_field_name <"x_warn_unused_local_typedefs",gcc_options,x_warn_unused_local_typedefs> x_warn_unused_local_typedefs;
	 generic_field_name <"x_warn_unused_parameter",gcc_options,x_warn_unused_parameter> x_warn_unused_parameter;
	 generic_field_name <"x_warn_unused_result",gcc_options,x_warn_unused_result> x_warn_unused_result;
	 generic_field_name <"x_warn_unused_value",gcc_options,x_warn_unused_value> x_warn_unused_value;
	 generic_field_name <"x_warn_unused_variable",gcc_options,x_warn_unused_variable> x_warn_unused_variable;
	 generic_field_name <"x_warn_vector_operation_performance",gcc_options,x_warn_vector_operation_performance> x_warn_vector_operation_performance;
	 generic_field_name <"x_warn_vla",gcc_options,x_warn_vla> x_warn_vla;
	 generic_field_name <"x_warn_volatile_register_var",gcc_options,x_warn_volatile_register_var> x_warn_volatile_register_var;
	 generic_field_name <"x_warn_write_strings",gcc_options,x_warn_write_strings> x_warn_write_strings;
	 generic_field_name <"x_warn_zero_as_null_pointer_constant",gcc_options,x_warn_zero_as_null_pointer_constant> x_warn_zero_as_null_pointer_constant;
	 generic_field_name <"x_aux_info_file_name",gcc_options,x_aux_info_file_name> x_aux_info_file_name;
	 generic_field_name <"x_aux_base_name",gcc_options,x_aux_base_name> x_aux_base_name;
	 generic_field_name <"x_dump_base_name",gcc_options,x_dump_base_name> x_dump_base_name;
	 generic_field_name <"x_dump_dir_name",gcc_options,x_dump_dir_name> x_dump_dir_name;
	 generic_field_name <"x_flag_pic",gcc_options,x_flag_pic> x_flag_pic;
	 generic_field_name <"x_flag_pie",gcc_options,x_flag_pie> x_flag_pie;
	 generic_field_name <"x_flag_abi_version",gcc_options,x_flag_abi_version> x_flag_abi_version;
	 generic_field_name <"x_flag_access_control",gcc_options,x_flag_access_control> x_flag_access_control;
	 generic_field_name <"x_align_functions",gcc_options,x_align_functions> x_align_functions;
	 generic_field_name <"x_align_jumps",gcc_options,x_align_jumps> x_align_jumps;
	 generic_field_name <"x_align_labels",gcc_options,x_align_labels> x_align_labels;
	 generic_field_name <"x_align_loops",gcc_options,x_align_loops> x_align_loops;
	 generic_field_name <"x_flag_allow_parameterless_variadic_functions",gcc_options,x_flag_allow_parameterless_variadic_functions> x_flag_allow_parameterless_variadic_functions;
	 generic_field_name <"x_flag_no_asm",gcc_options,x_flag_no_asm> x_flag_no_asm;
	 generic_field_name <"x_flag_assert",gcc_options,x_flag_assert> x_flag_assert;
	 generic_field_name <"x_flag_associative_math",gcc_options,x_flag_associative_math> x_flag_associative_math;
	 generic_field_name <"x_flag_asynchronous_unwind_tables",gcc_options,x_flag_asynchronous_unwind_tables> x_flag_asynchronous_unwind_tables;
	 generic_field_name <"x_flag_auto_inc_dec",gcc_options,x_flag_auto_inc_dec> x_flag_auto_inc_dec;
	 generic_field_name <"x_flag_bootstrap_classes",gcc_options,x_flag_bootstrap_classes> x_flag_bootstrap_classes;
	 generic_field_name <"x_flag_bounds_check",gcc_options,x_flag_bounds_check> x_flag_bounds_check;
	 generic_field_name <"x_flag_branch_on_count_reg",gcc_options,x_flag_branch_on_count_reg> x_flag_branch_on_count_reg;
	 generic_field_name <"x_flag_branch_probabilities",gcc_options,x_flag_branch_probabilities> x_flag_branch_probabilities;
	 generic_field_name <"x_flag_branch_target_load_optimize",gcc_options,x_flag_branch_target_load_optimize> x_flag_branch_target_load_optimize;
	 generic_field_name <"x_flag_branch_target_load_optimize2",gcc_options,x_flag_branch_target_load_optimize2> x_flag_branch_target_load_optimize2;
	 generic_field_name <"x_flag_btr_bb_exclusive",gcc_options,x_flag_btr_bb_exclusive> x_flag_btr_bb_exclusive;
	 generic_field_name <"x_flag_building_libgcc",gcc_options,x_flag_building_libgcc> x_flag_building_libgcc;
	 generic_field_name <"x_flag_no_builtin",gcc_options,x_flag_no_builtin> x_flag_no_builtin;
	 generic_field_name <"x_common_deferred_options",gcc_options,x_common_deferred_options> x_common_deferred_options;
	 generic_field_name <"x_flag_caller_saves",gcc_options,x_flag_caller_saves> x_flag_caller_saves;
	 generic_field_name <"x_flag_check_data_deps",gcc_options,x_flag_check_data_deps> x_flag_check_data_deps;
	 generic_field_name <"x_flag_check_new",gcc_options,x_flag_check_new> x_flag_check_new;
	 generic_field_name <"x_flag_check_references",gcc_options,x_flag_check_references> x_flag_check_references;
	 generic_field_name <"x_flag_combine_stack_adjustments",gcc_options,x_flag_combine_stack_adjustments> x_flag_combine_stack_adjustments;
	 generic_field_name <"x_flag_no_common",gcc_options,x_flag_no_common> x_flag_no_common;
	 generic_field_name <"x_flag_compare_debug",gcc_options,x_flag_compare_debug> x_flag_compare_debug;
	 generic_field_name <"x_flag_compare_debug_opt",gcc_options,x_flag_compare_debug_opt> x_flag_compare_debug_opt;
	 generic_field_name <"x_flag_compare_elim_after_reload",gcc_options,x_flag_compare_elim_after_reload> x_flag_compare_elim_after_reload;
	 generic_field_name <"x_flag_conserve_space",gcc_options,x_flag_conserve_space> x_flag_conserve_space;
	 generic_field_name <"x_flag_conserve_stack",gcc_options,x_flag_conserve_stack> x_flag_conserve_stack;
	 generic_field_name <"x_max_constexpr_depth",gcc_options,x_max_constexpr_depth> x_max_constexpr_depth;
	 generic_field_name <"x_flag_cprop_registers",gcc_options,x_flag_cprop_registers> x_flag_cprop_registers;
	 generic_field_name <"x_flag_crossjumping",gcc_options,x_flag_crossjumping> x_flag_crossjumping;
	 generic_field_name <"x_flag_cse_follow_jumps",gcc_options,x_flag_cse_follow_jumps> x_flag_cse_follow_jumps;
	 generic_field_name <"x_flag_cx_fortran_rules",gcc_options,x_flag_cx_fortran_rules> x_flag_cx_fortran_rules;
	 generic_field_name <"x_flag_cx_limited_range",gcc_options,x_flag_cx_limited_range> x_flag_cx_limited_range;
	 generic_field_name <"x_flag_data_sections",gcc_options,x_flag_data_sections> x_flag_data_sections;
	 generic_field_name <"x_flag_dce",gcc_options,x_flag_dce> x_flag_dce;
	 generic_field_name <"x_flag_debug_types_section",gcc_options,x_flag_debug_types_section> x_flag_debug_types_section;
	 generic_field_name <"x_flag_deduce_init_list",gcc_options,x_flag_deduce_init_list> x_flag_deduce_init_list;
	 generic_field_name <"x_flag_defer_pop",gcc_options,x_flag_defer_pop> x_flag_defer_pop;
	 generic_field_name <"x_flag_delayed_branch",gcc_options,x_flag_delayed_branch> x_flag_delayed_branch;
	 generic_field_name <"x_flag_delete_null_pointer_checks",gcc_options,x_flag_delete_null_pointer_checks> x_flag_delete_null_pointer_checks;
	 generic_field_name <"x_flag_devirtualize",gcc_options,x_flag_devirtualize> x_flag_devirtualize;
	 generic_field_name <"x_flag_diagnostics_show_option",gcc_options,x_flag_diagnostics_show_option> x_flag_diagnostics_show_option;
	 generic_field_name <"x_flag_dse",gcc_options,x_flag_dse> x_flag_dse;
	 generic_field_name <"x_flag_dump_final_insns",gcc_options,x_flag_dump_final_insns> x_flag_dump_final_insns;
	 generic_field_name <"x_flag_dump_go_spec",gcc_options,x_flag_dump_go_spec> x_flag_dump_go_spec;
	 generic_field_name <"x_flag_dump_noaddr",gcc_options,x_flag_dump_noaddr> x_flag_dump_noaddr;
	 generic_field_name <"x_flag_dump_passes",gcc_options,x_flag_dump_passes> x_flag_dump_passes;
	 generic_field_name <"x_flag_dump_unnumbered",gcc_options,x_flag_dump_unnumbered> x_flag_dump_unnumbered;
	 generic_field_name <"x_flag_dump_unnumbered_links",gcc_options,x_flag_dump_unnumbered_links> x_flag_dump_unnumbered_links;
	 generic_field_name <"x_flag_dwarf2_cfi_asm",gcc_options,x_flag_dwarf2_cfi_asm> x_flag_dwarf2_cfi_asm;
	 generic_field_name <"x_flag_early_inlining",gcc_options,x_flag_early_inlining> x_flag_early_inlining;
	 generic_field_name <"x_flag_elide_constructors",gcc_options,x_flag_elide_constructors> x_flag_elide_constructors;
	 generic_field_name <"x_flag_eliminate_dwarf2_dups",gcc_options,x_flag_eliminate_dwarf2_dups> x_flag_eliminate_dwarf2_dups;
	 generic_field_name <"x_flag_debug_only_used_symbols",gcc_options,x_flag_debug_only_used_symbols> x_flag_debug_only_used_symbols;
	 generic_field_name <"x_flag_eliminate_unused_debug_types",gcc_options,x_flag_eliminate_unused_debug_types> x_flag_eliminate_unused_debug_types;
	 generic_field_name <"x_flag_emit_class_debug_always",gcc_options,x_flag_emit_class_debug_always> x_flag_emit_class_debug_always;
	 generic_field_name <"x_flag_emit_class_files",gcc_options,x_flag_emit_class_files> x_flag_emit_class_files;
	 generic_field_name <"x_flag_enforce_eh_specs",gcc_options,x_flag_enforce_eh_specs> x_flag_enforce_eh_specs;
	 generic_field_name <"x_flag_exceptions",gcc_options,x_flag_exceptions> x_flag_exceptions;
	 generic_field_name <"x_flag_excess_precision_cmdline",gcc_options,x_flag_excess_precision_cmdline> x_flag_excess_precision_cmdline;
	 generic_field_name <"x_flag_expensive_optimizations",gcc_options,x_flag_expensive_optimizations> x_flag_expensive_optimizations;
	 generic_field_name <"x_flag_fat_lto_objects",gcc_options,x_flag_fat_lto_objects> x_flag_fat_lto_objects;
	 generic_field_name <"x_flag_filelist_file",gcc_options,x_flag_filelist_file> x_flag_filelist_file;
	 generic_field_name <"x_flag_finite_math_only",gcc_options,x_flag_finite_math_only> x_flag_finite_math_only;
	 generic_field_name <"x_flag_float_store",gcc_options,x_flag_float_store> x_flag_float_store;
	 generic_field_name <"x_flag_new_for_scope",gcc_options,x_flag_new_for_scope> x_flag_new_for_scope;
	 generic_field_name <"x_flag_force_classes_archive_check",gcc_options,x_flag_force_classes_archive_check> x_flag_force_classes_archive_check;
	 generic_field_name <"x_flag_forward_propagate",gcc_options,x_flag_forward_propagate> x_flag_forward_propagate;
	 generic_field_name <"x_flag_fp_contract_mode",gcc_options,x_flag_fp_contract_mode> x_flag_fp_contract_mode;
	 generic_field_name <"x_flag_friend_injection",gcc_options,x_flag_friend_injection> x_flag_friend_injection;
	 generic_field_name <"x_flag_no_function_cse",gcc_options,x_flag_no_function_cse> x_flag_no_function_cse;
	 generic_field_name <"x_flag_function_sections",gcc_options,x_flag_function_sections> x_flag_function_sections;
	 generic_field_name <"x_flag_gcse",gcc_options,x_flag_gcse> x_flag_gcse;
	 generic_field_name <"x_flag_gcse_after_reload",gcc_options,x_flag_gcse_after_reload> x_flag_gcse_after_reload;
	 generic_field_name <"x_flag_gcse_las",gcc_options,x_flag_gcse_las> x_flag_gcse_las;
	 generic_field_name <"x_flag_gcse_lm",gcc_options,x_flag_gcse_lm> x_flag_gcse_lm;
	 generic_field_name <"x_flag_gcse_sm",gcc_options,x_flag_gcse_sm> x_flag_gcse_sm;
	 generic_field_name <"x_flag_no_gnu_keywords",gcc_options,x_flag_no_gnu_keywords> x_flag_no_gnu_keywords;
	 generic_field_name <"x_flag_next_runtime",gcc_options,x_flag_next_runtime> x_flag_next_runtime;
	 generic_field_name <"x_flag_tm",gcc_options,x_flag_tm> x_flag_tm;
	 generic_field_name <"x_flag_gnu89_inline",gcc_options,x_flag_gnu89_inline> x_flag_gnu89_inline;
	 generic_field_name <"x_go_check_divide_overflow",gcc_options,x_go_check_divide_overflow> x_go_check_divide_overflow;
	 generic_field_name <"x_go_check_divide_zero",gcc_options,x_go_check_divide_zero> x_go_check_divide_zero;
	 generic_field_name <"x_flag_graphite",gcc_options,x_flag_graphite> x_flag_graphite;
	 generic_field_name <"x_flag_graphite_identity",gcc_options,x_flag_graphite_identity> x_flag_graphite_identity;
	 generic_field_name <"x_flag_guess_branch_prob",gcc_options,x_flag_guess_branch_prob> x_flag_guess_branch_prob;
	 generic_field_name <"x_flag_hash_synchronization",gcc_options,x_flag_hash_synchronization> x_flag_hash_synchronization;
	 generic_field_name <"x_flag_no_ident",gcc_options,x_flag_no_ident> x_flag_no_ident;
	 generic_field_name <"x_flag_if_conversion",gcc_options,x_flag_if_conversion> x_flag_if_conversion;
	 generic_field_name <"x_flag_if_conversion2",gcc_options,x_flag_if_conversion2> x_flag_if_conversion2;
	 generic_field_name <"x_flag_implement_inlines",gcc_options,x_flag_implement_inlines> x_flag_implement_inlines;
	 generic_field_name <"x_flag_implicit_inline_templates",gcc_options,x_flag_implicit_inline_templates> x_flag_implicit_inline_templates;
	 generic_field_name <"x_flag_implicit_templates",gcc_options,x_flag_implicit_templates> x_flag_implicit_templates;
	 generic_field_name <"x_flag_indirect_classes",gcc_options,x_flag_indirect_classes> x_flag_indirect_classes;
	 generic_field_name <"x_flag_indirect_dispatch",gcc_options,x_flag_indirect_dispatch> x_flag_indirect_dispatch;
	 generic_field_name <"x_flag_indirect_inlining",gcc_options,x_flag_indirect_inlining> x_flag_indirect_inlining;
	 generic_field_name <"x_flag_inhibit_size_directive",gcc_options,x_flag_inhibit_size_directive> x_flag_inhibit_size_directive;
	 generic_field_name <"x_flag_no_inline",gcc_options,x_flag_no_inline> x_flag_no_inline;
	 generic_field_name <"x_flag_inline_atomics",gcc_options,x_flag_inline_atomics> x_flag_inline_atomics;
	 generic_field_name <"x_flag_inline_functions",gcc_options,x_flag_inline_functions> x_flag_inline_functions;
	 generic_field_name <"x_flag_inline_functions_called_once",gcc_options,x_flag_inline_functions_called_once> x_flag_inline_functions_called_once;
	 generic_field_name <"x_flag_inline_small_functions",gcc_options,x_flag_inline_small_functions> x_flag_inline_small_functions;
	 generic_field_name <"x_flag_instrument_function_entry_exit",gcc_options,x_flag_instrument_function_entry_exit> x_flag_instrument_function_entry_exit;
	 generic_field_name <"x_flag_ipa_cp",gcc_options,x_flag_ipa_cp> x_flag_ipa_cp;
	 generic_field_name <"x_flag_ipa_cp_clone",gcc_options,x_flag_ipa_cp_clone> x_flag_ipa_cp_clone;
	 generic_field_name <"x_flag_ipa_matrix_reorg",gcc_options,x_flag_ipa_matrix_reorg> x_flag_ipa_matrix_reorg;
	 generic_field_name <"x_flag_ipa_profile",gcc_options,x_flag_ipa_profile> x_flag_ipa_profile;
	 generic_field_name <"x_flag_ipa_pta",gcc_options,x_flag_ipa_pta> x_flag_ipa_pta;
	 generic_field_name <"x_flag_ipa_pure_const",gcc_options,x_flag_ipa_pure_const> x_flag_ipa_pure_const;
	 generic_field_name <"x_flag_ipa_reference",gcc_options,x_flag_ipa_reference> x_flag_ipa_reference;
	 generic_field_name <"x_flag_ipa_sra",gcc_options,x_flag_ipa_sra> x_flag_ipa_sra;
	 generic_field_name <"x_flag_ira_algorithm",gcc_options,x_flag_ira_algorithm> x_flag_ira_algorithm;
	 generic_field_name <"x_flag_ira_loop_pressure",gcc_options,x_flag_ira_loop_pressure> x_flag_ira_loop_pressure;
	 generic_field_name <"x_flag_ira_region",gcc_options,x_flag_ira_region> x_flag_ira_region;
	 generic_field_name <"x_flag_ira_share_save_slots",gcc_options,x_flag_ira_share_save_slots> x_flag_ira_share_save_slots;
	 generic_field_name <"x_flag_ira_share_spill_slots",gcc_options,x_flag_ira_share_spill_slots> x_flag_ira_share_spill_slots;
	 generic_field_name <"x_flag_ira_verbose",gcc_options,x_flag_ira_verbose> x_flag_ira_verbose;
	 generic_field_name <"x_flag_ivopts",gcc_options,x_flag_ivopts> x_flag_ivopts;
	 generic_field_name <"x_flag_jni",gcc_options,x_flag_jni> x_flag_jni;
	 generic_field_name <"x_flag_jump_tables",gcc_options,x_flag_jump_tables> x_flag_jump_tables;
	 generic_field_name <"x_flag_keep_inline_dllexport",gcc_options,x_flag_keep_inline_dllexport> x_flag_keep_inline_dllexport;
	 generic_field_name <"x_flag_keep_inline_functions",gcc_options,x_flag_keep_inline_functions> x_flag_keep_inline_functions;
	 generic_field_name <"x_flag_keep_static_consts",gcc_options,x_flag_keep_static_consts> x_flag_keep_static_consts;
	 generic_field_name <"x_flag_lax_vector_conversions",gcc_options,x_flag_lax_vector_conversions> x_flag_lax_vector_conversions;
	 generic_field_name <"x_flag_leading_underscore",gcc_options,x_flag_leading_underscore> x_flag_leading_underscore;
	 generic_field_name <"x_flag_loop_block",gcc_options,x_flag_loop_block> x_flag_loop_block;
	 generic_field_name <"x_flag_loop_flatten",gcc_options,x_flag_loop_flatten> x_flag_loop_flatten;
	 generic_field_name <"x_flag_loop_interchange",gcc_options,x_flag_loop_interchange> x_flag_loop_interchange;
	 generic_field_name <"x_flag_loop_parallelize_all",gcc_options,x_flag_loop_parallelize_all> x_flag_loop_parallelize_all;
	 generic_field_name <"x_flag_loop_strip_mine",gcc_options,x_flag_loop_strip_mine> x_flag_loop_strip_mine;
	 generic_field_name <"x_flag_lto_compression_level",gcc_options,x_flag_lto_compression_level> x_flag_lto_compression_level;
	 generic_field_name <"x_flag_lto_partition_1to1",gcc_options,x_flag_lto_partition_1to1> x_flag_lto_partition_1to1;
	 generic_field_name <"x_flag_lto_partition_balanced",gcc_options,x_flag_lto_partition_balanced> x_flag_lto_partition_balanced;
	 generic_field_name <"x_flag_lto_partition_none",gcc_options,x_flag_lto_partition_none> x_flag_lto_partition_none;
	 generic_field_name <"x_flag_lto_report",gcc_options,x_flag_lto_report> x_flag_lto_report;
	 generic_field_name <"x_flag_lto",gcc_options,x_flag_lto> x_flag_lto;
	 generic_field_name <"x_flag_ltrans",gcc_options,x_flag_ltrans> x_flag_ltrans;
	 generic_field_name <"x_ltrans_output_list",gcc_options,x_ltrans_output_list> x_ltrans_output_list;
	 generic_field_name <"x_flag_errno_math",gcc_options,x_flag_errno_math> x_flag_errno_math;
	 generic_field_name <"x_flag_max_errors",gcc_options,x_flag_max_errors> x_flag_max_errors;
	 generic_field_name <"x_mem_report",gcc_options,x_mem_report> x_mem_report;
	 generic_field_name <"x_flag_merge_constants",gcc_options,x_flag_merge_constants> x_flag_merge_constants;
	 generic_field_name <"x_flag_merge_debug_strings",gcc_options,x_flag_merge_debug_strings> x_flag_merge_debug_strings;
	 generic_field_name <"x_flag_modulo_sched",gcc_options,x_flag_modulo_sched> x_flag_modulo_sched;
	 generic_field_name <"x_flag_modulo_sched_allow_regmoves",gcc_options,x_flag_modulo_sched_allow_regmoves> x_flag_modulo_sched_allow_regmoves;
	 generic_field_name <"x_flag_move_loop_invariants",gcc_options,x_flag_move_loop_invariants> x_flag_move_loop_invariants;
	 generic_field_name <"x_flag_ms_extensions",gcc_options,x_flag_ms_extensions> x_flag_ms_extensions;
	 generic_field_name <"x_flag_mudflap",gcc_options,x_flag_mudflap> x_flag_mudflap;
	 generic_field_name <"x_flag_mudflap_ignore_reads",gcc_options,x_flag_mudflap_ignore_reads> x_flag_mudflap_ignore_reads;
	 generic_field_name <"x_flag_nil_receivers",gcc_options,x_flag_nil_receivers> x_flag_nil_receivers;
	 generic_field_name <"x_flag_non_call_exceptions",gcc_options,x_flag_non_call_exceptions> x_flag_non_call_exceptions;
	 generic_field_name <"x_flag_no_nonansi_builtin",gcc_options,x_flag_no_nonansi_builtin> x_flag_no_nonansi_builtin;
	 generic_field_name <"x_flag_nothrow_opt",gcc_options,x_flag_nothrow_opt> x_flag_nothrow_opt;
	 generic_field_name <"x_flag_objc_abi",gcc_options,x_flag_objc_abi> x_flag_objc_abi;
	 generic_field_name <"x_flag_objc_call_cxx_cdtors",gcc_options,x_flag_objc_call_cxx_cdtors> x_flag_objc_call_cxx_cdtors;
	 generic_field_name <"x_flag_objc_direct_dispatch",gcc_options,x_flag_objc_direct_dispatch> x_flag_objc_direct_dispatch;
	 generic_field_name <"x_flag_objc_exceptions",gcc_options,x_flag_objc_exceptions> x_flag_objc_exceptions;
	 generic_field_name <"x_flag_objc_gc",gcc_options,x_flag_objc_gc> x_flag_objc_gc;
	 generic_field_name <"x_flag_objc_nilcheck",gcc_options,x_flag_objc_nilcheck> x_flag_objc_nilcheck;
	 generic_field_name <"x_flag_objc_sjlj_exceptions",gcc_options,x_flag_objc_sjlj_exceptions> x_flag_objc_sjlj_exceptions;
	 generic_field_name <"x_flag_objc1_only",gcc_options,x_flag_objc1_only> x_flag_objc1_only;
	 generic_field_name <"x_flag_omit_frame_pointer",gcc_options,x_flag_omit_frame_pointer> x_flag_omit_frame_pointer;
	 generic_field_name <"x_flag_openmp",gcc_options,x_flag_openmp> x_flag_openmp;
	 generic_field_name <"x_flag_regmove",gcc_options,x_flag_regmove> x_flag_regmove;
	 generic_field_name <"x_flag_optimize_sibling_calls",gcc_options,x_flag_optimize_sibling_calls> x_flag_optimize_sibling_calls;
	 generic_field_name <"x_flag_optimize_sci",gcc_options,x_flag_optimize_sci> x_flag_optimize_sci;
	 generic_field_name <"x_flag_optimize_strlen",gcc_options,x_flag_optimize_strlen> x_flag_optimize_strlen;
	 generic_field_name <"x_flag_pack_struct",gcc_options,x_flag_pack_struct> x_flag_pack_struct;
	 generic_field_name <"x_flag_partial_inlining",gcc_options,x_flag_partial_inlining> x_flag_partial_inlining;
	 generic_field_name <"x_flag_pcc_struct_return",gcc_options,x_flag_pcc_struct_return> x_flag_pcc_struct_return;
	 generic_field_name <"x_flag_peel_loops",gcc_options,x_flag_peel_loops> x_flag_peel_loops;
	 generic_field_name <"x_flag_no_peephole",gcc_options,x_flag_no_peephole> x_flag_no_peephole;
	 generic_field_name <"x_flag_peephole2",gcc_options,x_flag_peephole2> x_flag_peephole2;
	 generic_field_name <"x_flag_plan9_extensions",gcc_options,x_flag_plan9_extensions> x_flag_plan9_extensions;
	 generic_field_name <"x_post_ipa_mem_report",gcc_options,x_post_ipa_mem_report> x_post_ipa_mem_report;
	 generic_field_name <"x_pre_ipa_mem_report",gcc_options,x_pre_ipa_mem_report> x_pre_ipa_mem_report;
	 generic_field_name <"x_flag_predictive_commoning",gcc_options,x_flag_predictive_commoning> x_flag_predictive_commoning;
	 generic_field_name <"x_flag_prefetch_loop_arrays",gcc_options,x_flag_prefetch_loop_arrays> x_flag_prefetch_loop_arrays;
	 generic_field_name <"x_flag_pretty_templates",gcc_options,x_flag_pretty_templates> x_flag_pretty_templates;
	 generic_field_name <"x_profile_flag",gcc_options,x_profile_flag> x_profile_flag;
	 generic_field_name <"x_profile_arc_flag",gcc_options,x_profile_arc_flag> x_profile_arc_flag;
	 generic_field_name <"x_flag_profile_correction",gcc_options,x_flag_profile_correction> x_flag_profile_correction;
	 generic_field_name <"x_profile_data_prefix",gcc_options,x_profile_data_prefix> x_profile_data_prefix;
	 generic_field_name <"x_flag_profile_use",gcc_options,x_flag_profile_use> x_flag_profile_use;
	 generic_field_name <"x_flag_profile_values",gcc_options,x_flag_profile_values> x_flag_profile_values;
	 generic_field_name <"x_flag_reciprocal_math",gcc_options,x_flag_reciprocal_math> x_flag_reciprocal_math;
	 generic_field_name <"x_flag_record_gcc_switches",gcc_options,x_flag_record_gcc_switches> x_flag_record_gcc_switches;
	 generic_field_name <"x_flag_reduced_reflection",gcc_options,x_flag_reduced_reflection> x_flag_reduced_reflection;
	 generic_field_name <"x_flag_ree",gcc_options,x_flag_ree> x_flag_ree;
	 generic_field_name <"x_flag_rename_registers",gcc_options,x_flag_rename_registers> x_flag_rename_registers;
	 generic_field_name <"x_flag_reorder_blocks",gcc_options,x_flag_reorder_blocks> x_flag_reorder_blocks;
	 generic_field_name <"x_flag_reorder_blocks_and_partition",gcc_options,x_flag_reorder_blocks_and_partition> x_flag_reorder_blocks_and_partition;
	 generic_field_name <"x_flag_reorder_functions",gcc_options,x_flag_reorder_functions> x_flag_reorder_functions;
	 generic_field_name <"x_flag_replace_objc_classes",gcc_options,x_flag_replace_objc_classes> x_flag_replace_objc_classes;
	 generic_field_name <"x_go_require_return_statement",gcc_options,x_go_require_return_statement> x_go_require_return_statement;
	 generic_field_name <"x_flag_rerun_cse_after_loop",gcc_options,x_flag_rerun_cse_after_loop> x_flag_rerun_cse_after_loop;
	 generic_field_name <"x_flag_resched_modulo_sched",gcc_options,x_flag_resched_modulo_sched> x_flag_resched_modulo_sched;
	 generic_field_name <"x_flag_rounding_math",gcc_options,x_flag_rounding_math> x_flag_rounding_math;
	 generic_field_name <"x_flag_rtti",gcc_options,x_flag_rtti> x_flag_rtti;
	 generic_field_name <"x_flag_sched_critical_path_heuristic",gcc_options,x_flag_sched_critical_path_heuristic> x_flag_sched_critical_path_heuristic;
	 generic_field_name <"x_flag_sched_dep_count_heuristic",gcc_options,x_flag_sched_dep_count_heuristic> x_flag_sched_dep_count_heuristic;
	 generic_field_name <"x_flag_sched_group_heuristic",gcc_options,x_flag_sched_group_heuristic> x_flag_sched_group_heuristic;
	 generic_field_name <"x_flag_schedule_interblock",gcc_options,x_flag_schedule_interblock> x_flag_schedule_interblock;
	 generic_field_name <"x_flag_sched_last_insn_heuristic",gcc_options,x_flag_sched_last_insn_heuristic> x_flag_sched_last_insn_heuristic;
	 generic_field_name <"x_flag_sched_pressure",gcc_options,x_flag_sched_pressure> x_flag_sched_pressure;
	 generic_field_name <"x_flag_sched_pressure_algorithm",gcc_options,x_flag_sched_pressure_algorithm> x_flag_sched_pressure_algorithm;
	 generic_field_name <"x_flag_sched_rank_heuristic",gcc_options,x_flag_sched_rank_heuristic> x_flag_sched_rank_heuristic;
	 generic_field_name <"x_flag_schedule_speculative",gcc_options,x_flag_schedule_speculative> x_flag_schedule_speculative;
	 generic_field_name <"x_flag_sched_spec_insn_heuristic",gcc_options,x_flag_sched_spec_insn_heuristic> x_flag_sched_spec_insn_heuristic;
	 generic_field_name <"x_flag_schedule_speculative_load",gcc_options,x_flag_schedule_speculative_load> x_flag_schedule_speculative_load;
	 generic_field_name <"x_flag_schedule_speculative_load_dangerous",gcc_options,x_flag_schedule_speculative_load_dangerous> x_flag_schedule_speculative_load_dangerous;
	 generic_field_name <"x_flag_sched_stalled_insns",gcc_options,x_flag_sched_stalled_insns> x_flag_sched_stalled_insns;
	 generic_field_name <"x_flag_sched_stalled_insns_dep",gcc_options,x_flag_sched_stalled_insns_dep> x_flag_sched_stalled_insns_dep;
	 generic_field_name <"x_sched_verbose_param",gcc_options,x_sched_verbose_param> x_sched_verbose_param;
	 generic_field_name <"x_flag_sched2_use_superblocks",gcc_options,x_flag_sched2_use_superblocks> x_flag_sched2_use_superblocks;
	 generic_field_name <"x_flag_schedule_insns",gcc_options,x_flag_schedule_insns> x_flag_schedule_insns;
	 generic_field_name <"x_flag_schedule_insns_after_reload",gcc_options,x_flag_schedule_insns_after_reload> x_flag_schedule_insns_after_reload;
	 generic_field_name <"x_flag_section_anchors",gcc_options,x_flag_section_anchors> x_flag_section_anchors;
	 generic_field_name <"x_flag_sel_sched_pipelining",gcc_options,x_flag_sel_sched_pipelining> x_flag_sel_sched_pipelining;
	 generic_field_name <"x_flag_sel_sched_pipelining_outer_loops",gcc_options,x_flag_sel_sched_pipelining_outer_loops> x_flag_sel_sched_pipelining_outer_loops;
	 generic_field_name <"x_flag_sel_sched_reschedule_pipelined",gcc_options,x_flag_sel_sched_reschedule_pipelined> x_flag_sel_sched_reschedule_pipelined;
	 generic_field_name <"x_flag_selective_scheduling",gcc_options,x_flag_selective_scheduling> x_flag_selective_scheduling;
	 generic_field_name <"x_flag_selective_scheduling2",gcc_options,x_flag_selective_scheduling2> x_flag_selective_scheduling2;
	 generic_field_name <"x_flag_short_double",gcc_options,x_flag_short_double> x_flag_short_double;
	 generic_field_name <"x_flag_short_enums",gcc_options,x_flag_short_enums> x_flag_short_enums;
	 generic_field_name <"x_flag_short_wchar",gcc_options,x_flag_short_wchar> x_flag_short_wchar;
	 generic_field_name <"x_flag_show_column",gcc_options,x_flag_show_column> x_flag_show_column;
	 generic_field_name <"x_flag_shrink_wrap",gcc_options,x_flag_shrink_wrap> x_flag_shrink_wrap;
	 generic_field_name <"x_flag_signaling_nans",gcc_options,x_flag_signaling_nans> x_flag_signaling_nans;
	 generic_field_name <"x_flag_signed_bitfields",gcc_options,x_flag_signed_bitfields> x_flag_signed_bitfields;
	 generic_field_name <"x_flag_signed_char",gcc_options,x_flag_signed_char> x_flag_signed_char;
	 generic_field_name <"x_flag_signed_zeros",gcc_options,x_flag_signed_zeros> x_flag_signed_zeros;
	 generic_field_name <"x_flag_single_precision_constant",gcc_options,x_flag_single_precision_constant> x_flag_single_precision_constant;
	 generic_field_name <"x_flag_split_ivs_in_unroller",gcc_options,x_flag_split_ivs_in_unroller> x_flag_split_ivs_in_unroller;
	 generic_field_name <"x_flag_split_stack",gcc_options,x_flag_split_stack> x_flag_split_stack;
	 generic_field_name <"x_flag_split_wide_types",gcc_options,x_flag_split_wide_types> x_flag_split_wide_types;
	 generic_field_name <"x_flag_stack_protect",gcc_options,x_flag_stack_protect> x_flag_stack_protect;
	 generic_field_name <"x_flag_stack_usage",gcc_options,x_flag_stack_usage> x_flag_stack_usage;
	 generic_field_name <"x_flag_detailed_statistics",gcc_options,x_flag_detailed_statistics> x_flag_detailed_statistics;
	 generic_field_name <"x_flag_store_check",gcc_options,x_flag_store_check> x_flag_store_check;
	 generic_field_name <"x_flag_strict_aliasing",gcc_options,x_flag_strict_aliasing> x_flag_strict_aliasing;
	 generic_field_name <"x_flag_strict_enums",gcc_options,x_flag_strict_enums> x_flag_strict_enums;
	 generic_field_name <"x_flag_strict_overflow",gcc_options,x_flag_strict_overflow> x_flag_strict_overflow;
	 generic_field_name <"x_flag_strict_volatile_bitfields",gcc_options,x_flag_strict_volatile_bitfields> x_flag_strict_volatile_bitfields;
	 generic_field_name <"x_flag_syntax_only",gcc_options,x_flag_syntax_only> x_flag_syntax_only;
	 generic_field_name <"x_flag_test_coverage",gcc_options,x_flag_test_coverage> x_flag_test_coverage;
	 generic_field_name <"x_flag_thread_jumps",gcc_options,x_flag_thread_jumps> x_flag_thread_jumps;
	 generic_field_name <"x_flag_threadsafe_statics",gcc_options,x_flag_threadsafe_statics> x_flag_threadsafe_statics;
	 generic_field_name <"x_time_report",gcc_options,x_time_report> x_time_report;
	 generic_field_name <"x_flag_tls_default",gcc_options,x_flag_tls_default> x_flag_tls_default;
	 generic_field_name <"x_flag_toplevel_reorder",gcc_options,x_flag_toplevel_reorder> x_flag_toplevel_reorder;
	 generic_field_name <"x_flag_tracer",gcc_options,x_flag_tracer> x_flag_tracer;
	 generic_field_name <"x_flag_trapping_math",gcc_options,x_flag_trapping_math> x_flag_trapping_math;
	 generic_field_name <"x_flag_trapv",gcc_options,x_flag_trapv> x_flag_trapv;
	 generic_field_name <"x_flag_tree_bit_ccp",gcc_options,x_flag_tree_bit_ccp> x_flag_tree_bit_ccp;
	 generic_field_name <"x_flag_tree_builtin_call_dce",gcc_options,x_flag_tree_builtin_call_dce> x_flag_tree_builtin_call_dce;
	 generic_field_name <"x_flag_tree_ccp",gcc_options,x_flag_tree_ccp> x_flag_tree_ccp;
	 generic_field_name <"x_flag_tree_ch",gcc_options,x_flag_tree_ch> x_flag_tree_ch;
	 generic_field_name <"x_flag_tree_copy_prop",gcc_options,x_flag_tree_copy_prop> x_flag_tree_copy_prop;
	 generic_field_name <"x_flag_tree_copyrename",gcc_options,x_flag_tree_copyrename> x_flag_tree_copyrename;
	 generic_field_name <"x_flag_tree_cselim",gcc_options,x_flag_tree_cselim> x_flag_tree_cselim;
	 generic_field_name <"x_flag_tree_dce",gcc_options,x_flag_tree_dce> x_flag_tree_dce;
	 generic_field_name <"x_flag_tree_dom",gcc_options,x_flag_tree_dom> x_flag_tree_dom;
	 generic_field_name <"x_flag_tree_dse",gcc_options,x_flag_tree_dse> x_flag_tree_dse;
	 generic_field_name <"x_flag_tree_forwprop",gcc_options,x_flag_tree_forwprop> x_flag_tree_forwprop;
	 generic_field_name <"x_flag_tree_fre",gcc_options,x_flag_tree_fre> x_flag_tree_fre;
	 generic_field_name <"x_flag_tree_loop_distribute_patterns",gcc_options,x_flag_tree_loop_distribute_patterns> x_flag_tree_loop_distribute_patterns;
	 generic_field_name <"x_flag_tree_loop_distribution",gcc_options,x_flag_tree_loop_distribution> x_flag_tree_loop_distribution;
	 generic_field_name <"x_flag_tree_loop_if_convert",gcc_options,x_flag_tree_loop_if_convert> x_flag_tree_loop_if_convert;
	 generic_field_name <"x_flag_tree_loop_if_convert_stores",gcc_options,x_flag_tree_loop_if_convert_stores> x_flag_tree_loop_if_convert_stores;
	 generic_field_name <"x_flag_tree_loop_im",gcc_options,x_flag_tree_loop_im> x_flag_tree_loop_im;
	 generic_field_name <"x_flag_tree_loop_ivcanon",gcc_options,x_flag_tree_loop_ivcanon> x_flag_tree_loop_ivcanon;
	 generic_field_name <"x_flag_tree_loop_optimize",gcc_options,x_flag_tree_loop_optimize> x_flag_tree_loop_optimize;
	 generic_field_name <"x_flag_tree_live_range_split",gcc_options,x_flag_tree_live_range_split> x_flag_tree_live_range_split;
	 generic_field_name <"x_flag_tree_parallelize_loops",gcc_options,x_flag_tree_parallelize_loops> x_flag_tree_parallelize_loops;
	 generic_field_name <"x_flag_tree_partial_pre",gcc_options,x_flag_tree_partial_pre> x_flag_tree_partial_pre;
	 generic_field_name <"x_flag_tree_phiprop",gcc_options,x_flag_tree_phiprop> x_flag_tree_phiprop;
	 generic_field_name <"x_flag_tree_pre",gcc_options,x_flag_tree_pre> x_flag_tree_pre;
	 generic_field_name <"x_flag_tree_pta",gcc_options,x_flag_tree_pta> x_flag_tree_pta;
	 generic_field_name <"x_flag_tree_reassoc",gcc_options,x_flag_tree_reassoc> x_flag_tree_reassoc;
	 generic_field_name <"x_flag_tree_scev_cprop",gcc_options,x_flag_tree_scev_cprop> x_flag_tree_scev_cprop;
	 generic_field_name <"x_flag_tree_sink",gcc_options,x_flag_tree_sink> x_flag_tree_sink;
	 generic_field_name <"x_flag_tree_slp_vectorize",gcc_options,x_flag_tree_slp_vectorize> x_flag_tree_slp_vectorize;
	 generic_field_name <"x_flag_tree_sra",gcc_options,x_flag_tree_sra> x_flag_tree_sra;
	 generic_field_name <"x_flag_tree_switch_conversion",gcc_options,x_flag_tree_switch_conversion> x_flag_tree_switch_conversion;
	 generic_field_name <"x_flag_tree_tail_merge",gcc_options,x_flag_tree_tail_merge> x_flag_tree_tail_merge;
	 generic_field_name <"x_flag_tree_ter",gcc_options,x_flag_tree_ter> x_flag_tree_ter;
	 generic_field_name <"x_flag_tree_vect_loop_version",gcc_options,x_flag_tree_vect_loop_version> x_flag_tree_vect_loop_version;
	 generic_field_name <"x_flag_tree_vectorize",gcc_options,x_flag_tree_vectorize> x_flag_tree_vectorize;
	 generic_field_name <"x_flag_tree_vrp",gcc_options,x_flag_tree_vrp> x_flag_tree_vrp;
	 generic_field_name <"x_flag_unit_at_a_time",gcc_options,x_flag_unit_at_a_time> x_flag_unit_at_a_time;
	 generic_field_name <"x_flag_unroll_all_loops",gcc_options,x_flag_unroll_all_loops> x_flag_unroll_all_loops;
	 generic_field_name <"x_flag_unroll_loops",gcc_options,x_flag_unroll_loops> x_flag_unroll_loops;
	 generic_field_name <"x_flag_unsafe_loop_optimizations",gcc_options,x_flag_unsafe_loop_optimizations> x_flag_unsafe_loop_optimizations;
	 generic_field_name <"x_flag_unsafe_math_optimizations",gcc_options,x_flag_unsafe_math_optimizations> x_flag_unsafe_math_optimizations;
	 generic_field_name <"x_flag_unswitch_loops",gcc_options,x_flag_unswitch_loops> x_flag_unswitch_loops;
	 generic_field_name <"x_flag_unwind_tables",gcc_options,x_flag_unwind_tables> x_flag_unwind_tables;
	 generic_field_name <"x_flag_use_atomic_builtins",gcc_options,x_flag_use_atomic_builtins> x_flag_use_atomic_builtins;
	 generic_field_name <"x_flag_use_boehm_gc",gcc_options,x_flag_use_boehm_gc> x_flag_use_boehm_gc;
	 generic_field_name <"x_flag_use_cxa_atexit",gcc_options,x_flag_use_cxa_atexit> x_flag_use_cxa_atexit;
	 generic_field_name <"x_flag_use_cxa_get_exception_ptr",gcc_options,x_flag_use_cxa_get_exception_ptr> x_flag_use_cxa_get_exception_ptr;
	 generic_field_name <"x_flag_use_divide_subroutine",gcc_options,x_flag_use_divide_subroutine> x_flag_use_divide_subroutine;
	 generic_field_name <"x_flag_var_tracking",gcc_options,x_flag_var_tracking> x_flag_var_tracking;
	 generic_field_name <"x_flag_var_tracking_assignments",gcc_options,x_flag_var_tracking_assignments> x_flag_var_tracking_assignments;
	 generic_field_name <"x_flag_var_tracking_assignments_toggle",gcc_options,x_flag_var_tracking_assignments_toggle> x_flag_var_tracking_assignments_toggle;
	 generic_field_name <"x_flag_var_tracking_uninit",gcc_options,x_flag_var_tracking_uninit> x_flag_var_tracking_uninit;
	 generic_field_name <"x_flag_variable_expansion_in_unroller",gcc_options,x_flag_variable_expansion_in_unroller> x_flag_variable_expansion_in_unroller;
	 generic_field_name <"x_flag_vect_cost_model",gcc_options,x_flag_vect_cost_model> x_flag_vect_cost_model;
	 generic_field_name <"x_flag_verbose_asm",gcc_options,x_flag_verbose_asm> x_flag_verbose_asm;
	 generic_field_name <"x_flag_visibility_ms_compat",gcc_options,x_flag_visibility_ms_compat> x_flag_visibility_ms_compat;
	 generic_field_name <"x_default_visibility",gcc_options,x_default_visibility> x_default_visibility;
	 generic_field_name <"x_flag_value_profile_transformations",gcc_options,x_flag_value_profile_transformations> x_flag_value_profile_transformations;
	 generic_field_name <"x_flag_weak",gcc_options,x_flag_weak> x_flag_weak;
	 generic_field_name <"x_flag_web",gcc_options,x_flag_web> x_flag_web;
	 generic_field_name <"x_flag_whole_program",gcc_options,x_flag_whole_program> x_flag_whole_program;
	 generic_field_name <"x_flag_working_directory",gcc_options,x_flag_working_directory> x_flag_working_directory;
	 generic_field_name <"x_flag_wpa",gcc_options,x_flag_wpa> x_flag_wpa;
	 generic_field_name <"x_flag_wrapv",gcc_options,x_flag_wrapv> x_flag_wrapv;
	 generic_field_name <"x_flag_zero_initialized_in_bss",gcc_options,x_flag_zero_initialized_in_bss> x_flag_zero_initialized_in_bss;
	 generic_field_name <"x_flag_zero_link",gcc_options,x_flag_zero_link> x_flag_zero_link;
	 generic_field_name <"x_dwarf_version",gcc_options,x_dwarf_version> x_dwarf_version;
	 generic_field_name <"x_flag_gen_declaration",gcc_options,x_flag_gen_declaration> x_flag_gen_declaration;
	 generic_field_name <"x_dwarf_record_gcc_switches",gcc_options,x_dwarf_record_gcc_switches> x_dwarf_record_gcc_switches;
	 generic_field_name <"x_dwarf_strict",gcc_options,x_dwarf_strict> x_dwarf_strict;
	 generic_field_name <"x_flag_gtoggle",gcc_options,x_flag_gtoggle> x_flag_gtoggle;
	 generic_field_name <"x_imultiarch",gcc_options,x_imultiarch> x_imultiarch;
	 generic_field_name <"x_plugindir_string",gcc_options,x_plugindir_string> x_plugindir_string;
	 generic_field_name <"x_ix86_abi",gcc_options,x_ix86_abi> x_ix86_abi;
	 generic_field_name <"x_flag_android",gcc_options,x_flag_android> x_flag_android;
	 generic_field_name <"x_ix86_arch_string",gcc_options,x_ix86_arch_string> x_ix86_arch_string;
	 generic_field_name <"x_ix86_asm_dialect",gcc_options,x_ix86_asm_dialect> x_ix86_asm_dialect;
	 generic_field_name <"x_linux_libc",gcc_options,x_linux_libc> x_linux_libc;
	 generic_field_name <"x_ix86_branch_cost",gcc_options,x_ix86_branch_cost> x_ix86_branch_cost;
	 generic_field_name <"x_ix86_cmodel",gcc_options,x_ix86_cmodel> x_ix86_cmodel;
	 generic_field_name <"x_flag_dispatch_scheduler",gcc_options,x_flag_dispatch_scheduler> x_flag_dispatch_scheduler;
	 generic_field_name <"x_flag_fentry",gcc_options,x_flag_fentry> x_flag_fentry;
	 generic_field_name <"x_ix86_force_drap",gcc_options,x_ix86_force_drap> x_ix86_force_drap;
	 generic_field_name <"x_ix86_fpmath",gcc_options,x_ix86_fpmath> x_ix86_fpmath;
	 generic_field_name <"x_ix86_incoming_stack_boundary_arg",gcc_options,x_ix86_incoming_stack_boundary_arg> x_ix86_incoming_stack_boundary_arg;
	 generic_field_name <"x_ix86_section_threshold",gcc_options,x_ix86_section_threshold> x_ix86_section_threshold;
	 generic_field_name <"x_ix86_preferred_stack_boundary_arg",gcc_options,x_ix86_preferred_stack_boundary_arg> x_ix86_preferred_stack_boundary_arg;
	 generic_field_name <"x_ix86_recip_name",gcc_options,x_ix86_recip_name> x_ix86_recip_name;
	 generic_field_name <"x_ix86_regparm",gcc_options,x_ix86_regparm> x_ix86_regparm;
	 generic_field_name <"x_ix86_sse2avx",gcc_options,x_ix86_sse2avx> x_ix86_sse2avx;
	 generic_field_name <"x_ix86_force_align_arg_pointer",gcc_options,x_ix86_force_align_arg_pointer> x_ix86_force_align_arg_pointer;
	 generic_field_name <"x_ix86_stringop_alg",gcc_options,x_ix86_stringop_alg> x_ix86_stringop_alg;
	 generic_field_name <"x_ix86_tls_dialect",gcc_options,x_ix86_tls_dialect> x_ix86_tls_dialect;
	 generic_field_name <"x_ix86_tune_string",gcc_options,x_ix86_tune_string> x_ix86_tune_string;
	 generic_field_name <"x_ix86_veclibabi_type",gcc_options,x_ix86_veclibabi_type> x_ix86_veclibabi_type;
	 generic_field_name <"x_asm_file_name",gcc_options,x_asm_file_name> x_asm_file_name;
	 generic_field_name <"x_pass_exit_codes",gcc_options,x_pass_exit_codes> x_pass_exit_codes;
	 generic_field_name <"x_pedantic",gcc_options,x_pedantic> x_pedantic;
	 generic_field_name <"x_flag_pedantic_errors",gcc_options,x_flag_pedantic_errors> x_flag_pedantic_errors;
	 generic_field_name <"x_use_pipes",gcc_options,x_use_pipes> x_use_pipes;
	 generic_field_name <"x_print_file_name",gcc_options,x_print_file_name> x_print_file_name;
	 generic_field_name <"x_print_multi_directory",gcc_options,x_print_multi_directory> x_print_multi_directory;
	 generic_field_name <"x_print_multi_lib",gcc_options,x_print_multi_lib> x_print_multi_lib;
	 generic_field_name <"x_print_multi_os_directory",gcc_options,x_print_multi_os_directory> x_print_multi_os_directory;
	 generic_field_name <"x_print_multiarch",gcc_options,x_print_multiarch> x_print_multiarch;
	 generic_field_name <"x_print_prog_name",gcc_options,x_print_prog_name> x_print_prog_name;
	 generic_field_name <"x_print_search_dirs",gcc_options,x_print_search_dirs> x_print_search_dirs;
	 generic_field_name <"x_print_sysroot",gcc_options,x_print_sysroot> x_print_sysroot;
	 generic_field_name <"x_print_sysroot_headers_suffix",gcc_options,x_print_sysroot_headers_suffix> x_print_sysroot_headers_suffix;
	 generic_field_name <"x_quiet_flag",gcc_options,x_quiet_flag> x_quiet_flag;
	 generic_field_name <"x_report_times",gcc_options,x_report_times> x_report_times;
	 generic_field_name <"x_flag_undef",gcc_options,x_flag_undef> x_flag_undef;
	 generic_field_name <"x_verbose_flag",gcc_options,x_verbose_flag> x_verbose_flag;
	 generic_field_name <"x_version_flag",gcc_options,x_version_flag> x_version_flag;
	 generic_field_name <"x_inhibit_warnings",gcc_options,x_inhibit_warnings> x_inhibit_warnings;
	 generic_field_name <"x_wrapper_string",gcc_options,x_wrapper_string> x_wrapper_string;
	 generic_field_name <"x_VAR_malign_functions_",gcc_options,x_VAR_malign_functions_> x_VAR_malign_functions_;
	 generic_field_name <"x_VAR_malign_jumps_",gcc_options,x_VAR_malign_jumps_> x_VAR_malign_jumps_;
	 generic_field_name <"x_VAR_malign_loops_",gcc_options,x_VAR_malign_loops_> x_VAR_malign_loops_;
	 generic_field_name <"x_VAR_mpc32",gcc_options,x_VAR_mpc32> x_VAR_mpc32;
	 generic_field_name <"x_VAR_mpc64",gcc_options,x_VAR_mpc64> x_VAR_mpc64;
	 generic_field_name <"x_VAR_mpc80",gcc_options,x_VAR_mpc80> x_VAR_mpc80;
	 generic_field_name <"frontend_set_flag_associative_math",gcc_options,frontend_set_flag_associative_math> frontend_set_flag_associative_math;
	 generic_field_name <"frontend_set_flag_cx_limited_range",gcc_options,frontend_set_flag_cx_limited_range> frontend_set_flag_cx_limited_range;
	 generic_field_name <"frontend_set_flag_finite_math_only",gcc_options,frontend_set_flag_finite_math_only> frontend_set_flag_finite_math_only;
	 generic_field_name <"frontend_set_flag_errno_math",gcc_options,frontend_set_flag_errno_math> frontend_set_flag_errno_math;
	 generic_field_name <"frontend_set_flag_reciprocal_math",gcc_options,frontend_set_flag_reciprocal_math> frontend_set_flag_reciprocal_math;
	 generic_field_name <"frontend_set_flag_rounding_math",gcc_options,frontend_set_flag_rounding_math> frontend_set_flag_rounding_math;
	 generic_field_name <"frontend_set_flag_signaling_nans",gcc_options,frontend_set_flag_signaling_nans> frontend_set_flag_signaling_nans;
	 generic_field_name <"frontend_set_flag_signed_zeros",gcc_options,frontend_set_flag_signed_zeros> frontend_set_flag_signed_zeros;
	 generic_field_name <"frontend_set_flag_trapping_math",gcc_options,frontend_set_flag_trapping_math> frontend_set_flag_trapping_math;
	 generic_field_name <"frontend_set_flag_unsafe_math_optimizations",gcc_options,frontend_set_flag_unsafe_math_optimizations> frontend_set_flag_unsafe_math_optimizations;
}; 
class CLS_435_target_flag_state{ 
	 generic_class_name <"target_flag_state",target_flag_state> the_class_name;
	 generic_field_name <"x_align_loops_log",target_flag_state,x_align_loops_log> x_align_loops_log;
	 generic_field_name <"x_align_loops_max_skip",target_flag_state,x_align_loops_max_skip> x_align_loops_max_skip;
	 generic_field_name <"x_align_jumps_log",target_flag_state,x_align_jumps_log> x_align_jumps_log;
	 generic_field_name <"x_align_jumps_max_skip",target_flag_state,x_align_jumps_max_skip> x_align_jumps_max_skip;
	 generic_field_name <"x_align_labels_log",target_flag_state,x_align_labels_log> x_align_labels_log;
	 generic_field_name <"x_align_labels_max_skip",target_flag_state,x_align_labels_max_skip> x_align_labels_max_skip;
	 generic_field_name <"x_align_functions_log",target_flag_state,x_align_functions_log> x_align_functions_log;
	 generic_field_name <"x_flag_excess_precision",target_flag_state,x_flag_excess_precision> x_flag_excess_precision;
}; 
class CLS_436_target_flag_state{ 
	 generic_class_name <"target_flag_state",target_flag_state> the_class_name;
	 generic_field_name <"x_align_loops_log",target_flag_state,x_align_loops_log> x_align_loops_log;
	 generic_field_name <"x_align_loops_max_skip",target_flag_state,x_align_loops_max_skip> x_align_loops_max_skip;
	 generic_field_name <"x_align_jumps_log",target_flag_state,x_align_jumps_log> x_align_jumps_log;
	 generic_field_name <"x_align_jumps_max_skip",target_flag_state,x_align_jumps_max_skip> x_align_jumps_max_skip;
	 generic_field_name <"x_align_labels_log",target_flag_state,x_align_labels_log> x_align_labels_log;
	 generic_field_name <"x_align_labels_max_skip",target_flag_state,x_align_labels_max_skip> x_align_labels_max_skip;
	 generic_field_name <"x_align_functions_log",target_flag_state,x_align_functions_log> x_align_functions_log;
	 generic_field_name <"x_flag_excess_precision",target_flag_state,x_flag_excess_precision> x_flag_excess_precision;
}; 
class CLS_437_alias_pair{ 
	 generic_class_name <"alias_pair",alias_pair> the_class_name;
	 generic_field_name <"decl",alias_pair,decl> decl;
	 generic_field_name <"target",alias_pair,target> target;
	 generic_field_name <"emitted_diags",alias_pair,emitted_diags> emitted_diags;
}; 
class CLS_438_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_439_VEC_alias_pair_base{ 
	 generic_class_name <"VEC_alias_pair_base",VEC_alias_pair_base> the_class_name;
	 generic_field_name <"prefix",VEC_alias_pair_base,prefix> prefix;
	 generic_field_name <"vec",VEC_alias_pair_base,vec> vec;
}; 
class CLS_440_VEC_alias_pair_none{ 
	 generic_class_name <"VEC_alias_pair_none",VEC_alias_pair_none> the_class_name;
	 generic_field_name <"base",VEC_alias_pair_none,base> base;
}; 
class CLS_441_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_442_VEC_alias_pair_gc{ 
	 generic_class_name <"VEC_alias_pair_gc",VEC_alias_pair_gc> the_class_name;
	 generic_field_name <"base",VEC_alias_pair_gc,base> base;
}; 
class CLS_443_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_444_tree_base{ 
	 generic_class_name <"tree_base",tree_base> the_class_name;
	 generic_field_name <"code",tree_base,code> code;
	 generic_field_name <"side_effects_flag",tree_base,side_effects_flag> side_effects_flag;
	 generic_field_name <"constant_flag",tree_base,constant_flag> constant_flag;
	 generic_field_name <"addressable_flag",tree_base,addressable_flag> addressable_flag;
	 generic_field_name <"volatile_flag",tree_base,volatile_flag> volatile_flag;
	 generic_field_name <"readonly_flag",tree_base,readonly_flag> readonly_flag;
	 generic_field_name <"unsigned_flag",tree_base,unsigned_flag> unsigned_flag;
	 generic_field_name <"asm_written_flag",tree_base,asm_written_flag> asm_written_flag;
	 generic_field_name <"nowarning_flag",tree_base,nowarning_flag> nowarning_flag;
	 generic_field_name <"used_flag",tree_base,used_flag> used_flag;
	 generic_field_name <"nothrow_flag",tree_base,nothrow_flag> nothrow_flag;
	 generic_field_name <"static_flag",tree_base,static_flag> static_flag;
	 generic_field_name <"public_flag",tree_base,public_flag> public_flag;
	 generic_field_name <"private_flag",tree_base,private_flag> private_flag;
	 generic_field_name <"protected_flag",tree_base,protected_flag> protected_flag;
	 generic_field_name <"deprecated_flag",tree_base,deprecated_flag> deprecated_flag;
	 generic_field_name <"saturating_flag",tree_base,saturating_flag> saturating_flag;
	 generic_field_name <"default_def_flag",tree_base,default_def_flag> default_def_flag;
	 generic_field_name <"lang_flag_0",tree_base,lang_flag_0> lang_flag_0;
	 generic_field_name <"lang_flag_1",tree_base,lang_flag_1> lang_flag_1;
	 generic_field_name <"lang_flag_2",tree_base,lang_flag_2> lang_flag_2;
	 generic_field_name <"lang_flag_3",tree_base,lang_flag_3> lang_flag_3;
	 generic_field_name <"lang_flag_4",tree_base,lang_flag_4> lang_flag_4;
	 generic_field_name <"lang_flag_5",tree_base,lang_flag_5> lang_flag_5;
	 generic_field_name <"lang_flag_6",tree_base,lang_flag_6> lang_flag_6;
	 generic_field_name <"visited",tree_base,visited> visited;
	 generic_field_name <"packed_flag",tree_base,packed_flag> packed_flag;
	 generic_field_name <"user_align",tree_base,user_align> user_align;
	 generic_field_name <"nameless_flag",tree_base,nameless_flag> nameless_flag;
	 generic_field_name <"spare",tree_base,spare> spare;
	 generic_field_name <"address_space",tree_base,address_space> address_space;
}; 
class CLS_445_tree_base{ 
	 generic_class_name <"tree_base",tree_base> the_class_name;
	 generic_field_name <"code",tree_base,code> code;
	 generic_field_name <"side_effects_flag",tree_base,side_effects_flag> side_effects_flag;
	 generic_field_name <"constant_flag",tree_base,constant_flag> constant_flag;
	 generic_field_name <"addressable_flag",tree_base,addressable_flag> addressable_flag;
	 generic_field_name <"volatile_flag",tree_base,volatile_flag> volatile_flag;
	 generic_field_name <"readonly_flag",tree_base,readonly_flag> readonly_flag;
	 generic_field_name <"unsigned_flag",tree_base,unsigned_flag> unsigned_flag;
	 generic_field_name <"asm_written_flag",tree_base,asm_written_flag> asm_written_flag;
	 generic_field_name <"nowarning_flag",tree_base,nowarning_flag> nowarning_flag;
	 generic_field_name <"used_flag",tree_base,used_flag> used_flag;
	 generic_field_name <"nothrow_flag",tree_base,nothrow_flag> nothrow_flag;
	 generic_field_name <"static_flag",tree_base,static_flag> static_flag;
	 generic_field_name <"public_flag",tree_base,public_flag> public_flag;
	 generic_field_name <"private_flag",tree_base,private_flag> private_flag;
	 generic_field_name <"protected_flag",tree_base,protected_flag> protected_flag;
	 generic_field_name <"deprecated_flag",tree_base,deprecated_flag> deprecated_flag;
	 generic_field_name <"saturating_flag",tree_base,saturating_flag> saturating_flag;
	 generic_field_name <"default_def_flag",tree_base,default_def_flag> default_def_flag;
	 generic_field_name <"lang_flag_0",tree_base,lang_flag_0> lang_flag_0;
	 generic_field_name <"lang_flag_1",tree_base,lang_flag_1> lang_flag_1;
	 generic_field_name <"lang_flag_2",tree_base,lang_flag_2> lang_flag_2;
	 generic_field_name <"lang_flag_3",tree_base,lang_flag_3> lang_flag_3;
	 generic_field_name <"lang_flag_4",tree_base,lang_flag_4> lang_flag_4;
	 generic_field_name <"lang_flag_5",tree_base,lang_flag_5> lang_flag_5;
	 generic_field_name <"lang_flag_6",tree_base,lang_flag_6> lang_flag_6;
	 generic_field_name <"visited",tree_base,visited> visited;
	 generic_field_name <"packed_flag",tree_base,packed_flag> packed_flag;
	 generic_field_name <"user_align",tree_base,user_align> user_align;
	 generic_field_name <"nameless_flag",tree_base,nameless_flag> nameless_flag;
	 generic_field_name <"spare",tree_base,spare> spare;
	 generic_field_name <"address_space",tree_base,address_space> address_space;
}; 
class CLS_446_tree_typed{ 
	 generic_class_name <"tree_typed",tree_typed> the_class_name;
	 generic_field_name <"base",tree_typed,base> base;
	 generic_field_name <"type",tree_typed,type> type;
}; 
class CLS_447_tree_typed{ 
	 generic_class_name <"tree_typed",tree_typed> the_class_name;
	 generic_field_name <"base",tree_typed,base> base;
	 generic_field_name <"type",tree_typed,type> type;
}; 
class CLS_448_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_449_tree_typed{ 
	 generic_class_name <"tree_typed",tree_typed> the_class_name;
	 generic_field_name <"base",tree_typed,base> base;
	 generic_field_name <"type",tree_typed,type> type;
}; 
class CLS_450_tree_int_cst{ 
	 generic_class_name <"tree_int_cst",tree_int_cst> the_class_name;
	 generic_field_name <"typed",tree_int_cst,typed> typed;
	 generic_field_name <"int_cst",tree_int_cst,int_cst> int_cst;
}; 
class CLS_451_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_452_tree_typed{ 
	 generic_class_name <"tree_typed",tree_typed> the_class_name;
	 generic_field_name <"base",tree_typed,base> base;
	 generic_field_name <"type",tree_typed,type> type;
}; 
class CLS_453_real_value{ 
	 generic_class_name <"real_value",real_value> the_class_name;
	 generic_field_name <"cl",real_value,cl> cl;
	 generic_field_name <"decimal",real_value,decimal> decimal;
	 generic_field_name <"sign",real_value,sign> sign;
	 generic_field_name <"signalling",real_value,signalling> signalling;
	 generic_field_name <"canonical",real_value,canonical> canonical;
	 generic_field_name <"uexp",real_value,uexp> uexp;
	 generic_field_name <"sig",real_value,sig> sig;
}; 
class CLS_454_tree_real_cst{ 
	 generic_class_name <"tree_real_cst",tree_real_cst> the_class_name;
	 generic_field_name <"typed",tree_real_cst,typed> typed;
	 generic_field_name <"real_cst_ptr",tree_real_cst,real_cst_ptr> real_cst_ptr;
}; 
class CLS_455_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_456_tree_typed{ 
	 generic_class_name <"tree_typed",tree_typed> the_class_name;
	 generic_field_name <"base",tree_typed,base> base;
	 generic_field_name <"type",tree_typed,type> type;
}; 
class CLS_457_fixed_value{ 
	 generic_class_name <"fixed_value",fixed_value> the_class_name;
	 generic_field_name <"data",fixed_value,data> data;
	 generic_field_name <"mode",fixed_value,mode> mode;
}; 
class CLS_458_tree_fixed_cst{ 
	 generic_class_name <"tree_fixed_cst",tree_fixed_cst> the_class_name;
	 generic_field_name <"typed",tree_fixed_cst,typed> typed;
	 generic_field_name <"fixed_cst_ptr",tree_fixed_cst,fixed_cst_ptr> fixed_cst_ptr;
}; 
class CLS_459_tree_typed{ 
	 generic_class_name <"tree_typed",tree_typed> the_class_name;
	 generic_field_name <"base",tree_typed,base> base;
	 generic_field_name <"type",tree_typed,type> type;
}; 
class CLS_460_tree_string{ 
	 generic_class_name <"tree_string",tree_string> the_class_name;
	 generic_field_name <"typed",tree_string,typed> typed;
	 generic_field_name <"length",tree_string,length> length;
	 generic_field_name <"str",tree_string,str> str;
}; 
class CLS_461_tree_typed{ 
	 generic_class_name <"tree_typed",tree_typed> the_class_name;
	 generic_field_name <"base",tree_typed,base> base;
	 generic_field_name <"type",tree_typed,type> type;
}; 
class CLS_462_tree_complex{ 
	 generic_class_name <"tree_complex",tree_complex> the_class_name;
	 generic_field_name <"typed",tree_complex,typed> typed;
	 generic_field_name <"real",tree_complex,real> real;
	 generic_field_name <"imag",tree_complex,imag> imag;
}; 
class CLS_463_tree_typed{ 
	 generic_class_name <"tree_typed",tree_typed> the_class_name;
	 generic_field_name <"base",tree_typed,base> base;
	 generic_field_name <"type",tree_typed,type> type;
}; 
class CLS_464_tree_vector{ 
	 generic_class_name <"tree_vector",tree_vector> the_class_name;
	 generic_field_name <"typed",tree_vector,typed> typed;
	 generic_field_name <"elements",tree_vector,elements> elements;
}; 
class CLS_465__obstack_chunk{ 
	 generic_class_name <"_obstack_chunk",_obstack_chunk> the_class_name;
}; 
class CLS_466__obstack_chunk{ 
	 generic_class_name <"_obstack_chunk",_obstack_chunk> the_class_name;
	 generic_field_name <"limit",_obstack_chunk,limit> limit;
	 generic_field_name <"prev",_obstack_chunk,prev> prev;
	 generic_field_name <"contents",_obstack_chunk,contents> contents;
}; 
class CLS_467__obstack_chunk{ 
	 generic_class_name <"_obstack_chunk",_obstack_chunk> the_class_name;
	 generic_field_name <"limit",_obstack_chunk,limit> limit;
	 generic_field_name <"prev",_obstack_chunk,prev> prev;
	 generic_field_name <"contents",_obstack_chunk,contents> contents;
}; 
class CLS_468__obstack_chunk{ 
	 generic_class_name <"_obstack_chunk",_obstack_chunk> the_class_name;
	 generic_field_name <"limit",_obstack_chunk,limit> limit;
	 generic_field_name <"prev",_obstack_chunk,prev> prev;
	 generic_field_name <"contents",_obstack_chunk,contents> contents;
}; 
class CLS_469__obstack_chunk{ 
	 generic_class_name <"_obstack_chunk",_obstack_chunk> the_class_name;
	 generic_field_name <"limit",_obstack_chunk,limit> limit;
	 generic_field_name <"prev",_obstack_chunk,prev> prev;
	 generic_field_name <"contents",_obstack_chunk,contents> contents;
}; 
class CLS_470_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_471_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_472_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_473_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_474_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_475_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_476_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_477_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_478_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_479_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_480_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_481_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_482_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_483_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_484_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_485_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_486_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_487_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_488_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_489_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_490_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_491_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_492_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_493_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_494_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_495_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_496_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_497_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_498_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_499_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_500_ht_identifier{ 
	 generic_class_name <"ht_identifier",ht_identifier> the_class_name;
}; 
class CLS_501_ht_identifier{ 
	 generic_class_name <"ht_identifier",ht_identifier> the_class_name;
}; 
class CLS_502_ht_identifier{ 
	 generic_class_name <"ht_identifier",ht_identifier> the_class_name;
	 generic_field_name <"str",ht_identifier,str> str;
	 generic_field_name <"len",ht_identifier,len> len;
	 generic_field_name <"hash_value",ht_identifier,hash_value> hash_value;
}; 
class CLS_503_ht{ 
	 generic_class_name <"ht",ht> the_class_name;
}; 
class CLS_504_ht_identifier{ 
	 generic_class_name <"ht_identifier",ht_identifier> the_class_name;
	 generic_field_name <"str",ht_identifier,str> str;
	 generic_field_name <"len",ht_identifier,len> len;
	 generic_field_name <"hash_value",ht_identifier,hash_value> hash_value;
}; 
class CLS_505_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_506_cpp_reader{ 
	 generic_class_name <"cpp_reader",cpp_reader> the_class_name;
}; 
class CLS_507_ht{ 
	 generic_class_name <"ht",ht> the_class_name;
	 generic_field_name <"stack",ht,stack> stack;
	 generic_field_name <"entries",ht,entries> entries;
	 generic_field_name <"alloc_node",ht,alloc_node> alloc_node;
	 generic_field_name <"alloc_subobject",ht,alloc_subobject> alloc_subobject;
	 generic_field_name <"nslots",ht,nslots> nslots;
	 generic_field_name <"nelements",ht,nelements> nelements;
	 generic_field_name <"pfile",ht,pfile> pfile;
	 generic_field_name <"searches",ht,searches> searches;
	 generic_field_name <"collisions",ht,collisions> collisions;
	 generic_field_name <"entries_owned",ht,entries_owned> entries_owned;
}; 
class CLS_508_cpp_reader{ 
	 generic_class_name <"cpp_reader",cpp_reader> the_class_name;
}; 
class CLS_509_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_510_ht_identifier{ 
	 generic_class_name <"ht_identifier",ht_identifier> the_class_name;
	 generic_field_name <"str",ht_identifier,str> str;
	 generic_field_name <"len",ht_identifier,len> len;
	 generic_field_name <"hash_value",ht_identifier,hash_value> hash_value;
}; 
class CLS_511_tree_identifier{ 
	 generic_class_name <"tree_identifier",tree_identifier> the_class_name;
	 generic_field_name <"common",tree_identifier,common> common;
	 generic_field_name <"id",tree_identifier,id> id;
}; 
class CLS_512_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_513_tree_list{ 
	 generic_class_name <"tree_list",tree_list> the_class_name;
	 generic_field_name <"common",tree_list,common> common;
	 generic_field_name <"purpose",tree_list,purpose> purpose;
	 generic_field_name <"value",tree_list,value> value;
}; 
class CLS_514_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_515_tree_vec{ 
	 generic_class_name <"tree_vec",tree_vec> the_class_name;
	 generic_field_name <"common",tree_vec,common> common;
	 generic_field_name <"length",tree_vec,length> length;
	 generic_field_name <"a",tree_vec,a> a;
}; 
class CLS_516_constructor_elt_d{ 
	 generic_class_name <"constructor_elt_d",constructor_elt_d> the_class_name;
	 generic_field_name <"index",constructor_elt_d,index> index;
	 generic_field_name <"value",constructor_elt_d,value> value;
}; 
class CLS_517_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_518_VEC_constructor_elt_base{ 
	 generic_class_name <"VEC_constructor_elt_base",VEC_constructor_elt_base> the_class_name;
	 generic_field_name <"prefix",VEC_constructor_elt_base,prefix> prefix;
	 generic_field_name <"vec",VEC_constructor_elt_base,vec> vec;
}; 
class CLS_519_VEC_constructor_elt_none{ 
	 generic_class_name <"VEC_constructor_elt_none",VEC_constructor_elt_none> the_class_name;
	 generic_field_name <"base",VEC_constructor_elt_none,base> base;
}; 
class CLS_520_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_521_VEC_constructor_elt_gc{ 
	 generic_class_name <"VEC_constructor_elt_gc",VEC_constructor_elt_gc> the_class_name;
	 generic_field_name <"base",VEC_constructor_elt_gc,base> base;
}; 
class CLS_522_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_523_tree_typed{ 
	 generic_class_name <"tree_typed",tree_typed> the_class_name;
	 generic_field_name <"base",tree_typed,base> base;
	 generic_field_name <"type",tree_typed,type> type;
}; 
class CLS_524_tree_constructor{ 
	 generic_class_name <"tree_constructor",tree_constructor> the_class_name;
	 generic_field_name <"typed",tree_constructor,typed> typed;
	 generic_field_name <"elts",tree_constructor,elts> elts;
}; 
class CLS_525_tree_typed{ 
	 generic_class_name <"tree_typed",tree_typed> the_class_name;
	 generic_field_name <"base",tree_typed,base> base;
	 generic_field_name <"type",tree_typed,type> type;
}; 
class CLS_526_tree_exp{ 
	 generic_class_name <"tree_exp",tree_exp> the_class_name;
	 generic_field_name <"typed",tree_exp,typed> typed;
	 generic_field_name <"locus",tree_exp,locus> locus;
	 generic_field_name <"block",tree_exp,block> block;
	 generic_field_name <"operands",tree_exp,operands> operands;
}; 
class CLS_527_ptr_info_def{ 
	 generic_class_name <"ptr_info_def",ptr_info_def> the_class_name;
}; 
class CLS_528_ssa_use_operand_d{ 
	 generic_class_name <"ssa_use_operand_d",ssa_use_operand_d> the_class_name;
}; 
class CLS_529_ssa_use_operand_d{ 
	 generic_class_name <"ssa_use_operand_d",ssa_use_operand_d> the_class_name;
}; 
class CLS_530_ssa_use_operand_d{ 
	 generic_class_name <"ssa_use_operand_d",ssa_use_operand_d> the_class_name;
	 generic_field_name <"prev",ssa_use_operand_d,prev> prev;
	 generic_field_name <"next",ssa_use_operand_d,next> next;
	 generic_field_name <"loc",ssa_use_operand_d,loc> loc;
	 generic_field_name <"use",ssa_use_operand_d,use> use;
}; 
class CLS_531_tree_typed{ 
	 generic_class_name <"tree_typed",tree_typed> the_class_name;
	 generic_field_name <"base",tree_typed,base> base;
	 generic_field_name <"type",tree_typed,type> type;
}; 
class CLS_532_ptr_info_def{ 
	 generic_class_name <"ptr_info_def",ptr_info_def> the_class_name;
}; 
class CLS_533_ssa_use_operand_d{ 
	 generic_class_name <"ssa_use_operand_d",ssa_use_operand_d> the_class_name;
	 generic_field_name <"prev",ssa_use_operand_d,prev> prev;
	 generic_field_name <"next",ssa_use_operand_d,next> next;
	 generic_field_name <"loc",ssa_use_operand_d,loc> loc;
	 generic_field_name <"use",ssa_use_operand_d,use> use;
}; 
class CLS_534_tree_ssa_name{ 
	 generic_class_name <"tree_ssa_name",tree_ssa_name> the_class_name;
	 generic_field_name <"typed",tree_ssa_name,typed> typed;
	 generic_field_name <"var",tree_ssa_name,var> var;
	 generic_field_name <"def_stmt",tree_ssa_name,def_stmt> def_stmt;
	 generic_field_name <"version",tree_ssa_name,version> version;
	 generic_field_name <"ptr_info",tree_ssa_name,ptr_info> ptr_info;
	 generic_field_name <"imm_uses",tree_ssa_name,imm_uses> imm_uses;
}; 
class CLS_535_ssa_use_operand_d{ 
	 generic_class_name <"ssa_use_operand_d",ssa_use_operand_d> the_class_name;
	 generic_field_name <"prev",ssa_use_operand_d,prev> prev;
	 generic_field_name <"next",ssa_use_operand_d,next> next;
	 generic_field_name <"loc",ssa_use_operand_d,loc> loc;
	 generic_field_name <"use",ssa_use_operand_d,use> use;
}; 
class CLS_536_phi_arg_d{ 
	 generic_class_name <"phi_arg_d",phi_arg_d> the_class_name;
	 generic_field_name <"imm_use",phi_arg_d,imm_use> imm_use;
	 generic_field_name <"def",phi_arg_d,def> def;
	 generic_field_name <"locus",phi_arg_d,locus> locus;
}; 
class CLS_537_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_538_tree_omp_clause{ 
	 generic_class_name <"tree_omp_clause",tree_omp_clause> the_class_name;
	 generic_field_name <"common",tree_omp_clause,common> common;
	 generic_field_name <"locus",tree_omp_clause,locus> locus;
	 generic_field_name <"code",tree_omp_clause,code> code;
	 generic_field_name <"subcode",tree_omp_clause,subcode> subcode;
	 generic_field_name <"gimple_reduction_init",tree_omp_clause,gimple_reduction_init> gimple_reduction_init;
	 generic_field_name <"gimple_reduction_merge",tree_omp_clause,gimple_reduction_merge> gimple_reduction_merge;
	 generic_field_name <"ops",tree_omp_clause,ops> ops;
}; 
class CLS_539_tree_base{ 
	 generic_class_name <"tree_base",tree_base> the_class_name;
	 generic_field_name <"code",tree_base,code> code;
	 generic_field_name <"side_effects_flag",tree_base,side_effects_flag> side_effects_flag;
	 generic_field_name <"constant_flag",tree_base,constant_flag> constant_flag;
	 generic_field_name <"addressable_flag",tree_base,addressable_flag> addressable_flag;
	 generic_field_name <"volatile_flag",tree_base,volatile_flag> volatile_flag;
	 generic_field_name <"readonly_flag",tree_base,readonly_flag> readonly_flag;
	 generic_field_name <"unsigned_flag",tree_base,unsigned_flag> unsigned_flag;
	 generic_field_name <"asm_written_flag",tree_base,asm_written_flag> asm_written_flag;
	 generic_field_name <"nowarning_flag",tree_base,nowarning_flag> nowarning_flag;
	 generic_field_name <"used_flag",tree_base,used_flag> used_flag;
	 generic_field_name <"nothrow_flag",tree_base,nothrow_flag> nothrow_flag;
	 generic_field_name <"static_flag",tree_base,static_flag> static_flag;
	 generic_field_name <"public_flag",tree_base,public_flag> public_flag;
	 generic_field_name <"private_flag",tree_base,private_flag> private_flag;
	 generic_field_name <"protected_flag",tree_base,protected_flag> protected_flag;
	 generic_field_name <"deprecated_flag",tree_base,deprecated_flag> deprecated_flag;
	 generic_field_name <"saturating_flag",tree_base,saturating_flag> saturating_flag;
	 generic_field_name <"default_def_flag",tree_base,default_def_flag> default_def_flag;
	 generic_field_name <"lang_flag_0",tree_base,lang_flag_0> lang_flag_0;
	 generic_field_name <"lang_flag_1",tree_base,lang_flag_1> lang_flag_1;
	 generic_field_name <"lang_flag_2",tree_base,lang_flag_2> lang_flag_2;
	 generic_field_name <"lang_flag_3",tree_base,lang_flag_3> lang_flag_3;
	 generic_field_name <"lang_flag_4",tree_base,lang_flag_4> lang_flag_4;
	 generic_field_name <"lang_flag_5",tree_base,lang_flag_5> lang_flag_5;
	 generic_field_name <"lang_flag_6",tree_base,lang_flag_6> lang_flag_6;
	 generic_field_name <"visited",tree_base,visited> visited;
	 generic_field_name <"packed_flag",tree_base,packed_flag> packed_flag;
	 generic_field_name <"user_align",tree_base,user_align> user_align;
	 generic_field_name <"nameless_flag",tree_base,nameless_flag> nameless_flag;
	 generic_field_name <"spare",tree_base,spare> spare;
	 generic_field_name <"address_space",tree_base,address_space> address_space;
}; 
class CLS_540_tree_block{ 
	 generic_class_name <"tree_block",tree_block> the_class_name;
	 generic_field_name <"base",tree_block,base> base;
	 generic_field_name <"chain",tree_block,chain> chain;
	 generic_field_name <"abstract_flag",tree_block,abstract_flag> abstract_flag;
	 generic_field_name <"block_num",tree_block,block_num> block_num;
	 generic_field_name <"locus",tree_block,locus> locus;
	 generic_field_name <"vars",tree_block,vars> vars;
	 generic_field_name <"nonlocalized_vars",tree_block,nonlocalized_vars> nonlocalized_vars;
	 generic_field_name <"subblocks",tree_block,subblocks> subblocks;
	 generic_field_name <"supercontext",tree_block,supercontext> supercontext;
	 generic_field_name <"abstract_origin",tree_block,abstract_origin> abstract_origin;
	 generic_field_name <"fragment_origin",tree_block,fragment_origin> fragment_origin;
	 generic_field_name <"fragment_chain",tree_block,fragment_chain> fragment_chain;
}; 
class CLS_541_die_struct{ 
	 generic_class_name <"die_struct",die_struct> the_class_name;
}; 
class CLS_542_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_543_die_struct{ 
	 generic_class_name <"die_struct",die_struct> the_class_name;
}; 
class CLS_544_tree_type_common{ 
	 generic_class_name <"tree_type_common",tree_type_common> the_class_name;
	 generic_field_name <"common",tree_type_common,common> common;
	 generic_field_name <"size",tree_type_common,size> size;
	 generic_field_name <"size_unit",tree_type_common,size_unit> size_unit;
	 generic_field_name <"attributes",tree_type_common,attributes> attributes;
	 generic_field_name <"uid",tree_type_common,uid> uid;
	 generic_field_name <"precision",tree_type_common,precision> precision;
	 generic_field_name <"no_force_blk_flag",tree_type_common,no_force_blk_flag> no_force_blk_flag;
	 generic_field_name <"needs_constructing_flag",tree_type_common,needs_constructing_flag> needs_constructing_flag;
	 generic_field_name <"transparent_aggr_flag",tree_type_common,transparent_aggr_flag> transparent_aggr_flag;
	 generic_field_name <"restrict_flag",tree_type_common,restrict_flag> restrict_flag;
	 generic_field_name <"contains_placeholder_bits",tree_type_common,contains_placeholder_bits> contains_placeholder_bits;
	 generic_field_name <"mode",tree_type_common,mode> mode;
	 generic_field_name <"string_flag",tree_type_common,string_flag> string_flag;
	 generic_field_name <"lang_flag_0",tree_type_common,lang_flag_0> lang_flag_0;
	 generic_field_name <"lang_flag_1",tree_type_common,lang_flag_1> lang_flag_1;
	 generic_field_name <"lang_flag_2",tree_type_common,lang_flag_2> lang_flag_2;
	 generic_field_name <"lang_flag_3",tree_type_common,lang_flag_3> lang_flag_3;
	 generic_field_name <"lang_flag_4",tree_type_common,lang_flag_4> lang_flag_4;
	 generic_field_name <"lang_flag_5",tree_type_common,lang_flag_5> lang_flag_5;
	 generic_field_name <"lang_flag_6",tree_type_common,lang_flag_6> lang_flag_6;
	 generic_field_name <"align",tree_type_common,align> align;
	 generic_field_name <"alias_set",tree_type_common,alias_set> alias_set;
	 generic_field_name <"pointer_to",tree_type_common,pointer_to> pointer_to;
	 generic_field_name <"reference_to",tree_type_common,reference_to> reference_to;
	 generic_field_name <"symtab",tree_type_common,symtab> symtab;
	 generic_field_name <"name",tree_type_common,name> name;
	 generic_field_name <"next_variant",tree_type_common,next_variant> next_variant;
	 generic_field_name <"main_variant",tree_type_common,main_variant> main_variant;
	 generic_field_name <"context",tree_type_common,context> context;
	 generic_field_name <"canonical",tree_type_common,canonical> canonical;
}; 
class CLS_545_tree_type_common{ 
	 generic_class_name <"tree_type_common",tree_type_common> the_class_name;
	 generic_field_name <"common",tree_type_common,common> common;
	 generic_field_name <"size",tree_type_common,size> size;
	 generic_field_name <"size_unit",tree_type_common,size_unit> size_unit;
	 generic_field_name <"attributes",tree_type_common,attributes> attributes;
	 generic_field_name <"uid",tree_type_common,uid> uid;
	 generic_field_name <"precision",tree_type_common,precision> precision;
	 generic_field_name <"no_force_blk_flag",tree_type_common,no_force_blk_flag> no_force_blk_flag;
	 generic_field_name <"needs_constructing_flag",tree_type_common,needs_constructing_flag> needs_constructing_flag;
	 generic_field_name <"transparent_aggr_flag",tree_type_common,transparent_aggr_flag> transparent_aggr_flag;
	 generic_field_name <"restrict_flag",tree_type_common,restrict_flag> restrict_flag;
	 generic_field_name <"contains_placeholder_bits",tree_type_common,contains_placeholder_bits> contains_placeholder_bits;
	 generic_field_name <"mode",tree_type_common,mode> mode;
	 generic_field_name <"string_flag",tree_type_common,string_flag> string_flag;
	 generic_field_name <"lang_flag_0",tree_type_common,lang_flag_0> lang_flag_0;
	 generic_field_name <"lang_flag_1",tree_type_common,lang_flag_1> lang_flag_1;
	 generic_field_name <"lang_flag_2",tree_type_common,lang_flag_2> lang_flag_2;
	 generic_field_name <"lang_flag_3",tree_type_common,lang_flag_3> lang_flag_3;
	 generic_field_name <"lang_flag_4",tree_type_common,lang_flag_4> lang_flag_4;
	 generic_field_name <"lang_flag_5",tree_type_common,lang_flag_5> lang_flag_5;
	 generic_field_name <"lang_flag_6",tree_type_common,lang_flag_6> lang_flag_6;
	 generic_field_name <"align",tree_type_common,align> align;
	 generic_field_name <"alias_set",tree_type_common,alias_set> alias_set;
	 generic_field_name <"pointer_to",tree_type_common,pointer_to> pointer_to;
	 generic_field_name <"reference_to",tree_type_common,reference_to> reference_to;
	 generic_field_name <"symtab",tree_type_common,symtab> symtab;
	 generic_field_name <"name",tree_type_common,name> name;
	 generic_field_name <"next_variant",tree_type_common,next_variant> next_variant;
	 generic_field_name <"main_variant",tree_type_common,main_variant> main_variant;
	 generic_field_name <"context",tree_type_common,context> context;
	 generic_field_name <"canonical",tree_type_common,canonical> canonical;
}; 
class CLS_546_lang_type{ 
	 generic_class_name <"lang_type",lang_type> the_class_name;
}; 
class CLS_547_tree_type_with_lang_specific{ 
	 generic_class_name <"tree_type_with_lang_specific",tree_type_with_lang_specific> the_class_name;
	 generic_field_name <"common",tree_type_with_lang_specific,common> common;
	 generic_field_name <"lang_specific",tree_type_with_lang_specific,lang_specific> lang_specific;
}; 
class CLS_548_tree_type_with_lang_specific{ 
	 generic_class_name <"tree_type_with_lang_specific",tree_type_with_lang_specific> the_class_name;
	 generic_field_name <"common",tree_type_with_lang_specific,common> common;
	 generic_field_name <"lang_specific",tree_type_with_lang_specific,lang_specific> lang_specific;
}; 
class CLS_549_tree_type_non_common{ 
	 generic_class_name <"tree_type_non_common",tree_type_non_common> the_class_name;
	 generic_field_name <"with_lang_specific",tree_type_non_common,with_lang_specific> with_lang_specific;
	 generic_field_name <"values",tree_type_non_common,values> values;
	 generic_field_name <"minval",tree_type_non_common,minval> minval;
	 generic_field_name <"maxval",tree_type_non_common,maxval> maxval;
	 generic_field_name <"binfo",tree_type_non_common,binfo> binfo;
}; 
class CLS_550_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_551_tree_binfo{ 
	 generic_class_name <"tree_binfo",tree_binfo> the_class_name;
	 generic_field_name <"common",tree_binfo,common> common;
	 generic_field_name <"offset",tree_binfo,offset> offset;
	 generic_field_name <"vtable",tree_binfo,vtable> vtable;
	 generic_field_name <"virtuals",tree_binfo,virtuals> virtuals;
	 generic_field_name <"vptr_field",tree_binfo,vptr_field> vptr_field;
	 generic_field_name <"base_accesses",tree_binfo,base_accesses> base_accesses;
	 generic_field_name <"inheritance",tree_binfo,inheritance> inheritance;
	 generic_field_name <"vtt_subvtt",tree_binfo,vtt_subvtt> vtt_subvtt;
	 generic_field_name <"vtt_vptr",tree_binfo,vtt_vptr> vtt_vptr;
	 generic_field_name <"base_binfos",tree_binfo,base_binfos> base_binfos;
}; 
class CLS_552_function{ 
	 generic_class_name <"function",function> the_class_name;
}; 
class CLS_553_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_554_tree_decl_minimal{ 
	 generic_class_name <"tree_decl_minimal",tree_decl_minimal> the_class_name;
	 generic_field_name <"common",tree_decl_minimal,common> common;
	 generic_field_name <"locus",tree_decl_minimal,locus> locus;
	 generic_field_name <"uid",tree_decl_minimal,uid> uid;
	 generic_field_name <"name",tree_decl_minimal,name> name;
	 generic_field_name <"context",tree_decl_minimal,context> context;
}; 
class CLS_555_tree_decl_minimal{ 
	 generic_class_name <"tree_decl_minimal",tree_decl_minimal> the_class_name;
	 generic_field_name <"common",tree_decl_minimal,common> common;
	 generic_field_name <"locus",tree_decl_minimal,locus> locus;
	 generic_field_name <"uid",tree_decl_minimal,uid> uid;
	 generic_field_name <"name",tree_decl_minimal,name> name;
	 generic_field_name <"context",tree_decl_minimal,context> context;
}; 
class CLS_556_lang_decl{ 
	 generic_class_name <"lang_decl",lang_decl> the_class_name;
}; 
class CLS_557_tree_decl_common{ 
	 generic_class_name <"tree_decl_common",tree_decl_common> the_class_name;
	 generic_field_name <"common",tree_decl_common,common> common;
	 generic_field_name <"size",tree_decl_common,size> size;
	 generic_field_name <"mode",tree_decl_common,mode> mode;
	 generic_field_name <"nonlocal_flag",tree_decl_common,nonlocal_flag> nonlocal_flag;
	 generic_field_name <"virtual_flag",tree_decl_common,virtual_flag> virtual_flag;
	 generic_field_name <"ignored_flag",tree_decl_common,ignored_flag> ignored_flag;
	 generic_field_name <"abstract_flag",tree_decl_common,abstract_flag> abstract_flag;
	 generic_field_name <"artificial_flag",tree_decl_common,artificial_flag> artificial_flag;
	 generic_field_name <"preserve_flag",tree_decl_common,preserve_flag> preserve_flag;
	 generic_field_name <"debug_expr_is_from",tree_decl_common,debug_expr_is_from> debug_expr_is_from;
	 generic_field_name <"lang_flag_0",tree_decl_common,lang_flag_0> lang_flag_0;
	 generic_field_name <"lang_flag_1",tree_decl_common,lang_flag_1> lang_flag_1;
	 generic_field_name <"lang_flag_2",tree_decl_common,lang_flag_2> lang_flag_2;
	 generic_field_name <"lang_flag_3",tree_decl_common,lang_flag_3> lang_flag_3;
	 generic_field_name <"lang_flag_4",tree_decl_common,lang_flag_4> lang_flag_4;
	 generic_field_name <"lang_flag_5",tree_decl_common,lang_flag_5> lang_flag_5;
	 generic_field_name <"lang_flag_6",tree_decl_common,lang_flag_6> lang_flag_6;
	 generic_field_name <"lang_flag_7",tree_decl_common,lang_flag_7> lang_flag_7;
	 generic_field_name <"lang_flag_8",tree_decl_common,lang_flag_8> lang_flag_8;
	 generic_field_name <"decl_flag_0",tree_decl_common,decl_flag_0> decl_flag_0;
	 generic_field_name <"decl_flag_1",tree_decl_common,decl_flag_1> decl_flag_1;
	 generic_field_name <"decl_flag_2",tree_decl_common,decl_flag_2> decl_flag_2;
	 generic_field_name <"gimple_reg_flag",tree_decl_common,gimple_reg_flag> gimple_reg_flag;
	 generic_field_name <"decl_by_reference_flag",tree_decl_common,decl_by_reference_flag> decl_by_reference_flag;
	 generic_field_name <"decl_restricted_flag",tree_decl_common,decl_restricted_flag> decl_restricted_flag;
	 generic_field_name <"decl_read_flag",tree_decl_common,decl_read_flag> decl_read_flag;
	 generic_field_name <"decl_nonshareable_flag",tree_decl_common,decl_nonshareable_flag> decl_nonshareable_flag;
	 generic_field_name <"off_align",tree_decl_common,off_align> off_align;
	 generic_field_name <"align",tree_decl_common,align> align;
	 generic_field_name <"pt_uid",tree_decl_common,pt_uid> pt_uid;
	 generic_field_name <"size_unit",tree_decl_common,size_unit> size_unit;
	 generic_field_name <"initial",tree_decl_common,initial> initial;
	 generic_field_name <"attributes",tree_decl_common,attributes> attributes;
	 generic_field_name <"abstract_origin",tree_decl_common,abstract_origin> abstract_origin;
	 generic_field_name <"lang_specific",tree_decl_common,lang_specific> lang_specific;
}; 
class CLS_558_tree_decl_common{ 
	 generic_class_name <"tree_decl_common",tree_decl_common> the_class_name;
	 generic_field_name <"common",tree_decl_common,common> common;
	 generic_field_name <"size",tree_decl_common,size> size;
	 generic_field_name <"mode",tree_decl_common,mode> mode;
	 generic_field_name <"nonlocal_flag",tree_decl_common,nonlocal_flag> nonlocal_flag;
	 generic_field_name <"virtual_flag",tree_decl_common,virtual_flag> virtual_flag;
	 generic_field_name <"ignored_flag",tree_decl_common,ignored_flag> ignored_flag;
	 generic_field_name <"abstract_flag",tree_decl_common,abstract_flag> abstract_flag;
	 generic_field_name <"artificial_flag",tree_decl_common,artificial_flag> artificial_flag;
	 generic_field_name <"preserve_flag",tree_decl_common,preserve_flag> preserve_flag;
	 generic_field_name <"debug_expr_is_from",tree_decl_common,debug_expr_is_from> debug_expr_is_from;
	 generic_field_name <"lang_flag_0",tree_decl_common,lang_flag_0> lang_flag_0;
	 generic_field_name <"lang_flag_1",tree_decl_common,lang_flag_1> lang_flag_1;
	 generic_field_name <"lang_flag_2",tree_decl_common,lang_flag_2> lang_flag_2;
	 generic_field_name <"lang_flag_3",tree_decl_common,lang_flag_3> lang_flag_3;
	 generic_field_name <"lang_flag_4",tree_decl_common,lang_flag_4> lang_flag_4;
	 generic_field_name <"lang_flag_5",tree_decl_common,lang_flag_5> lang_flag_5;
	 generic_field_name <"lang_flag_6",tree_decl_common,lang_flag_6> lang_flag_6;
	 generic_field_name <"lang_flag_7",tree_decl_common,lang_flag_7> lang_flag_7;
	 generic_field_name <"lang_flag_8",tree_decl_common,lang_flag_8> lang_flag_8;
	 generic_field_name <"decl_flag_0",tree_decl_common,decl_flag_0> decl_flag_0;
	 generic_field_name <"decl_flag_1",tree_decl_common,decl_flag_1> decl_flag_1;
	 generic_field_name <"decl_flag_2",tree_decl_common,decl_flag_2> decl_flag_2;
	 generic_field_name <"gimple_reg_flag",tree_decl_common,gimple_reg_flag> gimple_reg_flag;
	 generic_field_name <"decl_by_reference_flag",tree_decl_common,decl_by_reference_flag> decl_by_reference_flag;
	 generic_field_name <"decl_restricted_flag",tree_decl_common,decl_restricted_flag> decl_restricted_flag;
	 generic_field_name <"decl_read_flag",tree_decl_common,decl_read_flag> decl_read_flag;
	 generic_field_name <"decl_nonshareable_flag",tree_decl_common,decl_nonshareable_flag> decl_nonshareable_flag;
	 generic_field_name <"off_align",tree_decl_common,off_align> off_align;
	 generic_field_name <"align",tree_decl_common,align> align;
	 generic_field_name <"pt_uid",tree_decl_common,pt_uid> pt_uid;
	 generic_field_name <"size_unit",tree_decl_common,size_unit> size_unit;
	 generic_field_name <"initial",tree_decl_common,initial> initial;
	 generic_field_name <"attributes",tree_decl_common,attributes> attributes;
	 generic_field_name <"abstract_origin",tree_decl_common,abstract_origin> abstract_origin;
	 generic_field_name <"lang_specific",tree_decl_common,lang_specific> lang_specific;
}; 
class CLS_559_tree_decl_with_rtl{ 
	 generic_class_name <"tree_decl_with_rtl",tree_decl_with_rtl> the_class_name;
	 generic_field_name <"common",tree_decl_with_rtl,common> common;
	 generic_field_name <"rtl",tree_decl_with_rtl,rtl> rtl;
}; 
class CLS_560_tree_decl_common{ 
	 generic_class_name <"tree_decl_common",tree_decl_common> the_class_name;
	 generic_field_name <"common",tree_decl_common,common> common;
	 generic_field_name <"size",tree_decl_common,size> size;
	 generic_field_name <"mode",tree_decl_common,mode> mode;
	 generic_field_name <"nonlocal_flag",tree_decl_common,nonlocal_flag> nonlocal_flag;
	 generic_field_name <"virtual_flag",tree_decl_common,virtual_flag> virtual_flag;
	 generic_field_name <"ignored_flag",tree_decl_common,ignored_flag> ignored_flag;
	 generic_field_name <"abstract_flag",tree_decl_common,abstract_flag> abstract_flag;
	 generic_field_name <"artificial_flag",tree_decl_common,artificial_flag> artificial_flag;
	 generic_field_name <"preserve_flag",tree_decl_common,preserve_flag> preserve_flag;
	 generic_field_name <"debug_expr_is_from",tree_decl_common,debug_expr_is_from> debug_expr_is_from;
	 generic_field_name <"lang_flag_0",tree_decl_common,lang_flag_0> lang_flag_0;
	 generic_field_name <"lang_flag_1",tree_decl_common,lang_flag_1> lang_flag_1;
	 generic_field_name <"lang_flag_2",tree_decl_common,lang_flag_2> lang_flag_2;
	 generic_field_name <"lang_flag_3",tree_decl_common,lang_flag_3> lang_flag_3;
	 generic_field_name <"lang_flag_4",tree_decl_common,lang_flag_4> lang_flag_4;
	 generic_field_name <"lang_flag_5",tree_decl_common,lang_flag_5> lang_flag_5;
	 generic_field_name <"lang_flag_6",tree_decl_common,lang_flag_6> lang_flag_6;
	 generic_field_name <"lang_flag_7",tree_decl_common,lang_flag_7> lang_flag_7;
	 generic_field_name <"lang_flag_8",tree_decl_common,lang_flag_8> lang_flag_8;
	 generic_field_name <"decl_flag_0",tree_decl_common,decl_flag_0> decl_flag_0;
	 generic_field_name <"decl_flag_1",tree_decl_common,decl_flag_1> decl_flag_1;
	 generic_field_name <"decl_flag_2",tree_decl_common,decl_flag_2> decl_flag_2;
	 generic_field_name <"gimple_reg_flag",tree_decl_common,gimple_reg_flag> gimple_reg_flag;
	 generic_field_name <"decl_by_reference_flag",tree_decl_common,decl_by_reference_flag> decl_by_reference_flag;
	 generic_field_name <"decl_restricted_flag",tree_decl_common,decl_restricted_flag> decl_restricted_flag;
	 generic_field_name <"decl_read_flag",tree_decl_common,decl_read_flag> decl_read_flag;
	 generic_field_name <"decl_nonshareable_flag",tree_decl_common,decl_nonshareable_flag> decl_nonshareable_flag;
	 generic_field_name <"off_align",tree_decl_common,off_align> off_align;
	 generic_field_name <"align",tree_decl_common,align> align;
	 generic_field_name <"pt_uid",tree_decl_common,pt_uid> pt_uid;
	 generic_field_name <"size_unit",tree_decl_common,size_unit> size_unit;
	 generic_field_name <"initial",tree_decl_common,initial> initial;
	 generic_field_name <"attributes",tree_decl_common,attributes> attributes;
	 generic_field_name <"abstract_origin",tree_decl_common,abstract_origin> abstract_origin;
	 generic_field_name <"lang_specific",tree_decl_common,lang_specific> lang_specific;
}; 
class CLS_561_tree_field_decl{ 
	 generic_class_name <"tree_field_decl",tree_field_decl> the_class_name;
	 generic_field_name <"common",tree_field_decl,common> common;
	 generic_field_name <"offset",tree_field_decl,offset> offset;
	 generic_field_name <"bit_field_type",tree_field_decl,bit_field_type> bit_field_type;
	 generic_field_name <"qualifier",tree_field_decl,qualifier> qualifier;
	 generic_field_name <"bit_offset",tree_field_decl,bit_offset> bit_offset;
	 generic_field_name <"fcontext",tree_field_decl,fcontext> fcontext;
}; 
class CLS_562_tree_decl_with_rtl{ 
	 generic_class_name <"tree_decl_with_rtl",tree_decl_with_rtl> the_class_name;
	 generic_field_name <"common",tree_decl_with_rtl,common> common;
	 generic_field_name <"rtl",tree_decl_with_rtl,rtl> rtl;
}; 
class CLS_563_tree_label_decl{ 
	 generic_class_name <"tree_label_decl",tree_label_decl> the_class_name;
	 generic_field_name <"common",tree_label_decl,common> common;
	 generic_field_name <"label_decl_uid",tree_label_decl,label_decl_uid> label_decl_uid;
	 generic_field_name <"eh_landing_pad_nr",tree_label_decl,eh_landing_pad_nr> eh_landing_pad_nr;
}; 
class CLS_564_var_ann_d{ 
	 generic_class_name <"var_ann_d",var_ann_d> the_class_name;
}; 
class CLS_565_tree_decl_with_rtl{ 
	 generic_class_name <"tree_decl_with_rtl",tree_decl_with_rtl> the_class_name;
	 generic_field_name <"common",tree_decl_with_rtl,common> common;
	 generic_field_name <"rtl",tree_decl_with_rtl,rtl> rtl;
}; 
class CLS_566_var_ann_d{ 
	 generic_class_name <"var_ann_d",var_ann_d> the_class_name;
}; 
class CLS_567_tree_result_decl{ 
	 generic_class_name <"tree_result_decl",tree_result_decl> the_class_name;
	 generic_field_name <"common",tree_result_decl,common> common;
	 generic_field_name <"ann",tree_result_decl,ann> ann;
}; 
class CLS_568_tree_decl_common{ 
	 generic_class_name <"tree_decl_common",tree_decl_common> the_class_name;
	 generic_field_name <"common",tree_decl_common,common> common;
	 generic_field_name <"size",tree_decl_common,size> size;
	 generic_field_name <"mode",tree_decl_common,mode> mode;
	 generic_field_name <"nonlocal_flag",tree_decl_common,nonlocal_flag> nonlocal_flag;
	 generic_field_name <"virtual_flag",tree_decl_common,virtual_flag> virtual_flag;
	 generic_field_name <"ignored_flag",tree_decl_common,ignored_flag> ignored_flag;
	 generic_field_name <"abstract_flag",tree_decl_common,abstract_flag> abstract_flag;
	 generic_field_name <"artificial_flag",tree_decl_common,artificial_flag> artificial_flag;
	 generic_field_name <"preserve_flag",tree_decl_common,preserve_flag> preserve_flag;
	 generic_field_name <"debug_expr_is_from",tree_decl_common,debug_expr_is_from> debug_expr_is_from;
	 generic_field_name <"lang_flag_0",tree_decl_common,lang_flag_0> lang_flag_0;
	 generic_field_name <"lang_flag_1",tree_decl_common,lang_flag_1> lang_flag_1;
	 generic_field_name <"lang_flag_2",tree_decl_common,lang_flag_2> lang_flag_2;
	 generic_field_name <"lang_flag_3",tree_decl_common,lang_flag_3> lang_flag_3;
	 generic_field_name <"lang_flag_4",tree_decl_common,lang_flag_4> lang_flag_4;
	 generic_field_name <"lang_flag_5",tree_decl_common,lang_flag_5> lang_flag_5;
	 generic_field_name <"lang_flag_6",tree_decl_common,lang_flag_6> lang_flag_6;
	 generic_field_name <"lang_flag_7",tree_decl_common,lang_flag_7> lang_flag_7;
	 generic_field_name <"lang_flag_8",tree_decl_common,lang_flag_8> lang_flag_8;
	 generic_field_name <"decl_flag_0",tree_decl_common,decl_flag_0> decl_flag_0;
	 generic_field_name <"decl_flag_1",tree_decl_common,decl_flag_1> decl_flag_1;
	 generic_field_name <"decl_flag_2",tree_decl_common,decl_flag_2> decl_flag_2;
	 generic_field_name <"gimple_reg_flag",tree_decl_common,gimple_reg_flag> gimple_reg_flag;
	 generic_field_name <"decl_by_reference_flag",tree_decl_common,decl_by_reference_flag> decl_by_reference_flag;
	 generic_field_name <"decl_restricted_flag",tree_decl_common,decl_restricted_flag> decl_restricted_flag;
	 generic_field_name <"decl_read_flag",tree_decl_common,decl_read_flag> decl_read_flag;
	 generic_field_name <"decl_nonshareable_flag",tree_decl_common,decl_nonshareable_flag> decl_nonshareable_flag;
	 generic_field_name <"off_align",tree_decl_common,off_align> off_align;
	 generic_field_name <"align",tree_decl_common,align> align;
	 generic_field_name <"pt_uid",tree_decl_common,pt_uid> pt_uid;
	 generic_field_name <"size_unit",tree_decl_common,size_unit> size_unit;
	 generic_field_name <"initial",tree_decl_common,initial> initial;
	 generic_field_name <"attributes",tree_decl_common,attributes> attributes;
	 generic_field_name <"abstract_origin",tree_decl_common,abstract_origin> abstract_origin;
	 generic_field_name <"lang_specific",tree_decl_common,lang_specific> lang_specific;
}; 
class CLS_569_tree_const_decl{ 
	 generic_class_name <"tree_const_decl",tree_const_decl> the_class_name;
	 generic_field_name <"common",tree_const_decl,common> common;
}; 
class CLS_570_tree_decl_with_rtl{ 
	 generic_class_name <"tree_decl_with_rtl",tree_decl_with_rtl> the_class_name;
	 generic_field_name <"common",tree_decl_with_rtl,common> common;
	 generic_field_name <"rtl",tree_decl_with_rtl,rtl> rtl;
}; 
class CLS_571_var_ann_d{ 
	 generic_class_name <"var_ann_d",var_ann_d> the_class_name;
}; 
class CLS_572_tree_parm_decl{ 
	 generic_class_name <"tree_parm_decl",tree_parm_decl> the_class_name;
	 generic_field_name <"common",tree_parm_decl,common> common;
	 generic_field_name <"incoming_rtl",tree_parm_decl,incoming_rtl> incoming_rtl;
	 generic_field_name <"ann",tree_parm_decl,ann> ann;
}; 
class CLS_573_tree_decl_with_rtl{ 
	 generic_class_name <"tree_decl_with_rtl",tree_decl_with_rtl> the_class_name;
	 generic_field_name <"common",tree_decl_with_rtl,common> common;
	 generic_field_name <"rtl",tree_decl_with_rtl,rtl> rtl;
}; 
class CLS_574_tree_decl_with_vis{ 
	 generic_class_name <"tree_decl_with_vis",tree_decl_with_vis> the_class_name;
	 generic_field_name <"common",tree_decl_with_vis,common> common;
	 generic_field_name <"assembler_name",tree_decl_with_vis,assembler_name> assembler_name;
	 generic_field_name <"section_name",tree_decl_with_vis,section_name> section_name;
	 generic_field_name <"comdat_group",tree_decl_with_vis,comdat_group> comdat_group;
	 generic_field_name <"defer_output",tree_decl_with_vis,defer_output> defer_output;
	 generic_field_name <"hard_register",tree_decl_with_vis,hard_register> hard_register;
	 generic_field_name <"thread_local",tree_decl_with_vis,thread_local> thread_local;
	 generic_field_name <"common_flag",tree_decl_with_vis,common_flag> common_flag;
	 generic_field_name <"in_text_section",tree_decl_with_vis,in_text_section> in_text_section;
	 generic_field_name <"in_constant_pool",tree_decl_with_vis,in_constant_pool> in_constant_pool;
	 generic_field_name <"dllimport_flag",tree_decl_with_vis,dllimport_flag> dllimport_flag;
	 generic_field_name <"weak_flag",tree_decl_with_vis,weak_flag> weak_flag;
	 generic_field_name <"seen_in_bind_expr",tree_decl_with_vis,seen_in_bind_expr> seen_in_bind_expr;
	 generic_field_name <"comdat_flag",tree_decl_with_vis,comdat_flag> comdat_flag;
	 generic_field_name <"visibility",tree_decl_with_vis,visibility> visibility;
	 generic_field_name <"visibility_specified",tree_decl_with_vis,visibility_specified> visibility_specified;
	 generic_field_name <"tls_model",tree_decl_with_vis,tls_model> tls_model;
	 generic_field_name <"init_priority_p",tree_decl_with_vis,init_priority_p> init_priority_p;
	 generic_field_name <"shadowed_for_var_p",tree_decl_with_vis,shadowed_for_var_p> shadowed_for_var_p;
	 generic_field_name <"implicit_section_name_p",tree_decl_with_vis,implicit_section_name_p> implicit_section_name_p;
}; 
class CLS_575_tree_decl_with_vis{ 
	 generic_class_name <"tree_decl_with_vis",tree_decl_with_vis> the_class_name;
	 generic_field_name <"common",tree_decl_with_vis,common> common;
	 generic_field_name <"assembler_name",tree_decl_with_vis,assembler_name> assembler_name;
	 generic_field_name <"section_name",tree_decl_with_vis,section_name> section_name;
	 generic_field_name <"comdat_group",tree_decl_with_vis,comdat_group> comdat_group;
	 generic_field_name <"defer_output",tree_decl_with_vis,defer_output> defer_output;
	 generic_field_name <"hard_register",tree_decl_with_vis,hard_register> hard_register;
	 generic_field_name <"thread_local",tree_decl_with_vis,thread_local> thread_local;
	 generic_field_name <"common_flag",tree_decl_with_vis,common_flag> common_flag;
	 generic_field_name <"in_text_section",tree_decl_with_vis,in_text_section> in_text_section;
	 generic_field_name <"in_constant_pool",tree_decl_with_vis,in_constant_pool> in_constant_pool;
	 generic_field_name <"dllimport_flag",tree_decl_with_vis,dllimport_flag> dllimport_flag;
	 generic_field_name <"weak_flag",tree_decl_with_vis,weak_flag> weak_flag;
	 generic_field_name <"seen_in_bind_expr",tree_decl_with_vis,seen_in_bind_expr> seen_in_bind_expr;
	 generic_field_name <"comdat_flag",tree_decl_with_vis,comdat_flag> comdat_flag;
	 generic_field_name <"visibility",tree_decl_with_vis,visibility> visibility;
	 generic_field_name <"visibility_specified",tree_decl_with_vis,visibility_specified> visibility_specified;
	 generic_field_name <"tls_model",tree_decl_with_vis,tls_model> tls_model;
	 generic_field_name <"init_priority_p",tree_decl_with_vis,init_priority_p> init_priority_p;
	 generic_field_name <"shadowed_for_var_p",tree_decl_with_vis,shadowed_for_var_p> shadowed_for_var_p;
	 generic_field_name <"implicit_section_name_p",tree_decl_with_vis,implicit_section_name_p> implicit_section_name_p;
}; 
class CLS_576_var_ann_d{ 
	 generic_class_name <"var_ann_d",var_ann_d> the_class_name;
}; 
class CLS_577_tree_var_decl{ 
	 generic_class_name <"tree_var_decl",tree_var_decl> the_class_name;
	 generic_field_name <"common",tree_var_decl,common> common;
	 generic_field_name <"ann",tree_var_decl,ann> ann;
}; 
class CLS_578_tree_decl_with_vis{ 
	 generic_class_name <"tree_decl_with_vis",tree_decl_with_vis> the_class_name;
	 generic_field_name <"common",tree_decl_with_vis,common> common;
	 generic_field_name <"assembler_name",tree_decl_with_vis,assembler_name> assembler_name;
	 generic_field_name <"section_name",tree_decl_with_vis,section_name> section_name;
	 generic_field_name <"comdat_group",tree_decl_with_vis,comdat_group> comdat_group;
	 generic_field_name <"defer_output",tree_decl_with_vis,defer_output> defer_output;
	 generic_field_name <"hard_register",tree_decl_with_vis,hard_register> hard_register;
	 generic_field_name <"thread_local",tree_decl_with_vis,thread_local> thread_local;
	 generic_field_name <"common_flag",tree_decl_with_vis,common_flag> common_flag;
	 generic_field_name <"in_text_section",tree_decl_with_vis,in_text_section> in_text_section;
	 generic_field_name <"in_constant_pool",tree_decl_with_vis,in_constant_pool> in_constant_pool;
	 generic_field_name <"dllimport_flag",tree_decl_with_vis,dllimport_flag> dllimport_flag;
	 generic_field_name <"weak_flag",tree_decl_with_vis,weak_flag> weak_flag;
	 generic_field_name <"seen_in_bind_expr",tree_decl_with_vis,seen_in_bind_expr> seen_in_bind_expr;
	 generic_field_name <"comdat_flag",tree_decl_with_vis,comdat_flag> comdat_flag;
	 generic_field_name <"visibility",tree_decl_with_vis,visibility> visibility;
	 generic_field_name <"visibility_specified",tree_decl_with_vis,visibility_specified> visibility_specified;
	 generic_field_name <"tls_model",tree_decl_with_vis,tls_model> tls_model;
	 generic_field_name <"init_priority_p",tree_decl_with_vis,init_priority_p> init_priority_p;
	 generic_field_name <"shadowed_for_var_p",tree_decl_with_vis,shadowed_for_var_p> shadowed_for_var_p;
	 generic_field_name <"implicit_section_name_p",tree_decl_with_vis,implicit_section_name_p> implicit_section_name_p;
}; 
class CLS_579_tree_decl_non_common{ 
	 generic_class_name <"tree_decl_non_common",tree_decl_non_common> the_class_name;
	 generic_field_name <"common",tree_decl_non_common,common> common;
	 generic_field_name <"saved_tree",tree_decl_non_common,saved_tree> saved_tree;
	 generic_field_name <"arguments",tree_decl_non_common,arguments> arguments;
	 generic_field_name <"result",tree_decl_non_common,result> result;
	 generic_field_name <"vindex",tree_decl_non_common,vindex> vindex;
}; 
class CLS_580_tree_decl_non_common{ 
	 generic_class_name <"tree_decl_non_common",tree_decl_non_common> the_class_name;
	 generic_field_name <"common",tree_decl_non_common,common> common;
	 generic_field_name <"saved_tree",tree_decl_non_common,saved_tree> saved_tree;
	 generic_field_name <"arguments",tree_decl_non_common,arguments> arguments;
	 generic_field_name <"result",tree_decl_non_common,result> result;
	 generic_field_name <"vindex",tree_decl_non_common,vindex> vindex;
}; 
class CLS_581_function{ 
	 generic_class_name <"function",function> the_class_name;
}; 
class CLS_582_tree_function_decl{ 
	 generic_class_name <"tree_function_decl",tree_function_decl> the_class_name;
	 generic_field_name <"common",tree_function_decl,common> common;
	 generic_field_name <"f",tree_function_decl,f> f;
	 generic_field_name <"personality",tree_function_decl,personality> personality;
	 generic_field_name <"function_specific_target",tree_function_decl,function_specific_target> function_specific_target;
	 generic_field_name <"function_specific_optimization",tree_function_decl,function_specific_optimization> function_specific_optimization;
	 generic_field_name <"function_code",tree_function_decl,function_code> function_code;
	 generic_field_name <"built_in_class",tree_function_decl,built_in_class> built_in_class;
	 generic_field_name <"static_ctor_flag",tree_function_decl,static_ctor_flag> static_ctor_flag;
	 generic_field_name <"static_dtor_flag",tree_function_decl,static_dtor_flag> static_dtor_flag;
	 generic_field_name <"uninlinable",tree_function_decl,uninlinable> uninlinable;
	 generic_field_name <"possibly_inlined",tree_function_decl,possibly_inlined> possibly_inlined;
	 generic_field_name <"novops_flag",tree_function_decl,novops_flag> novops_flag;
	 generic_field_name <"returns_twice_flag",tree_function_decl,returns_twice_flag> returns_twice_flag;
	 generic_field_name <"malloc_flag",tree_function_decl,malloc_flag> malloc_flag;
	 generic_field_name <"operator_new_flag",tree_function_decl,operator_new_flag> operator_new_flag;
	 generic_field_name <"declared_inline_flag",tree_function_decl,declared_inline_flag> declared_inline_flag;
	 generic_field_name <"regdecl_flag",tree_function_decl,regdecl_flag> regdecl_flag;
	 generic_field_name <"no_inline_warning_flag",tree_function_decl,no_inline_warning_flag> no_inline_warning_flag;
	 generic_field_name <"no_instrument_function_entry_exit",tree_function_decl,no_instrument_function_entry_exit> no_instrument_function_entry_exit;
	 generic_field_name <"no_limit_stack",tree_function_decl,no_limit_stack> no_limit_stack;
	 generic_field_name <"disregard_inline_limits",tree_function_decl,disregard_inline_limits> disregard_inline_limits;
	 generic_field_name <"pure_flag",tree_function_decl,pure_flag> pure_flag;
	 generic_field_name <"looping_const_or_pure_flag",tree_function_decl,looping_const_or_pure_flag> looping_const_or_pure_flag;
	 generic_field_name <"has_debug_args_flag",tree_function_decl,has_debug_args_flag> has_debug_args_flag;
	 generic_field_name <"tm_clone_flag",tree_function_decl,tm_clone_flag> tm_clone_flag;
}; 
class CLS_583_tree_decl_common{ 
	 generic_class_name <"tree_decl_common",tree_decl_common> the_class_name;
	 generic_field_name <"common",tree_decl_common,common> common;
	 generic_field_name <"size",tree_decl_common,size> size;
	 generic_field_name <"mode",tree_decl_common,mode> mode;
	 generic_field_name <"nonlocal_flag",tree_decl_common,nonlocal_flag> nonlocal_flag;
	 generic_field_name <"virtual_flag",tree_decl_common,virtual_flag> virtual_flag;
	 generic_field_name <"ignored_flag",tree_decl_common,ignored_flag> ignored_flag;
	 generic_field_name <"abstract_flag",tree_decl_common,abstract_flag> abstract_flag;
	 generic_field_name <"artificial_flag",tree_decl_common,artificial_flag> artificial_flag;
	 generic_field_name <"preserve_flag",tree_decl_common,preserve_flag> preserve_flag;
	 generic_field_name <"debug_expr_is_from",tree_decl_common,debug_expr_is_from> debug_expr_is_from;
	 generic_field_name <"lang_flag_0",tree_decl_common,lang_flag_0> lang_flag_0;
	 generic_field_name <"lang_flag_1",tree_decl_common,lang_flag_1> lang_flag_1;
	 generic_field_name <"lang_flag_2",tree_decl_common,lang_flag_2> lang_flag_2;
	 generic_field_name <"lang_flag_3",tree_decl_common,lang_flag_3> lang_flag_3;
	 generic_field_name <"lang_flag_4",tree_decl_common,lang_flag_4> lang_flag_4;
	 generic_field_name <"lang_flag_5",tree_decl_common,lang_flag_5> lang_flag_5;
	 generic_field_name <"lang_flag_6",tree_decl_common,lang_flag_6> lang_flag_6;
	 generic_field_name <"lang_flag_7",tree_decl_common,lang_flag_7> lang_flag_7;
	 generic_field_name <"lang_flag_8",tree_decl_common,lang_flag_8> lang_flag_8;
	 generic_field_name <"decl_flag_0",tree_decl_common,decl_flag_0> decl_flag_0;
	 generic_field_name <"decl_flag_1",tree_decl_common,decl_flag_1> decl_flag_1;
	 generic_field_name <"decl_flag_2",tree_decl_common,decl_flag_2> decl_flag_2;
	 generic_field_name <"gimple_reg_flag",tree_decl_common,gimple_reg_flag> gimple_reg_flag;
	 generic_field_name <"decl_by_reference_flag",tree_decl_common,decl_by_reference_flag> decl_by_reference_flag;
	 generic_field_name <"decl_restricted_flag",tree_decl_common,decl_restricted_flag> decl_restricted_flag;
	 generic_field_name <"decl_read_flag",tree_decl_common,decl_read_flag> decl_read_flag;
	 generic_field_name <"decl_nonshareable_flag",tree_decl_common,decl_nonshareable_flag> decl_nonshareable_flag;
	 generic_field_name <"off_align",tree_decl_common,off_align> off_align;
	 generic_field_name <"align",tree_decl_common,align> align;
	 generic_field_name <"pt_uid",tree_decl_common,pt_uid> pt_uid;
	 generic_field_name <"size_unit",tree_decl_common,size_unit> size_unit;
	 generic_field_name <"initial",tree_decl_common,initial> initial;
	 generic_field_name <"attributes",tree_decl_common,attributes> attributes;
	 generic_field_name <"abstract_origin",tree_decl_common,abstract_origin> abstract_origin;
	 generic_field_name <"lang_specific",tree_decl_common,lang_specific> lang_specific;
}; 
class CLS_584_tree_translation_unit_decl{ 
	 generic_class_name <"tree_translation_unit_decl",tree_translation_unit_decl> the_class_name;
	 generic_field_name <"common",tree_translation_unit_decl,common> common;
	 generic_field_name <"language",tree_translation_unit_decl,language> language;
}; 
class CLS_585_tree_decl_non_common{ 
	 generic_class_name <"tree_decl_non_common",tree_decl_non_common> the_class_name;
	 generic_field_name <"common",tree_decl_non_common,common> common;
	 generic_field_name <"saved_tree",tree_decl_non_common,saved_tree> saved_tree;
	 generic_field_name <"arguments",tree_decl_non_common,arguments> arguments;
	 generic_field_name <"result",tree_decl_non_common,result> result;
	 generic_field_name <"vindex",tree_decl_non_common,vindex> vindex;
}; 
class CLS_586_tree_type_decl{ 
	 generic_class_name <"tree_type_decl",tree_type_decl> the_class_name;
	 generic_field_name <"common",tree_type_decl,common> common;
}; 
class CLS_587_tree_statement_list_node{ 
	 generic_class_name <"tree_statement_list_node",tree_statement_list_node> the_class_name;
}; 
class CLS_588_tree_statement_list_node{ 
	 generic_class_name <"tree_statement_list_node",tree_statement_list_node> the_class_name;
}; 
class CLS_589_tree_statement_list_node{ 
	 generic_class_name <"tree_statement_list_node",tree_statement_list_node> the_class_name;
	 generic_field_name <"prev",tree_statement_list_node,prev> prev;
	 generic_field_name <"next",tree_statement_list_node,next> next;
	 generic_field_name <"stmt",tree_statement_list_node,stmt> stmt;
}; 
class CLS_590_tree_typed{ 
	 generic_class_name <"tree_typed",tree_typed> the_class_name;
	 generic_field_name <"base",tree_typed,base> base;
	 generic_field_name <"type",tree_typed,type> type;
}; 
class CLS_591_tree_statement_list_node{ 
	 generic_class_name <"tree_statement_list_node",tree_statement_list_node> the_class_name;
	 generic_field_name <"prev",tree_statement_list_node,prev> prev;
	 generic_field_name <"next",tree_statement_list_node,next> next;
	 generic_field_name <"stmt",tree_statement_list_node,stmt> stmt;
}; 
class CLS_592_tree_statement_list_node{ 
	 generic_class_name <"tree_statement_list_node",tree_statement_list_node> the_class_name;
	 generic_field_name <"prev",tree_statement_list_node,prev> prev;
	 generic_field_name <"next",tree_statement_list_node,next> next;
	 generic_field_name <"stmt",tree_statement_list_node,stmt> stmt;
}; 
class CLS_593_tree_statement_list{ 
	 generic_class_name <"tree_statement_list",tree_statement_list> the_class_name;
	 generic_field_name <"typed",tree_statement_list,typed> typed;
	 generic_field_name <"head",tree_statement_list,head> head;
	 generic_field_name <"tail",tree_statement_list,tail> tail;
}; 
class CLS_594_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_595_cl_optimization{ 
	 generic_class_name <"cl_optimization",cl_optimization> the_class_name;
	 generic_field_name <"x_align_functions",cl_optimization,x_align_functions> x_align_functions;
	 generic_field_name <"x_align_jumps",cl_optimization,x_align_jumps> x_align_jumps;
	 generic_field_name <"x_align_labels",cl_optimization,x_align_labels> x_align_labels;
	 generic_field_name <"x_align_loops",cl_optimization,x_align_loops> x_align_loops;
	 generic_field_name <"x_flag_sched_stalled_insns",cl_optimization,x_flag_sched_stalled_insns> x_flag_sched_stalled_insns;
	 generic_field_name <"x_flag_sched_stalled_insns_dep",cl_optimization,x_flag_sched_stalled_insns_dep> x_flag_sched_stalled_insns_dep;
	 generic_field_name <"x_flag_fp_contract_mode",cl_optimization,x_flag_fp_contract_mode> x_flag_fp_contract_mode;
	 generic_field_name <"x_optimize",cl_optimization,x_optimize> x_optimize;
	 generic_field_name <"x_optimize_size",cl_optimization,x_optimize_size> x_optimize_size;
	 generic_field_name <"x_flag_asynchronous_unwind_tables",cl_optimization,x_flag_asynchronous_unwind_tables> x_flag_asynchronous_unwind_tables;
	 generic_field_name <"x_flag_branch_on_count_reg",cl_optimization,x_flag_branch_on_count_reg> x_flag_branch_on_count_reg;
	 generic_field_name <"x_flag_branch_probabilities",cl_optimization,x_flag_branch_probabilities> x_flag_branch_probabilities;
	 generic_field_name <"x_flag_branch_target_load_optimize",cl_optimization,x_flag_branch_target_load_optimize> x_flag_branch_target_load_optimize;
	 generic_field_name <"x_flag_branch_target_load_optimize2",cl_optimization,x_flag_branch_target_load_optimize2> x_flag_branch_target_load_optimize2;
	 generic_field_name <"x_flag_btr_bb_exclusive",cl_optimization,x_flag_btr_bb_exclusive> x_flag_btr_bb_exclusive;
	 generic_field_name <"x_flag_caller_saves",cl_optimization,x_flag_caller_saves> x_flag_caller_saves;
	 generic_field_name <"x_flag_combine_stack_adjustments",cl_optimization,x_flag_combine_stack_adjustments> x_flag_combine_stack_adjustments;
	 generic_field_name <"x_flag_no_common",cl_optimization,x_flag_no_common> x_flag_no_common;
	 generic_field_name <"x_flag_compare_elim_after_reload",cl_optimization,x_flag_compare_elim_after_reload> x_flag_compare_elim_after_reload;
	 generic_field_name <"x_flag_conserve_stack",cl_optimization,x_flag_conserve_stack> x_flag_conserve_stack;
	 generic_field_name <"x_flag_cprop_registers",cl_optimization,x_flag_cprop_registers> x_flag_cprop_registers;
	 generic_field_name <"x_flag_crossjumping",cl_optimization,x_flag_crossjumping> x_flag_crossjumping;
	 generic_field_name <"x_flag_cse_follow_jumps",cl_optimization,x_flag_cse_follow_jumps> x_flag_cse_follow_jumps;
	 generic_field_name <"x_flag_cx_fortran_rules",cl_optimization,x_flag_cx_fortran_rules> x_flag_cx_fortran_rules;
	 generic_field_name <"x_flag_cx_limited_range",cl_optimization,x_flag_cx_limited_range> x_flag_cx_limited_range;
	 generic_field_name <"x_flag_data_sections",cl_optimization,x_flag_data_sections> x_flag_data_sections;
	 generic_field_name <"x_flag_dce",cl_optimization,x_flag_dce> x_flag_dce;
	 generic_field_name <"x_flag_defer_pop",cl_optimization,x_flag_defer_pop> x_flag_defer_pop;
	 generic_field_name <"x_flag_delayed_branch",cl_optimization,x_flag_delayed_branch> x_flag_delayed_branch;
	 generic_field_name <"x_flag_delete_null_pointer_checks",cl_optimization,x_flag_delete_null_pointer_checks> x_flag_delete_null_pointer_checks;
	 generic_field_name <"x_flag_devirtualize",cl_optimization,x_flag_devirtualize> x_flag_devirtualize;
	 generic_field_name <"x_flag_dse",cl_optimization,x_flag_dse> x_flag_dse;
	 generic_field_name <"x_flag_early_inlining",cl_optimization,x_flag_early_inlining> x_flag_early_inlining;
	 generic_field_name <"x_flag_exceptions",cl_optimization,x_flag_exceptions> x_flag_exceptions;
	 generic_field_name <"x_flag_expensive_optimizations",cl_optimization,x_flag_expensive_optimizations> x_flag_expensive_optimizations;
	 generic_field_name <"x_flag_finite_math_only",cl_optimization,x_flag_finite_math_only> x_flag_finite_math_only;
	 generic_field_name <"x_flag_float_store",cl_optimization,x_flag_float_store> x_flag_float_store;
	 generic_field_name <"x_flag_forward_propagate",cl_optimization,x_flag_forward_propagate> x_flag_forward_propagate;
	 generic_field_name <"x_flag_gcse",cl_optimization,x_flag_gcse> x_flag_gcse;
	 generic_field_name <"x_flag_gcse_after_reload",cl_optimization,x_flag_gcse_after_reload> x_flag_gcse_after_reload;
	 generic_field_name <"x_flag_gcse_las",cl_optimization,x_flag_gcse_las> x_flag_gcse_las;
	 generic_field_name <"x_flag_gcse_lm",cl_optimization,x_flag_gcse_lm> x_flag_gcse_lm;
	 generic_field_name <"x_flag_gcse_sm",cl_optimization,x_flag_gcse_sm> x_flag_gcse_sm;
	 generic_field_name <"x_flag_graphite_identity",cl_optimization,x_flag_graphite_identity> x_flag_graphite_identity;
	 generic_field_name <"x_flag_guess_branch_prob",cl_optimization,x_flag_guess_branch_prob> x_flag_guess_branch_prob;
	 generic_field_name <"x_flag_if_conversion",cl_optimization,x_flag_if_conversion> x_flag_if_conversion;
	 generic_field_name <"x_flag_if_conversion2",cl_optimization,x_flag_if_conversion2> x_flag_if_conversion2;
	 generic_field_name <"x_flag_inline_atomics",cl_optimization,x_flag_inline_atomics> x_flag_inline_atomics;
	 generic_field_name <"x_flag_inline_functions",cl_optimization,x_flag_inline_functions> x_flag_inline_functions;
	 generic_field_name <"x_flag_inline_functions_called_once",cl_optimization,x_flag_inline_functions_called_once> x_flag_inline_functions_called_once;
	 generic_field_name <"x_flag_inline_small_functions",cl_optimization,x_flag_inline_small_functions> x_flag_inline_small_functions;
	 generic_field_name <"x_flag_ipa_cp",cl_optimization,x_flag_ipa_cp> x_flag_ipa_cp;
	 generic_field_name <"x_flag_ipa_cp_clone",cl_optimization,x_flag_ipa_cp_clone> x_flag_ipa_cp_clone;
	 generic_field_name <"x_flag_ipa_matrix_reorg",cl_optimization,x_flag_ipa_matrix_reorg> x_flag_ipa_matrix_reorg;
	 generic_field_name <"x_flag_ipa_profile",cl_optimization,x_flag_ipa_profile> x_flag_ipa_profile;
	 generic_field_name <"x_flag_ipa_pta",cl_optimization,x_flag_ipa_pta> x_flag_ipa_pta;
	 generic_field_name <"x_flag_ipa_pure_const",cl_optimization,x_flag_ipa_pure_const> x_flag_ipa_pure_const;
	 generic_field_name <"x_flag_ipa_reference",cl_optimization,x_flag_ipa_reference> x_flag_ipa_reference;
	 generic_field_name <"x_flag_ipa_sra",cl_optimization,x_flag_ipa_sra> x_flag_ipa_sra;
	 generic_field_name <"x_flag_ivopts",cl_optimization,x_flag_ivopts> x_flag_ivopts;
	 generic_field_name <"x_flag_jump_tables",cl_optimization,x_flag_jump_tables> x_flag_jump_tables;
	 generic_field_name <"x_flag_loop_block",cl_optimization,x_flag_loop_block> x_flag_loop_block;
	 generic_field_name <"x_flag_loop_flatten",cl_optimization,x_flag_loop_flatten> x_flag_loop_flatten;
	 generic_field_name <"x_flag_loop_interchange",cl_optimization,x_flag_loop_interchange> x_flag_loop_interchange;
	 generic_field_name <"x_flag_loop_parallelize_all",cl_optimization,x_flag_loop_parallelize_all> x_flag_loop_parallelize_all;
	 generic_field_name <"x_flag_loop_strip_mine",cl_optimization,x_flag_loop_strip_mine> x_flag_loop_strip_mine;
	 generic_field_name <"x_flag_errno_math",cl_optimization,x_flag_errno_math> x_flag_errno_math;
	 generic_field_name <"x_flag_merge_constants",cl_optimization,x_flag_merge_constants> x_flag_merge_constants;
	 generic_field_name <"x_flag_modulo_sched",cl_optimization,x_flag_modulo_sched> x_flag_modulo_sched;
	 generic_field_name <"x_flag_move_loop_invariants",cl_optimization,x_flag_move_loop_invariants> x_flag_move_loop_invariants;
	 generic_field_name <"x_flag_non_call_exceptions",cl_optimization,x_flag_non_call_exceptions> x_flag_non_call_exceptions;
	 generic_field_name <"x_flag_nothrow_opt",cl_optimization,x_flag_nothrow_opt> x_flag_nothrow_opt;
	 generic_field_name <"x_flag_omit_frame_pointer",cl_optimization,x_flag_omit_frame_pointer> x_flag_omit_frame_pointer;
	 generic_field_name <"x_flag_regmove",cl_optimization,x_flag_regmove> x_flag_regmove;
	 generic_field_name <"x_flag_optimize_sibling_calls",cl_optimization,x_flag_optimize_sibling_calls> x_flag_optimize_sibling_calls;
	 generic_field_name <"x_flag_optimize_strlen",cl_optimization,x_flag_optimize_strlen> x_flag_optimize_strlen;
	 generic_field_name <"x_flag_pack_struct",cl_optimization,x_flag_pack_struct> x_flag_pack_struct;
	 generic_field_name <"x_flag_peel_loops",cl_optimization,x_flag_peel_loops> x_flag_peel_loops;
	 generic_field_name <"x_flag_no_peephole",cl_optimization,x_flag_no_peephole> x_flag_no_peephole;
	 generic_field_name <"x_flag_peephole2",cl_optimization,x_flag_peephole2> x_flag_peephole2;
	 generic_field_name <"x_flag_predictive_commoning",cl_optimization,x_flag_predictive_commoning> x_flag_predictive_commoning;
	 generic_field_name <"x_flag_prefetch_loop_arrays",cl_optimization,x_flag_prefetch_loop_arrays> x_flag_prefetch_loop_arrays;
	 generic_field_name <"x_flag_pcc_struct_return",cl_optimization,x_flag_pcc_struct_return> x_flag_pcc_struct_return;
	 generic_field_name <"x_flag_rename_registers",cl_optimization,x_flag_rename_registers> x_flag_rename_registers;
	 generic_field_name <"x_flag_reorder_blocks",cl_optimization,x_flag_reorder_blocks> x_flag_reorder_blocks;
	 generic_field_name <"x_flag_reorder_blocks_and_partition",cl_optimization,x_flag_reorder_blocks_and_partition> x_flag_reorder_blocks_and_partition;
	 generic_field_name <"x_flag_reorder_functions",cl_optimization,x_flag_reorder_functions> x_flag_reorder_functions;
	 generic_field_name <"x_flag_rerun_cse_after_loop",cl_optimization,x_flag_rerun_cse_after_loop> x_flag_rerun_cse_after_loop;
	 generic_field_name <"x_flag_resched_modulo_sched",cl_optimization,x_flag_resched_modulo_sched> x_flag_resched_modulo_sched;
	 generic_field_name <"x_flag_rounding_math",cl_optimization,x_flag_rounding_math> x_flag_rounding_math;
	 generic_field_name <"x_flag_rtti",cl_optimization,x_flag_rtti> x_flag_rtti;
	 generic_field_name <"x_flag_sched_critical_path_heuristic",cl_optimization,x_flag_sched_critical_path_heuristic> x_flag_sched_critical_path_heuristic;
	 generic_field_name <"x_flag_sched_dep_count_heuristic",cl_optimization,x_flag_sched_dep_count_heuristic> x_flag_sched_dep_count_heuristic;
	 generic_field_name <"x_flag_sched_group_heuristic",cl_optimization,x_flag_sched_group_heuristic> x_flag_sched_group_heuristic;
	 generic_field_name <"x_flag_schedule_interblock",cl_optimization,x_flag_schedule_interblock> x_flag_schedule_interblock;
	 generic_field_name <"x_flag_sched_last_insn_heuristic",cl_optimization,x_flag_sched_last_insn_heuristic> x_flag_sched_last_insn_heuristic;
	 generic_field_name <"x_flag_sched_pressure",cl_optimization,x_flag_sched_pressure> x_flag_sched_pressure;
	 generic_field_name <"x_flag_sched_rank_heuristic",cl_optimization,x_flag_sched_rank_heuristic> x_flag_sched_rank_heuristic;
	 generic_field_name <"x_flag_schedule_speculative",cl_optimization,x_flag_schedule_speculative> x_flag_schedule_speculative;
	 generic_field_name <"x_flag_sched_spec_insn_heuristic",cl_optimization,x_flag_sched_spec_insn_heuristic> x_flag_sched_spec_insn_heuristic;
	 generic_field_name <"x_flag_schedule_speculative_load",cl_optimization,x_flag_schedule_speculative_load> x_flag_schedule_speculative_load;
	 generic_field_name <"x_flag_schedule_speculative_load_dangerous",cl_optimization,x_flag_schedule_speculative_load_dangerous> x_flag_schedule_speculative_load_dangerous;
	 generic_field_name <"x_flag_sched2_use_superblocks",cl_optimization,x_flag_sched2_use_superblocks> x_flag_sched2_use_superblocks;
	 generic_field_name <"x_flag_schedule_insns",cl_optimization,x_flag_schedule_insns> x_flag_schedule_insns;
	 generic_field_name <"x_flag_schedule_insns_after_reload",cl_optimization,x_flag_schedule_insns_after_reload> x_flag_schedule_insns_after_reload;
	 generic_field_name <"x_flag_section_anchors",cl_optimization,x_flag_section_anchors> x_flag_section_anchors;
	 generic_field_name <"x_flag_sel_sched_pipelining",cl_optimization,x_flag_sel_sched_pipelining> x_flag_sel_sched_pipelining;
	 generic_field_name <"x_flag_sel_sched_pipelining_outer_loops",cl_optimization,x_flag_sel_sched_pipelining_outer_loops> x_flag_sel_sched_pipelining_outer_loops;
	 generic_field_name <"x_flag_sel_sched_reschedule_pipelined",cl_optimization,x_flag_sel_sched_reschedule_pipelined> x_flag_sel_sched_reschedule_pipelined;
	 generic_field_name <"x_flag_selective_scheduling",cl_optimization,x_flag_selective_scheduling> x_flag_selective_scheduling;
	 generic_field_name <"x_flag_selective_scheduling2",cl_optimization,x_flag_selective_scheduling2> x_flag_selective_scheduling2;
	 generic_field_name <"x_flag_short_double",cl_optimization,x_flag_short_double> x_flag_short_double;
	 generic_field_name <"x_flag_short_enums",cl_optimization,x_flag_short_enums> x_flag_short_enums;
	 generic_field_name <"x_flag_short_wchar",cl_optimization,x_flag_short_wchar> x_flag_short_wchar;
	 generic_field_name <"x_flag_shrink_wrap",cl_optimization,x_flag_shrink_wrap> x_flag_shrink_wrap;
	 generic_field_name <"x_flag_signaling_nans",cl_optimization,x_flag_signaling_nans> x_flag_signaling_nans;
	 generic_field_name <"x_flag_signed_zeros",cl_optimization,x_flag_signed_zeros> x_flag_signed_zeros;
	 generic_field_name <"x_flag_single_precision_constant",cl_optimization,x_flag_single_precision_constant> x_flag_single_precision_constant;
	 generic_field_name <"x_flag_split_ivs_in_unroller",cl_optimization,x_flag_split_ivs_in_unroller> x_flag_split_ivs_in_unroller;
	 generic_field_name <"x_flag_split_wide_types",cl_optimization,x_flag_split_wide_types> x_flag_split_wide_types;
	 generic_field_name <"x_flag_strict_aliasing",cl_optimization,x_flag_strict_aliasing> x_flag_strict_aliasing;
	 generic_field_name <"x_flag_strict_enums",cl_optimization,x_flag_strict_enums> x_flag_strict_enums;
	 generic_field_name <"x_flag_thread_jumps",cl_optimization,x_flag_thread_jumps> x_flag_thread_jumps;
	 generic_field_name <"x_flag_threadsafe_statics",cl_optimization,x_flag_threadsafe_statics> x_flag_threadsafe_statics;
	 generic_field_name <"x_flag_toplevel_reorder",cl_optimization,x_flag_toplevel_reorder> x_flag_toplevel_reorder;
	 generic_field_name <"x_flag_trapping_math",cl_optimization,x_flag_trapping_math> x_flag_trapping_math;
	 generic_field_name <"x_flag_trapv",cl_optimization,x_flag_trapv> x_flag_trapv;
	 generic_field_name <"x_flag_tree_bit_ccp",cl_optimization,x_flag_tree_bit_ccp> x_flag_tree_bit_ccp;
	 generic_field_name <"x_flag_tree_builtin_call_dce",cl_optimization,x_flag_tree_builtin_call_dce> x_flag_tree_builtin_call_dce;
	 generic_field_name <"x_flag_tree_ccp",cl_optimization,x_flag_tree_ccp> x_flag_tree_ccp;
	 generic_field_name <"x_flag_tree_ch",cl_optimization,x_flag_tree_ch> x_flag_tree_ch;
	 generic_field_name <"x_flag_tree_copy_prop",cl_optimization,x_flag_tree_copy_prop> x_flag_tree_copy_prop;
	 generic_field_name <"x_flag_tree_copyrename",cl_optimization,x_flag_tree_copyrename> x_flag_tree_copyrename;
	 generic_field_name <"x_flag_tree_cselim",cl_optimization,x_flag_tree_cselim> x_flag_tree_cselim;
	 generic_field_name <"x_flag_tree_dce",cl_optimization,x_flag_tree_dce> x_flag_tree_dce;
	 generic_field_name <"x_flag_tree_dom",cl_optimization,x_flag_tree_dom> x_flag_tree_dom;
	 generic_field_name <"x_flag_tree_dse",cl_optimization,x_flag_tree_dse> x_flag_tree_dse;
	 generic_field_name <"x_flag_tree_forwprop",cl_optimization,x_flag_tree_forwprop> x_flag_tree_forwprop;
	 generic_field_name <"x_flag_tree_fre",cl_optimization,x_flag_tree_fre> x_flag_tree_fre;
	 generic_field_name <"x_flag_tree_loop_distribute_patterns",cl_optimization,x_flag_tree_loop_distribute_patterns> x_flag_tree_loop_distribute_patterns;
	 generic_field_name <"x_flag_tree_loop_distribution",cl_optimization,x_flag_tree_loop_distribution> x_flag_tree_loop_distribution;
	 generic_field_name <"x_flag_tree_loop_if_convert",cl_optimization,x_flag_tree_loop_if_convert> x_flag_tree_loop_if_convert;
	 generic_field_name <"x_flag_tree_loop_if_convert_stores",cl_optimization,x_flag_tree_loop_if_convert_stores> x_flag_tree_loop_if_convert_stores;
	 generic_field_name <"x_flag_tree_loop_im",cl_optimization,x_flag_tree_loop_im> x_flag_tree_loop_im;
	 generic_field_name <"x_flag_tree_loop_ivcanon",cl_optimization,x_flag_tree_loop_ivcanon> x_flag_tree_loop_ivcanon;
	 generic_field_name <"x_flag_tree_loop_optimize",cl_optimization,x_flag_tree_loop_optimize> x_flag_tree_loop_optimize;
	 generic_field_name <"x_flag_tree_live_range_split",cl_optimization,x_flag_tree_live_range_split> x_flag_tree_live_range_split;
	 generic_field_name <"x_flag_tree_partial_pre",cl_optimization,x_flag_tree_partial_pre> x_flag_tree_partial_pre;
	 generic_field_name <"x_flag_tree_phiprop",cl_optimization,x_flag_tree_phiprop> x_flag_tree_phiprop;
	 generic_field_name <"x_flag_tree_pre",cl_optimization,x_flag_tree_pre> x_flag_tree_pre;
	 generic_field_name <"x_flag_tree_pta",cl_optimization,x_flag_tree_pta> x_flag_tree_pta;
	 generic_field_name <"x_flag_tree_reassoc",cl_optimization,x_flag_tree_reassoc> x_flag_tree_reassoc;
	 generic_field_name <"x_flag_tree_scev_cprop",cl_optimization,x_flag_tree_scev_cprop> x_flag_tree_scev_cprop;
	 generic_field_name <"x_flag_tree_sink",cl_optimization,x_flag_tree_sink> x_flag_tree_sink;
	 generic_field_name <"x_flag_tree_slp_vectorize",cl_optimization,x_flag_tree_slp_vectorize> x_flag_tree_slp_vectorize;
	 generic_field_name <"x_flag_tree_sra",cl_optimization,x_flag_tree_sra> x_flag_tree_sra;
	 generic_field_name <"x_flag_tree_switch_conversion",cl_optimization,x_flag_tree_switch_conversion> x_flag_tree_switch_conversion;
	 generic_field_name <"x_flag_tree_tail_merge",cl_optimization,x_flag_tree_tail_merge> x_flag_tree_tail_merge;
	 generic_field_name <"x_flag_tree_ter",cl_optimization,x_flag_tree_ter> x_flag_tree_ter;
	 generic_field_name <"x_flag_tree_vect_loop_version",cl_optimization,x_flag_tree_vect_loop_version> x_flag_tree_vect_loop_version;
	 generic_field_name <"x_flag_tree_vectorize",cl_optimization,x_flag_tree_vectorize> x_flag_tree_vectorize;
	 generic_field_name <"x_flag_tree_vrp",cl_optimization,x_flag_tree_vrp> x_flag_tree_vrp;
	 generic_field_name <"x_flag_unit_at_a_time",cl_optimization,x_flag_unit_at_a_time> x_flag_unit_at_a_time;
	 generic_field_name <"x_flag_unroll_all_loops",cl_optimization,x_flag_unroll_all_loops> x_flag_unroll_all_loops;
	 generic_field_name <"x_flag_unroll_loops",cl_optimization,x_flag_unroll_loops> x_flag_unroll_loops;
	 generic_field_name <"x_flag_unsafe_loop_optimizations",cl_optimization,x_flag_unsafe_loop_optimizations> x_flag_unsafe_loop_optimizations;
	 generic_field_name <"x_flag_unsafe_math_optimizations",cl_optimization,x_flag_unsafe_math_optimizations> x_flag_unsafe_math_optimizations;
	 generic_field_name <"x_flag_unswitch_loops",cl_optimization,x_flag_unswitch_loops> x_flag_unswitch_loops;
	 generic_field_name <"x_flag_unwind_tables",cl_optimization,x_flag_unwind_tables> x_flag_unwind_tables;
	 generic_field_name <"x_flag_var_tracking",cl_optimization,x_flag_var_tracking> x_flag_var_tracking;
	 generic_field_name <"x_flag_var_tracking_assignments",cl_optimization,x_flag_var_tracking_assignments> x_flag_var_tracking_assignments;
	 generic_field_name <"x_flag_var_tracking_assignments_toggle",cl_optimization,x_flag_var_tracking_assignments_toggle> x_flag_var_tracking_assignments_toggle;
	 generic_field_name <"x_flag_var_tracking_uninit",cl_optimization,x_flag_var_tracking_uninit> x_flag_var_tracking_uninit;
	 generic_field_name <"x_flag_variable_expansion_in_unroller",cl_optimization,x_flag_variable_expansion_in_unroller> x_flag_variable_expansion_in_unroller;
	 generic_field_name <"x_flag_vect_cost_model",cl_optimization,x_flag_vect_cost_model> x_flag_vect_cost_model;
	 generic_field_name <"x_flag_value_profile_transformations",cl_optimization,x_flag_value_profile_transformations> x_flag_value_profile_transformations;
	 generic_field_name <"x_flag_web",cl_optimization,x_flag_web> x_flag_web;
	 generic_field_name <"x_flag_whole_program",cl_optimization,x_flag_whole_program> x_flag_whole_program;
	 generic_field_name <"x_flag_wrapv",cl_optimization,x_flag_wrapv> x_flag_wrapv;
}; 
class CLS_596_tree_optimization_option{ 
	 generic_class_name <"tree_optimization_option",tree_optimization_option> the_class_name;
	 generic_field_name <"common",tree_optimization_option,common> common;
	 generic_field_name <"opts",tree_optimization_option,opts> opts;
}; 
class CLS_597_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_598_cl_target_option{ 
	 generic_class_name <"cl_target_option",cl_target_option> the_class_name;
	 generic_field_name <"x_ix86_isa_flags_explicit",cl_target_option,x_ix86_isa_flags_explicit> x_ix86_isa_flags_explicit;
	 generic_field_name <"x_ix86_isa_flags",cl_target_option,x_ix86_isa_flags> x_ix86_isa_flags;
	 generic_field_name <"x_ix86_fpmath",cl_target_option,x_ix86_fpmath> x_ix86_fpmath;
	 generic_field_name <"ix86_target_flags_explicit",cl_target_option,ix86_target_flags_explicit> ix86_target_flags_explicit;
	 generic_field_name <"x_recip_mask_explicit",cl_target_option,x_recip_mask_explicit> x_recip_mask_explicit;
	 generic_field_name <"x_recip_mask",cl_target_option,x_recip_mask> x_recip_mask;
	 generic_field_name <"x_target_flags",cl_target_option,x_target_flags> x_target_flags;
	 generic_field_name <"arch",cl_target_option,arch> arch;
	 generic_field_name <"arch_specified",cl_target_option,arch_specified> arch_specified;
	 generic_field_name <"branch_cost",cl_target_option,branch_cost> branch_cost;
	 generic_field_name <"schedule",cl_target_option,schedule> schedule;
	 generic_field_name <"tune",cl_target_option,tune> tune;
	 generic_field_name <"tune_defaulted",cl_target_option,tune_defaulted> tune_defaulted;
}; 
class CLS_599_tree_target_option{ 
	 generic_class_name <"tree_target_option",tree_target_option> the_class_name;
	 generic_field_name <"common",tree_target_option,common> common;
	 generic_field_name <"opts",tree_target_option,opts> opts;
}; 
class CLS_600_tree_base{ 
	 generic_class_name <"tree_base",tree_base> the_class_name;
	 generic_field_name <"code",tree_base,code> code;
	 generic_field_name <"side_effects_flag",tree_base,side_effects_flag> side_effects_flag;
	 generic_field_name <"constant_flag",tree_base,constant_flag> constant_flag;
	 generic_field_name <"addressable_flag",tree_base,addressable_flag> addressable_flag;
	 generic_field_name <"volatile_flag",tree_base,volatile_flag> volatile_flag;
	 generic_field_name <"readonly_flag",tree_base,readonly_flag> readonly_flag;
	 generic_field_name <"unsigned_flag",tree_base,unsigned_flag> unsigned_flag;
	 generic_field_name <"asm_written_flag",tree_base,asm_written_flag> asm_written_flag;
	 generic_field_name <"nowarning_flag",tree_base,nowarning_flag> nowarning_flag;
	 generic_field_name <"used_flag",tree_base,used_flag> used_flag;
	 generic_field_name <"nothrow_flag",tree_base,nothrow_flag> nothrow_flag;
	 generic_field_name <"static_flag",tree_base,static_flag> static_flag;
	 generic_field_name <"public_flag",tree_base,public_flag> public_flag;
	 generic_field_name <"private_flag",tree_base,private_flag> private_flag;
	 generic_field_name <"protected_flag",tree_base,protected_flag> protected_flag;
	 generic_field_name <"deprecated_flag",tree_base,deprecated_flag> deprecated_flag;
	 generic_field_name <"saturating_flag",tree_base,saturating_flag> saturating_flag;
	 generic_field_name <"default_def_flag",tree_base,default_def_flag> default_def_flag;
	 generic_field_name <"lang_flag_0",tree_base,lang_flag_0> lang_flag_0;
	 generic_field_name <"lang_flag_1",tree_base,lang_flag_1> lang_flag_1;
	 generic_field_name <"lang_flag_2",tree_base,lang_flag_2> lang_flag_2;
	 generic_field_name <"lang_flag_3",tree_base,lang_flag_3> lang_flag_3;
	 generic_field_name <"lang_flag_4",tree_base,lang_flag_4> lang_flag_4;
	 generic_field_name <"lang_flag_5",tree_base,lang_flag_5> lang_flag_5;
	 generic_field_name <"lang_flag_6",tree_base,lang_flag_6> lang_flag_6;
	 generic_field_name <"visited",tree_base,visited> visited;
	 generic_field_name <"packed_flag",tree_base,packed_flag> packed_flag;
	 generic_field_name <"user_align",tree_base,user_align> user_align;
	 generic_field_name <"nameless_flag",tree_base,nameless_flag> nameless_flag;
	 generic_field_name <"spare",tree_base,spare> spare;
	 generic_field_name <"address_space",tree_base,address_space> address_space;
}; 
class CLS_601_tree_typed{ 
	 generic_class_name <"tree_typed",tree_typed> the_class_name;
	 generic_field_name <"base",tree_typed,base> base;
	 generic_field_name <"type",tree_typed,type> type;
}; 
class CLS_602_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_603_tree_int_cst{ 
	 generic_class_name <"tree_int_cst",tree_int_cst> the_class_name;
	 generic_field_name <"typed",tree_int_cst,typed> typed;
	 generic_field_name <"int_cst",tree_int_cst,int_cst> int_cst;
}; 
class CLS_604_tree_real_cst{ 
	 generic_class_name <"tree_real_cst",tree_real_cst> the_class_name;
	 generic_field_name <"typed",tree_real_cst,typed> typed;
	 generic_field_name <"real_cst_ptr",tree_real_cst,real_cst_ptr> real_cst_ptr;
}; 
class CLS_605_tree_fixed_cst{ 
	 generic_class_name <"tree_fixed_cst",tree_fixed_cst> the_class_name;
	 generic_field_name <"typed",tree_fixed_cst,typed> typed;
	 generic_field_name <"fixed_cst_ptr",tree_fixed_cst,fixed_cst_ptr> fixed_cst_ptr;
}; 
class CLS_606_tree_vector{ 
	 generic_class_name <"tree_vector",tree_vector> the_class_name;
	 generic_field_name <"typed",tree_vector,typed> typed;
	 generic_field_name <"elements",tree_vector,elements> elements;
}; 
class CLS_607_tree_string{ 
	 generic_class_name <"tree_string",tree_string> the_class_name;
	 generic_field_name <"typed",tree_string,typed> typed;
	 generic_field_name <"length",tree_string,length> length;
	 generic_field_name <"str",tree_string,str> str;
}; 
class CLS_608_tree_complex{ 
	 generic_class_name <"tree_complex",tree_complex> the_class_name;
	 generic_field_name <"typed",tree_complex,typed> typed;
	 generic_field_name <"real",tree_complex,real> real;
	 generic_field_name <"imag",tree_complex,imag> imag;
}; 
class CLS_609_tree_identifier{ 
	 generic_class_name <"tree_identifier",tree_identifier> the_class_name;
	 generic_field_name <"common",tree_identifier,common> common;
	 generic_field_name <"id",tree_identifier,id> id;
}; 
class CLS_610_tree_decl_minimal{ 
	 generic_class_name <"tree_decl_minimal",tree_decl_minimal> the_class_name;
	 generic_field_name <"common",tree_decl_minimal,common> common;
	 generic_field_name <"locus",tree_decl_minimal,locus> locus;
	 generic_field_name <"uid",tree_decl_minimal,uid> uid;
	 generic_field_name <"name",tree_decl_minimal,name> name;
	 generic_field_name <"context",tree_decl_minimal,context> context;
}; 
class CLS_611_tree_decl_common{ 
	 generic_class_name <"tree_decl_common",tree_decl_common> the_class_name;
	 generic_field_name <"common",tree_decl_common,common> common;
	 generic_field_name <"size",tree_decl_common,size> size;
	 generic_field_name <"mode",tree_decl_common,mode> mode;
	 generic_field_name <"nonlocal_flag",tree_decl_common,nonlocal_flag> nonlocal_flag;
	 generic_field_name <"virtual_flag",tree_decl_common,virtual_flag> virtual_flag;
	 generic_field_name <"ignored_flag",tree_decl_common,ignored_flag> ignored_flag;
	 generic_field_name <"abstract_flag",tree_decl_common,abstract_flag> abstract_flag;
	 generic_field_name <"artificial_flag",tree_decl_common,artificial_flag> artificial_flag;
	 generic_field_name <"preserve_flag",tree_decl_common,preserve_flag> preserve_flag;
	 generic_field_name <"debug_expr_is_from",tree_decl_common,debug_expr_is_from> debug_expr_is_from;
	 generic_field_name <"lang_flag_0",tree_decl_common,lang_flag_0> lang_flag_0;
	 generic_field_name <"lang_flag_1",tree_decl_common,lang_flag_1> lang_flag_1;
	 generic_field_name <"lang_flag_2",tree_decl_common,lang_flag_2> lang_flag_2;
	 generic_field_name <"lang_flag_3",tree_decl_common,lang_flag_3> lang_flag_3;
	 generic_field_name <"lang_flag_4",tree_decl_common,lang_flag_4> lang_flag_4;
	 generic_field_name <"lang_flag_5",tree_decl_common,lang_flag_5> lang_flag_5;
	 generic_field_name <"lang_flag_6",tree_decl_common,lang_flag_6> lang_flag_6;
	 generic_field_name <"lang_flag_7",tree_decl_common,lang_flag_7> lang_flag_7;
	 generic_field_name <"lang_flag_8",tree_decl_common,lang_flag_8> lang_flag_8;
	 generic_field_name <"decl_flag_0",tree_decl_common,decl_flag_0> decl_flag_0;
	 generic_field_name <"decl_flag_1",tree_decl_common,decl_flag_1> decl_flag_1;
	 generic_field_name <"decl_flag_2",tree_decl_common,decl_flag_2> decl_flag_2;
	 generic_field_name <"gimple_reg_flag",tree_decl_common,gimple_reg_flag> gimple_reg_flag;
	 generic_field_name <"decl_by_reference_flag",tree_decl_common,decl_by_reference_flag> decl_by_reference_flag;
	 generic_field_name <"decl_restricted_flag",tree_decl_common,decl_restricted_flag> decl_restricted_flag;
	 generic_field_name <"decl_read_flag",tree_decl_common,decl_read_flag> decl_read_flag;
	 generic_field_name <"decl_nonshareable_flag",tree_decl_common,decl_nonshareable_flag> decl_nonshareable_flag;
	 generic_field_name <"off_align",tree_decl_common,off_align> off_align;
	 generic_field_name <"align",tree_decl_common,align> align;
	 generic_field_name <"pt_uid",tree_decl_common,pt_uid> pt_uid;
	 generic_field_name <"size_unit",tree_decl_common,size_unit> size_unit;
	 generic_field_name <"initial",tree_decl_common,initial> initial;
	 generic_field_name <"attributes",tree_decl_common,attributes> attributes;
	 generic_field_name <"abstract_origin",tree_decl_common,abstract_origin> abstract_origin;
	 generic_field_name <"lang_specific",tree_decl_common,lang_specific> lang_specific;
}; 
class CLS_612_tree_decl_with_rtl{ 
	 generic_class_name <"tree_decl_with_rtl",tree_decl_with_rtl> the_class_name;
	 generic_field_name <"common",tree_decl_with_rtl,common> common;
	 generic_field_name <"rtl",tree_decl_with_rtl,rtl> rtl;
}; 
class CLS_613_tree_decl_non_common{ 
	 generic_class_name <"tree_decl_non_common",tree_decl_non_common> the_class_name;
	 generic_field_name <"common",tree_decl_non_common,common> common;
	 generic_field_name <"saved_tree",tree_decl_non_common,saved_tree> saved_tree;
	 generic_field_name <"arguments",tree_decl_non_common,arguments> arguments;
	 generic_field_name <"result",tree_decl_non_common,result> result;
	 generic_field_name <"vindex",tree_decl_non_common,vindex> vindex;
}; 
class CLS_614_tree_parm_decl{ 
	 generic_class_name <"tree_parm_decl",tree_parm_decl> the_class_name;
	 generic_field_name <"common",tree_parm_decl,common> common;
	 generic_field_name <"incoming_rtl",tree_parm_decl,incoming_rtl> incoming_rtl;
	 generic_field_name <"ann",tree_parm_decl,ann> ann;
}; 
class CLS_615_tree_decl_with_vis{ 
	 generic_class_name <"tree_decl_with_vis",tree_decl_with_vis> the_class_name;
	 generic_field_name <"common",tree_decl_with_vis,common> common;
	 generic_field_name <"assembler_name",tree_decl_with_vis,assembler_name> assembler_name;
	 generic_field_name <"section_name",tree_decl_with_vis,section_name> section_name;
	 generic_field_name <"comdat_group",tree_decl_with_vis,comdat_group> comdat_group;
	 generic_field_name <"defer_output",tree_decl_with_vis,defer_output> defer_output;
	 generic_field_name <"hard_register",tree_decl_with_vis,hard_register> hard_register;
	 generic_field_name <"thread_local",tree_decl_with_vis,thread_local> thread_local;
	 generic_field_name <"common_flag",tree_decl_with_vis,common_flag> common_flag;
	 generic_field_name <"in_text_section",tree_decl_with_vis,in_text_section> in_text_section;
	 generic_field_name <"in_constant_pool",tree_decl_with_vis,in_constant_pool> in_constant_pool;
	 generic_field_name <"dllimport_flag",tree_decl_with_vis,dllimport_flag> dllimport_flag;
	 generic_field_name <"weak_flag",tree_decl_with_vis,weak_flag> weak_flag;
	 generic_field_name <"seen_in_bind_expr",tree_decl_with_vis,seen_in_bind_expr> seen_in_bind_expr;
	 generic_field_name <"comdat_flag",tree_decl_with_vis,comdat_flag> comdat_flag;
	 generic_field_name <"visibility",tree_decl_with_vis,visibility> visibility;
	 generic_field_name <"visibility_specified",tree_decl_with_vis,visibility_specified> visibility_specified;
	 generic_field_name <"tls_model",tree_decl_with_vis,tls_model> tls_model;
	 generic_field_name <"init_priority_p",tree_decl_with_vis,init_priority_p> init_priority_p;
	 generic_field_name <"shadowed_for_var_p",tree_decl_with_vis,shadowed_for_var_p> shadowed_for_var_p;
	 generic_field_name <"implicit_section_name_p",tree_decl_with_vis,implicit_section_name_p> implicit_section_name_p;
}; 
class CLS_616_tree_var_decl{ 
	 generic_class_name <"tree_var_decl",tree_var_decl> the_class_name;
	 generic_field_name <"common",tree_var_decl,common> common;
	 generic_field_name <"ann",tree_var_decl,ann> ann;
}; 
class CLS_617_tree_field_decl{ 
	 generic_class_name <"tree_field_decl",tree_field_decl> the_class_name;
	 generic_field_name <"common",tree_field_decl,common> common;
	 generic_field_name <"offset",tree_field_decl,offset> offset;
	 generic_field_name <"bit_field_type",tree_field_decl,bit_field_type> bit_field_type;
	 generic_field_name <"qualifier",tree_field_decl,qualifier> qualifier;
	 generic_field_name <"bit_offset",tree_field_decl,bit_offset> bit_offset;
	 generic_field_name <"fcontext",tree_field_decl,fcontext> fcontext;
}; 
class CLS_618_tree_label_decl{ 
	 generic_class_name <"tree_label_decl",tree_label_decl> the_class_name;
	 generic_field_name <"common",tree_label_decl,common> common;
	 generic_field_name <"label_decl_uid",tree_label_decl,label_decl_uid> label_decl_uid;
	 generic_field_name <"eh_landing_pad_nr",tree_label_decl,eh_landing_pad_nr> eh_landing_pad_nr;
}; 
class CLS_619_tree_result_decl{ 
	 generic_class_name <"tree_result_decl",tree_result_decl> the_class_name;
	 generic_field_name <"common",tree_result_decl,common> common;
	 generic_field_name <"ann",tree_result_decl,ann> ann;
}; 
class CLS_620_tree_const_decl{ 
	 generic_class_name <"tree_const_decl",tree_const_decl> the_class_name;
	 generic_field_name <"common",tree_const_decl,common> common;
}; 
class CLS_621_tree_type_decl{ 
	 generic_class_name <"tree_type_decl",tree_type_decl> the_class_name;
	 generic_field_name <"common",tree_type_decl,common> common;
}; 
class CLS_622_tree_function_decl{ 
	 generic_class_name <"tree_function_decl",tree_function_decl> the_class_name;
	 generic_field_name <"common",tree_function_decl,common> common;
	 generic_field_name <"f",tree_function_decl,f> f;
	 generic_field_name <"personality",tree_function_decl,personality> personality;
	 generic_field_name <"function_specific_target",tree_function_decl,function_specific_target> function_specific_target;
	 generic_field_name <"function_specific_optimization",tree_function_decl,function_specific_optimization> function_specific_optimization;
	 generic_field_name <"function_code",tree_function_decl,function_code> function_code;
	 generic_field_name <"built_in_class",tree_function_decl,built_in_class> built_in_class;
	 generic_field_name <"static_ctor_flag",tree_function_decl,static_ctor_flag> static_ctor_flag;
	 generic_field_name <"static_dtor_flag",tree_function_decl,static_dtor_flag> static_dtor_flag;
	 generic_field_name <"uninlinable",tree_function_decl,uninlinable> uninlinable;
	 generic_field_name <"possibly_inlined",tree_function_decl,possibly_inlined> possibly_inlined;
	 generic_field_name <"novops_flag",tree_function_decl,novops_flag> novops_flag;
	 generic_field_name <"returns_twice_flag",tree_function_decl,returns_twice_flag> returns_twice_flag;
	 generic_field_name <"malloc_flag",tree_function_decl,malloc_flag> malloc_flag;
	 generic_field_name <"operator_new_flag",tree_function_decl,operator_new_flag> operator_new_flag;
	 generic_field_name <"declared_inline_flag",tree_function_decl,declared_inline_flag> declared_inline_flag;
	 generic_field_name <"regdecl_flag",tree_function_decl,regdecl_flag> regdecl_flag;
	 generic_field_name <"no_inline_warning_flag",tree_function_decl,no_inline_warning_flag> no_inline_warning_flag;
	 generic_field_name <"no_instrument_function_entry_exit",tree_function_decl,no_instrument_function_entry_exit> no_instrument_function_entry_exit;
	 generic_field_name <"no_limit_stack",tree_function_decl,no_limit_stack> no_limit_stack;
	 generic_field_name <"disregard_inline_limits",tree_function_decl,disregard_inline_limits> disregard_inline_limits;
	 generic_field_name <"pure_flag",tree_function_decl,pure_flag> pure_flag;
	 generic_field_name <"looping_const_or_pure_flag",tree_function_decl,looping_const_or_pure_flag> looping_const_or_pure_flag;
	 generic_field_name <"has_debug_args_flag",tree_function_decl,has_debug_args_flag> has_debug_args_flag;
	 generic_field_name <"tm_clone_flag",tree_function_decl,tm_clone_flag> tm_clone_flag;
}; 
class CLS_623_tree_translation_unit_decl{ 
	 generic_class_name <"tree_translation_unit_decl",tree_translation_unit_decl> the_class_name;
	 generic_field_name <"common",tree_translation_unit_decl,common> common;
	 generic_field_name <"language",tree_translation_unit_decl,language> language;
}; 
class CLS_624_tree_type_common{ 
	 generic_class_name <"tree_type_common",tree_type_common> the_class_name;
	 generic_field_name <"common",tree_type_common,common> common;
	 generic_field_name <"size",tree_type_common,size> size;
	 generic_field_name <"size_unit",tree_type_common,size_unit> size_unit;
	 generic_field_name <"attributes",tree_type_common,attributes> attributes;
	 generic_field_name <"uid",tree_type_common,uid> uid;
	 generic_field_name <"precision",tree_type_common,precision> precision;
	 generic_field_name <"no_force_blk_flag",tree_type_common,no_force_blk_flag> no_force_blk_flag;
	 generic_field_name <"needs_constructing_flag",tree_type_common,needs_constructing_flag> needs_constructing_flag;
	 generic_field_name <"transparent_aggr_flag",tree_type_common,transparent_aggr_flag> transparent_aggr_flag;
	 generic_field_name <"restrict_flag",tree_type_common,restrict_flag> restrict_flag;
	 generic_field_name <"contains_placeholder_bits",tree_type_common,contains_placeholder_bits> contains_placeholder_bits;
	 generic_field_name <"mode",tree_type_common,mode> mode;
	 generic_field_name <"string_flag",tree_type_common,string_flag> string_flag;
	 generic_field_name <"lang_flag_0",tree_type_common,lang_flag_0> lang_flag_0;
	 generic_field_name <"lang_flag_1",tree_type_common,lang_flag_1> lang_flag_1;
	 generic_field_name <"lang_flag_2",tree_type_common,lang_flag_2> lang_flag_2;
	 generic_field_name <"lang_flag_3",tree_type_common,lang_flag_3> lang_flag_3;
	 generic_field_name <"lang_flag_4",tree_type_common,lang_flag_4> lang_flag_4;
	 generic_field_name <"lang_flag_5",tree_type_common,lang_flag_5> lang_flag_5;
	 generic_field_name <"lang_flag_6",tree_type_common,lang_flag_6> lang_flag_6;
	 generic_field_name <"align",tree_type_common,align> align;
	 generic_field_name <"alias_set",tree_type_common,alias_set> alias_set;
	 generic_field_name <"pointer_to",tree_type_common,pointer_to> pointer_to;
	 generic_field_name <"reference_to",tree_type_common,reference_to> reference_to;
	 generic_field_name <"symtab",tree_type_common,symtab> symtab;
	 generic_field_name <"name",tree_type_common,name> name;
	 generic_field_name <"next_variant",tree_type_common,next_variant> next_variant;
	 generic_field_name <"main_variant",tree_type_common,main_variant> main_variant;
	 generic_field_name <"context",tree_type_common,context> context;
	 generic_field_name <"canonical",tree_type_common,canonical> canonical;
}; 
class CLS_625_tree_type_with_lang_specific{ 
	 generic_class_name <"tree_type_with_lang_specific",tree_type_with_lang_specific> the_class_name;
	 generic_field_name <"common",tree_type_with_lang_specific,common> common;
	 generic_field_name <"lang_specific",tree_type_with_lang_specific,lang_specific> lang_specific;
}; 
class CLS_626_tree_type_non_common{ 
	 generic_class_name <"tree_type_non_common",tree_type_non_common> the_class_name;
	 generic_field_name <"with_lang_specific",tree_type_non_common,with_lang_specific> with_lang_specific;
	 generic_field_name <"values",tree_type_non_common,values> values;
	 generic_field_name <"minval",tree_type_non_common,minval> minval;
	 generic_field_name <"maxval",tree_type_non_common,maxval> maxval;
	 generic_field_name <"binfo",tree_type_non_common,binfo> binfo;
}; 
class CLS_627_tree_list{ 
	 generic_class_name <"tree_list",tree_list> the_class_name;
	 generic_field_name <"common",tree_list,common> common;
	 generic_field_name <"purpose",tree_list,purpose> purpose;
	 generic_field_name <"value",tree_list,value> value;
}; 
class CLS_628_tree_vec{ 
	 generic_class_name <"tree_vec",tree_vec> the_class_name;
	 generic_field_name <"common",tree_vec,common> common;
	 generic_field_name <"length",tree_vec,length> length;
	 generic_field_name <"a",tree_vec,a> a;
}; 
class CLS_629_tree_exp{ 
	 generic_class_name <"tree_exp",tree_exp> the_class_name;
	 generic_field_name <"typed",tree_exp,typed> typed;
	 generic_field_name <"locus",tree_exp,locus> locus;
	 generic_field_name <"block",tree_exp,block> block;
	 generic_field_name <"operands",tree_exp,operands> operands;
}; 
class CLS_630_tree_ssa_name{ 
	 generic_class_name <"tree_ssa_name",tree_ssa_name> the_class_name;
	 generic_field_name <"typed",tree_ssa_name,typed> typed;
	 generic_field_name <"var",tree_ssa_name,var> var;
	 generic_field_name <"def_stmt",tree_ssa_name,def_stmt> def_stmt;
	 generic_field_name <"version",tree_ssa_name,version> version;
	 generic_field_name <"ptr_info",tree_ssa_name,ptr_info> ptr_info;
	 generic_field_name <"imm_uses",tree_ssa_name,imm_uses> imm_uses;
}; 
class CLS_631_tree_block{ 
	 generic_class_name <"tree_block",tree_block> the_class_name;
	 generic_field_name <"base",tree_block,base> base;
	 generic_field_name <"chain",tree_block,chain> chain;
	 generic_field_name <"abstract_flag",tree_block,abstract_flag> abstract_flag;
	 generic_field_name <"block_num",tree_block,block_num> block_num;
	 generic_field_name <"locus",tree_block,locus> locus;
	 generic_field_name <"vars",tree_block,vars> vars;
	 generic_field_name <"nonlocalized_vars",tree_block,nonlocalized_vars> nonlocalized_vars;
	 generic_field_name <"subblocks",tree_block,subblocks> subblocks;
	 generic_field_name <"supercontext",tree_block,supercontext> supercontext;
	 generic_field_name <"abstract_origin",tree_block,abstract_origin> abstract_origin;
	 generic_field_name <"fragment_origin",tree_block,fragment_origin> fragment_origin;
	 generic_field_name <"fragment_chain",tree_block,fragment_chain> fragment_chain;
}; 
class CLS_632_tree_binfo{ 
	 generic_class_name <"tree_binfo",tree_binfo> the_class_name;
	 generic_field_name <"common",tree_binfo,common> common;
	 generic_field_name <"offset",tree_binfo,offset> offset;
	 generic_field_name <"vtable",tree_binfo,vtable> vtable;
	 generic_field_name <"virtuals",tree_binfo,virtuals> virtuals;
	 generic_field_name <"vptr_field",tree_binfo,vptr_field> vptr_field;
	 generic_field_name <"base_accesses",tree_binfo,base_accesses> base_accesses;
	 generic_field_name <"inheritance",tree_binfo,inheritance> inheritance;
	 generic_field_name <"vtt_subvtt",tree_binfo,vtt_subvtt> vtt_subvtt;
	 generic_field_name <"vtt_vptr",tree_binfo,vtt_vptr> vtt_vptr;
	 generic_field_name <"base_binfos",tree_binfo,base_binfos> base_binfos;
}; 
class CLS_633_tree_statement_list{ 
	 generic_class_name <"tree_statement_list",tree_statement_list> the_class_name;
	 generic_field_name <"typed",tree_statement_list,typed> typed;
	 generic_field_name <"head",tree_statement_list,head> head;
	 generic_field_name <"tail",tree_statement_list,tail> tail;
}; 
class CLS_634_tree_constructor{ 
	 generic_class_name <"tree_constructor",tree_constructor> the_class_name;
	 generic_field_name <"typed",tree_constructor,typed> typed;
	 generic_field_name <"elts",tree_constructor,elts> elts;
}; 
class CLS_635_tree_omp_clause{ 
	 generic_class_name <"tree_omp_clause",tree_omp_clause> the_class_name;
	 generic_field_name <"common",tree_omp_clause,common> common;
	 generic_field_name <"locus",tree_omp_clause,locus> locus;
	 generic_field_name <"code",tree_omp_clause,code> code;
	 generic_field_name <"subcode",tree_omp_clause,subcode> subcode;
	 generic_field_name <"gimple_reduction_init",tree_omp_clause,gimple_reduction_init> gimple_reduction_init;
	 generic_field_name <"gimple_reduction_merge",tree_omp_clause,gimple_reduction_merge> gimple_reduction_merge;
	 generic_field_name <"ops",tree_omp_clause,ops> ops;
}; 
class CLS_636_tree_optimization_option{ 
	 generic_class_name <"tree_optimization_option",tree_optimization_option> the_class_name;
	 generic_field_name <"common",tree_optimization_option,common> common;
	 generic_field_name <"opts",tree_optimization_option,opts> opts;
}; 
class CLS_637_tree_target_option{ 
	 generic_class_name <"tree_target_option",tree_target_option> the_class_name;
	 generic_field_name <"common",tree_target_option,common> common;
	 generic_field_name <"opts",tree_target_option,opts> opts;
}; 
class CLS_638_attribute_spec{ 
	 generic_class_name <"attribute_spec",attribute_spec> the_class_name;
	 generic_field_name <"name",attribute_spec,name> name;
	 generic_field_name <"min_length",attribute_spec,min_length> min_length;
	 generic_field_name <"max_length",attribute_spec,max_length> max_length;
	 generic_field_name <"decl_required",attribute_spec,decl_required> decl_required;
	 generic_field_name <"type_required",attribute_spec,type_required> type_required;
	 generic_field_name <"function_type_required",attribute_spec,function_type_required> function_type_required;
	 generic_field_name <"handler",attribute_spec,handler> handler;
	 generic_field_name <"affects_type_identity",attribute_spec,affects_type_identity> affects_type_identity;
}; 
class CLS_639_record_layout_info_s{ 
	 generic_class_name <"record_layout_info_s",record_layout_info_s> the_class_name;
	 generic_field_name <"t",record_layout_info_s,t> t;
	 generic_field_name <"offset",record_layout_info_s,offset> offset;
	 generic_field_name <"offset_align",record_layout_info_s,offset_align> offset_align;
	 generic_field_name <"bitpos",record_layout_info_s,bitpos> bitpos;
	 generic_field_name <"record_align",record_layout_info_s,record_align> record_align;
	 generic_field_name <"unpacked_align",record_layout_info_s,unpacked_align> unpacked_align;
	 generic_field_name <"prev_field",record_layout_info_s,prev_field> prev_field;
	 generic_field_name <"pending_statics",record_layout_info_s,pending_statics> pending_statics;
	 generic_field_name <"remaining_in_alignment",record_layout_info_s,remaining_in_alignment> remaining_in_alignment;
	 generic_field_name <"packed_maybe_necessary",record_layout_info_s,packed_maybe_necessary> packed_maybe_necessary;
}; 
class CLS_640_attribute_spec{ 
	 generic_class_name <"attribute_spec",attribute_spec> the_class_name;
	 generic_field_name <"name",attribute_spec,name> name;
	 generic_field_name <"min_length",attribute_spec,min_length> min_length;
	 generic_field_name <"max_length",attribute_spec,max_length> max_length;
	 generic_field_name <"decl_required",attribute_spec,decl_required> decl_required;
	 generic_field_name <"type_required",attribute_spec,type_required> type_required;
	 generic_field_name <"function_type_required",attribute_spec,function_type_required> function_type_required;
	 generic_field_name <"handler",attribute_spec,handler> handler;
	 generic_field_name <"affects_type_identity",attribute_spec,affects_type_identity> affects_type_identity;
}; 
class CLS_641_pointer_set_t{ 
	 generic_class_name <"pointer_set_t",pointer_set_t> the_class_name;
}; 
class CLS_642_pointer_set_t{ 
	 generic_class_name <"pointer_set_t",pointer_set_t> the_class_name;
}; 
class CLS_643_pointer_set_t{ 
	 generic_class_name <"pointer_set_t",pointer_set_t> the_class_name;
}; 
class CLS_644_pointer_set_t{ 
	 generic_class_name <"pointer_set_t",pointer_set_t> the_class_name;
}; 
class CLS_645_tree_map_base{ 
	 generic_class_name <"tree_map_base",tree_map_base> the_class_name;
	 generic_field_name <"from",tree_map_base,from> from;
}; 
class CLS_646_tree_map_base{ 
	 generic_class_name <"tree_map_base",tree_map_base> the_class_name;
	 generic_field_name <"from",tree_map_base,from> from;
}; 
class CLS_647_tree_map{ 
	 generic_class_name <"tree_map",tree_map> the_class_name;
	 generic_field_name <"base",tree_map,base> base;
	 generic_field_name <"hash",tree_map,hash> hash;
	 generic_field_name <"to",tree_map,to> to;
}; 
class CLS_648_tree_map_base{ 
	 generic_class_name <"tree_map_base",tree_map_base> the_class_name;
	 generic_field_name <"from",tree_map_base,from> from;
}; 
class CLS_649_tree_decl_map{ 
	 generic_class_name <"tree_decl_map",tree_decl_map> the_class_name;
	 generic_field_name <"base",tree_decl_map,base> base;
	 generic_field_name <"to",tree_decl_map,to> to;
}; 
class CLS_650_tree_map_base{ 
	 generic_class_name <"tree_map_base",tree_map_base> the_class_name;
	 generic_field_name <"from",tree_map_base,from> from;
}; 
class CLS_651_tree_int_map{ 
	 generic_class_name <"tree_int_map",tree_int_map> the_class_name;
	 generic_field_name <"base",tree_int_map,base> base;
	 generic_field_name <"to",tree_int_map,to> to;
}; 
class CLS_652_tree_map_base{ 
	 generic_class_name <"tree_map_base",tree_map_base> the_class_name;
	 generic_field_name <"from",tree_map_base,from> from;
}; 
class CLS_653_tree_priority_map{ 
	 generic_class_name <"tree_priority_map",tree_priority_map> the_class_name;
	 generic_field_name <"base",tree_priority_map,base> base;
	 generic_field_name <"init",tree_priority_map,init> init;
	 generic_field_name <"fini",tree_priority_map,fini> fini;
}; 
class CLS_654_tree_map_base{ 
	 generic_class_name <"tree_map_base",tree_map_base> the_class_name;
	 generic_field_name <"from",tree_map_base,from> from;
}; 
class CLS_655_tree_vec_map{ 
	 generic_class_name <"tree_vec_map",tree_vec_map> the_class_name;
	 generic_field_name <"base",tree_vec_map,base> base;
	 generic_field_name <"to",tree_vec_map,to> to;
}; 
class CLS_656_call_expr_arg_iterator_d{ 
	 generic_class_name <"call_expr_arg_iterator_d",call_expr_arg_iterator_d> the_class_name;
	 generic_field_name <"t",call_expr_arg_iterator_d,t> t;
	 generic_field_name <"n",call_expr_arg_iterator_d,n> n;
	 generic_field_name <"i",call_expr_arg_iterator_d,i> i;
}; 
class CLS_657_const_call_expr_arg_iterator_d{ 
	 generic_class_name <"const_call_expr_arg_iterator_d",const_call_expr_arg_iterator_d> the_class_name;
	 generic_field_name <"t",const_call_expr_arg_iterator_d,t> t;
	 generic_field_name <"n",const_call_expr_arg_iterator_d,n> n;
	 generic_field_name <"i",const_call_expr_arg_iterator_d,i> i;
}; 
class CLS_658_builtin_info_type_d{ 
	 generic_class_name <"builtin_info_type_d",builtin_info_type_d> the_class_name;
	 generic_field_name <"decl",builtin_info_type_d,decl> decl;
	 generic_field_name <"implicit_p",builtin_info_type_d,implicit_p> implicit_p;
}; 
class CLS_659_plugin_gcc_version{ 
	 generic_class_name <"plugin_gcc_version",plugin_gcc_version> the_class_name;
	 generic_field_name <"basever",plugin_gcc_version,basever> basever;
	 generic_field_name <"datestamp",plugin_gcc_version,datestamp> datestamp;
	 generic_field_name <"devphase",plugin_gcc_version,devphase> devphase;
	 generic_field_name <"revision",plugin_gcc_version,revision> revision;
	 generic_field_name <"configuration_arguments",plugin_gcc_version,configuration_arguments> configuration_arguments;
}; 
class CLS_660_stringop_strategy{ 
	 generic_class_name <"stringop_strategy",stringop_strategy> the_class_name;
	 generic_field_name <"max",stringop_strategy,max> max;
	 generic_field_name <"alg",stringop_strategy,alg> alg;
}; 
class CLS_661_stringop_algs{ 
	 generic_class_name <"stringop_algs",stringop_algs> the_class_name;
	 generic_field_name <"unknown_size",stringop_algs,unknown_size> unknown_size;
	 generic_field_name <"size",stringop_algs,size> size;
}; 
class CLS_662_stringop_algs{ 
	 generic_class_name <"stringop_algs",stringop_algs> the_class_name;
	 generic_field_name <"unknown_size",stringop_algs,unknown_size> unknown_size;
	 generic_field_name <"size",stringop_algs,size> size;
}; 
class CLS_663_processor_costs{ 
	 generic_class_name <"processor_costs",processor_costs> the_class_name;
	 generic_field_name <"add",processor_costs,add> add;
	 generic_field_name <"lea",processor_costs,lea> lea;
	 generic_field_name <"shift_var",processor_costs,shift_var> shift_var;
	 generic_field_name <"shift_const",processor_costs,shift_const> shift_const;
	 generic_field_name <"mult_init",processor_costs,mult_init> mult_init;
	 generic_field_name <"mult_bit",processor_costs,mult_bit> mult_bit;
	 generic_field_name <"divide",processor_costs,divide> divide;
	 generic_field_name <"movsx",processor_costs,movsx> movsx;
	 generic_field_name <"movzx",processor_costs,movzx> movzx;
	 generic_field_name <"large_insn",processor_costs,large_insn> large_insn;
	 generic_field_name <"move_ratio",processor_costs,move_ratio> move_ratio;
	 generic_field_name <"movzbl_load",processor_costs,movzbl_load> movzbl_load;
	 generic_field_name <"int_load",processor_costs,int_load> int_load;
	 generic_field_name <"int_store",processor_costs,int_store> int_store;
	 generic_field_name <"fp_move",processor_costs,fp_move> fp_move;
	 generic_field_name <"fp_load",processor_costs,fp_load> fp_load;
	 generic_field_name <"fp_store",processor_costs,fp_store> fp_store;
	 generic_field_name <"mmx_move",processor_costs,mmx_move> mmx_move;
	 generic_field_name <"mmx_load",processor_costs,mmx_load> mmx_load;
	 generic_field_name <"mmx_store",processor_costs,mmx_store> mmx_store;
	 generic_field_name <"sse_move",processor_costs,sse_move> sse_move;
	 generic_field_name <"sse_load",processor_costs,sse_load> sse_load;
	 generic_field_name <"sse_store",processor_costs,sse_store> sse_store;
	 generic_field_name <"mmxsse_to_integer",processor_costs,mmxsse_to_integer> mmxsse_to_integer;
	 generic_field_name <"l1_cache_size",processor_costs,l1_cache_size> l1_cache_size;
	 generic_field_name <"l2_cache_size",processor_costs,l2_cache_size> l2_cache_size;
	 generic_field_name <"prefetch_block",processor_costs,prefetch_block> prefetch_block;
	 generic_field_name <"simultaneous_prefetches",processor_costs,simultaneous_prefetches> simultaneous_prefetches;
	 generic_field_name <"branch_cost",processor_costs,branch_cost> branch_cost;
	 generic_field_name <"fadd",processor_costs,fadd> fadd;
	 generic_field_name <"fmul",processor_costs,fmul> fmul;
	 generic_field_name <"fdiv",processor_costs,fdiv> fdiv;
	 generic_field_name <"fabs",processor_costs,fabs> fabs;
	 generic_field_name <"fchs",processor_costs,fchs> fchs;
	 generic_field_name <"fsqrt",processor_costs,fsqrt> fsqrt;
	 generic_field_name <"memcpy",processor_costs,memcpy> memcpy;
	 generic_field_name <"memset",processor_costs,memset> memset;
	 generic_field_name <"scalar_stmt_cost",processor_costs,scalar_stmt_cost> scalar_stmt_cost;
	 generic_field_name <"scalar_load_cost",processor_costs,scalar_load_cost> scalar_load_cost;
	 generic_field_name <"scalar_store_cost",processor_costs,scalar_store_cost> scalar_store_cost;
	 generic_field_name <"vec_stmt_cost",processor_costs,vec_stmt_cost> vec_stmt_cost;
	 generic_field_name <"vec_to_scalar_cost",processor_costs,vec_to_scalar_cost> vec_to_scalar_cost;
	 generic_field_name <"scalar_to_vec_cost",processor_costs,scalar_to_vec_cost> scalar_to_vec_cost;
	 generic_field_name <"vec_align_load_cost",processor_costs,vec_align_load_cost> vec_align_load_cost;
	 generic_field_name <"vec_unalign_load_cost",processor_costs,vec_unalign_load_cost> vec_unalign_load_cost;
	 generic_field_name <"vec_store_cost",processor_costs,vec_store_cost> vec_store_cost;
	 generic_field_name <"cond_taken_branch_cost",processor_costs,cond_taken_branch_cost> cond_taken_branch_cost;
	 generic_field_name <"cond_not_taken_branch_cost",processor_costs,cond_not_taken_branch_cost> cond_not_taken_branch_cost;
}; 
class CLS_664_processor_costs{ 
	 generic_class_name <"processor_costs",processor_costs> the_class_name;
	 generic_field_name <"add",processor_costs,add> add;
	 generic_field_name <"lea",processor_costs,lea> lea;
	 generic_field_name <"shift_var",processor_costs,shift_var> shift_var;
	 generic_field_name <"shift_const",processor_costs,shift_const> shift_const;
	 generic_field_name <"mult_init",processor_costs,mult_init> mult_init;
	 generic_field_name <"mult_bit",processor_costs,mult_bit> mult_bit;
	 generic_field_name <"divide",processor_costs,divide> divide;
	 generic_field_name <"movsx",processor_costs,movsx> movsx;
	 generic_field_name <"movzx",processor_costs,movzx> movzx;
	 generic_field_name <"large_insn",processor_costs,large_insn> large_insn;
	 generic_field_name <"move_ratio",processor_costs,move_ratio> move_ratio;
	 generic_field_name <"movzbl_load",processor_costs,movzbl_load> movzbl_load;
	 generic_field_name <"int_load",processor_costs,int_load> int_load;
	 generic_field_name <"int_store",processor_costs,int_store> int_store;
	 generic_field_name <"fp_move",processor_costs,fp_move> fp_move;
	 generic_field_name <"fp_load",processor_costs,fp_load> fp_load;
	 generic_field_name <"fp_store",processor_costs,fp_store> fp_store;
	 generic_field_name <"mmx_move",processor_costs,mmx_move> mmx_move;
	 generic_field_name <"mmx_load",processor_costs,mmx_load> mmx_load;
	 generic_field_name <"mmx_store",processor_costs,mmx_store> mmx_store;
	 generic_field_name <"sse_move",processor_costs,sse_move> sse_move;
	 generic_field_name <"sse_load",processor_costs,sse_load> sse_load;
	 generic_field_name <"sse_store",processor_costs,sse_store> sse_store;
	 generic_field_name <"mmxsse_to_integer",processor_costs,mmxsse_to_integer> mmxsse_to_integer;
	 generic_field_name <"l1_cache_size",processor_costs,l1_cache_size> l1_cache_size;
	 generic_field_name <"l2_cache_size",processor_costs,l2_cache_size> l2_cache_size;
	 generic_field_name <"prefetch_block",processor_costs,prefetch_block> prefetch_block;
	 generic_field_name <"simultaneous_prefetches",processor_costs,simultaneous_prefetches> simultaneous_prefetches;
	 generic_field_name <"branch_cost",processor_costs,branch_cost> branch_cost;
	 generic_field_name <"fadd",processor_costs,fadd> fadd;
	 generic_field_name <"fmul",processor_costs,fmul> fmul;
	 generic_field_name <"fdiv",processor_costs,fdiv> fdiv;
	 generic_field_name <"fabs",processor_costs,fabs> fabs;
	 generic_field_name <"fchs",processor_costs,fchs> fchs;
	 generic_field_name <"fsqrt",processor_costs,fsqrt> fsqrt;
	 generic_field_name <"memcpy",processor_costs,memcpy> memcpy;
	 generic_field_name <"memset",processor_costs,memset> memset;
	 generic_field_name <"scalar_stmt_cost",processor_costs,scalar_stmt_cost> scalar_stmt_cost;
	 generic_field_name <"scalar_load_cost",processor_costs,scalar_load_cost> scalar_load_cost;
	 generic_field_name <"scalar_store_cost",processor_costs,scalar_store_cost> scalar_store_cost;
	 generic_field_name <"vec_stmt_cost",processor_costs,vec_stmt_cost> vec_stmt_cost;
	 generic_field_name <"vec_to_scalar_cost",processor_costs,vec_to_scalar_cost> vec_to_scalar_cost;
	 generic_field_name <"scalar_to_vec_cost",processor_costs,scalar_to_vec_cost> scalar_to_vec_cost;
	 generic_field_name <"vec_align_load_cost",processor_costs,vec_align_load_cost> vec_align_load_cost;
	 generic_field_name <"vec_unalign_load_cost",processor_costs,vec_unalign_load_cost> vec_unalign_load_cost;
	 generic_field_name <"vec_store_cost",processor_costs,vec_store_cost> vec_store_cost;
	 generic_field_name <"cond_taken_branch_cost",processor_costs,cond_taken_branch_cost> cond_taken_branch_cost;
	 generic_field_name <"cond_not_taken_branch_cost",processor_costs,cond_not_taken_branch_cost> cond_not_taken_branch_cost;
}; 
class CLS_665_processor_costs{ 
	 generic_class_name <"processor_costs",processor_costs> the_class_name;
	 generic_field_name <"add",processor_costs,add> add;
	 generic_field_name <"lea",processor_costs,lea> lea;
	 generic_field_name <"shift_var",processor_costs,shift_var> shift_var;
	 generic_field_name <"shift_const",processor_costs,shift_const> shift_const;
	 generic_field_name <"mult_init",processor_costs,mult_init> mult_init;
	 generic_field_name <"mult_bit",processor_costs,mult_bit> mult_bit;
	 generic_field_name <"divide",processor_costs,divide> divide;
	 generic_field_name <"movsx",processor_costs,movsx> movsx;
	 generic_field_name <"movzx",processor_costs,movzx> movzx;
	 generic_field_name <"large_insn",processor_costs,large_insn> large_insn;
	 generic_field_name <"move_ratio",processor_costs,move_ratio> move_ratio;
	 generic_field_name <"movzbl_load",processor_costs,movzbl_load> movzbl_load;
	 generic_field_name <"int_load",processor_costs,int_load> int_load;
	 generic_field_name <"int_store",processor_costs,int_store> int_store;
	 generic_field_name <"fp_move",processor_costs,fp_move> fp_move;
	 generic_field_name <"fp_load",processor_costs,fp_load> fp_load;
	 generic_field_name <"fp_store",processor_costs,fp_store> fp_store;
	 generic_field_name <"mmx_move",processor_costs,mmx_move> mmx_move;
	 generic_field_name <"mmx_load",processor_costs,mmx_load> mmx_load;
	 generic_field_name <"mmx_store",processor_costs,mmx_store> mmx_store;
	 generic_field_name <"sse_move",processor_costs,sse_move> sse_move;
	 generic_field_name <"sse_load",processor_costs,sse_load> sse_load;
	 generic_field_name <"sse_store",processor_costs,sse_store> sse_store;
	 generic_field_name <"mmxsse_to_integer",processor_costs,mmxsse_to_integer> mmxsse_to_integer;
	 generic_field_name <"l1_cache_size",processor_costs,l1_cache_size> l1_cache_size;
	 generic_field_name <"l2_cache_size",processor_costs,l2_cache_size> l2_cache_size;
	 generic_field_name <"prefetch_block",processor_costs,prefetch_block> prefetch_block;
	 generic_field_name <"simultaneous_prefetches",processor_costs,simultaneous_prefetches> simultaneous_prefetches;
	 generic_field_name <"branch_cost",processor_costs,branch_cost> branch_cost;
	 generic_field_name <"fadd",processor_costs,fadd> fadd;
	 generic_field_name <"fmul",processor_costs,fmul> fmul;
	 generic_field_name <"fdiv",processor_costs,fdiv> fdiv;
	 generic_field_name <"fabs",processor_costs,fabs> fabs;
	 generic_field_name <"fchs",processor_costs,fchs> fchs;
	 generic_field_name <"fsqrt",processor_costs,fsqrt> fsqrt;
	 generic_field_name <"memcpy",processor_costs,memcpy> memcpy;
	 generic_field_name <"memset",processor_costs,memset> memset;
	 generic_field_name <"scalar_stmt_cost",processor_costs,scalar_stmt_cost> scalar_stmt_cost;
	 generic_field_name <"scalar_load_cost",processor_costs,scalar_load_cost> scalar_load_cost;
	 generic_field_name <"scalar_store_cost",processor_costs,scalar_store_cost> scalar_store_cost;
	 generic_field_name <"vec_stmt_cost",processor_costs,vec_stmt_cost> vec_stmt_cost;
	 generic_field_name <"vec_to_scalar_cost",processor_costs,vec_to_scalar_cost> vec_to_scalar_cost;
	 generic_field_name <"scalar_to_vec_cost",processor_costs,scalar_to_vec_cost> scalar_to_vec_cost;
	 generic_field_name <"vec_align_load_cost",processor_costs,vec_align_load_cost> vec_align_load_cost;
	 generic_field_name <"vec_unalign_load_cost",processor_costs,vec_unalign_load_cost> vec_unalign_load_cost;
	 generic_field_name <"vec_store_cost",processor_costs,vec_store_cost> vec_store_cost;
	 generic_field_name <"cond_taken_branch_cost",processor_costs,cond_taken_branch_cost> cond_taken_branch_cost;
	 generic_field_name <"cond_not_taken_branch_cost",processor_costs,cond_not_taken_branch_cost> cond_not_taken_branch_cost;
}; 
class CLS_666_ix86_args{ 
	 generic_class_name <"ix86_args",ix86_args> the_class_name;
	 generic_field_name <"words",ix86_args,words> words;
	 generic_field_name <"nregs",ix86_args,nregs> nregs;
	 generic_field_name <"regno",ix86_args,regno> regno;
	 generic_field_name <"fastcall",ix86_args,fastcall> fastcall;
	 generic_field_name <"sse_words",ix86_args,sse_words> sse_words;
	 generic_field_name <"sse_nregs",ix86_args,sse_nregs> sse_nregs;
	 generic_field_name <"warn_avx",ix86_args,warn_avx> warn_avx;
	 generic_field_name <"warn_sse",ix86_args,warn_sse> warn_sse;
	 generic_field_name <"warn_mmx",ix86_args,warn_mmx> warn_mmx;
	 generic_field_name <"sse_regno",ix86_args,sse_regno> sse_regno;
	 generic_field_name <"mmx_words",ix86_args,mmx_words> mmx_words;
	 generic_field_name <"mmx_nregs",ix86_args,mmx_nregs> mmx_nregs;
	 generic_field_name <"mmx_regno",ix86_args,mmx_regno> mmx_regno;
	 generic_field_name <"maybe_vaarg",ix86_args,maybe_vaarg> maybe_vaarg;
	 generic_field_name <"caller",ix86_args,caller> caller;
	 generic_field_name <"float_in_sse",ix86_args,float_in_sse> float_in_sse;
	 generic_field_name <"call_abi",ix86_args,call_abi> call_abi;
}; 
class CLS_667_machine_frame_state{ 
	 generic_class_name <"machine_frame_state",machine_frame_state> the_class_name;
	 generic_field_name <"cfa_reg",machine_frame_state,cfa_reg> cfa_reg;
	 generic_field_name <"cfa_offset",machine_frame_state,cfa_offset> cfa_offset;
	 generic_field_name <"sp_offset",machine_frame_state,sp_offset> sp_offset;
	 generic_field_name <"fp_offset",machine_frame_state,fp_offset> fp_offset;
	 generic_field_name <"red_zone_offset",machine_frame_state,red_zone_offset> red_zone_offset;
	 generic_field_name <"sp_valid",machine_frame_state,sp_valid> sp_valid;
	 generic_field_name <"fp_valid",machine_frame_state,fp_valid> fp_valid;
	 generic_field_name <"drap_valid",machine_frame_state,drap_valid> drap_valid;
	 generic_field_name <"realigned",machine_frame_state,realigned> realigned;
}; 
class CLS_668_seh_frame_state{ 
	 generic_class_name <"seh_frame_state",seh_frame_state> the_class_name;
}; 
class CLS_669_stack_local_entry{ 
	 generic_class_name <"stack_local_entry",stack_local_entry> the_class_name;
}; 
class CLS_670_machine_frame_state{ 
	 generic_class_name <"machine_frame_state",machine_frame_state> the_class_name;
	 generic_field_name <"cfa_reg",machine_frame_state,cfa_reg> cfa_reg;
	 generic_field_name <"cfa_offset",machine_frame_state,cfa_offset> cfa_offset;
	 generic_field_name <"sp_offset",machine_frame_state,sp_offset> sp_offset;
	 generic_field_name <"fp_offset",machine_frame_state,fp_offset> fp_offset;
	 generic_field_name <"red_zone_offset",machine_frame_state,red_zone_offset> red_zone_offset;
	 generic_field_name <"sp_valid",machine_frame_state,sp_valid> sp_valid;
	 generic_field_name <"fp_valid",machine_frame_state,fp_valid> fp_valid;
	 generic_field_name <"drap_valid",machine_frame_state,drap_valid> drap_valid;
	 generic_field_name <"realigned",machine_frame_state,realigned> realigned;
}; 
class CLS_671_seh_frame_state{ 
	 generic_class_name <"seh_frame_state",seh_frame_state> the_class_name;
}; 
class CLS_672_machine_function{ 
	 generic_class_name <"machine_function",machine_function> the_class_name;
	 generic_field_name <"stack_locals",machine_function,stack_locals> stack_locals;
	 generic_field_name <"some_ld_name",machine_function,some_ld_name> some_ld_name;
	 generic_field_name <"varargs_gpr_size",machine_function,varargs_gpr_size> varargs_gpr_size;
	 generic_field_name <"varargs_fpr_size",machine_function,varargs_fpr_size> varargs_fpr_size;
	 generic_field_name <"optimize_mode_switching",machine_function,optimize_mode_switching> optimize_mode_switching;
	 generic_field_name <"use_fast_prologue_epilogue_nregs",machine_function,use_fast_prologue_epilogue_nregs> use_fast_prologue_epilogue_nregs;
	 generic_field_name <"split_stack_varargs_pointer",machine_function,split_stack_varargs_pointer> split_stack_varargs_pointer;
	 generic_field_name <"call_abi",machine_function,call_abi> call_abi;
	 generic_field_name <"accesses_prev_frame",machine_function,accesses_prev_frame> accesses_prev_frame;
	 generic_field_name <"needs_cld",machine_function,needs_cld> needs_cld;
	 generic_field_name <"use_fast_prologue_epilogue",machine_function,use_fast_prologue_epilogue> use_fast_prologue_epilogue;
	 generic_field_name <"tls_descriptor_call_expanded_p",machine_function,tls_descriptor_call_expanded_p> tls_descriptor_call_expanded_p;
	 generic_field_name <"static_chain_on_stack",machine_function,static_chain_on_stack> static_chain_on_stack;
	 generic_field_name <"caller_pass_avx256_p",machine_function,caller_pass_avx256_p> caller_pass_avx256_p;
	 generic_field_name <"caller_return_avx256_p",machine_function,caller_return_avx256_p> caller_return_avx256_p;
	 generic_field_name <"callee_pass_avx256_p",machine_function,callee_pass_avx256_p> callee_pass_avx256_p;
	 generic_field_name <"callee_return_avx256_p",machine_function,callee_return_avx256_p> callee_return_avx256_p;
	 generic_field_name <"rescan_vzeroupper_p",machine_function,rescan_vzeroupper_p> rescan_vzeroupper_p;
	 generic_field_name <"fs",machine_function,fs> fs;
	 generic_field_name <"seh",machine_function,seh> seh;
}; 
class CLS_673_ggc_root_tab{ 
	 generic_class_name <"ggc_root_tab",ggc_root_tab> the_class_name;
	 generic_field_name <"base",ggc_root_tab,base> base;
	 generic_field_name <"nelt",ggc_root_tab,nelt> nelt;
	 generic_field_name <"stride",ggc_root_tab,stride> stride;
	 generic_field_name <"cb",ggc_root_tab,cb> cb;
	 generic_field_name <"pchw",ggc_root_tab,pchw> pchw;
}; 
class CLS_674_ggc_root_tab{ 
	 generic_class_name <"ggc_root_tab",ggc_root_tab> the_class_name;
	 generic_field_name <"base",ggc_root_tab,base> base;
	 generic_field_name <"nelt",ggc_root_tab,nelt> nelt;
	 generic_field_name <"stride",ggc_root_tab,stride> stride;
	 generic_field_name <"cb",ggc_root_tab,cb> cb;
	 generic_field_name <"pchw",ggc_root_tab,pchw> pchw;
}; 
class CLS_675_ggc_root_tab{ 
	 generic_class_name <"ggc_root_tab",ggc_root_tab> the_class_name;
	 generic_field_name <"base",ggc_root_tab,base> base;
	 generic_field_name <"nelt",ggc_root_tab,nelt> nelt;
	 generic_field_name <"stride",ggc_root_tab,stride> stride;
	 generic_field_name <"cb",ggc_root_tab,cb> cb;
	 generic_field_name <"pchw",ggc_root_tab,pchw> pchw;
}; 
class CLS_676_ggc_root_tab{ 
	 generic_class_name <"ggc_root_tab",ggc_root_tab> the_class_name;
	 generic_field_name <"base",ggc_root_tab,base> base;
	 generic_field_name <"nelt",ggc_root_tab,nelt> nelt;
	 generic_field_name <"stride",ggc_root_tab,stride> stride;
	 generic_field_name <"cb",ggc_root_tab,cb> cb;
	 generic_field_name <"pchw",ggc_root_tab,pchw> pchw;
}; 
class CLS_677_ggc_root_tab{ 
	 generic_class_name <"ggc_root_tab",ggc_root_tab> the_class_name;
	 generic_field_name <"base",ggc_root_tab,base> base;
	 generic_field_name <"nelt",ggc_root_tab,nelt> nelt;
	 generic_field_name <"stride",ggc_root_tab,stride> stride;
	 generic_field_name <"cb",ggc_root_tab,cb> cb;
	 generic_field_name <"pchw",ggc_root_tab,pchw> pchw;
}; 
class CLS_678_htab{ 
	 generic_class_name <"htab",htab> the_class_name;
	 generic_field_name <"hash_f",htab,hash_f> hash_f;
	 generic_field_name <"eq_f",htab,eq_f> eq_f;
	 generic_field_name <"del_f",htab,del_f> del_f;
	 generic_field_name <"entries",htab,entries> entries;
	 generic_field_name <"size",htab,size> size;
	 generic_field_name <"n_elements",htab,n_elements> n_elements;
	 generic_field_name <"n_deleted",htab,n_deleted> n_deleted;
	 generic_field_name <"searches",htab,searches> searches;
	 generic_field_name <"collisions",htab,collisions> collisions;
	 generic_field_name <"alloc_f",htab,alloc_f> alloc_f;
	 generic_field_name <"free_f",htab,free_f> free_f;
	 generic_field_name <"alloc_arg",htab,alloc_arg> alloc_arg;
	 generic_field_name <"alloc_with_arg_f",htab,alloc_with_arg_f> alloc_with_arg_f;
	 generic_field_name <"free_with_arg_f",htab,free_with_arg_f> free_with_arg_f;
	 generic_field_name <"size_prime_index",htab,size_prime_index> size_prime_index;
}; 
class CLS_679_htab{ 
	 generic_class_name <"htab",htab> the_class_name;
	 generic_field_name <"hash_f",htab,hash_f> hash_f;
	 generic_field_name <"eq_f",htab,eq_f> eq_f;
	 generic_field_name <"del_f",htab,del_f> del_f;
	 generic_field_name <"entries",htab,entries> entries;
	 generic_field_name <"size",htab,size> size;
	 generic_field_name <"n_elements",htab,n_elements> n_elements;
	 generic_field_name <"n_deleted",htab,n_deleted> n_deleted;
	 generic_field_name <"searches",htab,searches> searches;
	 generic_field_name <"collisions",htab,collisions> collisions;
	 generic_field_name <"alloc_f",htab,alloc_f> alloc_f;
	 generic_field_name <"free_f",htab,free_f> free_f;
	 generic_field_name <"alloc_arg",htab,alloc_arg> alloc_arg;
	 generic_field_name <"alloc_with_arg_f",htab,alloc_with_arg_f> alloc_with_arg_f;
	 generic_field_name <"free_with_arg_f",htab,free_with_arg_f> free_with_arg_f;
	 generic_field_name <"size_prime_index",htab,size_prime_index> size_prime_index;
}; 
class CLS_680_ggc_cache_tab{ 
	 generic_class_name <"ggc_cache_tab",ggc_cache_tab> the_class_name;
	 generic_field_name <"base",ggc_cache_tab,base> base;
	 generic_field_name <"nelt",ggc_cache_tab,nelt> nelt;
	 generic_field_name <"stride",ggc_cache_tab,stride> stride;
	 generic_field_name <"cb",ggc_cache_tab,cb> cb;
	 generic_field_name <"pchw",ggc_cache_tab,pchw> pchw;
	 generic_field_name <"marked_p",ggc_cache_tab,marked_p> marked_p;
}; 
class CLS_681_ggc_cache_tab{ 
	 generic_class_name <"ggc_cache_tab",ggc_cache_tab> the_class_name;
	 generic_field_name <"base",ggc_cache_tab,base> base;
	 generic_field_name <"nelt",ggc_cache_tab,nelt> nelt;
	 generic_field_name <"stride",ggc_cache_tab,stride> stride;
	 generic_field_name <"cb",ggc_cache_tab,cb> cb;
	 generic_field_name <"pchw",ggc_cache_tab,pchw> pchw;
	 generic_field_name <"marked_p",ggc_cache_tab,marked_p> marked_p;
}; 
class CLS_682_alloc_zone{ 
	 generic_class_name <"alloc_zone",alloc_zone> the_class_name;
}; 
class CLS_683_ggc_root_tab{ 
	 generic_class_name <"ggc_root_tab",ggc_root_tab> the_class_name;
	 generic_field_name <"base",ggc_root_tab,base> base;
	 generic_field_name <"nelt",ggc_root_tab,nelt> nelt;
	 generic_field_name <"stride",ggc_root_tab,stride> stride;
	 generic_field_name <"cb",ggc_root_tab,cb> cb;
	 generic_field_name <"pchw",ggc_root_tab,pchw> pchw;
}; 
class CLS_684_ggc_cache_tab{ 
	 generic_class_name <"ggc_cache_tab",ggc_cache_tab> the_class_name;
	 generic_field_name <"base",ggc_cache_tab,base> base;
	 generic_field_name <"nelt",ggc_cache_tab,nelt> nelt;
	 generic_field_name <"stride",ggc_cache_tab,stride> stride;
	 generic_field_name <"cb",ggc_cache_tab,cb> cb;
	 generic_field_name <"pchw",ggc_cache_tab,pchw> pchw;
	 generic_field_name <"marked_p",ggc_cache_tab,marked_p> marked_p;
}; 
class CLS_685_alloc_zone{ 
	 generic_class_name <"alloc_zone",alloc_zone> the_class_name;
}; 
class CLS_686_alloc_zone{ 
	 generic_class_name <"alloc_zone",alloc_zone> the_class_name;
}; 
class CLS_687_alloc_zone{ 
	 generic_class_name <"alloc_zone",alloc_zone> the_class_name;
}; 
class CLS_688_alloc_zone{ 
	 generic_class_name <"alloc_zone",alloc_zone> the_class_name;
}; 
class CLS_689_alloc_zone{ 
	 generic_class_name <"alloc_zone",alloc_zone> the_class_name;
}; 
class CLS_690_alloc_zone{ 
	 generic_class_name <"alloc_zone",alloc_zone> the_class_name;
}; 
class CLS_691_rtx_def{ 
	 generic_class_name <"rtx_def",rtx_def> the_class_name;
}; 
class CLS_692_alloc_zone{ 
	 generic_class_name <"alloc_zone",alloc_zone> the_class_name;
}; 
class CLS_693_rtx_def{ 
	 generic_class_name <"rtx_def",rtx_def> the_class_name;
}; 
class CLS_694_alloc_zone{ 
	 generic_class_name <"alloc_zone",alloc_zone> the_class_name;
}; 
class CLS_695_alloc_zone{ 
	 generic_class_name <"alloc_zone",alloc_zone> the_class_name;
}; 
class CLS_696_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_697_VEC_char_base{ 
	 generic_class_name <"VEC_char_base",VEC_char_base> the_class_name;
	 generic_field_name <"prefix",VEC_char_base,prefix> prefix;
	 generic_field_name <"vec",VEC_char_base,vec> vec;
}; 
class CLS_698_VEC_char_none{ 
	 generic_class_name <"VEC_char_none",VEC_char_none> the_class_name;
	 generic_field_name <"base",VEC_char_none,base> base;
}; 
class CLS_699_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_700_VEC_char_heap{ 
	 generic_class_name <"VEC_char_heap",VEC_char_heap> the_class_name;
	 generic_field_name <"base",VEC_char_heap,base> base;
}; 
class CLS_701_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_702_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_703_VEC_uchar_base{ 
	 generic_class_name <"VEC_uchar_base",VEC_uchar_base> the_class_name;
	 generic_field_name <"prefix",VEC_uchar_base,prefix> prefix;
	 generic_field_name <"vec",VEC_uchar_base,vec> vec;
}; 
class CLS_704_VEC_uchar_none{ 
	 generic_class_name <"VEC_uchar_none",VEC_uchar_none> the_class_name;
	 generic_field_name <"base",VEC_uchar_none,base> base;
}; 
class CLS_705_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_706_VEC_uchar_heap{ 
	 generic_class_name <"VEC_uchar_heap",VEC_uchar_heap> the_class_name;
	 generic_field_name <"base",VEC_uchar_heap,base> base;
}; 
class CLS_707_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_708_VEC_uchar_gc{ 
	 generic_class_name <"VEC_uchar_gc",VEC_uchar_gc> the_class_name;
	 generic_field_name <"base",VEC_uchar_gc,base> base;
}; 
class CLS_709_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_710_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_711_VEC_int_base{ 
	 generic_class_name <"VEC_int_base",VEC_int_base> the_class_name;
	 generic_field_name <"prefix",VEC_int_base,prefix> prefix;
	 generic_field_name <"vec",VEC_int_base,vec> vec;
}; 
class CLS_712_VEC_int_none{ 
	 generic_class_name <"VEC_int_none",VEC_int_none> the_class_name;
	 generic_field_name <"base",VEC_int_none,base> base;
}; 
class CLS_713_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_714_VEC_int_heap{ 
	 generic_class_name <"VEC_int_heap",VEC_int_heap> the_class_name;
	 generic_field_name <"base",VEC_int_heap,base> base;
}; 
class CLS_715_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_716_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_717_VEC_unsigned_base{ 
	 generic_class_name <"VEC_unsigned_base",VEC_unsigned_base> the_class_name;
	 generic_field_name <"prefix",VEC_unsigned_base,prefix> prefix;
	 generic_field_name <"vec",VEC_unsigned_base,vec> vec;
}; 
class CLS_718_VEC_unsigned_none{ 
	 generic_class_name <"VEC_unsigned_none",VEC_unsigned_none> the_class_name;
	 generic_field_name <"base",VEC_unsigned_none,base> base;
}; 
class CLS_719_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_720_VEC_unsigned_heap{ 
	 generic_class_name <"VEC_unsigned_heap",VEC_unsigned_heap> the_class_name;
	 generic_field_name <"base",VEC_unsigned_heap,base> base;
}; 
class CLS_721_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_722_hard_reg_set_container{ 
	 generic_class_name <"hard_reg_set_container",hard_reg_set_container> the_class_name;
	 generic_field_name <"set",hard_reg_set_container,set> set;
}; 
class CLS_723_target_hard_regs{ 
	 generic_class_name <"target_hard_regs",target_hard_regs> the_class_name;
	 generic_field_name <"x_accessible_reg_set",target_hard_regs,x_accessible_reg_set> x_accessible_reg_set;
	 generic_field_name <"x_operand_reg_set",target_hard_regs,x_operand_reg_set> x_operand_reg_set;
	 generic_field_name <"x_fixed_regs",target_hard_regs,x_fixed_regs> x_fixed_regs;
	 generic_field_name <"x_fixed_reg_set",target_hard_regs,x_fixed_reg_set> x_fixed_reg_set;
	 generic_field_name <"x_call_used_regs",target_hard_regs,x_call_used_regs> x_call_used_regs;
	 generic_field_name <"x_call_really_used_regs",target_hard_regs,x_call_really_used_regs> x_call_really_used_regs;
	 generic_field_name <"x_call_used_reg_set",target_hard_regs,x_call_used_reg_set> x_call_used_reg_set;
	 generic_field_name <"x_call_fixed_reg_set",target_hard_regs,x_call_fixed_reg_set> x_call_fixed_reg_set;
	 generic_field_name <"x_regs_invalidated_by_call",target_hard_regs,x_regs_invalidated_by_call> x_regs_invalidated_by_call;
	 generic_field_name <"x_no_caller_save_reg_set",target_hard_regs,x_no_caller_save_reg_set> x_no_caller_save_reg_set;
	 generic_field_name <"x_reg_alloc_order",target_hard_regs,x_reg_alloc_order> x_reg_alloc_order;
	 generic_field_name <"x_inv_reg_alloc_order",target_hard_regs,x_inv_reg_alloc_order> x_inv_reg_alloc_order;
	 generic_field_name <"x_reg_class_contents",target_hard_regs,x_reg_class_contents> x_reg_class_contents;
	 generic_field_name <"x_class_only_fixed_regs",target_hard_regs,x_class_only_fixed_regs> x_class_only_fixed_regs;
	 generic_field_name <"x_reg_class_size",target_hard_regs,x_reg_class_size> x_reg_class_size;
	 generic_field_name <"x_reg_class_subclasses",target_hard_regs,x_reg_class_subclasses> x_reg_class_subclasses;
	 generic_field_name <"x_reg_class_subunion",target_hard_regs,x_reg_class_subunion> x_reg_class_subunion;
	 generic_field_name <"x_reg_class_superunion",target_hard_regs,x_reg_class_superunion> x_reg_class_superunion;
	 generic_field_name <"x_reg_names",target_hard_regs,x_reg_names> x_reg_names;
}; 
class CLS_724_target_hard_regs{ 
	 generic_class_name <"target_hard_regs",target_hard_regs> the_class_name;
	 generic_field_name <"x_accessible_reg_set",target_hard_regs,x_accessible_reg_set> x_accessible_reg_set;
	 generic_field_name <"x_operand_reg_set",target_hard_regs,x_operand_reg_set> x_operand_reg_set;
	 generic_field_name <"x_fixed_regs",target_hard_regs,x_fixed_regs> x_fixed_regs;
	 generic_field_name <"x_fixed_reg_set",target_hard_regs,x_fixed_reg_set> x_fixed_reg_set;
	 generic_field_name <"x_call_used_regs",target_hard_regs,x_call_used_regs> x_call_used_regs;
	 generic_field_name <"x_call_really_used_regs",target_hard_regs,x_call_really_used_regs> x_call_really_used_regs;
	 generic_field_name <"x_call_used_reg_set",target_hard_regs,x_call_used_reg_set> x_call_used_reg_set;
	 generic_field_name <"x_call_fixed_reg_set",target_hard_regs,x_call_fixed_reg_set> x_call_fixed_reg_set;
	 generic_field_name <"x_regs_invalidated_by_call",target_hard_regs,x_regs_invalidated_by_call> x_regs_invalidated_by_call;
	 generic_field_name <"x_no_caller_save_reg_set",target_hard_regs,x_no_caller_save_reg_set> x_no_caller_save_reg_set;
	 generic_field_name <"x_reg_alloc_order",target_hard_regs,x_reg_alloc_order> x_reg_alloc_order;
	 generic_field_name <"x_inv_reg_alloc_order",target_hard_regs,x_inv_reg_alloc_order> x_inv_reg_alloc_order;
	 generic_field_name <"x_reg_class_contents",target_hard_regs,x_reg_class_contents> x_reg_class_contents;
	 generic_field_name <"x_class_only_fixed_regs",target_hard_regs,x_class_only_fixed_regs> x_class_only_fixed_regs;
	 generic_field_name <"x_reg_class_size",target_hard_regs,x_reg_class_size> x_reg_class_size;
	 generic_field_name <"x_reg_class_subclasses",target_hard_regs,x_reg_class_subclasses> x_reg_class_subclasses;
	 generic_field_name <"x_reg_class_subunion",target_hard_regs,x_reg_class_subunion> x_reg_class_subunion;
	 generic_field_name <"x_reg_class_superunion",target_hard_regs,x_reg_class_superunion> x_reg_class_superunion;
	 generic_field_name <"x_reg_names",target_hard_regs,x_reg_names> x_reg_names;
}; 
class CLS_725_sequence_stack{ 
	 generic_class_name <"sequence_stack",sequence_stack> the_class_name;
}; 
class CLS_726_sequence_stack{ 
	 generic_class_name <"sequence_stack",sequence_stack> the_class_name;
	 generic_field_name <"first",sequence_stack,first> first;
	 generic_field_name <"last",sequence_stack,last> last;
	 generic_field_name <"next",sequence_stack,next> next;
}; 
class CLS_727_sequence_stack{ 
	 generic_class_name <"sequence_stack",sequence_stack> the_class_name;
	 generic_field_name <"first",sequence_stack,first> first;
	 generic_field_name <"last",sequence_stack,last> last;
	 generic_field_name <"next",sequence_stack,next> next;
}; 
class CLS_728_emit_status{ 
	 generic_class_name <"emit_status",emit_status> the_class_name;
	 generic_field_name <"x_reg_rtx_no",emit_status,x_reg_rtx_no> x_reg_rtx_no;
	 generic_field_name <"x_first_label_num",emit_status,x_first_label_num> x_first_label_num;
	 generic_field_name <"x_first_insn",emit_status,x_first_insn> x_first_insn;
	 generic_field_name <"x_last_insn",emit_status,x_last_insn> x_last_insn;
	 generic_field_name <"sequence_stack",emit_status,sequence_stack> sequence_stack;
	 generic_field_name <"x_cur_insn_uid",emit_status,x_cur_insn_uid> x_cur_insn_uid;
	 generic_field_name <"x_cur_debug_insn_uid",emit_status,x_cur_debug_insn_uid> x_cur_debug_insn_uid;
	 generic_field_name <"x_last_location",emit_status,x_last_location> x_last_location;
	 generic_field_name <"regno_pointer_align_length",emit_status,regno_pointer_align_length> regno_pointer_align_length;
	 generic_field_name <"regno_pointer_align",emit_status,regno_pointer_align> regno_pointer_align;
}; 
class CLS_729_expr_status{ 
	 generic_class_name <"expr_status",expr_status> the_class_name;
	 generic_field_name <"x_pending_stack_adjust",expr_status,x_pending_stack_adjust> x_pending_stack_adjust;
	 generic_field_name <"x_inhibit_defer_pop",expr_status,x_inhibit_defer_pop> x_inhibit_defer_pop;
	 generic_field_name <"x_stack_pointer_delta",expr_status,x_stack_pointer_delta> x_stack_pointer_delta;
	 generic_field_name <"x_saveregs_value",expr_status,x_saveregs_value> x_saveregs_value;
	 generic_field_name <"x_apply_args_value",expr_status,x_apply_args_value> x_apply_args_value;
	 generic_field_name <"x_forced_labels",expr_status,x_forced_labels> x_forced_labels;
}; 
class CLS_730_call_site_record_d{ 
	 generic_class_name <"call_site_record_d",call_site_record_d> the_class_name;
}; 
class CLS_731_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_732_VEC_call_site_record_base{ 
	 generic_class_name <"VEC_call_site_record_base",VEC_call_site_record_base> the_class_name;
	 generic_field_name <"prefix",VEC_call_site_record_base,prefix> prefix;
	 generic_field_name <"vec",VEC_call_site_record_base,vec> vec;
}; 
class CLS_733_VEC_call_site_record_none{ 
	 generic_class_name <"VEC_call_site_record_none",VEC_call_site_record_none> the_class_name;
	 generic_field_name <"base",VEC_call_site_record_none,base> base;
}; 
class CLS_734_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_735_VEC_call_site_record_gc{ 
	 generic_class_name <"VEC_call_site_record_gc",VEC_call_site_record_gc> the_class_name;
	 generic_field_name <"base",VEC_call_site_record_gc,base> base;
}; 
class CLS_736_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_737_rtl_eh{ 
	 generic_class_name <"rtl_eh",rtl_eh> the_class_name;
	 generic_field_name <"ehr_stackadj",rtl_eh,ehr_stackadj> ehr_stackadj;
	 generic_field_name <"ehr_handler",rtl_eh,ehr_handler> ehr_handler;
	 generic_field_name <"ehr_label",rtl_eh,ehr_label> ehr_label;
	 generic_field_name <"sjlj_fc",rtl_eh,sjlj_fc> sjlj_fc;
	 generic_field_name <"sjlj_exit_after",rtl_eh,sjlj_exit_after> sjlj_exit_after;
	 generic_field_name <"action_record_data",rtl_eh,action_record_data> action_record_data;
	 generic_field_name <"call_site_record",rtl_eh,call_site_record> call_site_record;
}; 
class CLS_738_gimple_df{ 
	 generic_class_name <"gimple_df",gimple_df> the_class_name;
}; 
class CLS_739_temp_slot{ 
	 generic_class_name <"temp_slot",temp_slot> the_class_name;
}; 
class CLS_740_temp_slot{ 
	 generic_class_name <"temp_slot",temp_slot> the_class_name;
}; 
class CLS_741_call_site_record_d{ 
	 generic_class_name <"call_site_record_d",call_site_record_d> the_class_name;
}; 
class CLS_742_dw_fde_struct{ 
	 generic_class_name <"dw_fde_struct",dw_fde_struct> the_class_name;
}; 
class CLS_743_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_744_VEC_temp_slot_p_base{ 
	 generic_class_name <"VEC_temp_slot_p_base",VEC_temp_slot_p_base> the_class_name;
	 generic_field_name <"prefix",VEC_temp_slot_p_base,prefix> prefix;
	 generic_field_name <"vec",VEC_temp_slot_p_base,vec> vec;
}; 
class CLS_745_VEC_temp_slot_p_none{ 
	 generic_class_name <"VEC_temp_slot_p_none",VEC_temp_slot_p_none> the_class_name;
	 generic_field_name <"base",VEC_temp_slot_p_none,base> base;
}; 
class CLS_746_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_747_VEC_temp_slot_p_gc{ 
	 generic_class_name <"VEC_temp_slot_p_gc",VEC_temp_slot_p_gc> the_class_name;
	 generic_field_name <"base",VEC_temp_slot_p_gc,base> base;
}; 
class CLS_748_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_749_ipa_opt_pass_d{ 
	 generic_class_name <"ipa_opt_pass_d",ipa_opt_pass_d> the_class_name;
}; 
class CLS_750_ipa_opt_pass_d{ 
	 generic_class_name <"ipa_opt_pass_d",ipa_opt_pass_d> the_class_name;
}; 
class CLS_751_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_752_VEC_ipa_opt_pass_base{ 
	 generic_class_name <"VEC_ipa_opt_pass_base",VEC_ipa_opt_pass_base> the_class_name;
	 generic_field_name <"prefix",VEC_ipa_opt_pass_base,prefix> prefix;
	 generic_field_name <"vec",VEC_ipa_opt_pass_base,vec> vec;
}; 
class CLS_753_VEC_ipa_opt_pass_none{ 
	 generic_class_name <"VEC_ipa_opt_pass_none",VEC_ipa_opt_pass_none> the_class_name;
	 generic_field_name <"base",VEC_ipa_opt_pass_none,base> base;
}; 
class CLS_754_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_755_VEC_ipa_opt_pass_heap{ 
	 generic_class_name <"VEC_ipa_opt_pass_heap",VEC_ipa_opt_pass_heap> the_class_name;
	 generic_field_name <"base",VEC_ipa_opt_pass_heap,base> base;
}; 
class CLS_756_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_757_rtx_constant_pool{ 
	 generic_class_name <"rtx_constant_pool",rtx_constant_pool> the_class_name;
}; 
class CLS_758_varasm_status{ 
	 generic_class_name <"varasm_status",varasm_status> the_class_name;
	 generic_field_name <"pool",varasm_status,pool> pool;
	 generic_field_name <"deferred_constants",varasm_status,deferred_constants> deferred_constants;
}; 
class CLS_759_incoming_args{ 
	 generic_class_name <"incoming_args",incoming_args> the_class_name;
	 generic_field_name <"pops_args",incoming_args,pops_args> pops_args;
	 generic_field_name <"size",incoming_args,size> size;
	 generic_field_name <"pretend_args_size",incoming_args,pretend_args_size> pretend_args_size;
	 generic_field_name <"arg_offset_rtx",incoming_args,arg_offset_rtx> arg_offset_rtx;
	 generic_field_name <"info",incoming_args,info> info;
	 generic_field_name <"internal_arg_pointer",incoming_args,internal_arg_pointer> internal_arg_pointer;
}; 
class CLS_760_function_subsections{ 
	 generic_class_name <"function_subsections",function_subsections> the_class_name;
	 generic_field_name <"hot_section_label",function_subsections,hot_section_label> hot_section_label;
	 generic_field_name <"cold_section_label",function_subsections,cold_section_label> cold_section_label;
	 generic_field_name <"hot_section_end_label",function_subsections,hot_section_end_label> hot_section_end_label;
	 generic_field_name <"cold_section_end_label",function_subsections,cold_section_end_label> cold_section_end_label;
}; 
class CLS_761_frame_space{ 
	 generic_class_name <"frame_space",frame_space> the_class_name;
}; 
class CLS_762_frame_space{ 
	 generic_class_name <"frame_space",frame_space> the_class_name;
	 generic_field_name <"next",frame_space,next> next;
	 generic_field_name <"start",frame_space,start> start;
	 generic_field_name <"length",frame_space,length> length;
}; 
class CLS_763_expr_status{ 
	 generic_class_name <"expr_status",expr_status> the_class_name;
	 generic_field_name <"x_pending_stack_adjust",expr_status,x_pending_stack_adjust> x_pending_stack_adjust;
	 generic_field_name <"x_inhibit_defer_pop",expr_status,x_inhibit_defer_pop> x_inhibit_defer_pop;
	 generic_field_name <"x_stack_pointer_delta",expr_status,x_stack_pointer_delta> x_stack_pointer_delta;
	 generic_field_name <"x_saveregs_value",expr_status,x_saveregs_value> x_saveregs_value;
	 generic_field_name <"x_apply_args_value",expr_status,x_apply_args_value> x_apply_args_value;
	 generic_field_name <"x_forced_labels",expr_status,x_forced_labels> x_forced_labels;
}; 
class CLS_764_emit_status{ 
	 generic_class_name <"emit_status",emit_status> the_class_name;
	 generic_field_name <"x_reg_rtx_no",emit_status,x_reg_rtx_no> x_reg_rtx_no;
	 generic_field_name <"x_first_label_num",emit_status,x_first_label_num> x_first_label_num;
	 generic_field_name <"x_first_insn",emit_status,x_first_insn> x_first_insn;
	 generic_field_name <"x_last_insn",emit_status,x_last_insn> x_last_insn;
	 generic_field_name <"sequence_stack",emit_status,sequence_stack> sequence_stack;
	 generic_field_name <"x_cur_insn_uid",emit_status,x_cur_insn_uid> x_cur_insn_uid;
	 generic_field_name <"x_cur_debug_insn_uid",emit_status,x_cur_debug_insn_uid> x_cur_debug_insn_uid;
	 generic_field_name <"x_last_location",emit_status,x_last_location> x_last_location;
	 generic_field_name <"regno_pointer_align_length",emit_status,regno_pointer_align_length> regno_pointer_align_length;
	 generic_field_name <"regno_pointer_align",emit_status,regno_pointer_align> regno_pointer_align;
}; 
class CLS_765_varasm_status{ 
	 generic_class_name <"varasm_status",varasm_status> the_class_name;
	 generic_field_name <"pool",varasm_status,pool> pool;
	 generic_field_name <"deferred_constants",varasm_status,deferred_constants> deferred_constants;
}; 
class CLS_766_incoming_args{ 
	 generic_class_name <"incoming_args",incoming_args> the_class_name;
	 generic_field_name <"pops_args",incoming_args,pops_args> pops_args;
	 generic_field_name <"size",incoming_args,size> size;
	 generic_field_name <"pretend_args_size",incoming_args,pretend_args_size> pretend_args_size;
	 generic_field_name <"arg_offset_rtx",incoming_args,arg_offset_rtx> arg_offset_rtx;
	 generic_field_name <"info",incoming_args,info> info;
	 generic_field_name <"internal_arg_pointer",incoming_args,internal_arg_pointer> internal_arg_pointer;
}; 
class CLS_767_function_subsections{ 
	 generic_class_name <"function_subsections",function_subsections> the_class_name;
	 generic_field_name <"hot_section_label",function_subsections,hot_section_label> hot_section_label;
	 generic_field_name <"cold_section_label",function_subsections,cold_section_label> cold_section_label;
	 generic_field_name <"hot_section_end_label",function_subsections,hot_section_end_label> hot_section_end_label;
	 generic_field_name <"cold_section_end_label",function_subsections,cold_section_end_label> cold_section_end_label;
}; 
class CLS_768_rtl_eh{ 
	 generic_class_name <"rtl_eh",rtl_eh> the_class_name;
	 generic_field_name <"ehr_stackadj",rtl_eh,ehr_stackadj> ehr_stackadj;
	 generic_field_name <"ehr_handler",rtl_eh,ehr_handler> ehr_handler;
	 generic_field_name <"ehr_label",rtl_eh,ehr_label> ehr_label;
	 generic_field_name <"sjlj_fc",rtl_eh,sjlj_fc> sjlj_fc;
	 generic_field_name <"sjlj_exit_after",rtl_eh,sjlj_exit_after> sjlj_exit_after;
	 generic_field_name <"action_record_data",rtl_eh,action_record_data> action_record_data;
	 generic_field_name <"call_site_record",rtl_eh,call_site_record> call_site_record;
}; 
class CLS_769_initial_value_struct{ 
	 generic_class_name <"initial_value_struct",initial_value_struct> the_class_name;
}; 
class CLS_770_frame_space{ 
	 generic_class_name <"frame_space",frame_space> the_class_name;
	 generic_field_name <"next",frame_space,next> next;
	 generic_field_name <"start",frame_space,start> start;
	 generic_field_name <"length",frame_space,length> length;
}; 
class CLS_771_temp_slot{ 
	 generic_class_name <"temp_slot",temp_slot> the_class_name;
}; 
class CLS_772_rtl_data{ 
	 generic_class_name <"rtl_data",rtl_data> the_class_name;
	 generic_field_name <"expr",rtl_data,expr> expr;
	 generic_field_name <"emit",rtl_data,emit> emit;
	 generic_field_name <"varasm",rtl_data,varasm> varasm;
	 generic_field_name <"args",rtl_data,args> args;
	 generic_field_name <"subsections",rtl_data,subsections> subsections;
	 generic_field_name <"eh",rtl_data,eh> eh;
	 generic_field_name <"outgoing_args_size",rtl_data,outgoing_args_size> outgoing_args_size;
	 generic_field_name <"return_rtx",rtl_data,return_rtx> return_rtx;
	 generic_field_name <"hard_reg_initial_vals",rtl_data,hard_reg_initial_vals> hard_reg_initial_vals;
	 generic_field_name <"stack_protect_guard",rtl_data,stack_protect_guard> stack_protect_guard;
	 generic_field_name <"x_nonlocal_goto_handler_labels",rtl_data,x_nonlocal_goto_handler_labels> x_nonlocal_goto_handler_labels;
	 generic_field_name <"x_return_label",rtl_data,x_return_label> x_return_label;
	 generic_field_name <"x_naked_return_label",rtl_data,x_naked_return_label> x_naked_return_label;
	 generic_field_name <"x_stack_slot_list",rtl_data,x_stack_slot_list> x_stack_slot_list;
	 generic_field_name <"frame_space_list",rtl_data,frame_space_list> frame_space_list;
	 generic_field_name <"x_stack_check_probe_note",rtl_data,x_stack_check_probe_note> x_stack_check_probe_note;
	 generic_field_name <"x_arg_pointer_save_area",rtl_data,x_arg_pointer_save_area> x_arg_pointer_save_area;
	 generic_field_name <"drap_reg",rtl_data,drap_reg> drap_reg;
	 generic_field_name <"x_frame_offset",rtl_data,x_frame_offset> x_frame_offset;
	 generic_field_name <"x_parm_birth_insn",rtl_data,x_parm_birth_insn> x_parm_birth_insn;
	 generic_field_name <"x_used_temp_slots",rtl_data,x_used_temp_slots> x_used_temp_slots;
	 generic_field_name <"x_avail_temp_slots",rtl_data,x_avail_temp_slots> x_avail_temp_slots;
	 generic_field_name <"x_temp_slot_level",rtl_data,x_temp_slot_level> x_temp_slot_level;
	 generic_field_name <"stack_alignment_needed",rtl_data,stack_alignment_needed> stack_alignment_needed;
	 generic_field_name <"preferred_stack_boundary",rtl_data,preferred_stack_boundary> preferred_stack_boundary;
	 generic_field_name <"parm_stack_boundary",rtl_data,parm_stack_boundary> parm_stack_boundary;
	 generic_field_name <"max_used_stack_slot_alignment",rtl_data,max_used_stack_slot_alignment> max_used_stack_slot_alignment;
	 generic_field_name <"stack_alignment_estimated",rtl_data,stack_alignment_estimated> stack_alignment_estimated;
	 generic_field_name <"epilogue_delay_list",rtl_data,epilogue_delay_list> epilogue_delay_list;
	 generic_field_name <"accesses_prior_frames",rtl_data,accesses_prior_frames> accesses_prior_frames;
	 generic_field_name <"calls_eh_return",rtl_data,calls_eh_return> calls_eh_return;
	 generic_field_name <"saves_all_registers",rtl_data,saves_all_registers> saves_all_registers;
	 generic_field_name <"has_nonlocal_goto",rtl_data,has_nonlocal_goto> has_nonlocal_goto;
	 generic_field_name <"has_asm_statement",rtl_data,has_asm_statement> has_asm_statement;
	 generic_field_name <"all_throwers_are_sibcalls",rtl_data,all_throwers_are_sibcalls> all_throwers_are_sibcalls;
	 generic_field_name <"limit_stack",rtl_data,limit_stack> limit_stack;
	 generic_field_name <"profile",rtl_data,profile> profile;
	 generic_field_name <"uses_const_pool",rtl_data,uses_const_pool> uses_const_pool;
	 generic_field_name <"uses_pic_offset_table",rtl_data,uses_pic_offset_table> uses_pic_offset_table;
	 generic_field_name <"uses_eh_lsda",rtl_data,uses_eh_lsda> uses_eh_lsda;
	 generic_field_name <"tail_call_emit",rtl_data,tail_call_emit> tail_call_emit;
	 generic_field_name <"arg_pointer_save_area_init",rtl_data,arg_pointer_save_area_init> arg_pointer_save_area_init;
	 generic_field_name <"frame_pointer_needed",rtl_data,frame_pointer_needed> frame_pointer_needed;
	 generic_field_name <"maybe_hot_insn_p",rtl_data,maybe_hot_insn_p> maybe_hot_insn_p;
	 generic_field_name <"stack_realign_needed",rtl_data,stack_realign_needed> stack_realign_needed;
	 generic_field_name <"stack_realign_tried",rtl_data,stack_realign_tried> stack_realign_tried;
	 generic_field_name <"need_drap",rtl_data,need_drap> need_drap;
	 generic_field_name <"stack_realign_processed",rtl_data,stack_realign_processed> stack_realign_processed;
	 generic_field_name <"stack_realign_finalized",rtl_data,stack_realign_finalized> stack_realign_finalized;
	 generic_field_name <"dbr_scheduled_p",rtl_data,dbr_scheduled_p> dbr_scheduled_p;
	 generic_field_name <"nothrow",rtl_data,nothrow> nothrow;
	 generic_field_name <"shrink_wrapped",rtl_data,shrink_wrapped> shrink_wrapped;
	 generic_field_name <"asm_clobbers",rtl_data,asm_clobbers> asm_clobbers;
}; 
class CLS_773_rtl_data{ 
	 generic_class_name <"rtl_data",rtl_data> the_class_name;
	 generic_field_name <"expr",rtl_data,expr> expr;
	 generic_field_name <"emit",rtl_data,emit> emit;
	 generic_field_name <"varasm",rtl_data,varasm> varasm;
	 generic_field_name <"args",rtl_data,args> args;
	 generic_field_name <"subsections",rtl_data,subsections> subsections;
	 generic_field_name <"eh",rtl_data,eh> eh;
	 generic_field_name <"outgoing_args_size",rtl_data,outgoing_args_size> outgoing_args_size;
	 generic_field_name <"return_rtx",rtl_data,return_rtx> return_rtx;
	 generic_field_name <"hard_reg_initial_vals",rtl_data,hard_reg_initial_vals> hard_reg_initial_vals;
	 generic_field_name <"stack_protect_guard",rtl_data,stack_protect_guard> stack_protect_guard;
	 generic_field_name <"x_nonlocal_goto_handler_labels",rtl_data,x_nonlocal_goto_handler_labels> x_nonlocal_goto_handler_labels;
	 generic_field_name <"x_return_label",rtl_data,x_return_label> x_return_label;
	 generic_field_name <"x_naked_return_label",rtl_data,x_naked_return_label> x_naked_return_label;
	 generic_field_name <"x_stack_slot_list",rtl_data,x_stack_slot_list> x_stack_slot_list;
	 generic_field_name <"frame_space_list",rtl_data,frame_space_list> frame_space_list;
	 generic_field_name <"x_stack_check_probe_note",rtl_data,x_stack_check_probe_note> x_stack_check_probe_note;
	 generic_field_name <"x_arg_pointer_save_area",rtl_data,x_arg_pointer_save_area> x_arg_pointer_save_area;
	 generic_field_name <"drap_reg",rtl_data,drap_reg> drap_reg;
	 generic_field_name <"x_frame_offset",rtl_data,x_frame_offset> x_frame_offset;
	 generic_field_name <"x_parm_birth_insn",rtl_data,x_parm_birth_insn> x_parm_birth_insn;
	 generic_field_name <"x_used_temp_slots",rtl_data,x_used_temp_slots> x_used_temp_slots;
	 generic_field_name <"x_avail_temp_slots",rtl_data,x_avail_temp_slots> x_avail_temp_slots;
	 generic_field_name <"x_temp_slot_level",rtl_data,x_temp_slot_level> x_temp_slot_level;
	 generic_field_name <"stack_alignment_needed",rtl_data,stack_alignment_needed> stack_alignment_needed;
	 generic_field_name <"preferred_stack_boundary",rtl_data,preferred_stack_boundary> preferred_stack_boundary;
	 generic_field_name <"parm_stack_boundary",rtl_data,parm_stack_boundary> parm_stack_boundary;
	 generic_field_name <"max_used_stack_slot_alignment",rtl_data,max_used_stack_slot_alignment> max_used_stack_slot_alignment;
	 generic_field_name <"stack_alignment_estimated",rtl_data,stack_alignment_estimated> stack_alignment_estimated;
	 generic_field_name <"epilogue_delay_list",rtl_data,epilogue_delay_list> epilogue_delay_list;
	 generic_field_name <"accesses_prior_frames",rtl_data,accesses_prior_frames> accesses_prior_frames;
	 generic_field_name <"calls_eh_return",rtl_data,calls_eh_return> calls_eh_return;
	 generic_field_name <"saves_all_registers",rtl_data,saves_all_registers> saves_all_registers;
	 generic_field_name <"has_nonlocal_goto",rtl_data,has_nonlocal_goto> has_nonlocal_goto;
	 generic_field_name <"has_asm_statement",rtl_data,has_asm_statement> has_asm_statement;
	 generic_field_name <"all_throwers_are_sibcalls",rtl_data,all_throwers_are_sibcalls> all_throwers_are_sibcalls;
	 generic_field_name <"limit_stack",rtl_data,limit_stack> limit_stack;
	 generic_field_name <"profile",rtl_data,profile> profile;
	 generic_field_name <"uses_const_pool",rtl_data,uses_const_pool> uses_const_pool;
	 generic_field_name <"uses_pic_offset_table",rtl_data,uses_pic_offset_table> uses_pic_offset_table;
	 generic_field_name <"uses_eh_lsda",rtl_data,uses_eh_lsda> uses_eh_lsda;
	 generic_field_name <"tail_call_emit",rtl_data,tail_call_emit> tail_call_emit;
	 generic_field_name <"arg_pointer_save_area_init",rtl_data,arg_pointer_save_area_init> arg_pointer_save_area_init;
	 generic_field_name <"frame_pointer_needed",rtl_data,frame_pointer_needed> frame_pointer_needed;
	 generic_field_name <"maybe_hot_insn_p",rtl_data,maybe_hot_insn_p> maybe_hot_insn_p;
	 generic_field_name <"stack_realign_needed",rtl_data,stack_realign_needed> stack_realign_needed;
	 generic_field_name <"stack_realign_tried",rtl_data,stack_realign_tried> stack_realign_tried;
	 generic_field_name <"need_drap",rtl_data,need_drap> need_drap;
	 generic_field_name <"stack_realign_processed",rtl_data,stack_realign_processed> stack_realign_processed;
	 generic_field_name <"stack_realign_finalized",rtl_data,stack_realign_finalized> stack_realign_finalized;
	 generic_field_name <"dbr_scheduled_p",rtl_data,dbr_scheduled_p> dbr_scheduled_p;
	 generic_field_name <"nothrow",rtl_data,nothrow> nothrow;
	 generic_field_name <"shrink_wrapped",rtl_data,shrink_wrapped> shrink_wrapped;
	 generic_field_name <"asm_clobbers",rtl_data,asm_clobbers> asm_clobbers;
}; 
class CLS_774_stack_usage{ 
	 generic_class_name <"stack_usage",stack_usage> the_class_name;
	 generic_field_name <"static_stack_size",stack_usage,static_stack_size> static_stack_size;
	 generic_field_name <"dynamic_stack_size",stack_usage,dynamic_stack_size> dynamic_stack_size;
	 generic_field_name <"pushed_stack_size",stack_usage,pushed_stack_size> pushed_stack_size;
	 generic_field_name <"has_unbounded_dynamic_stack_size",stack_usage,has_unbounded_dynamic_stack_size> has_unbounded_dynamic_stack_size;
}; 
class CLS_775_eh_status{ 
	 generic_class_name <"eh_status",eh_status> the_class_name;
}; 
class CLS_776_control_flow_graph{ 
	 generic_class_name <"control_flow_graph",control_flow_graph> the_class_name;
}; 
class CLS_777_gimple_seq_d{ 
	 generic_class_name <"gimple_seq_d",gimple_seq_d> the_class_name;
}; 
class CLS_778_gimple_df{ 
	 generic_class_name <"gimple_df",gimple_df> the_class_name;
}; 
class CLS_779_loops{ 
	 generic_class_name <"loops",loops> the_class_name;
}; 
class CLS_780_stack_usage{ 
	 generic_class_name <"stack_usage",stack_usage> the_class_name;
	 generic_field_name <"static_stack_size",stack_usage,static_stack_size> static_stack_size;
	 generic_field_name <"dynamic_stack_size",stack_usage,dynamic_stack_size> dynamic_stack_size;
	 generic_field_name <"pushed_stack_size",stack_usage,pushed_stack_size> pushed_stack_size;
	 generic_field_name <"has_unbounded_dynamic_stack_size",stack_usage,has_unbounded_dynamic_stack_size> has_unbounded_dynamic_stack_size;
}; 
class CLS_781_machine_function{ 
	 generic_class_name <"machine_function",machine_function> the_class_name;
	 generic_field_name <"stack_locals",machine_function,stack_locals> stack_locals;
	 generic_field_name <"some_ld_name",machine_function,some_ld_name> some_ld_name;
	 generic_field_name <"varargs_gpr_size",machine_function,varargs_gpr_size> varargs_gpr_size;
	 generic_field_name <"varargs_fpr_size",machine_function,varargs_fpr_size> varargs_fpr_size;
	 generic_field_name <"optimize_mode_switching",machine_function,optimize_mode_switching> optimize_mode_switching;
	 generic_field_name <"use_fast_prologue_epilogue_nregs",machine_function,use_fast_prologue_epilogue_nregs> use_fast_prologue_epilogue_nregs;
	 generic_field_name <"split_stack_varargs_pointer",machine_function,split_stack_varargs_pointer> split_stack_varargs_pointer;
	 generic_field_name <"call_abi",machine_function,call_abi> call_abi;
	 generic_field_name <"accesses_prev_frame",machine_function,accesses_prev_frame> accesses_prev_frame;
	 generic_field_name <"needs_cld",machine_function,needs_cld> needs_cld;
	 generic_field_name <"use_fast_prologue_epilogue",machine_function,use_fast_prologue_epilogue> use_fast_prologue_epilogue;
	 generic_field_name <"tls_descriptor_call_expanded_p",machine_function,tls_descriptor_call_expanded_p> tls_descriptor_call_expanded_p;
	 generic_field_name <"static_chain_on_stack",machine_function,static_chain_on_stack> static_chain_on_stack;
	 generic_field_name <"caller_pass_avx256_p",machine_function,caller_pass_avx256_p> caller_pass_avx256_p;
	 generic_field_name <"caller_return_avx256_p",machine_function,caller_return_avx256_p> caller_return_avx256_p;
	 generic_field_name <"callee_pass_avx256_p",machine_function,callee_pass_avx256_p> callee_pass_avx256_p;
	 generic_field_name <"callee_return_avx256_p",machine_function,callee_return_avx256_p> callee_return_avx256_p;
	 generic_field_name <"rescan_vzeroupper_p",machine_function,rescan_vzeroupper_p> rescan_vzeroupper_p;
	 generic_field_name <"fs",machine_function,fs> fs;
	 generic_field_name <"seh",machine_function,seh> seh;
}; 
class CLS_782_language_function{ 
	 generic_class_name <"language_function",language_function> the_class_name;
}; 
class CLS_783_dw_fde_struct{ 
	 generic_class_name <"dw_fde_struct",dw_fde_struct> the_class_name;
}; 
class CLS_784_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_785_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_786_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_787_types_used_by_vars_entry{ 
	 generic_class_name <"types_used_by_vars_entry",types_used_by_vars_entry> the_class_name;
	 generic_field_name <"type",types_used_by_vars_entry,type> type;
	 generic_field_name <"var_decl",types_used_by_vars_entry,var_decl> var_decl;
}; 
class CLS_788_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_789_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_790_machine_function{ 
	 generic_class_name <"machine_function",machine_function> the_class_name;
	 generic_field_name <"stack_locals",machine_function,stack_locals> stack_locals;
	 generic_field_name <"some_ld_name",machine_function,some_ld_name> some_ld_name;
	 generic_field_name <"varargs_gpr_size",machine_function,varargs_gpr_size> varargs_gpr_size;
	 generic_field_name <"varargs_fpr_size",machine_function,varargs_fpr_size> varargs_fpr_size;
	 generic_field_name <"optimize_mode_switching",machine_function,optimize_mode_switching> optimize_mode_switching;
	 generic_field_name <"use_fast_prologue_epilogue_nregs",machine_function,use_fast_prologue_epilogue_nregs> use_fast_prologue_epilogue_nregs;
	 generic_field_name <"split_stack_varargs_pointer",machine_function,split_stack_varargs_pointer> split_stack_varargs_pointer;
	 generic_field_name <"call_abi",machine_function,call_abi> call_abi;
	 generic_field_name <"accesses_prev_frame",machine_function,accesses_prev_frame> accesses_prev_frame;
	 generic_field_name <"needs_cld",machine_function,needs_cld> needs_cld;
	 generic_field_name <"use_fast_prologue_epilogue",machine_function,use_fast_prologue_epilogue> use_fast_prologue_epilogue;
	 generic_field_name <"tls_descriptor_call_expanded_p",machine_function,tls_descriptor_call_expanded_p> tls_descriptor_call_expanded_p;
	 generic_field_name <"static_chain_on_stack",machine_function,static_chain_on_stack> static_chain_on_stack;
	 generic_field_name <"caller_pass_avx256_p",machine_function,caller_pass_avx256_p> caller_pass_avx256_p;
	 generic_field_name <"caller_return_avx256_p",machine_function,caller_return_avx256_p> caller_return_avx256_p;
	 generic_field_name <"callee_pass_avx256_p",machine_function,callee_pass_avx256_p> callee_pass_avx256_p;
	 generic_field_name <"callee_return_avx256_p",machine_function,callee_return_avx256_p> callee_return_avx256_p;
	 generic_field_name <"rescan_vzeroupper_p",machine_function,rescan_vzeroupper_p> rescan_vzeroupper_p;
	 generic_field_name <"fs",machine_function,fs> fs;
	 generic_field_name <"seh",machine_function,seh> seh;
}; 
class CLS_791_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_792_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_793_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_794_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_795_splay_tree_node_s{ 
	 generic_class_name <"splay_tree_node_s",splay_tree_node_s> the_class_name;
}; 
class CLS_796_splay_tree_node_s{ 
	 generic_class_name <"splay_tree_node_s",splay_tree_node_s> the_class_name;
	 generic_field_name <"key",splay_tree_node_s,key> key;
	 generic_field_name <"value",splay_tree_node_s,value> value;
	 generic_field_name <"left",splay_tree_node_s,left> left;
	 generic_field_name <"right",splay_tree_node_s,right> right;
}; 
class CLS_797_splay_tree_s{ 
	 generic_class_name <"splay_tree_s",splay_tree_s> the_class_name;
	 generic_field_name <"root",splay_tree_s,root> root;
	 generic_field_name <"comp",splay_tree_s,comp> comp;
	 generic_field_name <"delete_key",splay_tree_s,delete_key> delete_key;
	 generic_field_name <"delete_value",splay_tree_s,delete_value> delete_value;
	 generic_field_name <"allocate",splay_tree_s,allocate> allocate;
	 generic_field_name <"deallocate",splay_tree_s,deallocate> deallocate;
	 generic_field_name <"allocate_data",splay_tree_s,allocate_data> allocate_data;
}; 
class CLS_798_splay_tree_s{ 
	 generic_class_name <"splay_tree_s",splay_tree_s> the_class_name;
	 generic_field_name <"root",splay_tree_s,root> root;
	 generic_field_name <"comp",splay_tree_s,comp> comp;
	 generic_field_name <"delete_key",splay_tree_s,delete_key> delete_key;
	 generic_field_name <"delete_value",splay_tree_s,delete_value> delete_value;
	 generic_field_name <"allocate",splay_tree_s,allocate> allocate;
	 generic_field_name <"deallocate",splay_tree_s,deallocate> deallocate;
	 generic_field_name <"allocate_data",splay_tree_s,allocate_data> allocate_data;
}; 
class CLS_799_cpp_reader{ 
	 generic_class_name <"cpp_reader",cpp_reader> the_class_name;
}; 
class CLS_800_cpp_buffer{ 
	 generic_class_name <"cpp_buffer",cpp_buffer> the_class_name;
}; 
class CLS_801_cpp_options{ 
	 generic_class_name <"cpp_options",cpp_options> the_class_name;
}; 
class CLS_802_cpp_token{ 
	 generic_class_name <"cpp_token",cpp_token> the_class_name;
}; 
class CLS_803_cpp_string{ 
	 generic_class_name <"cpp_string",cpp_string> the_class_name;
}; 
class CLS_804_cpp_hashnode{ 
	 generic_class_name <"cpp_hashnode",cpp_hashnode> the_class_name;
}; 
class CLS_805_cpp_macro{ 
	 generic_class_name <"cpp_macro",cpp_macro> the_class_name;
}; 
class CLS_806_cpp_callbacks{ 
	 generic_class_name <"cpp_callbacks",cpp_callbacks> the_class_name;
}; 
class CLS_807_cpp_dir{ 
	 generic_class_name <"cpp_dir",cpp_dir> the_class_name;
}; 
class CLS_808_answer{ 
	 generic_class_name <"answer",answer> the_class_name;
}; 
class CLS_809__cpp_file{ 
	 generic_class_name <"_cpp_file",_cpp_file> the_class_name;
}; 
class CLS_810_cpp_string{ 
	 generic_class_name <"cpp_string",cpp_string> the_class_name;
	 generic_field_name <"len",cpp_string,len> len;
	 generic_field_name <"text",cpp_string,text> text;
}; 
class CLS_811_cpp_macro_arg{ 
	 generic_class_name <"cpp_macro_arg",cpp_macro_arg> the_class_name;
	 generic_field_name <"arg_no",cpp_macro_arg,arg_no> arg_no;
}; 
class CLS_812_cpp_identifier{ 
	 generic_class_name <"cpp_identifier",cpp_identifier> the_class_name;
	 generic_field_name <"node",cpp_identifier,node> node;
}; 
class CLS_813_cpp_identifier{ 
	 generic_class_name <"cpp_identifier",cpp_identifier> the_class_name;
	 generic_field_name <"node",cpp_identifier,node> node;
}; 
class CLS_814_cpp_string{ 
	 generic_class_name <"cpp_string",cpp_string> the_class_name;
	 generic_field_name <"len",cpp_string,len> len;
	 generic_field_name <"text",cpp_string,text> text;
}; 
class CLS_815_cpp_macro_arg{ 
	 generic_class_name <"cpp_macro_arg",cpp_macro_arg> the_class_name;
	 generic_field_name <"arg_no",cpp_macro_arg,arg_no> arg_no;
}; 
class CLS_816_cpp_token{ 
	 generic_class_name <"cpp_token",cpp_token> the_class_name;
	 generic_field_name <"src_loc",cpp_token,src_loc> src_loc;
	 generic_field_name <"type",cpp_token,type> type;
	 generic_field_name <"flags",cpp_token,flags> flags;
	 generic_field_name <"val",cpp_token,val> val;
}; 
class CLS_817_cpp_options{ 
	 generic_class_name <"cpp_options",cpp_options> the_class_name;
	 generic_field_name <"tabstop",cpp_options,tabstop> tabstop;
	 generic_field_name <"lang",cpp_options,lang> lang;
	 generic_field_name <"cplusplus",cpp_options,cplusplus> cplusplus;
	 generic_field_name <"cplusplus_comments",cpp_options,cplusplus_comments> cplusplus_comments;
	 generic_field_name <"objc",cpp_options,objc> objc;
	 generic_field_name <"discard_comments",cpp_options,discard_comments> discard_comments;
	 generic_field_name <"discard_comments_in_macro_exp",cpp_options,discard_comments_in_macro_exp> discard_comments_in_macro_exp;
	 generic_field_name <"trigraphs",cpp_options,trigraphs> trigraphs;
	 generic_field_name <"digraphs",cpp_options,digraphs> digraphs;
	 generic_field_name <"extended_numbers",cpp_options,extended_numbers> extended_numbers;
	 generic_field_name <"uliterals",cpp_options,uliterals> uliterals;
	 generic_field_name <"rliterals",cpp_options,rliterals> rliterals;
	 generic_field_name <"print_include_names",cpp_options,print_include_names> print_include_names;
	 generic_field_name <"cpp_warn_deprecated",cpp_options,cpp_warn_deprecated> cpp_warn_deprecated;
	 generic_field_name <"warn_comments",cpp_options,warn_comments> warn_comments;
	 generic_field_name <"warn_missing_include_dirs",cpp_options,warn_missing_include_dirs> warn_missing_include_dirs;
	 generic_field_name <"warn_trigraphs",cpp_options,warn_trigraphs> warn_trigraphs;
	 generic_field_name <"warn_multichar",cpp_options,warn_multichar> warn_multichar;
	 generic_field_name <"cpp_warn_traditional",cpp_options,cpp_warn_traditional> cpp_warn_traditional;
	 generic_field_name <"cpp_warn_long_long",cpp_options,cpp_warn_long_long> cpp_warn_long_long;
	 generic_field_name <"warn_endif_labels",cpp_options,warn_endif_labels> warn_endif_labels;
	 generic_field_name <"warn_num_sign_change",cpp_options,warn_num_sign_change> warn_num_sign_change;
	 generic_field_name <"warn_variadic_macros",cpp_options,warn_variadic_macros> warn_variadic_macros;
	 generic_field_name <"warn_builtin_macro_redefined",cpp_options,warn_builtin_macro_redefined> warn_builtin_macro_redefined;
	 generic_field_name <"remap",cpp_options,remap> remap;
	 generic_field_name <"dollars_in_ident",cpp_options,dollars_in_ident> dollars_in_ident;
	 generic_field_name <"extended_identifiers",cpp_options,extended_identifiers> extended_identifiers;
	 generic_field_name <"warn_dollars",cpp_options,warn_dollars> warn_dollars;
	 generic_field_name <"warn_undef",cpp_options,warn_undef> warn_undef;
	 generic_field_name <"warn_unused_macros",cpp_options,warn_unused_macros> warn_unused_macros;
	 generic_field_name <"c99",cpp_options,c99> c99;
	 generic_field_name <"std",cpp_options,std> std;
	 generic_field_name <"cpp_pedantic",cpp_options,cpp_pedantic> cpp_pedantic;
	 generic_field_name <"preprocessed",cpp_options,preprocessed> preprocessed;
	 generic_field_name <"debug",cpp_options,debug> debug;
	 generic_field_name <"track_macro_expansion",cpp_options,track_macro_expansion> track_macro_expansion;
	 generic_field_name <"operator_names",cpp_options,operator_names> operator_names;
	 generic_field_name <"warn_cxx_operator_names",cpp_options,warn_cxx_operator_names> warn_cxx_operator_names;
	 generic_field_name <"traditional",cpp_options,traditional> traditional;
	 generic_field_name <"user_literals",cpp_options,user_literals> user_literals;
	 generic_field_name <"narrow_charset",cpp_options,narrow_charset> narrow_charset;
	 generic_field_name <"wide_charset",cpp_options,wide_charset> wide_charset;
	 generic_field_name <"input_charset",cpp_options,input_charset> input_charset;
	 generic_field_name <"warn_normalize",cpp_options,warn_normalize> warn_normalize;
	 generic_field_name <"warn_invalid_pch",cpp_options,warn_invalid_pch> warn_invalid_pch;
	 generic_field_name <"restore_pch_deps",cpp_options,restore_pch_deps> restore_pch_deps;
	 generic_field_name <"deps",cpp_options,deps> deps;
	 generic_field_name <"precision",cpp_options,precision> precision;
	 generic_field_name <"char_precision",cpp_options,char_precision> char_precision;
	 generic_field_name <"int_precision",cpp_options,int_precision> int_precision;
	 generic_field_name <"wchar_precision",cpp_options,wchar_precision> wchar_precision;
	 generic_field_name <"unsigned_char",cpp_options,unsigned_char> unsigned_char;
	 generic_field_name <"unsigned_wchar",cpp_options,unsigned_wchar> unsigned_wchar;
	 generic_field_name <"bytes_big_endian",cpp_options,bytes_big_endian> bytes_big_endian;
	 generic_field_name <"stdc_0_in_system_headers",cpp_options,stdc_0_in_system_headers> stdc_0_in_system_headers;
	 generic_field_name <"directives_only",cpp_options,directives_only> directives_only;
}; 
class CLS_818_line_map{ 
	 generic_class_name <"line_map",line_map> the_class_name;
	 generic_field_name <"start_location",line_map,start_location> start_location;
	 generic_field_name <"reason",line_map,reason> reason;
	 generic_field_name <"d",line_map,d> d;
}; 
class CLS_819_cpp_callbacks{ 
	 generic_class_name <"cpp_callbacks",cpp_callbacks> the_class_name;
	 generic_field_name <"line_change",cpp_callbacks,line_change> line_change;
	 generic_field_name <"file_change",cpp_callbacks,file_change> file_change;
	 generic_field_name <"dir_change",cpp_callbacks,dir_change> dir_change;
	 generic_field_name <"include",cpp_callbacks,include> include;
	 generic_field_name <"define",cpp_callbacks,define> define;
	 generic_field_name <"undef",cpp_callbacks,undef> undef;
	 generic_field_name <"ident",cpp_callbacks,ident> ident;
	 generic_field_name <"def_pragma",cpp_callbacks,def_pragma> def_pragma;
	 generic_field_name <"valid_pch",cpp_callbacks,valid_pch> valid_pch;
	 generic_field_name <"read_pch",cpp_callbacks,read_pch> read_pch;
	 generic_field_name <"missing_header",cpp_callbacks,missing_header> missing_header;
	 generic_field_name <"macro_to_expand",cpp_callbacks,macro_to_expand> macro_to_expand;
	 generic_field_name <"error",cpp_callbacks,error> error;
	 generic_field_name <"used_define",cpp_callbacks,used_define> used_define;
	 generic_field_name <"used_undef",cpp_callbacks,used_undef> used_undef;
	 generic_field_name <"before_define",cpp_callbacks,before_define> before_define;
	 generic_field_name <"used",cpp_callbacks,used> used;
	 generic_field_name <"user_builtin_macro",cpp_callbacks,user_builtin_macro> user_builtin_macro;
}; 
class CLS_820_cpp_dir{ 
	 generic_class_name <"cpp_dir",cpp_dir> the_class_name;
}; 
class CLS_821_cpp_dir{ 
	 generic_class_name <"cpp_dir",cpp_dir> the_class_name;
	 generic_field_name <"next",cpp_dir,next> next;
	 generic_field_name <"name",cpp_dir,name> name;
	 generic_field_name <"len",cpp_dir,len> len;
	 generic_field_name <"sysp",cpp_dir,sysp> sysp;
	 generic_field_name <"user_supplied_p",cpp_dir,user_supplied_p> user_supplied_p;
	 generic_field_name <"canonical_name",cpp_dir,canonical_name> canonical_name;
	 generic_field_name <"name_map",cpp_dir,name_map> name_map;
	 generic_field_name <"construct",cpp_dir,construct> construct;
	 generic_field_name <"ino",cpp_dir,ino> ino;
	 generic_field_name <"dev",cpp_dir,dev> dev;
}; 
class CLS_822_answer{ 
	 generic_class_name <"answer",answer> the_class_name;
}; 
class CLS_823_ht_identifier{ 
	 generic_class_name <"ht_identifier",ht_identifier> the_class_name;
	 generic_field_name <"str",ht_identifier,str> str;
	 generic_field_name <"len",ht_identifier,len> len;
	 generic_field_name <"hash_value",ht_identifier,hash_value> hash_value;
}; 
class CLS_824_cpp_hashnode{ 
	 generic_class_name <"cpp_hashnode",cpp_hashnode> the_class_name;
	 generic_field_name <"ident",cpp_hashnode,ident> ident;
	 generic_field_name <"is_directive",cpp_hashnode,is_directive> is_directive;
	 generic_field_name <"directive_index",cpp_hashnode,directive_index> directive_index;
	 generic_field_name <"rid_code",cpp_hashnode,rid_code> rid_code;
	 generic_field_name <"type",cpp_hashnode,type> type;
	 generic_field_name <"flags",cpp_hashnode,flags> flags;
	 generic_field_name <"value",cpp_hashnode,value> value;
}; 
class CLS_825_ht{ 
	 generic_class_name <"ht",ht> the_class_name;
	 generic_field_name <"stack",ht,stack> stack;
	 generic_field_name <"entries",ht,entries> entries;
	 generic_field_name <"alloc_node",ht,alloc_node> alloc_node;
	 generic_field_name <"alloc_subobject",ht,alloc_subobject> alloc_subobject;
	 generic_field_name <"nslots",ht,nslots> nslots;
	 generic_field_name <"nelements",ht,nelements> nelements;
	 generic_field_name <"pfile",ht,pfile> pfile;
	 generic_field_name <"searches",ht,searches> searches;
	 generic_field_name <"collisions",ht,collisions> collisions;
	 generic_field_name <"entries_owned",ht,entries_owned> entries_owned;
}; 
class CLS_826_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_827_line_maps{ 
	 generic_class_name <"line_maps",line_maps> the_class_name;
	 generic_field_name <"info_ordinary",line_maps,info_ordinary> info_ordinary;
	 generic_field_name <"info_macro",line_maps,info_macro> info_macro;
	 generic_field_name <"depth",line_maps,depth> depth;
	 generic_field_name <"trace_includes",line_maps,trace_includes> trace_includes;
	 generic_field_name <"highest_location",line_maps,highest_location> highest_location;
	 generic_field_name <"highest_line",line_maps,highest_line> highest_line;
	 generic_field_name <"max_column_hint",line_maps,max_column_hint> max_column_hint;
	 generic_field_name <"reallocator",line_maps,reallocator> reallocator;
	 generic_field_name <"round_alloc_size",line_maps,round_alloc_size> round_alloc_size;
}; 
class CLS_828_deps{ 
	 generic_class_name <"deps",deps> the_class_name;
}; 
class CLS_829_cpp_num{ 
	 generic_class_name <"cpp_num",cpp_num> the_class_name;
}; 
class CLS_830_cpp_num{ 
	 generic_class_name <"cpp_num",cpp_num> the_class_name;
	 generic_field_name <"high",cpp_num,high> high;
	 generic_field_name <"low",cpp_num,low> low;
	 generic_field_name <"unsignedp",cpp_num,unsignedp> unsignedp;
	 generic_field_name <"overflow",cpp_num,overflow> overflow;
}; 
class CLS_831__cpp_file{ 
	 generic_class_name <"_cpp_file",_cpp_file> the_class_name;
}; 
class CLS_832__cpp_file{ 
	 generic_class_name <"_cpp_file",_cpp_file> the_class_name;
}; 
class CLS_833__cpp_file{ 
	 generic_class_name <"_cpp_file",_cpp_file> the_class_name;
}; 
class CLS_834_save_macro_data{ 
	 generic_class_name <"save_macro_data",save_macro_data> the_class_name;
}; 
class CLS_835_save_macro_data{ 
	 generic_class_name <"save_macro_data",save_macro_data> the_class_name;
}; 
class CLS_836_save_macro_data{ 
	 generic_class_name <"save_macro_data",save_macro_data> the_class_name;
}; 
class CLS_837_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_838_cpp_hashnode{ 
	 generic_class_name <"cpp_hashnode",cpp_hashnode> the_class_name;
	 generic_field_name <"ident",cpp_hashnode,ident> ident;
	 generic_field_name <"is_directive",cpp_hashnode,is_directive> is_directive;
	 generic_field_name <"directive_index",cpp_hashnode,directive_index> directive_index;
	 generic_field_name <"rid_code",cpp_hashnode,rid_code> rid_code;
	 generic_field_name <"type",cpp_hashnode,type> type;
	 generic_field_name <"flags",cpp_hashnode,flags> flags;
	 generic_field_name <"value",cpp_hashnode,value> value;
}; 
class CLS_839_c_common_identifier{ 
	 generic_class_name <"c_common_identifier",c_common_identifier> the_class_name;
	 generic_field_name <"common",c_common_identifier,common> common;
	 generic_field_name <"node",c_common_identifier,node> node;
}; 
class CLS_840_c_common_resword{ 
	 generic_class_name <"c_common_resword",c_common_resword> the_class_name;
	 generic_field_name <"word",c_common_resword,word> word;
	 generic_field_name <"rid",c_common_resword,rid> rid;
	 generic_field_name <"disable",c_common_resword,disable> disable;
}; 
class CLS_841_c_common_resword{ 
	 generic_class_name <"c_common_resword",c_common_resword> the_class_name;
	 generic_field_name <"word",c_common_resword,word> word;
	 generic_field_name <"rid",c_common_resword,rid> rid;
	 generic_field_name <"disable",c_common_resword,disable> disable;
}; 
class CLS_842_sorted_fields_type{ 
	 generic_class_name <"sorted_fields_type",sorted_fields_type> the_class_name;
	 generic_field_name <"len",sorted_fields_type,len> len;
	 generic_field_name <"elts",sorted_fields_type,elts> elts;
}; 
class CLS_843_stmt_tree_s{ 
	 generic_class_name <"stmt_tree_s",stmt_tree_s> the_class_name;
	 generic_field_name <"x_cur_stmt_list",stmt_tree_s,x_cur_stmt_list> x_cur_stmt_list;
	 generic_field_name <"stmts_are_full_exprs_p",stmt_tree_s,stmts_are_full_exprs_p> stmts_are_full_exprs_p;
}; 
class CLS_844_stmt_tree_s{ 
	 generic_class_name <"stmt_tree_s",stmt_tree_s> the_class_name;
	 generic_field_name <"x_cur_stmt_list",stmt_tree_s,x_cur_stmt_list> x_cur_stmt_list;
	 generic_field_name <"stmts_are_full_exprs_p",stmt_tree_s,stmts_are_full_exprs_p> stmts_are_full_exprs_p;
}; 
class CLS_845_stmt_tree_s{ 
	 generic_class_name <"stmt_tree_s",stmt_tree_s> the_class_name;
	 generic_field_name <"x_cur_stmt_list",stmt_tree_s,x_cur_stmt_list> x_cur_stmt_list;
	 generic_field_name <"stmts_are_full_exprs_p",stmt_tree_s,stmts_are_full_exprs_p> stmts_are_full_exprs_p;
}; 
class CLS_846_c_language_function{ 
	 generic_class_name <"c_language_function",c_language_function> the_class_name;
	 generic_field_name <"x_stmt_tree",c_language_function,x_stmt_tree> x_stmt_tree;
	 generic_field_name <"local_typedefs",c_language_function,local_typedefs> local_typedefs;
}; 
class CLS_847_visibility_flags{ 
	 generic_class_name <"visibility_flags",visibility_flags> the_class_name;
	 generic_field_name <"inpragma",visibility_flags,inpragma> inpragma;
	 generic_field_name <"inlines_hidden",visibility_flags,inlines_hidden> inlines_hidden;
}; 
class CLS_848_visibility_flags{ 
	 generic_class_name <"visibility_flags",visibility_flags> the_class_name;
	 generic_field_name <"inpragma",visibility_flags,inpragma> inpragma;
	 generic_field_name <"inlines_hidden",visibility_flags,inlines_hidden> inlines_hidden;
}; 
class CLS_849_attribute_spec{ 
	 generic_class_name <"attribute_spec",attribute_spec> the_class_name;
	 generic_field_name <"name",attribute_spec,name> name;
	 generic_field_name <"min_length",attribute_spec,min_length> min_length;
	 generic_field_name <"max_length",attribute_spec,max_length> max_length;
	 generic_field_name <"decl_required",attribute_spec,decl_required> decl_required;
	 generic_field_name <"type_required",attribute_spec,type_required> type_required;
	 generic_field_name <"function_type_required",attribute_spec,function_type_required> function_type_required;
	 generic_field_name <"handler",attribute_spec,handler> handler;
	 generic_field_name <"affects_type_identity",attribute_spec,affects_type_identity> affects_type_identity;
}; 
class CLS_850_attribute_spec{ 
	 generic_class_name <"attribute_spec",attribute_spec> the_class_name;
	 generic_field_name <"name",attribute_spec,name> name;
	 generic_field_name <"min_length",attribute_spec,min_length> min_length;
	 generic_field_name <"max_length",attribute_spec,max_length> max_length;
	 generic_field_name <"decl_required",attribute_spec,decl_required> decl_required;
	 generic_field_name <"type_required",attribute_spec,type_required> type_required;
	 generic_field_name <"function_type_required",attribute_spec,function_type_required> function_type_required;
	 generic_field_name <"handler",attribute_spec,handler> handler;
	 generic_field_name <"affects_type_identity",attribute_spec,affects_type_identity> affects_type_identity;
}; 
class CLS_851_cl_option_handlers{ 
	 generic_class_name <"cl_option_handlers",cl_option_handlers> the_class_name;
}; 
class CLS_852_cl_option{ 
	 generic_class_name <"cl_option",cl_option> the_class_name;
}; 
class CLS_853_gcc_options{ 
	 generic_class_name <"gcc_options",gcc_options> the_class_name;
	 generic_field_name <"x_recip_mask",gcc_options,x_recip_mask> x_recip_mask;
	 generic_field_name <"x_frame_larger_than_size",gcc_options,x_frame_larger_than_size> x_frame_larger_than_size;
	 generic_field_name <"x_ix86_isa_flags",gcc_options,x_ix86_isa_flags> x_ix86_isa_flags;
	 generic_field_name <"x_ix86_isa_flags_explicit",gcc_options,x_ix86_isa_flags_explicit> x_ix86_isa_flags_explicit;
	 generic_field_name <"x_larger_than_size",gcc_options,x_larger_than_size> x_larger_than_size;
	 generic_field_name <"x_exit_after_options",gcc_options,x_exit_after_options> x_exit_after_options;
	 generic_field_name <"x_flag_dump_all_passed",gcc_options,x_flag_dump_all_passed> x_flag_dump_all_passed;
	 generic_field_name <"x_flag_opts_finished",gcc_options,x_flag_opts_finished> x_flag_opts_finished;
	 generic_field_name <"x_flag_stack_usage_info",gcc_options,x_flag_stack_usage_info> x_flag_stack_usage_info;
	 generic_field_name <"x_flag_warn_unused_result",gcc_options,x_flag_warn_unused_result> x_flag_warn_unused_result;
	 generic_field_name <"x_in_lto_p",gcc_options,x_in_lto_p> x_in_lto_p;
	 generic_field_name <"x_use_gnu_debug_info_extensions",gcc_options,x_use_gnu_debug_info_extensions> x_use_gnu_debug_info_extensions;
	 generic_field_name <"x_warn_frame_larger_than",gcc_options,x_warn_frame_larger_than> x_warn_frame_larger_than;
	 generic_field_name <"x_warn_larger_than",gcc_options,x_warn_larger_than> x_warn_larger_than;
	 generic_field_name <"x_help_enum_printed",gcc_options,x_help_enum_printed> x_help_enum_printed;
	 generic_field_name <"x_help_printed",gcc_options,x_help_printed> x_help_printed;
	 generic_field_name <"x_main_input_basename",gcc_options,x_main_input_basename> x_main_input_basename;
	 generic_field_name <"x_main_input_filename",gcc_options,x_main_input_filename> x_main_input_filename;
	 generic_field_name <"x_debug_info_level",gcc_options,x_debug_info_level> x_debug_info_level;
	 generic_field_name <"x_write_symbols",gcc_options,x_write_symbols> x_write_symbols;
	 generic_field_name <"x_debug_struct_generic",gcc_options,x_debug_struct_generic> x_debug_struct_generic;
	 generic_field_name <"x_debug_struct_ordinary",gcc_options,x_debug_struct_ordinary> x_debug_struct_ordinary;
	 generic_field_name <"x_graph_dump_format",gcc_options,x_graph_dump_format> x_graph_dump_format;
	 generic_field_name <"x_flag_stack_check",gcc_options,x_flag_stack_check> x_flag_stack_check;
	 generic_field_name <"x_user_vect_verbosity_level",gcc_options,x_user_vect_verbosity_level> x_user_vect_verbosity_level;
	 generic_field_name <"x_param_values",gcc_options,x_param_values> x_param_values;
	 generic_field_name <"x_flag_complex_method",gcc_options,x_flag_complex_method> x_flag_complex_method;
	 generic_field_name <"x_flag_debug_asm",gcc_options,x_flag_debug_asm> x_flag_debug_asm;
	 generic_field_name <"x_flag_dump_rtl_in_asm",gcc_options,x_flag_dump_rtl_in_asm> x_flag_dump_rtl_in_asm;
	 generic_field_name <"x_flag_evaluation_order",gcc_options,x_flag_evaluation_order> x_flag_evaluation_order;
	 generic_field_name <"x_flag_gen_aux_info",gcc_options,x_flag_gen_aux_info> x_flag_gen_aux_info;
	 generic_field_name <"x_flag_generate_lto",gcc_options,x_flag_generate_lto> x_flag_generate_lto;
	 generic_field_name <"x_flag_print_asm_name",gcc_options,x_flag_print_asm_name> x_flag_print_asm_name;
	 generic_field_name <"x_flag_shlib",gcc_options,x_flag_shlib> x_flag_shlib;
	 generic_field_name <"x_main_input_baselength",gcc_options,x_main_input_baselength> x_main_input_baselength;
	 generic_field_name <"x_optimize",gcc_options,x_optimize> x_optimize;
	 generic_field_name <"x_optimize_fast",gcc_options,x_optimize_fast> x_optimize_fast;
	 generic_field_name <"x_optimize_size",gcc_options,x_optimize_size> x_optimize_size;
	 generic_field_name <"x_recip_mask_explicit",gcc_options,x_recip_mask_explicit> x_recip_mask_explicit;
	 generic_field_name <"x_rtl_dump_and_exit",gcc_options,x_rtl_dump_and_exit> x_rtl_dump_and_exit;
	 generic_field_name <"x_target_flags",gcc_options,x_target_flags> x_target_flags;
	 generic_field_name <"x_help_columns",gcc_options,x_help_columns> x_help_columns;
	 generic_field_name <"x_initial_max_fld_align",gcc_options,x_initial_max_fld_align> x_initial_max_fld_align;
	 generic_field_name <"x_flag_instrument_functions_exclude_files",gcc_options,x_flag_instrument_functions_exclude_files> x_flag_instrument_functions_exclude_files;
	 generic_field_name <"x_flag_instrument_functions_exclude_functions",gcc_options,x_flag_instrument_functions_exclude_functions> x_flag_instrument_functions_exclude_functions;
	 generic_field_name <"x_help_flag",gcc_options,x_help_flag> x_help_flag;
	 generic_field_name <"x_flag_preprocess_only",gcc_options,x_flag_preprocess_only> x_flag_preprocess_only;
	 generic_field_name <"x_warn_abi",gcc_options,x_warn_abi> x_warn_abi;
	 generic_field_name <"x_warn_address",gcc_options,x_warn_address> x_warn_address;
	 generic_field_name <"x_warn_aggregate_return",gcc_options,x_warn_aggregate_return> x_warn_aggregate_return;
	 generic_field_name <"x_warn_array_bounds",gcc_options,x_warn_array_bounds> x_warn_array_bounds;
	 generic_field_name <"x_warn_assign_intercept",gcc_options,x_warn_assign_intercept> x_warn_assign_intercept;
	 generic_field_name <"x_warn_attributes",gcc_options,x_warn_attributes> x_warn_attributes;
	 generic_field_name <"x_warn_bad_function_cast",gcc_options,x_warn_bad_function_cast> x_warn_bad_function_cast;
	 generic_field_name <"x_warn_cxx_compat",gcc_options,x_warn_cxx_compat> x_warn_cxx_compat;
	 generic_field_name <"x_warn_cxx0x_compat",gcc_options,x_warn_cxx0x_compat> x_warn_cxx0x_compat;
	 generic_field_name <"x_warn_cast_align",gcc_options,x_warn_cast_align> x_warn_cast_align;
	 generic_field_name <"x_warn_cast_qual",gcc_options,x_warn_cast_qual> x_warn_cast_qual;
	 generic_field_name <"x_warn_char_subscripts",gcc_options,x_warn_char_subscripts> x_warn_char_subscripts;
	 generic_field_name <"x_warn_clobbered",gcc_options,x_warn_clobbered> x_warn_clobbered;
	 generic_field_name <"x_warn_conversion",gcc_options,x_warn_conversion> x_warn_conversion;
	 generic_field_name <"x_warn_conversion_null",gcc_options,x_warn_conversion_null> x_warn_conversion_null;
	 generic_field_name <"x_warn_coverage_mismatch",gcc_options,x_warn_coverage_mismatch> x_warn_coverage_mismatch;
	 generic_field_name <"x_warn_cpp",gcc_options,x_warn_cpp> x_warn_cpp;
	 generic_field_name <"x_warn_ctor_dtor_privacy",gcc_options,x_warn_ctor_dtor_privacy> x_warn_ctor_dtor_privacy;
	 generic_field_name <"x_warn_declaration_after_statement",gcc_options,x_warn_declaration_after_statement> x_warn_declaration_after_statement;
	 generic_field_name <"x_warn_delnonvdtor",gcc_options,x_warn_delnonvdtor> x_warn_delnonvdtor;
	 generic_field_name <"x_warn_deprecated",gcc_options,x_warn_deprecated> x_warn_deprecated;
	 generic_field_name <"x_warn_deprecated_decl",gcc_options,x_warn_deprecated_decl> x_warn_deprecated_decl;
	 generic_field_name <"x_warn_disabled_optimization",gcc_options,x_warn_disabled_optimization> x_warn_disabled_optimization;
	 generic_field_name <"x_warn_div_by_zero",gcc_options,x_warn_div_by_zero> x_warn_div_by_zero;
	 generic_field_name <"x_warn_double_promotion",gcc_options,x_warn_double_promotion> x_warn_double_promotion;
	 generic_field_name <"x_warn_ecpp",gcc_options,x_warn_ecpp> x_warn_ecpp;
	 generic_field_name <"x_warn_empty_body",gcc_options,x_warn_empty_body> x_warn_empty_body;
	 generic_field_name <"x_warn_enum_compare",gcc_options,x_warn_enum_compare> x_warn_enum_compare;
	 generic_field_name <"x_warnings_are_errors",gcc_options,x_warnings_are_errors> x_warnings_are_errors;
	 generic_field_name <"x_extra_warnings",gcc_options,x_extra_warnings> x_extra_warnings;
	 generic_field_name <"x_flag_extraneous_semicolon",gcc_options,x_flag_extraneous_semicolon> x_flag_extraneous_semicolon;
	 generic_field_name <"x_flag_fatal_errors",gcc_options,x_flag_fatal_errors> x_flag_fatal_errors;
	 generic_field_name <"x_warn_float_equal",gcc_options,x_warn_float_equal> x_warn_float_equal;
	 generic_field_name <"x_warn_format_contains_nul",gcc_options,x_warn_format_contains_nul> x_warn_format_contains_nul;
	 generic_field_name <"x_warn_format_extra_args",gcc_options,x_warn_format_extra_args> x_warn_format_extra_args;
	 generic_field_name <"x_warn_format_nonliteral",gcc_options,x_warn_format_nonliteral> x_warn_format_nonliteral;
	 generic_field_name <"x_warn_format_security",gcc_options,x_warn_format_security> x_warn_format_security;
	 generic_field_name <"x_warn_format_y2k",gcc_options,x_warn_format_y2k> x_warn_format_y2k;
	 generic_field_name <"x_warn_format_zero_length",gcc_options,x_warn_format_zero_length> x_warn_format_zero_length;
	 generic_field_name <"x_warn_free_nonheap_object",gcc_options,x_warn_free_nonheap_object> x_warn_free_nonheap_object;
	 generic_field_name <"x_warn_ignored_qualifiers",gcc_options,x_warn_ignored_qualifiers> x_warn_ignored_qualifiers;
	 generic_field_name <"x_warn_implicit",gcc_options,x_warn_implicit> x_warn_implicit;
	 generic_field_name <"x_warn_implicit_function_declaration",gcc_options,x_warn_implicit_function_declaration> x_warn_implicit_function_declaration;
	 generic_field_name <"x_warn_implicit_int",gcc_options,x_warn_implicit_int> x_warn_implicit_int;
	 generic_field_name <"x_warn_init_self",gcc_options,x_warn_init_self> x_warn_init_self;
	 generic_field_name <"x_warn_inline",gcc_options,x_warn_inline> x_warn_inline;
	 generic_field_name <"x_warn_int_to_pointer_cast",gcc_options,x_warn_int_to_pointer_cast> x_warn_int_to_pointer_cast;
	 generic_field_name <"x_warn_invalid_memory_model",gcc_options,x_warn_invalid_memory_model> x_warn_invalid_memory_model;
	 generic_field_name <"x_warn_invalid_offsetof",gcc_options,x_warn_invalid_offsetof> x_warn_invalid_offsetof;
	 generic_field_name <"x_warn_jump_misses_init",gcc_options,x_warn_jump_misses_init> x_warn_jump_misses_init;
	 generic_field_name <"x_warn_logical_op",gcc_options,x_warn_logical_op> x_warn_logical_op;
	 generic_field_name <"x_warn_long_long",gcc_options,x_warn_long_long> x_warn_long_long;
	 generic_field_name <"x_warn_main",gcc_options,x_warn_main> x_warn_main;
	 generic_field_name <"x_warn_maybe_uninitialized",gcc_options,x_warn_maybe_uninitialized> x_warn_maybe_uninitialized;
	 generic_field_name <"x_warn_missing_braces",gcc_options,x_warn_missing_braces> x_warn_missing_braces;
	 generic_field_name <"x_warn_missing_declarations",gcc_options,x_warn_missing_declarations> x_warn_missing_declarations;
	 generic_field_name <"x_warn_missing_field_initializers",gcc_options,x_warn_missing_field_initializers> x_warn_missing_field_initializers;
	 generic_field_name <"x_warn_missing_format_attribute",gcc_options,x_warn_missing_format_attribute> x_warn_missing_format_attribute;
	 generic_field_name <"x_warn_missing_noreturn",gcc_options,x_warn_missing_noreturn> x_warn_missing_noreturn;
	 generic_field_name <"x_warn_missing_parameter_type",gcc_options,x_warn_missing_parameter_type> x_warn_missing_parameter_type;
	 generic_field_name <"x_warn_missing_prototypes",gcc_options,x_warn_missing_prototypes> x_warn_missing_prototypes;
	 generic_field_name <"x_warn_mudflap",gcc_options,x_warn_mudflap> x_warn_mudflap;
	 generic_field_name <"x_warn_narrowing",gcc_options,x_warn_narrowing> x_warn_narrowing;
	 generic_field_name <"x_warn_nested_externs",gcc_options,x_warn_nested_externs> x_warn_nested_externs;
	 generic_field_name <"x_warn_noexcept",gcc_options,x_warn_noexcept> x_warn_noexcept;
	 generic_field_name <"x_warn_nontemplate_friend",gcc_options,x_warn_nontemplate_friend> x_warn_nontemplate_friend;
	 generic_field_name <"x_warn_nonvdtor",gcc_options,x_warn_nonvdtor> x_warn_nonvdtor;
	 generic_field_name <"x_warn_nonnull",gcc_options,x_warn_nonnull> x_warn_nonnull;
	 generic_field_name <"x_warn_old_style_cast",gcc_options,x_warn_old_style_cast> x_warn_old_style_cast;
	 generic_field_name <"x_warn_old_style_declaration",gcc_options,x_warn_old_style_declaration> x_warn_old_style_declaration;
	 generic_field_name <"x_warn_old_style_definition",gcc_options,x_warn_old_style_definition> x_warn_old_style_definition;
	 generic_field_name <"x_flag_newer",gcc_options,x_flag_newer> x_flag_newer;
	 generic_field_name <"x_warn_overflow",gcc_options,x_warn_overflow> x_warn_overflow;
	 generic_field_name <"x_warn_overlength_strings",gcc_options,x_warn_overlength_strings> x_warn_overlength_strings;
	 generic_field_name <"x_warn_overloaded_virtual",gcc_options,x_warn_overloaded_virtual> x_warn_overloaded_virtual;
	 generic_field_name <"x_warn_override_init",gcc_options,x_warn_override_init> x_warn_override_init;
	 generic_field_name <"x_warn_packed",gcc_options,x_warn_packed> x_warn_packed;
	 generic_field_name <"x_warn_packed_bitfield_compat",gcc_options,x_warn_packed_bitfield_compat> x_warn_packed_bitfield_compat;
	 generic_field_name <"x_warn_padded",gcc_options,x_warn_padded> x_warn_padded;
	 generic_field_name <"x_warn_parentheses",gcc_options,x_warn_parentheses> x_warn_parentheses;
	 generic_field_name <"x_warn_pmf2ptr",gcc_options,x_warn_pmf2ptr> x_warn_pmf2ptr;
	 generic_field_name <"x_warn_pointer_arith",gcc_options,x_warn_pointer_arith> x_warn_pointer_arith;
	 generic_field_name <"x_warn_pointer_sign",gcc_options,x_warn_pointer_sign> x_warn_pointer_sign;
	 generic_field_name <"x_warn_pointer_to_int_cast",gcc_options,x_warn_pointer_to_int_cast> x_warn_pointer_to_int_cast;
	 generic_field_name <"x_warn_pragmas",gcc_options,x_warn_pragmas> x_warn_pragmas;
	 generic_field_name <"x_warn_property_assign_default",gcc_options,x_warn_property_assign_default> x_warn_property_assign_default;
	 generic_field_name <"x_warn_protocol",gcc_options,x_warn_protocol> x_warn_protocol;
	 generic_field_name <"x_warn_psabi",gcc_options,x_warn_psabi> x_warn_psabi;
	 generic_field_name <"x_warn_redundant_decls",gcc_options,x_warn_redundant_decls> x_warn_redundant_decls;
	 generic_field_name <"x_flag_redundant",gcc_options,x_flag_redundant> x_flag_redundant;
	 generic_field_name <"x_warn_reorder",gcc_options,x_warn_reorder> x_warn_reorder;
	 generic_field_name <"x_warn_return_type",gcc_options,x_warn_return_type> x_warn_return_type;
	 generic_field_name <"x_warn_selector",gcc_options,x_warn_selector> x_warn_selector;
	 generic_field_name <"x_warn_sequence_point",gcc_options,x_warn_sequence_point> x_warn_sequence_point;
	 generic_field_name <"x_warn_shadow",gcc_options,x_warn_shadow> x_warn_shadow;
	 generic_field_name <"x_warn_sign_compare",gcc_options,x_warn_sign_compare> x_warn_sign_compare;
	 generic_field_name <"x_warn_sign_conversion",gcc_options,x_warn_sign_conversion> x_warn_sign_conversion;
	 generic_field_name <"x_warn_sign_promo",gcc_options,x_warn_sign_promo> x_warn_sign_promo;
	 generic_field_name <"x_warn_stack_protect",gcc_options,x_warn_stack_protect> x_warn_stack_protect;
	 generic_field_name <"x_warn_stack_usage",gcc_options,x_warn_stack_usage> x_warn_stack_usage;
	 generic_field_name <"x_warn_strict_aliasing",gcc_options,x_warn_strict_aliasing> x_warn_strict_aliasing;
	 generic_field_name <"x_warn_strict_null_sentinel",gcc_options,x_warn_strict_null_sentinel> x_warn_strict_null_sentinel;
	 generic_field_name <"x_warn_strict_overflow",gcc_options,x_warn_strict_overflow> x_warn_strict_overflow;
	 generic_field_name <"x_warn_strict_prototypes",gcc_options,x_warn_strict_prototypes> x_warn_strict_prototypes;
	 generic_field_name <"x_warn_strict_selector_match",gcc_options,x_warn_strict_selector_match> x_warn_strict_selector_match;
	 generic_field_name <"x_warn_suggest_attribute_const",gcc_options,x_warn_suggest_attribute_const> x_warn_suggest_attribute_const;
	 generic_field_name <"x_warn_suggest_attribute_noreturn",gcc_options,x_warn_suggest_attribute_noreturn> x_warn_suggest_attribute_noreturn;
	 generic_field_name <"x_warn_suggest_attribute_pure",gcc_options,x_warn_suggest_attribute_pure> x_warn_suggest_attribute_pure;
	 generic_field_name <"x_warn_switch",gcc_options,x_warn_switch> x_warn_switch;
	 generic_field_name <"x_warn_switch_default",gcc_options,x_warn_switch_default> x_warn_switch_default;
	 generic_field_name <"x_warn_switch_enum",gcc_options,x_warn_switch_enum> x_warn_switch_enum;
	 generic_field_name <"x_warn_sync_nand",gcc_options,x_warn_sync_nand> x_warn_sync_nand;
	 generic_field_name <"x_warn_synth",gcc_options,x_warn_synth> x_warn_synth;
	 generic_field_name <"x_warn_system_headers",gcc_options,x_warn_system_headers> x_warn_system_headers;
	 generic_field_name <"x_warn_traditional",gcc_options,x_warn_traditional> x_warn_traditional;
	 generic_field_name <"x_warn_traditional_conversion",gcc_options,x_warn_traditional_conversion> x_warn_traditional_conversion;
	 generic_field_name <"x_warn_trampolines",gcc_options,x_warn_trampolines> x_warn_trampolines;
	 generic_field_name <"x_warn_type_limits",gcc_options,x_warn_type_limits> x_warn_type_limits;
	 generic_field_name <"x_warn_undeclared_selector",gcc_options,x_warn_undeclared_selector> x_warn_undeclared_selector;
	 generic_field_name <"x_warn_uninitialized",gcc_options,x_warn_uninitialized> x_warn_uninitialized;
	 generic_field_name <"x_warn_unsafe_loop_optimizations",gcc_options,x_warn_unsafe_loop_optimizations> x_warn_unsafe_loop_optimizations;
	 generic_field_name <"x_warn_unsuffixed_float_constants",gcc_options,x_warn_unsuffixed_float_constants> x_warn_unsuffixed_float_constants;
	 generic_field_name <"x_warn_unused",gcc_options,x_warn_unused> x_warn_unused;
	 generic_field_name <"x_warn_unused_but_set_parameter",gcc_options,x_warn_unused_but_set_parameter> x_warn_unused_but_set_parameter;
	 generic_field_name <"x_warn_unused_but_set_variable",gcc_options,x_warn_unused_but_set_variable> x_warn_unused_but_set_variable;
	 generic_field_name <"x_warn_unused_function",gcc_options,x_warn_unused_function> x_warn_unused_function;
	 generic_field_name <"x_warn_unused_label",gcc_options,x_warn_unused_label> x_warn_unused_label;
	 generic_field_name <"x_warn_unused_local_typedefs",gcc_options,x_warn_unused_local_typedefs> x_warn_unused_local_typedefs;
	 generic_field_name <"x_warn_unused_parameter",gcc_options,x_warn_unused_parameter> x_warn_unused_parameter;
	 generic_field_name <"x_warn_unused_result",gcc_options,x_warn_unused_result> x_warn_unused_result;
	 generic_field_name <"x_warn_unused_value",gcc_options,x_warn_unused_value> x_warn_unused_value;
	 generic_field_name <"x_warn_unused_variable",gcc_options,x_warn_unused_variable> x_warn_unused_variable;
	 generic_field_name <"x_warn_vector_operation_performance",gcc_options,x_warn_vector_operation_performance> x_warn_vector_operation_performance;
	 generic_field_name <"x_warn_vla",gcc_options,x_warn_vla> x_warn_vla;
	 generic_field_name <"x_warn_volatile_register_var",gcc_options,x_warn_volatile_register_var> x_warn_volatile_register_var;
	 generic_field_name <"x_warn_write_strings",gcc_options,x_warn_write_strings> x_warn_write_strings;
	 generic_field_name <"x_warn_zero_as_null_pointer_constant",gcc_options,x_warn_zero_as_null_pointer_constant> x_warn_zero_as_null_pointer_constant;
	 generic_field_name <"x_aux_info_file_name",gcc_options,x_aux_info_file_name> x_aux_info_file_name;
	 generic_field_name <"x_aux_base_name",gcc_options,x_aux_base_name> x_aux_base_name;
	 generic_field_name <"x_dump_base_name",gcc_options,x_dump_base_name> x_dump_base_name;
	 generic_field_name <"x_dump_dir_name",gcc_options,x_dump_dir_name> x_dump_dir_name;
	 generic_field_name <"x_flag_pic",gcc_options,x_flag_pic> x_flag_pic;
	 generic_field_name <"x_flag_pie",gcc_options,x_flag_pie> x_flag_pie;
	 generic_field_name <"x_flag_abi_version",gcc_options,x_flag_abi_version> x_flag_abi_version;
	 generic_field_name <"x_flag_access_control",gcc_options,x_flag_access_control> x_flag_access_control;
	 generic_field_name <"x_align_functions",gcc_options,x_align_functions> x_align_functions;
	 generic_field_name <"x_align_jumps",gcc_options,x_align_jumps> x_align_jumps;
	 generic_field_name <"x_align_labels",gcc_options,x_align_labels> x_align_labels;
	 generic_field_name <"x_align_loops",gcc_options,x_align_loops> x_align_loops;
	 generic_field_name <"x_flag_allow_parameterless_variadic_functions",gcc_options,x_flag_allow_parameterless_variadic_functions> x_flag_allow_parameterless_variadic_functions;
	 generic_field_name <"x_flag_no_asm",gcc_options,x_flag_no_asm> x_flag_no_asm;
	 generic_field_name <"x_flag_assert",gcc_options,x_flag_assert> x_flag_assert;
	 generic_field_name <"x_flag_associative_math",gcc_options,x_flag_associative_math> x_flag_associative_math;
	 generic_field_name <"x_flag_asynchronous_unwind_tables",gcc_options,x_flag_asynchronous_unwind_tables> x_flag_asynchronous_unwind_tables;
	 generic_field_name <"x_flag_auto_inc_dec",gcc_options,x_flag_auto_inc_dec> x_flag_auto_inc_dec;
	 generic_field_name <"x_flag_bootstrap_classes",gcc_options,x_flag_bootstrap_classes> x_flag_bootstrap_classes;
	 generic_field_name <"x_flag_bounds_check",gcc_options,x_flag_bounds_check> x_flag_bounds_check;
	 generic_field_name <"x_flag_branch_on_count_reg",gcc_options,x_flag_branch_on_count_reg> x_flag_branch_on_count_reg;
	 generic_field_name <"x_flag_branch_probabilities",gcc_options,x_flag_branch_probabilities> x_flag_branch_probabilities;
	 generic_field_name <"x_flag_branch_target_load_optimize",gcc_options,x_flag_branch_target_load_optimize> x_flag_branch_target_load_optimize;
	 generic_field_name <"x_flag_branch_target_load_optimize2",gcc_options,x_flag_branch_target_load_optimize2> x_flag_branch_target_load_optimize2;
	 generic_field_name <"x_flag_btr_bb_exclusive",gcc_options,x_flag_btr_bb_exclusive> x_flag_btr_bb_exclusive;
	 generic_field_name <"x_flag_building_libgcc",gcc_options,x_flag_building_libgcc> x_flag_building_libgcc;
	 generic_field_name <"x_flag_no_builtin",gcc_options,x_flag_no_builtin> x_flag_no_builtin;
	 generic_field_name <"x_common_deferred_options",gcc_options,x_common_deferred_options> x_common_deferred_options;
	 generic_field_name <"x_flag_caller_saves",gcc_options,x_flag_caller_saves> x_flag_caller_saves;
	 generic_field_name <"x_flag_check_data_deps",gcc_options,x_flag_check_data_deps> x_flag_check_data_deps;
	 generic_field_name <"x_flag_check_new",gcc_options,x_flag_check_new> x_flag_check_new;
	 generic_field_name <"x_flag_check_references",gcc_options,x_flag_check_references> x_flag_check_references;
	 generic_field_name <"x_flag_combine_stack_adjustments",gcc_options,x_flag_combine_stack_adjustments> x_flag_combine_stack_adjustments;
	 generic_field_name <"x_flag_no_common",gcc_options,x_flag_no_common> x_flag_no_common;
	 generic_field_name <"x_flag_compare_debug",gcc_options,x_flag_compare_debug> x_flag_compare_debug;
	 generic_field_name <"x_flag_compare_debug_opt",gcc_options,x_flag_compare_debug_opt> x_flag_compare_debug_opt;
	 generic_field_name <"x_flag_compare_elim_after_reload",gcc_options,x_flag_compare_elim_after_reload> x_flag_compare_elim_after_reload;
	 generic_field_name <"x_flag_conserve_space",gcc_options,x_flag_conserve_space> x_flag_conserve_space;
	 generic_field_name <"x_flag_conserve_stack",gcc_options,x_flag_conserve_stack> x_flag_conserve_stack;
	 generic_field_name <"x_max_constexpr_depth",gcc_options,x_max_constexpr_depth> x_max_constexpr_depth;
	 generic_field_name <"x_flag_cprop_registers",gcc_options,x_flag_cprop_registers> x_flag_cprop_registers;
	 generic_field_name <"x_flag_crossjumping",gcc_options,x_flag_crossjumping> x_flag_crossjumping;
	 generic_field_name <"x_flag_cse_follow_jumps",gcc_options,x_flag_cse_follow_jumps> x_flag_cse_follow_jumps;
	 generic_field_name <"x_flag_cx_fortran_rules",gcc_options,x_flag_cx_fortran_rules> x_flag_cx_fortran_rules;
	 generic_field_name <"x_flag_cx_limited_range",gcc_options,x_flag_cx_limited_range> x_flag_cx_limited_range;
	 generic_field_name <"x_flag_data_sections",gcc_options,x_flag_data_sections> x_flag_data_sections;
	 generic_field_name <"x_flag_dce",gcc_options,x_flag_dce> x_flag_dce;
	 generic_field_name <"x_flag_debug_types_section",gcc_options,x_flag_debug_types_section> x_flag_debug_types_section;
	 generic_field_name <"x_flag_deduce_init_list",gcc_options,x_flag_deduce_init_list> x_flag_deduce_init_list;
	 generic_field_name <"x_flag_defer_pop",gcc_options,x_flag_defer_pop> x_flag_defer_pop;
	 generic_field_name <"x_flag_delayed_branch",gcc_options,x_flag_delayed_branch> x_flag_delayed_branch;
	 generic_field_name <"x_flag_delete_null_pointer_checks",gcc_options,x_flag_delete_null_pointer_checks> x_flag_delete_null_pointer_checks;
	 generic_field_name <"x_flag_devirtualize",gcc_options,x_flag_devirtualize> x_flag_devirtualize;
	 generic_field_name <"x_flag_diagnostics_show_option",gcc_options,x_flag_diagnostics_show_option> x_flag_diagnostics_show_option;
	 generic_field_name <"x_flag_dse",gcc_options,x_flag_dse> x_flag_dse;
	 generic_field_name <"x_flag_dump_final_insns",gcc_options,x_flag_dump_final_insns> x_flag_dump_final_insns;
	 generic_field_name <"x_flag_dump_go_spec",gcc_options,x_flag_dump_go_spec> x_flag_dump_go_spec;
	 generic_field_name <"x_flag_dump_noaddr",gcc_options,x_flag_dump_noaddr> x_flag_dump_noaddr;
	 generic_field_name <"x_flag_dump_passes",gcc_options,x_flag_dump_passes> x_flag_dump_passes;
	 generic_field_name <"x_flag_dump_unnumbered",gcc_options,x_flag_dump_unnumbered> x_flag_dump_unnumbered;
	 generic_field_name <"x_flag_dump_unnumbered_links",gcc_options,x_flag_dump_unnumbered_links> x_flag_dump_unnumbered_links;
	 generic_field_name <"x_flag_dwarf2_cfi_asm",gcc_options,x_flag_dwarf2_cfi_asm> x_flag_dwarf2_cfi_asm;
	 generic_field_name <"x_flag_early_inlining",gcc_options,x_flag_early_inlining> x_flag_early_inlining;
	 generic_field_name <"x_flag_elide_constructors",gcc_options,x_flag_elide_constructors> x_flag_elide_constructors;
	 generic_field_name <"x_flag_eliminate_dwarf2_dups",gcc_options,x_flag_eliminate_dwarf2_dups> x_flag_eliminate_dwarf2_dups;
	 generic_field_name <"x_flag_debug_only_used_symbols",gcc_options,x_flag_debug_only_used_symbols> x_flag_debug_only_used_symbols;
	 generic_field_name <"x_flag_eliminate_unused_debug_types",gcc_options,x_flag_eliminate_unused_debug_types> x_flag_eliminate_unused_debug_types;
	 generic_field_name <"x_flag_emit_class_debug_always",gcc_options,x_flag_emit_class_debug_always> x_flag_emit_class_debug_always;
	 generic_field_name <"x_flag_emit_class_files",gcc_options,x_flag_emit_class_files> x_flag_emit_class_files;
	 generic_field_name <"x_flag_enforce_eh_specs",gcc_options,x_flag_enforce_eh_specs> x_flag_enforce_eh_specs;
	 generic_field_name <"x_flag_exceptions",gcc_options,x_flag_exceptions> x_flag_exceptions;
	 generic_field_name <"x_flag_excess_precision_cmdline",gcc_options,x_flag_excess_precision_cmdline> x_flag_excess_precision_cmdline;
	 generic_field_name <"x_flag_expensive_optimizations",gcc_options,x_flag_expensive_optimizations> x_flag_expensive_optimizations;
	 generic_field_name <"x_flag_fat_lto_objects",gcc_options,x_flag_fat_lto_objects> x_flag_fat_lto_objects;
	 generic_field_name <"x_flag_filelist_file",gcc_options,x_flag_filelist_file> x_flag_filelist_file;
	 generic_field_name <"x_flag_finite_math_only",gcc_options,x_flag_finite_math_only> x_flag_finite_math_only;
	 generic_field_name <"x_flag_float_store",gcc_options,x_flag_float_store> x_flag_float_store;
	 generic_field_name <"x_flag_new_for_scope",gcc_options,x_flag_new_for_scope> x_flag_new_for_scope;
	 generic_field_name <"x_flag_force_classes_archive_check",gcc_options,x_flag_force_classes_archive_check> x_flag_force_classes_archive_check;
	 generic_field_name <"x_flag_forward_propagate",gcc_options,x_flag_forward_propagate> x_flag_forward_propagate;
	 generic_field_name <"x_flag_fp_contract_mode",gcc_options,x_flag_fp_contract_mode> x_flag_fp_contract_mode;
	 generic_field_name <"x_flag_friend_injection",gcc_options,x_flag_friend_injection> x_flag_friend_injection;
	 generic_field_name <"x_flag_no_function_cse",gcc_options,x_flag_no_function_cse> x_flag_no_function_cse;
	 generic_field_name <"x_flag_function_sections",gcc_options,x_flag_function_sections> x_flag_function_sections;
	 generic_field_name <"x_flag_gcse",gcc_options,x_flag_gcse> x_flag_gcse;
	 generic_field_name <"x_flag_gcse_after_reload",gcc_options,x_flag_gcse_after_reload> x_flag_gcse_after_reload;
	 generic_field_name <"x_flag_gcse_las",gcc_options,x_flag_gcse_las> x_flag_gcse_las;
	 generic_field_name <"x_flag_gcse_lm",gcc_options,x_flag_gcse_lm> x_flag_gcse_lm;
	 generic_field_name <"x_flag_gcse_sm",gcc_options,x_flag_gcse_sm> x_flag_gcse_sm;
	 generic_field_name <"x_flag_no_gnu_keywords",gcc_options,x_flag_no_gnu_keywords> x_flag_no_gnu_keywords;
	 generic_field_name <"x_flag_next_runtime",gcc_options,x_flag_next_runtime> x_flag_next_runtime;
	 generic_field_name <"x_flag_tm",gcc_options,x_flag_tm> x_flag_tm;
	 generic_field_name <"x_flag_gnu89_inline",gcc_options,x_flag_gnu89_inline> x_flag_gnu89_inline;
	 generic_field_name <"x_go_check_divide_overflow",gcc_options,x_go_check_divide_overflow> x_go_check_divide_overflow;
	 generic_field_name <"x_go_check_divide_zero",gcc_options,x_go_check_divide_zero> x_go_check_divide_zero;
	 generic_field_name <"x_flag_graphite",gcc_options,x_flag_graphite> x_flag_graphite;
	 generic_field_name <"x_flag_graphite_identity",gcc_options,x_flag_graphite_identity> x_flag_graphite_identity;
	 generic_field_name <"x_flag_guess_branch_prob",gcc_options,x_flag_guess_branch_prob> x_flag_guess_branch_prob;
	 generic_field_name <"x_flag_hash_synchronization",gcc_options,x_flag_hash_synchronization> x_flag_hash_synchronization;
	 generic_field_name <"x_flag_no_ident",gcc_options,x_flag_no_ident> x_flag_no_ident;
	 generic_field_name <"x_flag_if_conversion",gcc_options,x_flag_if_conversion> x_flag_if_conversion;
	 generic_field_name <"x_flag_if_conversion2",gcc_options,x_flag_if_conversion2> x_flag_if_conversion2;
	 generic_field_name <"x_flag_implement_inlines",gcc_options,x_flag_implement_inlines> x_flag_implement_inlines;
	 generic_field_name <"x_flag_implicit_inline_templates",gcc_options,x_flag_implicit_inline_templates> x_flag_implicit_inline_templates;
	 generic_field_name <"x_flag_implicit_templates",gcc_options,x_flag_implicit_templates> x_flag_implicit_templates;
	 generic_field_name <"x_flag_indirect_classes",gcc_options,x_flag_indirect_classes> x_flag_indirect_classes;
	 generic_field_name <"x_flag_indirect_dispatch",gcc_options,x_flag_indirect_dispatch> x_flag_indirect_dispatch;
	 generic_field_name <"x_flag_indirect_inlining",gcc_options,x_flag_indirect_inlining> x_flag_indirect_inlining;
	 generic_field_name <"x_flag_inhibit_size_directive",gcc_options,x_flag_inhibit_size_directive> x_flag_inhibit_size_directive;
	 generic_field_name <"x_flag_no_inline",gcc_options,x_flag_no_inline> x_flag_no_inline;
	 generic_field_name <"x_flag_inline_atomics",gcc_options,x_flag_inline_atomics> x_flag_inline_atomics;
	 generic_field_name <"x_flag_inline_functions",gcc_options,x_flag_inline_functions> x_flag_inline_functions;
	 generic_field_name <"x_flag_inline_functions_called_once",gcc_options,x_flag_inline_functions_called_once> x_flag_inline_functions_called_once;
	 generic_field_name <"x_flag_inline_small_functions",gcc_options,x_flag_inline_small_functions> x_flag_inline_small_functions;
	 generic_field_name <"x_flag_instrument_function_entry_exit",gcc_options,x_flag_instrument_function_entry_exit> x_flag_instrument_function_entry_exit;
	 generic_field_name <"x_flag_ipa_cp",gcc_options,x_flag_ipa_cp> x_flag_ipa_cp;
	 generic_field_name <"x_flag_ipa_cp_clone",gcc_options,x_flag_ipa_cp_clone> x_flag_ipa_cp_clone;
	 generic_field_name <"x_flag_ipa_matrix_reorg",gcc_options,x_flag_ipa_matrix_reorg> x_flag_ipa_matrix_reorg;
	 generic_field_name <"x_flag_ipa_profile",gcc_options,x_flag_ipa_profile> x_flag_ipa_profile;
	 generic_field_name <"x_flag_ipa_pta",gcc_options,x_flag_ipa_pta> x_flag_ipa_pta;
	 generic_field_name <"x_flag_ipa_pure_const",gcc_options,x_flag_ipa_pure_const> x_flag_ipa_pure_const;
	 generic_field_name <"x_flag_ipa_reference",gcc_options,x_flag_ipa_reference> x_flag_ipa_reference;
	 generic_field_name <"x_flag_ipa_sra",gcc_options,x_flag_ipa_sra> x_flag_ipa_sra;
	 generic_field_name <"x_flag_ira_algorithm",gcc_options,x_flag_ira_algorithm> x_flag_ira_algorithm;
	 generic_field_name <"x_flag_ira_loop_pressure",gcc_options,x_flag_ira_loop_pressure> x_flag_ira_loop_pressure;
	 generic_field_name <"x_flag_ira_region",gcc_options,x_flag_ira_region> x_flag_ira_region;
	 generic_field_name <"x_flag_ira_share_save_slots",gcc_options,x_flag_ira_share_save_slots> x_flag_ira_share_save_slots;
	 generic_field_name <"x_flag_ira_share_spill_slots",gcc_options,x_flag_ira_share_spill_slots> x_flag_ira_share_spill_slots;
	 generic_field_name <"x_flag_ira_verbose",gcc_options,x_flag_ira_verbose> x_flag_ira_verbose;
	 generic_field_name <"x_flag_ivopts",gcc_options,x_flag_ivopts> x_flag_ivopts;
	 generic_field_name <"x_flag_jni",gcc_options,x_flag_jni> x_flag_jni;
	 generic_field_name <"x_flag_jump_tables",gcc_options,x_flag_jump_tables> x_flag_jump_tables;
	 generic_field_name <"x_flag_keep_inline_dllexport",gcc_options,x_flag_keep_inline_dllexport> x_flag_keep_inline_dllexport;
	 generic_field_name <"x_flag_keep_inline_functions",gcc_options,x_flag_keep_inline_functions> x_flag_keep_inline_functions;
	 generic_field_name <"x_flag_keep_static_consts",gcc_options,x_flag_keep_static_consts> x_flag_keep_static_consts;
	 generic_field_name <"x_flag_lax_vector_conversions",gcc_options,x_flag_lax_vector_conversions> x_flag_lax_vector_conversions;
	 generic_field_name <"x_flag_leading_underscore",gcc_options,x_flag_leading_underscore> x_flag_leading_underscore;
	 generic_field_name <"x_flag_loop_block",gcc_options,x_flag_loop_block> x_flag_loop_block;
	 generic_field_name <"x_flag_loop_flatten",gcc_options,x_flag_loop_flatten> x_flag_loop_flatten;
	 generic_field_name <"x_flag_loop_interchange",gcc_options,x_flag_loop_interchange> x_flag_loop_interchange;
	 generic_field_name <"x_flag_loop_parallelize_all",gcc_options,x_flag_loop_parallelize_all> x_flag_loop_parallelize_all;
	 generic_field_name <"x_flag_loop_strip_mine",gcc_options,x_flag_loop_strip_mine> x_flag_loop_strip_mine;
	 generic_field_name <"x_flag_lto_compression_level",gcc_options,x_flag_lto_compression_level> x_flag_lto_compression_level;
	 generic_field_name <"x_flag_lto_partition_1to1",gcc_options,x_flag_lto_partition_1to1> x_flag_lto_partition_1to1;
	 generic_field_name <"x_flag_lto_partition_balanced",gcc_options,x_flag_lto_partition_balanced> x_flag_lto_partition_balanced;
	 generic_field_name <"x_flag_lto_partition_none",gcc_options,x_flag_lto_partition_none> x_flag_lto_partition_none;
	 generic_field_name <"x_flag_lto_report",gcc_options,x_flag_lto_report> x_flag_lto_report;
	 generic_field_name <"x_flag_lto",gcc_options,x_flag_lto> x_flag_lto;
	 generic_field_name <"x_flag_ltrans",gcc_options,x_flag_ltrans> x_flag_ltrans;
	 generic_field_name <"x_ltrans_output_list",gcc_options,x_ltrans_output_list> x_ltrans_output_list;
	 generic_field_name <"x_flag_errno_math",gcc_options,x_flag_errno_math> x_flag_errno_math;
	 generic_field_name <"x_flag_max_errors",gcc_options,x_flag_max_errors> x_flag_max_errors;
	 generic_field_name <"x_mem_report",gcc_options,x_mem_report> x_mem_report;
	 generic_field_name <"x_flag_merge_constants",gcc_options,x_flag_merge_constants> x_flag_merge_constants;
	 generic_field_name <"x_flag_merge_debug_strings",gcc_options,x_flag_merge_debug_strings> x_flag_merge_debug_strings;
	 generic_field_name <"x_flag_modulo_sched",gcc_options,x_flag_modulo_sched> x_flag_modulo_sched;
	 generic_field_name <"x_flag_modulo_sched_allow_regmoves",gcc_options,x_flag_modulo_sched_allow_regmoves> x_flag_modulo_sched_allow_regmoves;
	 generic_field_name <"x_flag_move_loop_invariants",gcc_options,x_flag_move_loop_invariants> x_flag_move_loop_invariants;
	 generic_field_name <"x_flag_ms_extensions",gcc_options,x_flag_ms_extensions> x_flag_ms_extensions;
	 generic_field_name <"x_flag_mudflap",gcc_options,x_flag_mudflap> x_flag_mudflap;
	 generic_field_name <"x_flag_mudflap_ignore_reads",gcc_options,x_flag_mudflap_ignore_reads> x_flag_mudflap_ignore_reads;
	 generic_field_name <"x_flag_nil_receivers",gcc_options,x_flag_nil_receivers> x_flag_nil_receivers;
	 generic_field_name <"x_flag_non_call_exceptions",gcc_options,x_flag_non_call_exceptions> x_flag_non_call_exceptions;
	 generic_field_name <"x_flag_no_nonansi_builtin",gcc_options,x_flag_no_nonansi_builtin> x_flag_no_nonansi_builtin;
	 generic_field_name <"x_flag_nothrow_opt",gcc_options,x_flag_nothrow_opt> x_flag_nothrow_opt;
	 generic_field_name <"x_flag_objc_abi",gcc_options,x_flag_objc_abi> x_flag_objc_abi;
	 generic_field_name <"x_flag_objc_call_cxx_cdtors",gcc_options,x_flag_objc_call_cxx_cdtors> x_flag_objc_call_cxx_cdtors;
	 generic_field_name <"x_flag_objc_direct_dispatch",gcc_options,x_flag_objc_direct_dispatch> x_flag_objc_direct_dispatch;
	 generic_field_name <"x_flag_objc_exceptions",gcc_options,x_flag_objc_exceptions> x_flag_objc_exceptions;
	 generic_field_name <"x_flag_objc_gc",gcc_options,x_flag_objc_gc> x_flag_objc_gc;
	 generic_field_name <"x_flag_objc_nilcheck",gcc_options,x_flag_objc_nilcheck> x_flag_objc_nilcheck;
	 generic_field_name <"x_flag_objc_sjlj_exceptions",gcc_options,x_flag_objc_sjlj_exceptions> x_flag_objc_sjlj_exceptions;
	 generic_field_name <"x_flag_objc1_only",gcc_options,x_flag_objc1_only> x_flag_objc1_only;
	 generic_field_name <"x_flag_omit_frame_pointer",gcc_options,x_flag_omit_frame_pointer> x_flag_omit_frame_pointer;
	 generic_field_name <"x_flag_openmp",gcc_options,x_flag_openmp> x_flag_openmp;
	 generic_field_name <"x_flag_regmove",gcc_options,x_flag_regmove> x_flag_regmove;
	 generic_field_name <"x_flag_optimize_sibling_calls",gcc_options,x_flag_optimize_sibling_calls> x_flag_optimize_sibling_calls;
	 generic_field_name <"x_flag_optimize_sci",gcc_options,x_flag_optimize_sci> x_flag_optimize_sci;
	 generic_field_name <"x_flag_optimize_strlen",gcc_options,x_flag_optimize_strlen> x_flag_optimize_strlen;
	 generic_field_name <"x_flag_pack_struct",gcc_options,x_flag_pack_struct> x_flag_pack_struct;
	 generic_field_name <"x_flag_partial_inlining",gcc_options,x_flag_partial_inlining> x_flag_partial_inlining;
	 generic_field_name <"x_flag_pcc_struct_return",gcc_options,x_flag_pcc_struct_return> x_flag_pcc_struct_return;
	 generic_field_name <"x_flag_peel_loops",gcc_options,x_flag_peel_loops> x_flag_peel_loops;
	 generic_field_name <"x_flag_no_peephole",gcc_options,x_flag_no_peephole> x_flag_no_peephole;
	 generic_field_name <"x_flag_peephole2",gcc_options,x_flag_peephole2> x_flag_peephole2;
	 generic_field_name <"x_flag_plan9_extensions",gcc_options,x_flag_plan9_extensions> x_flag_plan9_extensions;
	 generic_field_name <"x_post_ipa_mem_report",gcc_options,x_post_ipa_mem_report> x_post_ipa_mem_report;
	 generic_field_name <"x_pre_ipa_mem_report",gcc_options,x_pre_ipa_mem_report> x_pre_ipa_mem_report;
	 generic_field_name <"x_flag_predictive_commoning",gcc_options,x_flag_predictive_commoning> x_flag_predictive_commoning;
	 generic_field_name <"x_flag_prefetch_loop_arrays",gcc_options,x_flag_prefetch_loop_arrays> x_flag_prefetch_loop_arrays;
	 generic_field_name <"x_flag_pretty_templates",gcc_options,x_flag_pretty_templates> x_flag_pretty_templates;
	 generic_field_name <"x_profile_flag",gcc_options,x_profile_flag> x_profile_flag;
	 generic_field_name <"x_profile_arc_flag",gcc_options,x_profile_arc_flag> x_profile_arc_flag;
	 generic_field_name <"x_flag_profile_correction",gcc_options,x_flag_profile_correction> x_flag_profile_correction;
	 generic_field_name <"x_profile_data_prefix",gcc_options,x_profile_data_prefix> x_profile_data_prefix;
	 generic_field_name <"x_flag_profile_use",gcc_options,x_flag_profile_use> x_flag_profile_use;
	 generic_field_name <"x_flag_profile_values",gcc_options,x_flag_profile_values> x_flag_profile_values;
	 generic_field_name <"x_flag_reciprocal_math",gcc_options,x_flag_reciprocal_math> x_flag_reciprocal_math;
	 generic_field_name <"x_flag_record_gcc_switches",gcc_options,x_flag_record_gcc_switches> x_flag_record_gcc_switches;
	 generic_field_name <"x_flag_reduced_reflection",gcc_options,x_flag_reduced_reflection> x_flag_reduced_reflection;
	 generic_field_name <"x_flag_ree",gcc_options,x_flag_ree> x_flag_ree;
	 generic_field_name <"x_flag_rename_registers",gcc_options,x_flag_rename_registers> x_flag_rename_registers;
	 generic_field_name <"x_flag_reorder_blocks",gcc_options,x_flag_reorder_blocks> x_flag_reorder_blocks;
	 generic_field_name <"x_flag_reorder_blocks_and_partition",gcc_options,x_flag_reorder_blocks_and_partition> x_flag_reorder_blocks_and_partition;
	 generic_field_name <"x_flag_reorder_functions",gcc_options,x_flag_reorder_functions> x_flag_reorder_functions;
	 generic_field_name <"x_flag_replace_objc_classes",gcc_options,x_flag_replace_objc_classes> x_flag_replace_objc_classes;
	 generic_field_name <"x_go_require_return_statement",gcc_options,x_go_require_return_statement> x_go_require_return_statement;
	 generic_field_name <"x_flag_rerun_cse_after_loop",gcc_options,x_flag_rerun_cse_after_loop> x_flag_rerun_cse_after_loop;
	 generic_field_name <"x_flag_resched_modulo_sched",gcc_options,x_flag_resched_modulo_sched> x_flag_resched_modulo_sched;
	 generic_field_name <"x_flag_rounding_math",gcc_options,x_flag_rounding_math> x_flag_rounding_math;
	 generic_field_name <"x_flag_rtti",gcc_options,x_flag_rtti> x_flag_rtti;
	 generic_field_name <"x_flag_sched_critical_path_heuristic",gcc_options,x_flag_sched_critical_path_heuristic> x_flag_sched_critical_path_heuristic;
	 generic_field_name <"x_flag_sched_dep_count_heuristic",gcc_options,x_flag_sched_dep_count_heuristic> x_flag_sched_dep_count_heuristic;
	 generic_field_name <"x_flag_sched_group_heuristic",gcc_options,x_flag_sched_group_heuristic> x_flag_sched_group_heuristic;
	 generic_field_name <"x_flag_schedule_interblock",gcc_options,x_flag_schedule_interblock> x_flag_schedule_interblock;
	 generic_field_name <"x_flag_sched_last_insn_heuristic",gcc_options,x_flag_sched_last_insn_heuristic> x_flag_sched_last_insn_heuristic;
	 generic_field_name <"x_flag_sched_pressure",gcc_options,x_flag_sched_pressure> x_flag_sched_pressure;
	 generic_field_name <"x_flag_sched_pressure_algorithm",gcc_options,x_flag_sched_pressure_algorithm> x_flag_sched_pressure_algorithm;
	 generic_field_name <"x_flag_sched_rank_heuristic",gcc_options,x_flag_sched_rank_heuristic> x_flag_sched_rank_heuristic;
	 generic_field_name <"x_flag_schedule_speculative",gcc_options,x_flag_schedule_speculative> x_flag_schedule_speculative;
	 generic_field_name <"x_flag_sched_spec_insn_heuristic",gcc_options,x_flag_sched_spec_insn_heuristic> x_flag_sched_spec_insn_heuristic;
	 generic_field_name <"x_flag_schedule_speculative_load",gcc_options,x_flag_schedule_speculative_load> x_flag_schedule_speculative_load;
	 generic_field_name <"x_flag_schedule_speculative_load_dangerous",gcc_options,x_flag_schedule_speculative_load_dangerous> x_flag_schedule_speculative_load_dangerous;
	 generic_field_name <"x_flag_sched_stalled_insns",gcc_options,x_flag_sched_stalled_insns> x_flag_sched_stalled_insns;
	 generic_field_name <"x_flag_sched_stalled_insns_dep",gcc_options,x_flag_sched_stalled_insns_dep> x_flag_sched_stalled_insns_dep;
	 generic_field_name <"x_sched_verbose_param",gcc_options,x_sched_verbose_param> x_sched_verbose_param;
	 generic_field_name <"x_flag_sched2_use_superblocks",gcc_options,x_flag_sched2_use_superblocks> x_flag_sched2_use_superblocks;
	 generic_field_name <"x_flag_schedule_insns",gcc_options,x_flag_schedule_insns> x_flag_schedule_insns;
	 generic_field_name <"x_flag_schedule_insns_after_reload",gcc_options,x_flag_schedule_insns_after_reload> x_flag_schedule_insns_after_reload;
	 generic_field_name <"x_flag_section_anchors",gcc_options,x_flag_section_anchors> x_flag_section_anchors;
	 generic_field_name <"x_flag_sel_sched_pipelining",gcc_options,x_flag_sel_sched_pipelining> x_flag_sel_sched_pipelining;
	 generic_field_name <"x_flag_sel_sched_pipelining_outer_loops",gcc_options,x_flag_sel_sched_pipelining_outer_loops> x_flag_sel_sched_pipelining_outer_loops;
	 generic_field_name <"x_flag_sel_sched_reschedule_pipelined",gcc_options,x_flag_sel_sched_reschedule_pipelined> x_flag_sel_sched_reschedule_pipelined;
	 generic_field_name <"x_flag_selective_scheduling",gcc_options,x_flag_selective_scheduling> x_flag_selective_scheduling;
	 generic_field_name <"x_flag_selective_scheduling2",gcc_options,x_flag_selective_scheduling2> x_flag_selective_scheduling2;
	 generic_field_name <"x_flag_short_double",gcc_options,x_flag_short_double> x_flag_short_double;
	 generic_field_name <"x_flag_short_enums",gcc_options,x_flag_short_enums> x_flag_short_enums;
	 generic_field_name <"x_flag_short_wchar",gcc_options,x_flag_short_wchar> x_flag_short_wchar;
	 generic_field_name <"x_flag_show_column",gcc_options,x_flag_show_column> x_flag_show_column;
	 generic_field_name <"x_flag_shrink_wrap",gcc_options,x_flag_shrink_wrap> x_flag_shrink_wrap;
	 generic_field_name <"x_flag_signaling_nans",gcc_options,x_flag_signaling_nans> x_flag_signaling_nans;
	 generic_field_name <"x_flag_signed_bitfields",gcc_options,x_flag_signed_bitfields> x_flag_signed_bitfields;
	 generic_field_name <"x_flag_signed_char",gcc_options,x_flag_signed_char> x_flag_signed_char;
	 generic_field_name <"x_flag_signed_zeros",gcc_options,x_flag_signed_zeros> x_flag_signed_zeros;
	 generic_field_name <"x_flag_single_precision_constant",gcc_options,x_flag_single_precision_constant> x_flag_single_precision_constant;
	 generic_field_name <"x_flag_split_ivs_in_unroller",gcc_options,x_flag_split_ivs_in_unroller> x_flag_split_ivs_in_unroller;
	 generic_field_name <"x_flag_split_stack",gcc_options,x_flag_split_stack> x_flag_split_stack;
	 generic_field_name <"x_flag_split_wide_types",gcc_options,x_flag_split_wide_types> x_flag_split_wide_types;
	 generic_field_name <"x_flag_stack_protect",gcc_options,x_flag_stack_protect> x_flag_stack_protect;
	 generic_field_name <"x_flag_stack_usage",gcc_options,x_flag_stack_usage> x_flag_stack_usage;
	 generic_field_name <"x_flag_detailed_statistics",gcc_options,x_flag_detailed_statistics> x_flag_detailed_statistics;
	 generic_field_name <"x_flag_store_check",gcc_options,x_flag_store_check> x_flag_store_check;
	 generic_field_name <"x_flag_strict_aliasing",gcc_options,x_flag_strict_aliasing> x_flag_strict_aliasing;
	 generic_field_name <"x_flag_strict_enums",gcc_options,x_flag_strict_enums> x_flag_strict_enums;
	 generic_field_name <"x_flag_strict_overflow",gcc_options,x_flag_strict_overflow> x_flag_strict_overflow;
	 generic_field_name <"x_flag_strict_volatile_bitfields",gcc_options,x_flag_strict_volatile_bitfields> x_flag_strict_volatile_bitfields;
	 generic_field_name <"x_flag_syntax_only",gcc_options,x_flag_syntax_only> x_flag_syntax_only;
	 generic_field_name <"x_flag_test_coverage",gcc_options,x_flag_test_coverage> x_flag_test_coverage;
	 generic_field_name <"x_flag_thread_jumps",gcc_options,x_flag_thread_jumps> x_flag_thread_jumps;
	 generic_field_name <"x_flag_threadsafe_statics",gcc_options,x_flag_threadsafe_statics> x_flag_threadsafe_statics;
	 generic_field_name <"x_time_report",gcc_options,x_time_report> x_time_report;
	 generic_field_name <"x_flag_tls_default",gcc_options,x_flag_tls_default> x_flag_tls_default;
	 generic_field_name <"x_flag_toplevel_reorder",gcc_options,x_flag_toplevel_reorder> x_flag_toplevel_reorder;
	 generic_field_name <"x_flag_tracer",gcc_options,x_flag_tracer> x_flag_tracer;
	 generic_field_name <"x_flag_trapping_math",gcc_options,x_flag_trapping_math> x_flag_trapping_math;
	 generic_field_name <"x_flag_trapv",gcc_options,x_flag_trapv> x_flag_trapv;
	 generic_field_name <"x_flag_tree_bit_ccp",gcc_options,x_flag_tree_bit_ccp> x_flag_tree_bit_ccp;
	 generic_field_name <"x_flag_tree_builtin_call_dce",gcc_options,x_flag_tree_builtin_call_dce> x_flag_tree_builtin_call_dce;
	 generic_field_name <"x_flag_tree_ccp",gcc_options,x_flag_tree_ccp> x_flag_tree_ccp;
	 generic_field_name <"x_flag_tree_ch",gcc_options,x_flag_tree_ch> x_flag_tree_ch;
	 generic_field_name <"x_flag_tree_copy_prop",gcc_options,x_flag_tree_copy_prop> x_flag_tree_copy_prop;
	 generic_field_name <"x_flag_tree_copyrename",gcc_options,x_flag_tree_copyrename> x_flag_tree_copyrename;
	 generic_field_name <"x_flag_tree_cselim",gcc_options,x_flag_tree_cselim> x_flag_tree_cselim;
	 generic_field_name <"x_flag_tree_dce",gcc_options,x_flag_tree_dce> x_flag_tree_dce;
	 generic_field_name <"x_flag_tree_dom",gcc_options,x_flag_tree_dom> x_flag_tree_dom;
	 generic_field_name <"x_flag_tree_dse",gcc_options,x_flag_tree_dse> x_flag_tree_dse;
	 generic_field_name <"x_flag_tree_forwprop",gcc_options,x_flag_tree_forwprop> x_flag_tree_forwprop;
	 generic_field_name <"x_flag_tree_fre",gcc_options,x_flag_tree_fre> x_flag_tree_fre;
	 generic_field_name <"x_flag_tree_loop_distribute_patterns",gcc_options,x_flag_tree_loop_distribute_patterns> x_flag_tree_loop_distribute_patterns;
	 generic_field_name <"x_flag_tree_loop_distribution",gcc_options,x_flag_tree_loop_distribution> x_flag_tree_loop_distribution;
	 generic_field_name <"x_flag_tree_loop_if_convert",gcc_options,x_flag_tree_loop_if_convert> x_flag_tree_loop_if_convert;
	 generic_field_name <"x_flag_tree_loop_if_convert_stores",gcc_options,x_flag_tree_loop_if_convert_stores> x_flag_tree_loop_if_convert_stores;
	 generic_field_name <"x_flag_tree_loop_im",gcc_options,x_flag_tree_loop_im> x_flag_tree_loop_im;
	 generic_field_name <"x_flag_tree_loop_ivcanon",gcc_options,x_flag_tree_loop_ivcanon> x_flag_tree_loop_ivcanon;
	 generic_field_name <"x_flag_tree_loop_optimize",gcc_options,x_flag_tree_loop_optimize> x_flag_tree_loop_optimize;
	 generic_field_name <"x_flag_tree_live_range_split",gcc_options,x_flag_tree_live_range_split> x_flag_tree_live_range_split;
	 generic_field_name <"x_flag_tree_parallelize_loops",gcc_options,x_flag_tree_parallelize_loops> x_flag_tree_parallelize_loops;
	 generic_field_name <"x_flag_tree_partial_pre",gcc_options,x_flag_tree_partial_pre> x_flag_tree_partial_pre;
	 generic_field_name <"x_flag_tree_phiprop",gcc_options,x_flag_tree_phiprop> x_flag_tree_phiprop;
	 generic_field_name <"x_flag_tree_pre",gcc_options,x_flag_tree_pre> x_flag_tree_pre;
	 generic_field_name <"x_flag_tree_pta",gcc_options,x_flag_tree_pta> x_flag_tree_pta;
	 generic_field_name <"x_flag_tree_reassoc",gcc_options,x_flag_tree_reassoc> x_flag_tree_reassoc;
	 generic_field_name <"x_flag_tree_scev_cprop",gcc_options,x_flag_tree_scev_cprop> x_flag_tree_scev_cprop;
	 generic_field_name <"x_flag_tree_sink",gcc_options,x_flag_tree_sink> x_flag_tree_sink;
	 generic_field_name <"x_flag_tree_slp_vectorize",gcc_options,x_flag_tree_slp_vectorize> x_flag_tree_slp_vectorize;
	 generic_field_name <"x_flag_tree_sra",gcc_options,x_flag_tree_sra> x_flag_tree_sra;
	 generic_field_name <"x_flag_tree_switch_conversion",gcc_options,x_flag_tree_switch_conversion> x_flag_tree_switch_conversion;
	 generic_field_name <"x_flag_tree_tail_merge",gcc_options,x_flag_tree_tail_merge> x_flag_tree_tail_merge;
	 generic_field_name <"x_flag_tree_ter",gcc_options,x_flag_tree_ter> x_flag_tree_ter;
	 generic_field_name <"x_flag_tree_vect_loop_version",gcc_options,x_flag_tree_vect_loop_version> x_flag_tree_vect_loop_version;
	 generic_field_name <"x_flag_tree_vectorize",gcc_options,x_flag_tree_vectorize> x_flag_tree_vectorize;
	 generic_field_name <"x_flag_tree_vrp",gcc_options,x_flag_tree_vrp> x_flag_tree_vrp;
	 generic_field_name <"x_flag_unit_at_a_time",gcc_options,x_flag_unit_at_a_time> x_flag_unit_at_a_time;
	 generic_field_name <"x_flag_unroll_all_loops",gcc_options,x_flag_unroll_all_loops> x_flag_unroll_all_loops;
	 generic_field_name <"x_flag_unroll_loops",gcc_options,x_flag_unroll_loops> x_flag_unroll_loops;
	 generic_field_name <"x_flag_unsafe_loop_optimizations",gcc_options,x_flag_unsafe_loop_optimizations> x_flag_unsafe_loop_optimizations;
	 generic_field_name <"x_flag_unsafe_math_optimizations",gcc_options,x_flag_unsafe_math_optimizations> x_flag_unsafe_math_optimizations;
	 generic_field_name <"x_flag_unswitch_loops",gcc_options,x_flag_unswitch_loops> x_flag_unswitch_loops;
	 generic_field_name <"x_flag_unwind_tables",gcc_options,x_flag_unwind_tables> x_flag_unwind_tables;
	 generic_field_name <"x_flag_use_atomic_builtins",gcc_options,x_flag_use_atomic_builtins> x_flag_use_atomic_builtins;
	 generic_field_name <"x_flag_use_boehm_gc",gcc_options,x_flag_use_boehm_gc> x_flag_use_boehm_gc;
	 generic_field_name <"x_flag_use_cxa_atexit",gcc_options,x_flag_use_cxa_atexit> x_flag_use_cxa_atexit;
	 generic_field_name <"x_flag_use_cxa_get_exception_ptr",gcc_options,x_flag_use_cxa_get_exception_ptr> x_flag_use_cxa_get_exception_ptr;
	 generic_field_name <"x_flag_use_divide_subroutine",gcc_options,x_flag_use_divide_subroutine> x_flag_use_divide_subroutine;
	 generic_field_name <"x_flag_var_tracking",gcc_options,x_flag_var_tracking> x_flag_var_tracking;
	 generic_field_name <"x_flag_var_tracking_assignments",gcc_options,x_flag_var_tracking_assignments> x_flag_var_tracking_assignments;
	 generic_field_name <"x_flag_var_tracking_assignments_toggle",gcc_options,x_flag_var_tracking_assignments_toggle> x_flag_var_tracking_assignments_toggle;
	 generic_field_name <"x_flag_var_tracking_uninit",gcc_options,x_flag_var_tracking_uninit> x_flag_var_tracking_uninit;
	 generic_field_name <"x_flag_variable_expansion_in_unroller",gcc_options,x_flag_variable_expansion_in_unroller> x_flag_variable_expansion_in_unroller;
	 generic_field_name <"x_flag_vect_cost_model",gcc_options,x_flag_vect_cost_model> x_flag_vect_cost_model;
	 generic_field_name <"x_flag_verbose_asm",gcc_options,x_flag_verbose_asm> x_flag_verbose_asm;
	 generic_field_name <"x_flag_visibility_ms_compat",gcc_options,x_flag_visibility_ms_compat> x_flag_visibility_ms_compat;
	 generic_field_name <"x_default_visibility",gcc_options,x_default_visibility> x_default_visibility;
	 generic_field_name <"x_flag_value_profile_transformations",gcc_options,x_flag_value_profile_transformations> x_flag_value_profile_transformations;
	 generic_field_name <"x_flag_weak",gcc_options,x_flag_weak> x_flag_weak;
	 generic_field_name <"x_flag_web",gcc_options,x_flag_web> x_flag_web;
	 generic_field_name <"x_flag_whole_program",gcc_options,x_flag_whole_program> x_flag_whole_program;
	 generic_field_name <"x_flag_working_directory",gcc_options,x_flag_working_directory> x_flag_working_directory;
	 generic_field_name <"x_flag_wpa",gcc_options,x_flag_wpa> x_flag_wpa;
	 generic_field_name <"x_flag_wrapv",gcc_options,x_flag_wrapv> x_flag_wrapv;
	 generic_field_name <"x_flag_zero_initialized_in_bss",gcc_options,x_flag_zero_initialized_in_bss> x_flag_zero_initialized_in_bss;
	 generic_field_name <"x_flag_zero_link",gcc_options,x_flag_zero_link> x_flag_zero_link;
	 generic_field_name <"x_dwarf_version",gcc_options,x_dwarf_version> x_dwarf_version;
	 generic_field_name <"x_flag_gen_declaration",gcc_options,x_flag_gen_declaration> x_flag_gen_declaration;
	 generic_field_name <"x_dwarf_record_gcc_switches",gcc_options,x_dwarf_record_gcc_switches> x_dwarf_record_gcc_switches;
	 generic_field_name <"x_dwarf_strict",gcc_options,x_dwarf_strict> x_dwarf_strict;
	 generic_field_name <"x_flag_gtoggle",gcc_options,x_flag_gtoggle> x_flag_gtoggle;
	 generic_field_name <"x_imultiarch",gcc_options,x_imultiarch> x_imultiarch;
	 generic_field_name <"x_plugindir_string",gcc_options,x_plugindir_string> x_plugindir_string;
	 generic_field_name <"x_ix86_abi",gcc_options,x_ix86_abi> x_ix86_abi;
	 generic_field_name <"x_flag_android",gcc_options,x_flag_android> x_flag_android;
	 generic_field_name <"x_ix86_arch_string",gcc_options,x_ix86_arch_string> x_ix86_arch_string;
	 generic_field_name <"x_ix86_asm_dialect",gcc_options,x_ix86_asm_dialect> x_ix86_asm_dialect;
	 generic_field_name <"x_linux_libc",gcc_options,x_linux_libc> x_linux_libc;
	 generic_field_name <"x_ix86_branch_cost",gcc_options,x_ix86_branch_cost> x_ix86_branch_cost;
	 generic_field_name <"x_ix86_cmodel",gcc_options,x_ix86_cmodel> x_ix86_cmodel;
	 generic_field_name <"x_flag_dispatch_scheduler",gcc_options,x_flag_dispatch_scheduler> x_flag_dispatch_scheduler;
	 generic_field_name <"x_flag_fentry",gcc_options,x_flag_fentry> x_flag_fentry;
	 generic_field_name <"x_ix86_force_drap",gcc_options,x_ix86_force_drap> x_ix86_force_drap;
	 generic_field_name <"x_ix86_fpmath",gcc_options,x_ix86_fpmath> x_ix86_fpmath;
	 generic_field_name <"x_ix86_incoming_stack_boundary_arg",gcc_options,x_ix86_incoming_stack_boundary_arg> x_ix86_incoming_stack_boundary_arg;
	 generic_field_name <"x_ix86_section_threshold",gcc_options,x_ix86_section_threshold> x_ix86_section_threshold;
	 generic_field_name <"x_ix86_preferred_stack_boundary_arg",gcc_options,x_ix86_preferred_stack_boundary_arg> x_ix86_preferred_stack_boundary_arg;
	 generic_field_name <"x_ix86_recip_name",gcc_options,x_ix86_recip_name> x_ix86_recip_name;
	 generic_field_name <"x_ix86_regparm",gcc_options,x_ix86_regparm> x_ix86_regparm;
	 generic_field_name <"x_ix86_sse2avx",gcc_options,x_ix86_sse2avx> x_ix86_sse2avx;
	 generic_field_name <"x_ix86_force_align_arg_pointer",gcc_options,x_ix86_force_align_arg_pointer> x_ix86_force_align_arg_pointer;
	 generic_field_name <"x_ix86_stringop_alg",gcc_options,x_ix86_stringop_alg> x_ix86_stringop_alg;
	 generic_field_name <"x_ix86_tls_dialect",gcc_options,x_ix86_tls_dialect> x_ix86_tls_dialect;
	 generic_field_name <"x_ix86_tune_string",gcc_options,x_ix86_tune_string> x_ix86_tune_string;
	 generic_field_name <"x_ix86_veclibabi_type",gcc_options,x_ix86_veclibabi_type> x_ix86_veclibabi_type;
	 generic_field_name <"x_asm_file_name",gcc_options,x_asm_file_name> x_asm_file_name;
	 generic_field_name <"x_pass_exit_codes",gcc_options,x_pass_exit_codes> x_pass_exit_codes;
	 generic_field_name <"x_pedantic",gcc_options,x_pedantic> x_pedantic;
	 generic_field_name <"x_flag_pedantic_errors",gcc_options,x_flag_pedantic_errors> x_flag_pedantic_errors;
	 generic_field_name <"x_use_pipes",gcc_options,x_use_pipes> x_use_pipes;
	 generic_field_name <"x_print_file_name",gcc_options,x_print_file_name> x_print_file_name;
	 generic_field_name <"x_print_multi_directory",gcc_options,x_print_multi_directory> x_print_multi_directory;
	 generic_field_name <"x_print_multi_lib",gcc_options,x_print_multi_lib> x_print_multi_lib;
	 generic_field_name <"x_print_multi_os_directory",gcc_options,x_print_multi_os_directory> x_print_multi_os_directory;
	 generic_field_name <"x_print_multiarch",gcc_options,x_print_multiarch> x_print_multiarch;
	 generic_field_name <"x_print_prog_name",gcc_options,x_print_prog_name> x_print_prog_name;
	 generic_field_name <"x_print_search_dirs",gcc_options,x_print_search_dirs> x_print_search_dirs;
	 generic_field_name <"x_print_sysroot",gcc_options,x_print_sysroot> x_print_sysroot;
	 generic_field_name <"x_print_sysroot_headers_suffix",gcc_options,x_print_sysroot_headers_suffix> x_print_sysroot_headers_suffix;
	 generic_field_name <"x_quiet_flag",gcc_options,x_quiet_flag> x_quiet_flag;
	 generic_field_name <"x_report_times",gcc_options,x_report_times> x_report_times;
	 generic_field_name <"x_flag_undef",gcc_options,x_flag_undef> x_flag_undef;
	 generic_field_name <"x_verbose_flag",gcc_options,x_verbose_flag> x_verbose_flag;
	 generic_field_name <"x_version_flag",gcc_options,x_version_flag> x_version_flag;
	 generic_field_name <"x_inhibit_warnings",gcc_options,x_inhibit_warnings> x_inhibit_warnings;
	 generic_field_name <"x_wrapper_string",gcc_options,x_wrapper_string> x_wrapper_string;
	 generic_field_name <"x_VAR_malign_functions_",gcc_options,x_VAR_malign_functions_> x_VAR_malign_functions_;
	 generic_field_name <"x_VAR_malign_jumps_",gcc_options,x_VAR_malign_jumps_> x_VAR_malign_jumps_;
	 generic_field_name <"x_VAR_malign_loops_",gcc_options,x_VAR_malign_loops_> x_VAR_malign_loops_;
	 generic_field_name <"x_VAR_mpc32",gcc_options,x_VAR_mpc32> x_VAR_mpc32;
	 generic_field_name <"x_VAR_mpc64",gcc_options,x_VAR_mpc64> x_VAR_mpc64;
	 generic_field_name <"x_VAR_mpc80",gcc_options,x_VAR_mpc80> x_VAR_mpc80;
	 generic_field_name <"frontend_set_flag_associative_math",gcc_options,frontend_set_flag_associative_math> frontend_set_flag_associative_math;
	 generic_field_name <"frontend_set_flag_cx_limited_range",gcc_options,frontend_set_flag_cx_limited_range> frontend_set_flag_cx_limited_range;
	 generic_field_name <"frontend_set_flag_finite_math_only",gcc_options,frontend_set_flag_finite_math_only> frontend_set_flag_finite_math_only;
	 generic_field_name <"frontend_set_flag_errno_math",gcc_options,frontend_set_flag_errno_math> frontend_set_flag_errno_math;
	 generic_field_name <"frontend_set_flag_reciprocal_math",gcc_options,frontend_set_flag_reciprocal_math> frontend_set_flag_reciprocal_math;
	 generic_field_name <"frontend_set_flag_rounding_math",gcc_options,frontend_set_flag_rounding_math> frontend_set_flag_rounding_math;
	 generic_field_name <"frontend_set_flag_signaling_nans",gcc_options,frontend_set_flag_signaling_nans> frontend_set_flag_signaling_nans;
	 generic_field_name <"frontend_set_flag_signed_zeros",gcc_options,frontend_set_flag_signed_zeros> frontend_set_flag_signed_zeros;
	 generic_field_name <"frontend_set_flag_trapping_math",gcc_options,frontend_set_flag_trapping_math> frontend_set_flag_trapping_math;
	 generic_field_name <"frontend_set_flag_unsafe_math_optimizations",gcc_options,frontend_set_flag_unsafe_math_optimizations> frontend_set_flag_unsafe_math_optimizations;
}; 
class CLS_854_cl_decoded_option{ 
	 generic_class_name <"cl_decoded_option",cl_decoded_option> the_class_name;
}; 
class CLS_855_c_fileinfo{ 
	 generic_class_name <"c_fileinfo",c_fileinfo> the_class_name;
	 generic_field_name <"time",c_fileinfo,time> time;
	 generic_field_name <"interface_only",c_fileinfo,interface_only> interface_only;
	 generic_field_name <"interface_unknown",c_fileinfo,interface_unknown> interface_unknown;
}; 
class CLS_856_c_fileinfo{ 
	 generic_class_name <"c_fileinfo",c_fileinfo> the_class_name;
	 generic_field_name <"time",c_fileinfo,time> time;
	 generic_field_name <"interface_only",c_fileinfo,interface_only> interface_only;
	 generic_field_name <"interface_unknown",c_fileinfo,interface_unknown> interface_unknown;
}; 
class CLS_857_line_map{ 
	 generic_class_name <"line_map",line_map> the_class_name;
	 generic_field_name <"start_location",line_map,start_location> start_location;
	 generic_field_name <"reason",line_map,reason> reason;
	 generic_field_name <"d",line_map,d> d;
}; 
class CLS_858_line_map{ 
	 generic_class_name <"line_map",line_map> the_class_name;
	 generic_field_name <"start_location",line_map,start_location> start_location;
	 generic_field_name <"reason",line_map,reason> reason;
	 generic_field_name <"d",line_map,d> d;
}; 
class CLS_859_tree_base{ 
	 generic_class_name <"tree_base",tree_base> the_class_name;
	 generic_field_name <"code",tree_base,code> code;
	 generic_field_name <"side_effects_flag",tree_base,side_effects_flag> side_effects_flag;
	 generic_field_name <"constant_flag",tree_base,constant_flag> constant_flag;
	 generic_field_name <"addressable_flag",tree_base,addressable_flag> addressable_flag;
	 generic_field_name <"volatile_flag",tree_base,volatile_flag> volatile_flag;
	 generic_field_name <"readonly_flag",tree_base,readonly_flag> readonly_flag;
	 generic_field_name <"unsigned_flag",tree_base,unsigned_flag> unsigned_flag;
	 generic_field_name <"asm_written_flag",tree_base,asm_written_flag> asm_written_flag;
	 generic_field_name <"nowarning_flag",tree_base,nowarning_flag> nowarning_flag;
	 generic_field_name <"used_flag",tree_base,used_flag> used_flag;
	 generic_field_name <"nothrow_flag",tree_base,nothrow_flag> nothrow_flag;
	 generic_field_name <"static_flag",tree_base,static_flag> static_flag;
	 generic_field_name <"public_flag",tree_base,public_flag> public_flag;
	 generic_field_name <"private_flag",tree_base,private_flag> private_flag;
	 generic_field_name <"protected_flag",tree_base,protected_flag> protected_flag;
	 generic_field_name <"deprecated_flag",tree_base,deprecated_flag> deprecated_flag;
	 generic_field_name <"saturating_flag",tree_base,saturating_flag> saturating_flag;
	 generic_field_name <"default_def_flag",tree_base,default_def_flag> default_def_flag;
	 generic_field_name <"lang_flag_0",tree_base,lang_flag_0> lang_flag_0;
	 generic_field_name <"lang_flag_1",tree_base,lang_flag_1> lang_flag_1;
	 generic_field_name <"lang_flag_2",tree_base,lang_flag_2> lang_flag_2;
	 generic_field_name <"lang_flag_3",tree_base,lang_flag_3> lang_flag_3;
	 generic_field_name <"lang_flag_4",tree_base,lang_flag_4> lang_flag_4;
	 generic_field_name <"lang_flag_5",tree_base,lang_flag_5> lang_flag_5;
	 generic_field_name <"lang_flag_6",tree_base,lang_flag_6> lang_flag_6;
	 generic_field_name <"visited",tree_base,visited> visited;
	 generic_field_name <"packed_flag",tree_base,packed_flag> packed_flag;
	 generic_field_name <"user_align",tree_base,user_align> user_align;
	 generic_field_name <"nameless_flag",tree_base,nameless_flag> nameless_flag;
	 generic_field_name <"spare",tree_base,spare> spare;
	 generic_field_name <"address_space",tree_base,address_space> address_space;
}; 
class CLS_860_tree_userdef_literal{ 
	 generic_class_name <"tree_userdef_literal",tree_userdef_literal> the_class_name;
	 generic_field_name <"base",tree_userdef_literal,base> base;
	 generic_field_name <"suffix_id",tree_userdef_literal,suffix_id> suffix_id;
	 generic_field_name <"value",tree_userdef_literal,value> value;
	 generic_field_name <"num_string",tree_userdef_literal,num_string> num_string;
}; 
class CLS_861_chunk_info{ 
	 generic_class_name <"chunk_info",chunk_info> the_class_name;
}; 
class CLS_862_chunk_info{ 
	 generic_class_name <"chunk_info",chunk_info> the_class_name;
	 generic_field_name <"prev",chunk_info,prev> prev;
	 generic_field_name <"args",chunk_info,args> args;
}; 
class CLS_863_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_864_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_865_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_866_chunk_info{ 
	 generic_class_name <"chunk_info",chunk_info> the_class_name;
	 generic_field_name <"prev",chunk_info,prev> prev;
	 generic_field_name <"args",chunk_info,args> args;
}; 
class CLS_867_pretty_print_info{ 
	 generic_class_name <"pretty_print_info",pretty_print_info> the_class_name;
}; 
class CLS_868_pretty_print_info{ 
	 generic_class_name <"pretty_print_info",pretty_print_info> the_class_name;
	 generic_field_name <"buffer",pretty_print_info,buffer> buffer;
	 generic_field_name <"prefix",pretty_print_info,prefix> prefix;
	 generic_field_name <"padding",pretty_print_info,padding> padding;
	 generic_field_name <"maximum_length",pretty_print_info,maximum_length> maximum_length;
	 generic_field_name <"indent_skip",pretty_print_info,indent_skip> indent_skip;
	 generic_field_name <"wrapping",pretty_print_info,wrapping> wrapping;
	 generic_field_name <"format_decoder",pretty_print_info,format_decoder> format_decoder;
	 generic_field_name <"emitted_prefix",pretty_print_info,emitted_prefix> emitted_prefix;
	 generic_field_name <"need_newline",pretty_print_info,need_newline> need_newline;
	 generic_field_name <"translate_identifiers",pretty_print_info,translate_identifiers> translate_identifiers;
}; 
class CLS_869_diagnostic_info{ 
	 generic_class_name <"diagnostic_info",diagnostic_info> the_class_name;
	 generic_field_name <"message",diagnostic_info,message> message;
	 generic_field_name <"location",diagnostic_info,location> location;
	 generic_field_name <"override_column",diagnostic_info,override_column> override_column;
	 generic_field_name <"x_data",diagnostic_info,x_data> x_data;
	 generic_field_name <"kind",diagnostic_info,kind> kind;
	 generic_field_name <"option_index",diagnostic_info,option_index> option_index;
}; 
class CLS_870_diagnostic_classification_change_t{ 
	 generic_class_name <"diagnostic_classification_change_t",diagnostic_classification_change_t> the_class_name;
	 generic_field_name <"location",diagnostic_classification_change_t,location> location;
	 generic_field_name <"option",diagnostic_classification_change_t,option> option;
	 generic_field_name <"kind",diagnostic_classification_change_t,kind> kind;
}; 
class CLS_871_line_map{ 
	 generic_class_name <"line_map",line_map> the_class_name;
	 generic_field_name <"start_location",line_map,start_location> start_location;
	 generic_field_name <"reason",line_map,reason> reason;
	 generic_field_name <"d",line_map,d> d;
}; 
class CLS_872_diagnostic_context{ 
	 generic_class_name <"diagnostic_context",diagnostic_context> the_class_name;
	 generic_field_name <"printer",diagnostic_context,printer> printer;
	 generic_field_name <"diagnostic_count",diagnostic_context,diagnostic_count> diagnostic_count;
	 generic_field_name <"some_warnings_are_errors",diagnostic_context,some_warnings_are_errors> some_warnings_are_errors;
	 generic_field_name <"warning_as_error_requested",diagnostic_context,warning_as_error_requested> warning_as_error_requested;
	 generic_field_name <"n_opts",diagnostic_context,n_opts> n_opts;
	 generic_field_name <"classify_diagnostic",diagnostic_context,classify_diagnostic> classify_diagnostic;
	 generic_field_name <"classification_history",diagnostic_context,classification_history> classification_history;
	 generic_field_name <"n_classification_history",diagnostic_context,n_classification_history> n_classification_history;
	 generic_field_name <"push_list",diagnostic_context,push_list> push_list;
	 generic_field_name <"n_push",diagnostic_context,n_push> n_push;
	 generic_field_name <"show_option_requested",diagnostic_context,show_option_requested> show_option_requested;
	 generic_field_name <"abort_on_error",diagnostic_context,abort_on_error> abort_on_error;
	 generic_field_name <"show_column",diagnostic_context,show_column> show_column;
	 generic_field_name <"pedantic_errors",diagnostic_context,pedantic_errors> pedantic_errors;
	 generic_field_name <"permissive",diagnostic_context,permissive> permissive;
	 generic_field_name <"opt_permissive",diagnostic_context,opt_permissive> opt_permissive;
	 generic_field_name <"fatal_errors",diagnostic_context,fatal_errors> fatal_errors;
	 generic_field_name <"dc_inhibit_warnings",diagnostic_context,dc_inhibit_warnings> dc_inhibit_warnings;
	 generic_field_name <"dc_warn_system_headers",diagnostic_context,dc_warn_system_headers> dc_warn_system_headers;
	 generic_field_name <"max_errors",diagnostic_context,max_errors> max_errors;
	 generic_field_name <"begin_diagnostic",diagnostic_context,begin_diagnostic> begin_diagnostic;
	 generic_field_name <"end_diagnostic",diagnostic_context,end_diagnostic> end_diagnostic;
	 generic_field_name <"internal_error",diagnostic_context,internal_error> internal_error;
	 generic_field_name <"option_enabled",diagnostic_context,option_enabled> option_enabled;
	 generic_field_name <"option_state",diagnostic_context,option_state> option_state;
	 generic_field_name <"option_name",diagnostic_context,option_name> option_name;
	 generic_field_name <"x_data",diagnostic_context,x_data> x_data;
	 generic_field_name <"last_module",diagnostic_context,last_module> last_module;
	 generic_field_name <"lock",diagnostic_context,lock> lock;
	 generic_field_name <"inhibit_notes_p",diagnostic_context,inhibit_notes_p> inhibit_notes_p;
}; 
class CLS_873_binding_table_s{ 
	 generic_class_name <"binding_table_s",binding_table_s> the_class_name;
}; 
class CLS_874_binding_entry_s{ 
	 generic_class_name <"binding_entry_s",binding_entry_s> the_class_name;
}; 
class CLS_875_binding_entry_s{ 
	 generic_class_name <"binding_entry_s",binding_entry_s> the_class_name;
	 generic_field_name <"chain",binding_entry_s,chain> chain;
	 generic_field_name <"name",binding_entry_s,name> name;
	 generic_field_name <"type",binding_entry_s,type> type;
}; 
class CLS_876_cxx_binding{ 
	 generic_class_name <"cxx_binding",cxx_binding> the_class_name;
}; 
class CLS_877_cp_binding_level{ 
	 generic_class_name <"cp_binding_level",cp_binding_level> the_class_name;
}; 
class CLS_878_cxx_binding{ 
	 generic_class_name <"cxx_binding",cxx_binding> the_class_name;
	 generic_field_name <"previous",cxx_binding,previous> previous;
	 generic_field_name <"value",cxx_binding,value> value;
	 generic_field_name <"type",cxx_binding,type> type;
	 generic_field_name <"scope",cxx_binding,scope> scope;
	 generic_field_name <"value_is_inherited",cxx_binding,value_is_inherited> value_is_inherited;
	 generic_field_name <"is_local",cxx_binding,is_local> is_local;
}; 
class CLS_879_cxx_saved_binding{ 
	 generic_class_name <"cxx_saved_binding",cxx_saved_binding> the_class_name;
	 generic_field_name <"identifier",cxx_saved_binding,identifier> identifier;
	 generic_field_name <"binding",cxx_saved_binding,binding> binding;
	 generic_field_name <"real_type_value",cxx_saved_binding,real_type_value> real_type_value;
}; 
class CLS_880_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_881_VEC_cxx_saved_binding_base{ 
	 generic_class_name <"VEC_cxx_saved_binding_base",VEC_cxx_saved_binding_base> the_class_name;
	 generic_field_name <"prefix",VEC_cxx_saved_binding_base,prefix> prefix;
	 generic_field_name <"vec",VEC_cxx_saved_binding_base,vec> vec;
}; 
class CLS_882_VEC_cxx_saved_binding_none{ 
	 generic_class_name <"VEC_cxx_saved_binding_none",VEC_cxx_saved_binding_none> the_class_name;
	 generic_field_name <"base",VEC_cxx_saved_binding_none,base> base;
}; 
class CLS_883_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_884_VEC_cxx_saved_binding_gc{ 
	 generic_class_name <"VEC_cxx_saved_binding_gc",VEC_cxx_saved_binding_gc> the_class_name;
	 generic_field_name <"base",VEC_cxx_saved_binding_gc,base> base;
}; 
class CLS_885_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_886_cp_class_binding{ 
	 generic_class_name <"cp_class_binding",cp_class_binding> the_class_name;
	 generic_field_name <"base",cp_class_binding,base> base;
	 generic_field_name <"identifier",cp_class_binding,identifier> identifier;
}; 
class CLS_887_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_888_VEC_cp_class_binding_base{ 
	 generic_class_name <"VEC_cp_class_binding_base",VEC_cp_class_binding_base> the_class_name;
	 generic_field_name <"prefix",VEC_cp_class_binding_base,prefix> prefix;
	 generic_field_name <"vec",VEC_cp_class_binding_base,vec> vec;
}; 
class CLS_889_VEC_cp_class_binding_none{ 
	 generic_class_name <"VEC_cp_class_binding_none",VEC_cp_class_binding_none> the_class_name;
	 generic_field_name <"base",VEC_cp_class_binding_none,base> base;
}; 
class CLS_890_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_891_VEC_cp_class_binding_gc{ 
	 generic_class_name <"VEC_cp_class_binding_gc",VEC_cp_class_binding_gc> the_class_name;
	 generic_field_name <"base",VEC_cp_class_binding_gc,base> base;
}; 
class CLS_892_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_893_cp_label_binding{ 
	 generic_class_name <"cp_label_binding",cp_label_binding> the_class_name;
	 generic_field_name <"label",cp_label_binding,label> label;
	 generic_field_name <"prev_value",cp_label_binding,prev_value> prev_value;
}; 
class CLS_894_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_895_VEC_cp_label_binding_base{ 
	 generic_class_name <"VEC_cp_label_binding_base",VEC_cp_label_binding_base> the_class_name;
	 generic_field_name <"prefix",VEC_cp_label_binding_base,prefix> prefix;
	 generic_field_name <"vec",VEC_cp_label_binding_base,vec> vec;
}; 
class CLS_896_VEC_cp_label_binding_none{ 
	 generic_class_name <"VEC_cp_label_binding_none",VEC_cp_label_binding_none> the_class_name;
	 generic_field_name <"base",VEC_cp_label_binding_none,base> base;
}; 
class CLS_897_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_898_VEC_cp_label_binding_gc{ 
	 generic_class_name <"VEC_cp_label_binding_gc",VEC_cp_label_binding_gc> the_class_name;
	 generic_field_name <"base",VEC_cp_label_binding_gc,base> base;
}; 
class CLS_899_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_900_cp_binding_level{ 
	 generic_class_name <"cp_binding_level",cp_binding_level> the_class_name;
	 generic_field_name <"names",cp_binding_level,names> names;
	 generic_field_name <"namespaces",cp_binding_level,namespaces> namespaces;
	 generic_field_name <"static_decls",cp_binding_level,static_decls> static_decls;
	 generic_field_name <"usings",cp_binding_level,usings> usings;
	 generic_field_name <"using_directives",cp_binding_level,using_directives> using_directives;
	 generic_field_name <"class_shadowed",cp_binding_level,class_shadowed> class_shadowed;
	 generic_field_name <"type_shadowed",cp_binding_level,type_shadowed> type_shadowed;
	 generic_field_name <"shadowed_labels",cp_binding_level,shadowed_labels> shadowed_labels;
	 generic_field_name <"blocks",cp_binding_level,blocks> blocks;
	 generic_field_name <"this_entity",cp_binding_level,this_entity> this_entity;
	 generic_field_name <"level_chain",cp_binding_level,level_chain> level_chain;
	 generic_field_name <"dead_vars_from_for",cp_binding_level,dead_vars_from_for> dead_vars_from_for;
	 generic_field_name <"statement_list",cp_binding_level,statement_list> statement_list;
	 generic_field_name <"binding_depth",cp_binding_level,binding_depth> binding_depth;
	 generic_field_name <"kind",cp_binding_level,kind> kind;
	 generic_field_name <"explicit_spec_p",cp_binding_level,explicit_spec_p> explicit_spec_p;
	 generic_field_name <"keep",cp_binding_level,keep> keep;
	 generic_field_name <"more_cleanups_ok",cp_binding_level,more_cleanups_ok> more_cleanups_ok;
	 generic_field_name <"have_cleanups",cp_binding_level,have_cleanups> have_cleanups;
}; 
class CLS_901_c_common_identifier{ 
	 generic_class_name <"c_common_identifier",c_common_identifier> the_class_name;
	 generic_field_name <"common",c_common_identifier,common> common;
	 generic_field_name <"node",c_common_identifier,node> node;
}; 
class CLS_902_lang_identifier{ 
	 generic_class_name <"lang_identifier",lang_identifier> the_class_name;
	 generic_field_name <"c_common",lang_identifier,c_common> c_common;
	 generic_field_name <"namespace_bindings",lang_identifier,namespace_bindings> namespace_bindings;
	 generic_field_name <"bindings",lang_identifier,bindings> bindings;
	 generic_field_name <"class_template_info",lang_identifier,class_template_info> class_template_info;
	 generic_field_name <"label_value",lang_identifier,label_value> label_value;
}; 
class CLS_903_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_904_template_parm_index_s{ 
	 generic_class_name <"template_parm_index_s",template_parm_index_s> the_class_name;
	 generic_field_name <"common",template_parm_index_s,common> common;
	 generic_field_name <"index",template_parm_index_s,index> index;
	 generic_field_name <"level",template_parm_index_s,level> level;
	 generic_field_name <"orig_level",template_parm_index_s,orig_level> orig_level;
	 generic_field_name <"num_siblings",template_parm_index_s,num_siblings> num_siblings;
	 generic_field_name <"decl",template_parm_index_s,decl> decl;
}; 
class CLS_905_template_parm_index_s{ 
	 generic_class_name <"template_parm_index_s",template_parm_index_s> the_class_name;
	 generic_field_name <"common",template_parm_index_s,common> common;
	 generic_field_name <"index",template_parm_index_s,index> index;
	 generic_field_name <"level",template_parm_index_s,level> level;
	 generic_field_name <"orig_level",template_parm_index_s,orig_level> orig_level;
	 generic_field_name <"num_siblings",template_parm_index_s,num_siblings> num_siblings;
	 generic_field_name <"decl",template_parm_index_s,decl> decl;
}; 
class CLS_906_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_907_ptrmem_cst{ 
	 generic_class_name <"ptrmem_cst",ptrmem_cst> the_class_name;
	 generic_field_name <"common",ptrmem_cst,common> common;
	 generic_field_name <"member",ptrmem_cst,member> member;
}; 
class CLS_908_ptrmem_cst{ 
	 generic_class_name <"ptrmem_cst",ptrmem_cst> the_class_name;
	 generic_field_name <"common",ptrmem_cst,common> common;
	 generic_field_name <"member",ptrmem_cst,member> member;
}; 
class CLS_909_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_910_tree_overload{ 
	 generic_class_name <"tree_overload",tree_overload> the_class_name;
	 generic_field_name <"common",tree_overload,common> common;
	 generic_field_name <"function",tree_overload,function> function;
}; 
class CLS_911_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_912_tree_baselink{ 
	 generic_class_name <"tree_baselink",tree_baselink> the_class_name;
	 generic_field_name <"common",tree_baselink,common> common;
	 generic_field_name <"binfo",tree_baselink,binfo> binfo;
	 generic_field_name <"functions",tree_baselink,functions> functions;
	 generic_field_name <"access_binfo",tree_baselink,access_binfo> access_binfo;
}; 
class CLS_913_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_914_cp_token_cache{ 
	 generic_class_name <"cp_token_cache",cp_token_cache> the_class_name;
}; 
class CLS_915_tree_default_arg{ 
	 generic_class_name <"tree_default_arg",tree_default_arg> the_class_name;
	 generic_field_name <"common",tree_default_arg,common> common;
	 generic_field_name <"tokens",tree_default_arg,tokens> tokens;
	 generic_field_name <"instantiations",tree_default_arg,instantiations> instantiations;
}; 
class CLS_916_tree_base{ 
	 generic_class_name <"tree_base",tree_base> the_class_name;
	 generic_field_name <"code",tree_base,code> code;
	 generic_field_name <"side_effects_flag",tree_base,side_effects_flag> side_effects_flag;
	 generic_field_name <"constant_flag",tree_base,constant_flag> constant_flag;
	 generic_field_name <"addressable_flag",tree_base,addressable_flag> addressable_flag;
	 generic_field_name <"volatile_flag",tree_base,volatile_flag> volatile_flag;
	 generic_field_name <"readonly_flag",tree_base,readonly_flag> readonly_flag;
	 generic_field_name <"unsigned_flag",tree_base,unsigned_flag> unsigned_flag;
	 generic_field_name <"asm_written_flag",tree_base,asm_written_flag> asm_written_flag;
	 generic_field_name <"nowarning_flag",tree_base,nowarning_flag> nowarning_flag;
	 generic_field_name <"used_flag",tree_base,used_flag> used_flag;
	 generic_field_name <"nothrow_flag",tree_base,nothrow_flag> nothrow_flag;
	 generic_field_name <"static_flag",tree_base,static_flag> static_flag;
	 generic_field_name <"public_flag",tree_base,public_flag> public_flag;
	 generic_field_name <"private_flag",tree_base,private_flag> private_flag;
	 generic_field_name <"protected_flag",tree_base,protected_flag> protected_flag;
	 generic_field_name <"deprecated_flag",tree_base,deprecated_flag> deprecated_flag;
	 generic_field_name <"saturating_flag",tree_base,saturating_flag> saturating_flag;
	 generic_field_name <"default_def_flag",tree_base,default_def_flag> default_def_flag;
	 generic_field_name <"lang_flag_0",tree_base,lang_flag_0> lang_flag_0;
	 generic_field_name <"lang_flag_1",tree_base,lang_flag_1> lang_flag_1;
	 generic_field_name <"lang_flag_2",tree_base,lang_flag_2> lang_flag_2;
	 generic_field_name <"lang_flag_3",tree_base,lang_flag_3> lang_flag_3;
	 generic_field_name <"lang_flag_4",tree_base,lang_flag_4> lang_flag_4;
	 generic_field_name <"lang_flag_5",tree_base,lang_flag_5> lang_flag_5;
	 generic_field_name <"lang_flag_6",tree_base,lang_flag_6> lang_flag_6;
	 generic_field_name <"visited",tree_base,visited> visited;
	 generic_field_name <"packed_flag",tree_base,packed_flag> packed_flag;
	 generic_field_name <"user_align",tree_base,user_align> user_align;
	 generic_field_name <"nameless_flag",tree_base,nameless_flag> nameless_flag;
	 generic_field_name <"spare",tree_base,spare> spare;
	 generic_field_name <"address_space",tree_base,address_space> address_space;
}; 
class CLS_917_tree_deferred_noexcept{ 
	 generic_class_name <"tree_deferred_noexcept",tree_deferred_noexcept> the_class_name;
	 generic_field_name <"base",tree_deferred_noexcept,base> base;
	 generic_field_name <"pattern",tree_deferred_noexcept,pattern> pattern;
	 generic_field_name <"args",tree_deferred_noexcept,args> args;
}; 
class CLS_918_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_919_tree_static_assert{ 
	 generic_class_name <"tree_static_assert",tree_static_assert> the_class_name;
	 generic_field_name <"common",tree_static_assert,common> common;
	 generic_field_name <"condition",tree_static_assert,condition> condition;
	 generic_field_name <"message",tree_static_assert,message> message;
	 generic_field_name <"location",tree_static_assert,location> location;
}; 
class CLS_920_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_921_tree_argument_pack_select{ 
	 generic_class_name <"tree_argument_pack_select",tree_argument_pack_select> the_class_name;
	 generic_field_name <"common",tree_argument_pack_select,common> common;
	 generic_field_name <"argument_pack",tree_argument_pack_select,argument_pack> argument_pack;
	 generic_field_name <"index",tree_argument_pack_select,index> index;
}; 
class CLS_922_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_923_tree_trait_expr{ 
	 generic_class_name <"tree_trait_expr",tree_trait_expr> the_class_name;
	 generic_field_name <"common",tree_trait_expr,common> common;
	 generic_field_name <"type1",tree_trait_expr,type1> type1;
	 generic_field_name <"type2",tree_trait_expr,type2> type2;
	 generic_field_name <"kind",tree_trait_expr,kind> kind;
}; 
class CLS_924_tree_typed{ 
	 generic_class_name <"tree_typed",tree_typed> the_class_name;
	 generic_field_name <"base",tree_typed,base> base;
	 generic_field_name <"type",tree_typed,type> type;
}; 
class CLS_925_tree_lambda_expr{ 
	 generic_class_name <"tree_lambda_expr",tree_lambda_expr> the_class_name;
	 generic_field_name <"typed",tree_lambda_expr,typed> typed;
	 generic_field_name <"capture_list",tree_lambda_expr,capture_list> capture_list;
	 generic_field_name <"this_capture",tree_lambda_expr,this_capture> this_capture;
	 generic_field_name <"return_type",tree_lambda_expr,return_type> return_type;
	 generic_field_name <"extra_scope",tree_lambda_expr,extra_scope> extra_scope;
	 generic_field_name <"closure",tree_lambda_expr,closure> closure;
	 generic_field_name <"pending_proxies",tree_lambda_expr,pending_proxies> pending_proxies;
	 generic_field_name <"locus",tree_lambda_expr,locus> locus;
	 generic_field_name <"default_capture_mode",tree_lambda_expr,default_capture_mode> default_capture_mode;
	 generic_field_name <"discriminator",tree_lambda_expr,discriminator> discriminator;
}; 
class CLS_926_qualified_typedef_usage_s{ 
	 generic_class_name <"qualified_typedef_usage_s",qualified_typedef_usage_s> the_class_name;
	 generic_field_name <"typedef_decl",qualified_typedef_usage_s,typedef_decl> typedef_decl;
	 generic_field_name <"context",qualified_typedef_usage_s,context> context;
	 generic_field_name <"locus",qualified_typedef_usage_s,locus> locus;
}; 
class CLS_927_qualified_typedef_usage_s{ 
	 generic_class_name <"qualified_typedef_usage_s",qualified_typedef_usage_s> the_class_name;
	 generic_field_name <"typedef_decl",qualified_typedef_usage_s,typedef_decl> typedef_decl;
	 generic_field_name <"context",qualified_typedef_usage_s,context> context;
	 generic_field_name <"locus",qualified_typedef_usage_s,locus> locus;
}; 
class CLS_928_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_929_VEC_qualified_typedef_usage_t_base{ 
	 generic_class_name <"VEC_qualified_typedef_usage_t_base",VEC_qualified_typedef_usage_t_base> the_class_name;
	 generic_field_name <"prefix",VEC_qualified_typedef_usage_t_base,prefix> prefix;
	 generic_field_name <"vec",VEC_qualified_typedef_usage_t_base,vec> vec;
}; 
class CLS_930_VEC_qualified_typedef_usage_t_none{ 
	 generic_class_name <"VEC_qualified_typedef_usage_t_none",VEC_qualified_typedef_usage_t_none> the_class_name;
	 generic_field_name <"base",VEC_qualified_typedef_usage_t_none,base> base;
}; 
class CLS_931_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_932_VEC_qualified_typedef_usage_t_gc{ 
	 generic_class_name <"VEC_qualified_typedef_usage_t_gc",VEC_qualified_typedef_usage_t_gc> the_class_name;
	 generic_field_name <"base",VEC_qualified_typedef_usage_t_gc,base> base;
}; 
class CLS_933_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_934_tree_common{ 
	 generic_class_name <"tree_common",tree_common> the_class_name;
	 generic_field_name <"typed",tree_common,typed> typed;
	 generic_field_name <"chain",tree_common,chain> chain;
}; 
class CLS_935_tree_template_info{ 
	 generic_class_name <"tree_template_info",tree_template_info> the_class_name;
	 generic_field_name <"common",tree_template_info,common> common;
	 generic_field_name <"typedefs_needing_access_checking",tree_template_info,typedefs_needing_access_checking> typedefs_needing_access_checking;
}; 
class CLS_936_template_parm_index_s{ 
	 generic_class_name <"template_parm_index_s",template_parm_index_s> the_class_name;
	 generic_field_name <"common",template_parm_index_s,common> common;
	 generic_field_name <"index",template_parm_index_s,index> index;
	 generic_field_name <"level",template_parm_index_s,level> level;
	 generic_field_name <"orig_level",template_parm_index_s,orig_level> orig_level;
	 generic_field_name <"num_siblings",template_parm_index_s,num_siblings> num_siblings;
	 generic_field_name <"decl",template_parm_index_s,decl> decl;
}; 
class CLS_937_ptrmem_cst{ 
	 generic_class_name <"ptrmem_cst",ptrmem_cst> the_class_name;
	 generic_field_name <"common",ptrmem_cst,common> common;
	 generic_field_name <"member",ptrmem_cst,member> member;
}; 
class CLS_938_tree_overload{ 
	 generic_class_name <"tree_overload",tree_overload> the_class_name;
	 generic_field_name <"common",tree_overload,common> common;
	 generic_field_name <"function",tree_overload,function> function;
}; 
class CLS_939_tree_baselink{ 
	 generic_class_name <"tree_baselink",tree_baselink> the_class_name;
	 generic_field_name <"common",tree_baselink,common> common;
	 generic_field_name <"binfo",tree_baselink,binfo> binfo;
	 generic_field_name <"functions",tree_baselink,functions> functions;
	 generic_field_name <"access_binfo",tree_baselink,access_binfo> access_binfo;
}; 
class CLS_940_tree_default_arg{ 
	 generic_class_name <"tree_default_arg",tree_default_arg> the_class_name;
	 generic_field_name <"common",tree_default_arg,common> common;
	 generic_field_name <"tokens",tree_default_arg,tokens> tokens;
	 generic_field_name <"instantiations",tree_default_arg,instantiations> instantiations;
}; 
class CLS_941_tree_deferred_noexcept{ 
	 generic_class_name <"tree_deferred_noexcept",tree_deferred_noexcept> the_class_name;
	 generic_field_name <"base",tree_deferred_noexcept,base> base;
	 generic_field_name <"pattern",tree_deferred_noexcept,pattern> pattern;
	 generic_field_name <"args",tree_deferred_noexcept,args> args;
}; 
class CLS_942_lang_identifier{ 
	 generic_class_name <"lang_identifier",lang_identifier> the_class_name;
	 generic_field_name <"c_common",lang_identifier,c_common> c_common;
	 generic_field_name <"namespace_bindings",lang_identifier,namespace_bindings> namespace_bindings;
	 generic_field_name <"bindings",lang_identifier,bindings> bindings;
	 generic_field_name <"class_template_info",lang_identifier,class_template_info> class_template_info;
	 generic_field_name <"label_value",lang_identifier,label_value> label_value;
}; 
class CLS_943_tree_static_assert{ 
	 generic_class_name <"tree_static_assert",tree_static_assert> the_class_name;
	 generic_field_name <"common",tree_static_assert,common> common;
	 generic_field_name <"condition",tree_static_assert,condition> condition;
	 generic_field_name <"message",tree_static_assert,message> message;
	 generic_field_name <"location",tree_static_assert,location> location;
}; 
class CLS_944_tree_argument_pack_select{ 
	 generic_class_name <"tree_argument_pack_select",tree_argument_pack_select> the_class_name;
	 generic_field_name <"common",tree_argument_pack_select,common> common;
	 generic_field_name <"argument_pack",tree_argument_pack_select,argument_pack> argument_pack;
	 generic_field_name <"index",tree_argument_pack_select,index> index;
}; 
class CLS_945_tree_trait_expr{ 
	 generic_class_name <"tree_trait_expr",tree_trait_expr> the_class_name;
	 generic_field_name <"common",tree_trait_expr,common> common;
	 generic_field_name <"type1",tree_trait_expr,type1> type1;
	 generic_field_name <"type2",tree_trait_expr,type2> type2;
	 generic_field_name <"kind",tree_trait_expr,kind> kind;
}; 
class CLS_946_tree_lambda_expr{ 
	 generic_class_name <"tree_lambda_expr",tree_lambda_expr> the_class_name;
	 generic_field_name <"typed",tree_lambda_expr,typed> typed;
	 generic_field_name <"capture_list",tree_lambda_expr,capture_list> capture_list;
	 generic_field_name <"this_capture",tree_lambda_expr,this_capture> this_capture;
	 generic_field_name <"return_type",tree_lambda_expr,return_type> return_type;
	 generic_field_name <"extra_scope",tree_lambda_expr,extra_scope> extra_scope;
	 generic_field_name <"closure",tree_lambda_expr,closure> closure;
	 generic_field_name <"pending_proxies",tree_lambda_expr,pending_proxies> pending_proxies;
	 generic_field_name <"locus",tree_lambda_expr,locus> locus;
	 generic_field_name <"default_capture_mode",tree_lambda_expr,default_capture_mode> default_capture_mode;
	 generic_field_name <"discriminator",tree_lambda_expr,discriminator> discriminator;
}; 
class CLS_947_tree_template_info{ 
	 generic_class_name <"tree_template_info",tree_template_info> the_class_name;
	 generic_field_name <"common",tree_template_info,common> common;
	 generic_field_name <"typedefs_needing_access_checking",tree_template_info,typedefs_needing_access_checking> typedefs_needing_access_checking;
}; 
class CLS_948_tree_userdef_literal{ 
	 generic_class_name <"tree_userdef_literal",tree_userdef_literal> the_class_name;
	 generic_field_name <"base",tree_userdef_literal,base> base;
	 generic_field_name <"suffix_id",tree_userdef_literal,suffix_id> suffix_id;
	 generic_field_name <"value",tree_userdef_literal,value> value;
	 generic_field_name <"num_string",tree_userdef_literal,num_string> num_string;
}; 
class CLS_949_stmt_tree_s{ 
	 generic_class_name <"stmt_tree_s",stmt_tree_s> the_class_name;
	 generic_field_name <"x_cur_stmt_list",stmt_tree_s,x_cur_stmt_list> x_cur_stmt_list;
	 generic_field_name <"stmts_are_full_exprs_p",stmt_tree_s,stmts_are_full_exprs_p> stmts_are_full_exprs_p;
}; 
class CLS_950_saved_scope{ 
	 generic_class_name <"saved_scope",saved_scope> the_class_name;
}; 
class CLS_951_saved_scope{ 
	 generic_class_name <"saved_scope",saved_scope> the_class_name;
	 generic_field_name <"old_bindings",saved_scope,old_bindings> old_bindings;
	 generic_field_name <"old_namespace",saved_scope,old_namespace> old_namespace;
	 generic_field_name <"decl_ns_list",saved_scope,decl_ns_list> decl_ns_list;
	 generic_field_name <"class_name",saved_scope,class_name> class_name;
	 generic_field_name <"class_type",saved_scope,class_type> class_type;
	 generic_field_name <"access_specifier",saved_scope,access_specifier> access_specifier;
	 generic_field_name <"function_decl",saved_scope,function_decl> function_decl;
	 generic_field_name <"lang_base",saved_scope,lang_base> lang_base;
	 generic_field_name <"lang_name",saved_scope,lang_name> lang_name;
	 generic_field_name <"template_parms",saved_scope,template_parms> template_parms;
	 generic_field_name <"x_previous_class_level",saved_scope,x_previous_class_level> x_previous_class_level;
	 generic_field_name <"x_saved_tree",saved_scope,x_saved_tree> x_saved_tree;
	 generic_field_name <"x_current_class_ptr",saved_scope,x_current_class_ptr> x_current_class_ptr;
	 generic_field_name <"x_current_class_ref",saved_scope,x_current_class_ref> x_current_class_ref;
	 generic_field_name <"x_processing_template_decl",saved_scope,x_processing_template_decl> x_processing_template_decl;
	 generic_field_name <"x_processing_specialization",saved_scope,x_processing_specialization> x_processing_specialization;
	 generic_field_name <"x_processing_explicit_instantiation",saved_scope,x_processing_explicit_instantiation> x_processing_explicit_instantiation;
	 generic_field_name <"need_pop_function_context",saved_scope,need_pop_function_context> need_pop_function_context;
	 generic_field_name <"unevaluated_operand",saved_scope,unevaluated_operand> unevaluated_operand;
	 generic_field_name <"inhibit_evaluation_warnings",saved_scope,inhibit_evaluation_warnings> inhibit_evaluation_warnings;
	 generic_field_name <"x_stmt_tree",saved_scope,x_stmt_tree> x_stmt_tree;
	 generic_field_name <"class_bindings",saved_scope,class_bindings> class_bindings;
	 generic_field_name <"bindings",saved_scope,bindings> bindings;
	 generic_field_name <"prev",saved_scope,prev> prev;
}; 
class CLS_952_saved_scope{ 
	 generic_class_name <"saved_scope",saved_scope> the_class_name;
	 generic_field_name <"old_bindings",saved_scope,old_bindings> old_bindings;
	 generic_field_name <"old_namespace",saved_scope,old_namespace> old_namespace;
	 generic_field_name <"decl_ns_list",saved_scope,decl_ns_list> decl_ns_list;
	 generic_field_name <"class_name",saved_scope,class_name> class_name;
	 generic_field_name <"class_type",saved_scope,class_type> class_type;
	 generic_field_name <"access_specifier",saved_scope,access_specifier> access_specifier;
	 generic_field_name <"function_decl",saved_scope,function_decl> function_decl;
	 generic_field_name <"lang_base",saved_scope,lang_base> lang_base;
	 generic_field_name <"lang_name",saved_scope,lang_name> lang_name;
	 generic_field_name <"template_parms",saved_scope,template_parms> template_parms;
	 generic_field_name <"x_previous_class_level",saved_scope,x_previous_class_level> x_previous_class_level;
	 generic_field_name <"x_saved_tree",saved_scope,x_saved_tree> x_saved_tree;
	 generic_field_name <"x_current_class_ptr",saved_scope,x_current_class_ptr> x_current_class_ptr;
	 generic_field_name <"x_current_class_ref",saved_scope,x_current_class_ref> x_current_class_ref;
	 generic_field_name <"x_processing_template_decl",saved_scope,x_processing_template_decl> x_processing_template_decl;
	 generic_field_name <"x_processing_specialization",saved_scope,x_processing_specialization> x_processing_specialization;
	 generic_field_name <"x_processing_explicit_instantiation",saved_scope,x_processing_explicit_instantiation> x_processing_explicit_instantiation;
	 generic_field_name <"need_pop_function_context",saved_scope,need_pop_function_context> need_pop_function_context;
	 generic_field_name <"unevaluated_operand",saved_scope,unevaluated_operand> unevaluated_operand;
	 generic_field_name <"inhibit_evaluation_warnings",saved_scope,inhibit_evaluation_warnings> inhibit_evaluation_warnings;
	 generic_field_name <"x_stmt_tree",saved_scope,x_stmt_tree> x_stmt_tree;
	 generic_field_name <"class_bindings",saved_scope,class_bindings> class_bindings;
	 generic_field_name <"bindings",saved_scope,bindings> bindings;
	 generic_field_name <"prev",saved_scope,prev> prev;
}; 
class CLS_953_cxx_int_tree_map{ 
	 generic_class_name <"cxx_int_tree_map",cxx_int_tree_map> the_class_name;
	 generic_field_name <"uid",cxx_int_tree_map,uid> uid;
	 generic_field_name <"to",cxx_int_tree_map,to> to;
}; 
class CLS_954_c_language_function{ 
	 generic_class_name <"c_language_function",c_language_function> the_class_name;
	 generic_field_name <"x_stmt_tree",c_language_function,x_stmt_tree> x_stmt_tree;
	 generic_field_name <"local_typedefs",c_language_function,local_typedefs> local_typedefs;
}; 
class CLS_955_language_function{ 
	 generic_class_name <"language_function",language_function> the_class_name;
	 generic_field_name <"base",language_function,base> base;
	 generic_field_name <"x_cdtor_label",language_function,x_cdtor_label> x_cdtor_label;
	 generic_field_name <"x_current_class_ptr",language_function,x_current_class_ptr> x_current_class_ptr;
	 generic_field_name <"x_current_class_ref",language_function,x_current_class_ref> x_current_class_ref;
	 generic_field_name <"x_eh_spec_block",language_function,x_eh_spec_block> x_eh_spec_block;
	 generic_field_name <"x_in_charge_parm",language_function,x_in_charge_parm> x_in_charge_parm;
	 generic_field_name <"x_vtt_parm",language_function,x_vtt_parm> x_vtt_parm;
	 generic_field_name <"x_return_value",language_function,x_return_value> x_return_value;
	 generic_field_name <"returns_value",language_function,returns_value> returns_value;
	 generic_field_name <"returns_null",language_function,returns_null> returns_null;
	 generic_field_name <"returns_abnormally",language_function,returns_abnormally> returns_abnormally;
	 generic_field_name <"x_in_function_try_handler",language_function,x_in_function_try_handler> x_in_function_try_handler;
	 generic_field_name <"x_in_base_initializer",language_function,x_in_base_initializer> x_in_base_initializer;
	 generic_field_name <"can_throw",language_function,can_throw> can_throw;
	 generic_field_name <"x_named_labels",language_function,x_named_labels> x_named_labels;
	 generic_field_name <"bindings",language_function,bindings> bindings;
	 generic_field_name <"x_local_names",language_function,x_local_names> x_local_names;
	 generic_field_name <"extern_decl_map",language_function,extern_decl_map> extern_decl_map;
}; 
class CLS_956_tree_pair_s{ 
	 generic_class_name <"tree_pair_s",tree_pair_s> the_class_name;
	 generic_field_name <"purpose",tree_pair_s,purpose> purpose;
	 generic_field_name <"value",tree_pair_s,value> value;
}; 
class CLS_957_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_958_VEC_tree_pair_s_base{ 
	 generic_class_name <"VEC_tree_pair_s_base",VEC_tree_pair_s_base> the_class_name;
	 generic_field_name <"prefix",VEC_tree_pair_s_base,prefix> prefix;
	 generic_field_name <"vec",VEC_tree_pair_s_base,vec> vec;
}; 
class CLS_959_VEC_tree_pair_s_none{ 
	 generic_class_name <"VEC_tree_pair_s_none",VEC_tree_pair_s_none> the_class_name;
	 generic_field_name <"base",VEC_tree_pair_s_none,base> base;
}; 
class CLS_960_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_961_VEC_tree_pair_s_gc{ 
	 generic_class_name <"VEC_tree_pair_s_gc",VEC_tree_pair_s_gc> the_class_name;
	 generic_field_name <"base",VEC_tree_pair_s_gc,base> base;
}; 
class CLS_962_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_963_lang_type_header{ 
	 generic_class_name <"lang_type_header",lang_type_header> the_class_name;
	 generic_field_name <"is_lang_type_class",lang_type_header,is_lang_type_class> is_lang_type_class;
	 generic_field_name <"has_type_conversion",lang_type_header,has_type_conversion> has_type_conversion;
	 generic_field_name <"has_copy_ctor",lang_type_header,has_copy_ctor> has_copy_ctor;
	 generic_field_name <"has_default_ctor",lang_type_header,has_default_ctor> has_default_ctor;
	 generic_field_name <"const_needs_init",lang_type_header,const_needs_init> const_needs_init;
	 generic_field_name <"ref_needs_init",lang_type_header,ref_needs_init> ref_needs_init;
	 generic_field_name <"has_const_copy_assign",lang_type_header,has_const_copy_assign> has_const_copy_assign;
	 generic_field_name <"spare",lang_type_header,spare> spare;
}; 
class CLS_964_lang_type_header{ 
	 generic_class_name <"lang_type_header",lang_type_header> the_class_name;
	 generic_field_name <"is_lang_type_class",lang_type_header,is_lang_type_class> is_lang_type_class;
	 generic_field_name <"has_type_conversion",lang_type_header,has_type_conversion> has_type_conversion;
	 generic_field_name <"has_copy_ctor",lang_type_header,has_copy_ctor> has_copy_ctor;
	 generic_field_name <"has_default_ctor",lang_type_header,has_default_ctor> has_default_ctor;
	 generic_field_name <"const_needs_init",lang_type_header,const_needs_init> const_needs_init;
	 generic_field_name <"ref_needs_init",lang_type_header,ref_needs_init> ref_needs_init;
	 generic_field_name <"has_const_copy_assign",lang_type_header,has_const_copy_assign> has_const_copy_assign;
	 generic_field_name <"spare",lang_type_header,spare> spare;
}; 
class CLS_965_sorted_fields_type{ 
	 generic_class_name <"sorted_fields_type",sorted_fields_type> the_class_name;
	 generic_field_name <"len",sorted_fields_type,len> len;
	 generic_field_name <"elts",sorted_fields_type,elts> elts;
}; 
class CLS_966_lang_type_class{ 
	 generic_class_name <"lang_type_class",lang_type_class> the_class_name;
	 generic_field_name <"h",lang_type_class,h> h;
	 generic_field_name <"align",lang_type_class,align> align;
	 generic_field_name <"has_mutable",lang_type_class,has_mutable> has_mutable;
	 generic_field_name <"com_interface",lang_type_class,com_interface> com_interface;
	 generic_field_name <"non_pod_class",lang_type_class,non_pod_class> non_pod_class;
	 generic_field_name <"nearly_empty_p",lang_type_class,nearly_empty_p> nearly_empty_p;
	 generic_field_name <"user_align",lang_type_class,user_align> user_align;
	 generic_field_name <"has_copy_assign",lang_type_class,has_copy_assign> has_copy_assign;
	 generic_field_name <"has_new",lang_type_class,has_new> has_new;
	 generic_field_name <"has_array_new",lang_type_class,has_array_new> has_array_new;
	 generic_field_name <"gets_delete",lang_type_class,gets_delete> gets_delete;
	 generic_field_name <"interface_only",lang_type_class,interface_only> interface_only;
	 generic_field_name <"interface_unknown",lang_type_class,interface_unknown> interface_unknown;
	 generic_field_name <"contains_empty_class_p",lang_type_class,contains_empty_class_p> contains_empty_class_p;
	 generic_field_name <"anon_aggr",lang_type_class,anon_aggr> anon_aggr;
	 generic_field_name <"non_zero_init",lang_type_class,non_zero_init> non_zero_init;
	 generic_field_name <"empty_p",lang_type_class,empty_p> empty_p;
	 generic_field_name <"vec_new_uses_cookie",lang_type_class,vec_new_uses_cookie> vec_new_uses_cookie;
	 generic_field_name <"declared_class",lang_type_class,declared_class> declared_class;
	 generic_field_name <"diamond_shaped",lang_type_class,diamond_shaped> diamond_shaped;
	 generic_field_name <"repeated_base",lang_type_class,repeated_base> repeated_base;
	 generic_field_name <"being_defined",lang_type_class,being_defined> being_defined;
	 generic_field_name <"java_interface",lang_type_class,java_interface> java_interface;
	 generic_field_name <"debug_requested",lang_type_class,debug_requested> debug_requested;
	 generic_field_name <"fields_readonly",lang_type_class,fields_readonly> fields_readonly;
	 generic_field_name <"use_template",lang_type_class,use_template> use_template;
	 generic_field_name <"ptrmemfunc_flag",lang_type_class,ptrmemfunc_flag> ptrmemfunc_flag;
	 generic_field_name <"was_anonymous",lang_type_class,was_anonymous> was_anonymous;
	 generic_field_name <"lazy_default_ctor",lang_type_class,lazy_default_ctor> lazy_default_ctor;
	 generic_field_name <"lazy_copy_ctor",lang_type_class,lazy_copy_ctor> lazy_copy_ctor;
	 generic_field_name <"lazy_copy_assign",lang_type_class,lazy_copy_assign> lazy_copy_assign;
	 generic_field_name <"lazy_destructor",lang_type_class,lazy_destructor> lazy_destructor;
	 generic_field_name <"has_const_copy_ctor",lang_type_class,has_const_copy_ctor> has_const_copy_ctor;
	 generic_field_name <"has_complex_copy_ctor",lang_type_class,has_complex_copy_ctor> has_complex_copy_ctor;
	 generic_field_name <"has_complex_copy_assign",lang_type_class,has_complex_copy_assign> has_complex_copy_assign;
	 generic_field_name <"non_aggregate",lang_type_class,non_aggregate> non_aggregate;
	 generic_field_name <"has_complex_dflt",lang_type_class,has_complex_dflt> has_complex_dflt;
	 generic_field_name <"has_list_ctor",lang_type_class,has_list_ctor> has_list_ctor;
	 generic_field_name <"non_std_layout",lang_type_class,non_std_layout> non_std_layout;
	 generic_field_name <"is_literal",lang_type_class,is_literal> is_literal;
	 generic_field_name <"lazy_move_ctor",lang_type_class,lazy_move_ctor> lazy_move_ctor;
	 generic_field_name <"lazy_move_assign",lang_type_class,lazy_move_assign> lazy_move_assign;
	 generic_field_name <"has_complex_move_ctor",lang_type_class,has_complex_move_ctor> has_complex_move_ctor;
	 generic_field_name <"has_complex_move_assign",lang_type_class,has_complex_move_assign> has_complex_move_assign;
	 generic_field_name <"has_constexpr_ctor",lang_type_class,has_constexpr_ctor> has_constexpr_ctor;
	 generic_field_name <"is_final",lang_type_class,is_final> is_final;
	 generic_field_name <"dummy",lang_type_class,dummy> dummy;
	 generic_field_name <"primary_base",lang_type_class,primary_base> primary_base;
	 generic_field_name <"vcall_indices",lang_type_class,vcall_indices> vcall_indices;
	 generic_field_name <"vtables",lang_type_class,vtables> vtables;
	 generic_field_name <"typeinfo_var",lang_type_class,typeinfo_var> typeinfo_var;
	 generic_field_name <"vbases",lang_type_class,vbases> vbases;
	 generic_field_name <"nested_udts",lang_type_class,nested_udts> nested_udts;
	 generic_field_name <"as_base",lang_type_class,as_base> as_base;
	 generic_field_name <"pure_virtuals",lang_type_class,pure_virtuals> pure_virtuals;
	 generic_field_name <"friend_classes",lang_type_class,friend_classes> friend_classes;
	 generic_field_name <"methods",lang_type_class,methods> methods;
	 generic_field_name <"key_method",lang_type_class,key_method> key_method;
	 generic_field_name <"decl_list",lang_type_class,decl_list> decl_list;
	 generic_field_name <"template_info",lang_type_class,template_info> template_info;
	 generic_field_name <"befriending_classes",lang_type_class,befriending_classes> befriending_classes;
	 generic_field_name <"objc_info",lang_type_class,objc_info> objc_info;
	 generic_field_name <"sorted_fields",lang_type_class,sorted_fields> sorted_fields;
	 generic_field_name <"lambda_expr",lang_type_class,lambda_expr> lambda_expr;
}; 
class CLS_967_lang_type_header{ 
	 generic_class_name <"lang_type_header",lang_type_header> the_class_name;
	 generic_field_name <"is_lang_type_class",lang_type_header,is_lang_type_class> is_lang_type_class;
	 generic_field_name <"has_type_conversion",lang_type_header,has_type_conversion> has_type_conversion;
	 generic_field_name <"has_copy_ctor",lang_type_header,has_copy_ctor> has_copy_ctor;
	 generic_field_name <"has_default_ctor",lang_type_header,has_default_ctor> has_default_ctor;
	 generic_field_name <"const_needs_init",lang_type_header,const_needs_init> const_needs_init;
	 generic_field_name <"ref_needs_init",lang_type_header,ref_needs_init> ref_needs_init;
	 generic_field_name <"has_const_copy_assign",lang_type_header,has_const_copy_assign> has_const_copy_assign;
	 generic_field_name <"spare",lang_type_header,spare> spare;
}; 
class CLS_968_lang_type_ptrmem{ 
	 generic_class_name <"lang_type_ptrmem",lang_type_ptrmem> the_class_name;
	 generic_field_name <"h",lang_type_ptrmem,h> h;
	 generic_field_name <"record",lang_type_ptrmem,record> record;
}; 
class CLS_969_lang_type_header{ 
	 generic_class_name <"lang_type_header",lang_type_header> the_class_name;
	 generic_field_name <"is_lang_type_class",lang_type_header,is_lang_type_class> is_lang_type_class;
	 generic_field_name <"has_type_conversion",lang_type_header,has_type_conversion> has_type_conversion;
	 generic_field_name <"has_copy_ctor",lang_type_header,has_copy_ctor> has_copy_ctor;
	 generic_field_name <"has_default_ctor",lang_type_header,has_default_ctor> has_default_ctor;
	 generic_field_name <"const_needs_init",lang_type_header,const_needs_init> const_needs_init;
	 generic_field_name <"ref_needs_init",lang_type_header,ref_needs_init> ref_needs_init;
	 generic_field_name <"has_const_copy_assign",lang_type_header,has_const_copy_assign> has_const_copy_assign;
	 generic_field_name <"spare",lang_type_header,spare> spare;
}; 
class CLS_970_lang_type_class{ 
	 generic_class_name <"lang_type_class",lang_type_class> the_class_name;
	 generic_field_name <"h",lang_type_class,h> h;
	 generic_field_name <"align",lang_type_class,align> align;
	 generic_field_name <"has_mutable",lang_type_class,has_mutable> has_mutable;
	 generic_field_name <"com_interface",lang_type_class,com_interface> com_interface;
	 generic_field_name <"non_pod_class",lang_type_class,non_pod_class> non_pod_class;
	 generic_field_name <"nearly_empty_p",lang_type_class,nearly_empty_p> nearly_empty_p;
	 generic_field_name <"user_align",lang_type_class,user_align> user_align;
	 generic_field_name <"has_copy_assign",lang_type_class,has_copy_assign> has_copy_assign;
	 generic_field_name <"has_new",lang_type_class,has_new> has_new;
	 generic_field_name <"has_array_new",lang_type_class,has_array_new> has_array_new;
	 generic_field_name <"gets_delete",lang_type_class,gets_delete> gets_delete;
	 generic_field_name <"interface_only",lang_type_class,interface_only> interface_only;
	 generic_field_name <"interface_unknown",lang_type_class,interface_unknown> interface_unknown;
	 generic_field_name <"contains_empty_class_p",lang_type_class,contains_empty_class_p> contains_empty_class_p;
	 generic_field_name <"anon_aggr",lang_type_class,anon_aggr> anon_aggr;
	 generic_field_name <"non_zero_init",lang_type_class,non_zero_init> non_zero_init;
	 generic_field_name <"empty_p",lang_type_class,empty_p> empty_p;
	 generic_field_name <"vec_new_uses_cookie",lang_type_class,vec_new_uses_cookie> vec_new_uses_cookie;
	 generic_field_name <"declared_class",lang_type_class,declared_class> declared_class;
	 generic_field_name <"diamond_shaped",lang_type_class,diamond_shaped> diamond_shaped;
	 generic_field_name <"repeated_base",lang_type_class,repeated_base> repeated_base;
	 generic_field_name <"being_defined",lang_type_class,being_defined> being_defined;
	 generic_field_name <"java_interface",lang_type_class,java_interface> java_interface;
	 generic_field_name <"debug_requested",lang_type_class,debug_requested> debug_requested;
	 generic_field_name <"fields_readonly",lang_type_class,fields_readonly> fields_readonly;
	 generic_field_name <"use_template",lang_type_class,use_template> use_template;
	 generic_field_name <"ptrmemfunc_flag",lang_type_class,ptrmemfunc_flag> ptrmemfunc_flag;
	 generic_field_name <"was_anonymous",lang_type_class,was_anonymous> was_anonymous;
	 generic_field_name <"lazy_default_ctor",lang_type_class,lazy_default_ctor> lazy_default_ctor;
	 generic_field_name <"lazy_copy_ctor",lang_type_class,lazy_copy_ctor> lazy_copy_ctor;
	 generic_field_name <"lazy_copy_assign",lang_type_class,lazy_copy_assign> lazy_copy_assign;
	 generic_field_name <"lazy_destructor",lang_type_class,lazy_destructor> lazy_destructor;
	 generic_field_name <"has_const_copy_ctor",lang_type_class,has_const_copy_ctor> has_const_copy_ctor;
	 generic_field_name <"has_complex_copy_ctor",lang_type_class,has_complex_copy_ctor> has_complex_copy_ctor;
	 generic_field_name <"has_complex_copy_assign",lang_type_class,has_complex_copy_assign> has_complex_copy_assign;
	 generic_field_name <"non_aggregate",lang_type_class,non_aggregate> non_aggregate;
	 generic_field_name <"has_complex_dflt",lang_type_class,has_complex_dflt> has_complex_dflt;
	 generic_field_name <"has_list_ctor",lang_type_class,has_list_ctor> has_list_ctor;
	 generic_field_name <"non_std_layout",lang_type_class,non_std_layout> non_std_layout;
	 generic_field_name <"is_literal",lang_type_class,is_literal> is_literal;
	 generic_field_name <"lazy_move_ctor",lang_type_class,lazy_move_ctor> lazy_move_ctor;
	 generic_field_name <"lazy_move_assign",lang_type_class,lazy_move_assign> lazy_move_assign;
	 generic_field_name <"has_complex_move_ctor",lang_type_class,has_complex_move_ctor> has_complex_move_ctor;
	 generic_field_name <"has_complex_move_assign",lang_type_class,has_complex_move_assign> has_complex_move_assign;
	 generic_field_name <"has_constexpr_ctor",lang_type_class,has_constexpr_ctor> has_constexpr_ctor;
	 generic_field_name <"is_final",lang_type_class,is_final> is_final;
	 generic_field_name <"dummy",lang_type_class,dummy> dummy;
	 generic_field_name <"primary_base",lang_type_class,primary_base> primary_base;
	 generic_field_name <"vcall_indices",lang_type_class,vcall_indices> vcall_indices;
	 generic_field_name <"vtables",lang_type_class,vtables> vtables;
	 generic_field_name <"typeinfo_var",lang_type_class,typeinfo_var> typeinfo_var;
	 generic_field_name <"vbases",lang_type_class,vbases> vbases;
	 generic_field_name <"nested_udts",lang_type_class,nested_udts> nested_udts;
	 generic_field_name <"as_base",lang_type_class,as_base> as_base;
	 generic_field_name <"pure_virtuals",lang_type_class,pure_virtuals> pure_virtuals;
	 generic_field_name <"friend_classes",lang_type_class,friend_classes> friend_classes;
	 generic_field_name <"methods",lang_type_class,methods> methods;
	 generic_field_name <"key_method",lang_type_class,key_method> key_method;
	 generic_field_name <"decl_list",lang_type_class,decl_list> decl_list;
	 generic_field_name <"template_info",lang_type_class,template_info> template_info;
	 generic_field_name <"befriending_classes",lang_type_class,befriending_classes> befriending_classes;
	 generic_field_name <"objc_info",lang_type_class,objc_info> objc_info;
	 generic_field_name <"sorted_fields",lang_type_class,sorted_fields> sorted_fields;
	 generic_field_name <"lambda_expr",lang_type_class,lambda_expr> lambda_expr;
}; 
class CLS_971_lang_type_ptrmem{ 
	 generic_class_name <"lang_type_ptrmem",lang_type_ptrmem> the_class_name;
	 generic_field_name <"h",lang_type_ptrmem,h> h;
	 generic_field_name <"record",lang_type_ptrmem,record> record;
}; 
class CLS_972_lang_type{ 
	 generic_class_name <"lang_type",lang_type> the_class_name;
	 generic_field_name <"u",lang_type,u> u;
}; 
class CLS_973_lang_decl_base{ 
	 generic_class_name <"lang_decl_base",lang_decl_base> the_class_name;
	 generic_field_name <"selector",lang_decl_base,selector> selector;
	 generic_field_name <"language",lang_decl_base,language> language;
	 generic_field_name <"use_template",lang_decl_base,use_template> use_template;
	 generic_field_name <"not_really_extern",lang_decl_base,not_really_extern> not_really_extern;
	 generic_field_name <"initialized_in_class",lang_decl_base,initialized_in_class> initialized_in_class;
	 generic_field_name <"repo_available_p",lang_decl_base,repo_available_p> repo_available_p;
	 generic_field_name <"threadprivate_or_deleted_p",lang_decl_base,threadprivate_or_deleted_p> threadprivate_or_deleted_p;
	 generic_field_name <"anticipated_p",lang_decl_base,anticipated_p> anticipated_p;
	 generic_field_name <"friend_attr",lang_decl_base,friend_attr> friend_attr;
	 generic_field_name <"template_conv_p",lang_decl_base,template_conv_p> template_conv_p;
	 generic_field_name <"odr_used",lang_decl_base,odr_used> odr_used;
	 generic_field_name <"u2sel",lang_decl_base,u2sel> u2sel;
}; 
class CLS_974_lang_decl_base{ 
	 generic_class_name <"lang_decl_base",lang_decl_base> the_class_name;
	 generic_field_name <"selector",lang_decl_base,selector> selector;
	 generic_field_name <"language",lang_decl_base,language> language;
	 generic_field_name <"use_template",lang_decl_base,use_template> use_template;
	 generic_field_name <"not_really_extern",lang_decl_base,not_really_extern> not_really_extern;
	 generic_field_name <"initialized_in_class",lang_decl_base,initialized_in_class> initialized_in_class;
	 generic_field_name <"repo_available_p",lang_decl_base,repo_available_p> repo_available_p;
	 generic_field_name <"threadprivate_or_deleted_p",lang_decl_base,threadprivate_or_deleted_p> threadprivate_or_deleted_p;
	 generic_field_name <"anticipated_p",lang_decl_base,anticipated_p> anticipated_p;
	 generic_field_name <"friend_attr",lang_decl_base,friend_attr> friend_attr;
	 generic_field_name <"template_conv_p",lang_decl_base,template_conv_p> template_conv_p;
	 generic_field_name <"odr_used",lang_decl_base,odr_used> odr_used;
	 generic_field_name <"u2sel",lang_decl_base,u2sel> u2sel;
}; 
class CLS_975_lang_decl_min{ 
	 generic_class_name <"lang_decl_min",lang_decl_min> the_class_name;
	 generic_field_name <"base",lang_decl_min,base> base;
	 generic_field_name <"template_info",lang_decl_min,template_info> template_info;
	 generic_field_name <"u2",lang_decl_min,u2> u2;
}; 
class CLS_976_lang_decl_min{ 
	 generic_class_name <"lang_decl_min",lang_decl_min> the_class_name;
	 generic_field_name <"base",lang_decl_min,base> base;
	 generic_field_name <"template_info",lang_decl_min,template_info> template_info;
	 generic_field_name <"u2",lang_decl_min,u2> u2;
}; 
class CLS_977_cp_token_cache{ 
	 generic_class_name <"cp_token_cache",cp_token_cache> the_class_name;
}; 
class CLS_978_language_function{ 
	 generic_class_name <"language_function",language_function> the_class_name;
	 generic_field_name <"base",language_function,base> base;
	 generic_field_name <"x_cdtor_label",language_function,x_cdtor_label> x_cdtor_label;
	 generic_field_name <"x_current_class_ptr",language_function,x_current_class_ptr> x_current_class_ptr;
	 generic_field_name <"x_current_class_ref",language_function,x_current_class_ref> x_current_class_ref;
	 generic_field_name <"x_eh_spec_block",language_function,x_eh_spec_block> x_eh_spec_block;
	 generic_field_name <"x_in_charge_parm",language_function,x_in_charge_parm> x_in_charge_parm;
	 generic_field_name <"x_vtt_parm",language_function,x_vtt_parm> x_vtt_parm;
	 generic_field_name <"x_return_value",language_function,x_return_value> x_return_value;
	 generic_field_name <"returns_value",language_function,returns_value> returns_value;
	 generic_field_name <"returns_null",language_function,returns_null> returns_null;
	 generic_field_name <"returns_abnormally",language_function,returns_abnormally> returns_abnormally;
	 generic_field_name <"x_in_function_try_handler",language_function,x_in_function_try_handler> x_in_function_try_handler;
	 generic_field_name <"x_in_base_initializer",language_function,x_in_base_initializer> x_in_base_initializer;
	 generic_field_name <"can_throw",language_function,can_throw> can_throw;
	 generic_field_name <"x_named_labels",language_function,x_named_labels> x_named_labels;
	 generic_field_name <"bindings",language_function,bindings> bindings;
	 generic_field_name <"x_local_names",language_function,x_local_names> x_local_names;
	 generic_field_name <"extern_decl_map",language_function,extern_decl_map> extern_decl_map;
}; 
class CLS_979_lang_decl_fn{ 
	 generic_class_name <"lang_decl_fn",lang_decl_fn> the_class_name;
	 generic_field_name <"min",lang_decl_fn,min> min;
	 generic_field_name <"operator_code",lang_decl_fn,operator_code> operator_code;
	 generic_field_name <"global_ctor_p",lang_decl_fn,global_ctor_p> global_ctor_p;
	 generic_field_name <"global_dtor_p",lang_decl_fn,global_dtor_p> global_dtor_p;
	 generic_field_name <"constructor_attr",lang_decl_fn,constructor_attr> constructor_attr;
	 generic_field_name <"destructor_attr",lang_decl_fn,destructor_attr> destructor_attr;
	 generic_field_name <"assignment_operator_p",lang_decl_fn,assignment_operator_p> assignment_operator_p;
	 generic_field_name <"static_function",lang_decl_fn,static_function> static_function;
	 generic_field_name <"pure_virtual",lang_decl_fn,pure_virtual> pure_virtual;
	 generic_field_name <"defaulted_p",lang_decl_fn,defaulted_p> defaulted_p;
	 generic_field_name <"has_in_charge_parm_p",lang_decl_fn,has_in_charge_parm_p> has_in_charge_parm_p;
	 generic_field_name <"has_vtt_parm_p",lang_decl_fn,has_vtt_parm_p> has_vtt_parm_p;
	 generic_field_name <"pending_inline_p",lang_decl_fn,pending_inline_p> pending_inline_p;
	 generic_field_name <"nonconverting",lang_decl_fn,nonconverting> nonconverting;
	 generic_field_name <"thunk_p",lang_decl_fn,thunk_p> thunk_p;
	 generic_field_name <"this_thunk_p",lang_decl_fn,this_thunk_p> this_thunk_p;
	 generic_field_name <"hidden_friend_p",lang_decl_fn,hidden_friend_p> hidden_friend_p;
	 generic_field_name <"suppress_implicit_decl",lang_decl_fn,suppress_implicit_decl> suppress_implicit_decl;
	 generic_field_name <"befriending_classes",lang_decl_fn,befriending_classes> befriending_classes;
	 generic_field_name <"context",lang_decl_fn,context> context;
	 generic_field_name <"u5",lang_decl_fn,u5> u5;
	 generic_field_name <"u",lang_decl_fn,u> u;
}; 
class CLS_980_lang_decl_base{ 
	 generic_class_name <"lang_decl_base",lang_decl_base> the_class_name;
	 generic_field_name <"selector",lang_decl_base,selector> selector;
	 generic_field_name <"language",lang_decl_base,language> language;
	 generic_field_name <"use_template",lang_decl_base,use_template> use_template;
	 generic_field_name <"not_really_extern",lang_decl_base,not_really_extern> not_really_extern;
	 generic_field_name <"initialized_in_class",lang_decl_base,initialized_in_class> initialized_in_class;
	 generic_field_name <"repo_available_p",lang_decl_base,repo_available_p> repo_available_p;
	 generic_field_name <"threadprivate_or_deleted_p",lang_decl_base,threadprivate_or_deleted_p> threadprivate_or_deleted_p;
	 generic_field_name <"anticipated_p",lang_decl_base,anticipated_p> anticipated_p;
	 generic_field_name <"friend_attr",lang_decl_base,friend_attr> friend_attr;
	 generic_field_name <"template_conv_p",lang_decl_base,template_conv_p> template_conv_p;
	 generic_field_name <"odr_used",lang_decl_base,odr_used> odr_used;
	 generic_field_name <"u2sel",lang_decl_base,u2sel> u2sel;
}; 
class CLS_981_lang_decl_ns{ 
	 generic_class_name <"lang_decl_ns",lang_decl_ns> the_class_name;
	 generic_field_name <"base",lang_decl_ns,base> base;
	 generic_field_name <"level",lang_decl_ns,level> level;
}; 
class CLS_982_lang_decl_base{ 
	 generic_class_name <"lang_decl_base",lang_decl_base> the_class_name;
	 generic_field_name <"selector",lang_decl_base,selector> selector;
	 generic_field_name <"language",lang_decl_base,language> language;
	 generic_field_name <"use_template",lang_decl_base,use_template> use_template;
	 generic_field_name <"not_really_extern",lang_decl_base,not_really_extern> not_really_extern;
	 generic_field_name <"initialized_in_class",lang_decl_base,initialized_in_class> initialized_in_class;
	 generic_field_name <"repo_available_p",lang_decl_base,repo_available_p> repo_available_p;
	 generic_field_name <"threadprivate_or_deleted_p",lang_decl_base,threadprivate_or_deleted_p> threadprivate_or_deleted_p;
	 generic_field_name <"anticipated_p",lang_decl_base,anticipated_p> anticipated_p;
	 generic_field_name <"friend_attr",lang_decl_base,friend_attr> friend_attr;
	 generic_field_name <"template_conv_p",lang_decl_base,template_conv_p> template_conv_p;
	 generic_field_name <"odr_used",lang_decl_base,odr_used> odr_used;
	 generic_field_name <"u2sel",lang_decl_base,u2sel> u2sel;
}; 
class CLS_983_lang_decl_parm{ 
	 generic_class_name <"lang_decl_parm",lang_decl_parm> the_class_name;
	 generic_field_name <"base",lang_decl_parm,base> base;
	 generic_field_name <"level",lang_decl_parm,level> level;
	 generic_field_name <"index",lang_decl_parm,index> index;
}; 
class CLS_984_lang_decl_base{ 
	 generic_class_name <"lang_decl_base",lang_decl_base> the_class_name;
	 generic_field_name <"selector",lang_decl_base,selector> selector;
	 generic_field_name <"language",lang_decl_base,language> language;
	 generic_field_name <"use_template",lang_decl_base,use_template> use_template;
	 generic_field_name <"not_really_extern",lang_decl_base,not_really_extern> not_really_extern;
	 generic_field_name <"initialized_in_class",lang_decl_base,initialized_in_class> initialized_in_class;
	 generic_field_name <"repo_available_p",lang_decl_base,repo_available_p> repo_available_p;
	 generic_field_name <"threadprivate_or_deleted_p",lang_decl_base,threadprivate_or_deleted_p> threadprivate_or_deleted_p;
	 generic_field_name <"anticipated_p",lang_decl_base,anticipated_p> anticipated_p;
	 generic_field_name <"friend_attr",lang_decl_base,friend_attr> friend_attr;
	 generic_field_name <"template_conv_p",lang_decl_base,template_conv_p> template_conv_p;
	 generic_field_name <"odr_used",lang_decl_base,odr_used> odr_used;
	 generic_field_name <"u2sel",lang_decl_base,u2sel> u2sel;
}; 
class CLS_985_lang_decl_min{ 
	 generic_class_name <"lang_decl_min",lang_decl_min> the_class_name;
	 generic_field_name <"base",lang_decl_min,base> base;
	 generic_field_name <"template_info",lang_decl_min,template_info> template_info;
	 generic_field_name <"u2",lang_decl_min,u2> u2;
}; 
class CLS_986_lang_decl_fn{ 
	 generic_class_name <"lang_decl_fn",lang_decl_fn> the_class_name;
	 generic_field_name <"min",lang_decl_fn,min> min;
	 generic_field_name <"operator_code",lang_decl_fn,operator_code> operator_code;
	 generic_field_name <"global_ctor_p",lang_decl_fn,global_ctor_p> global_ctor_p;
	 generic_field_name <"global_dtor_p",lang_decl_fn,global_dtor_p> global_dtor_p;
	 generic_field_name <"constructor_attr",lang_decl_fn,constructor_attr> constructor_attr;
	 generic_field_name <"destructor_attr",lang_decl_fn,destructor_attr> destructor_attr;
	 generic_field_name <"assignment_operator_p",lang_decl_fn,assignment_operator_p> assignment_operator_p;
	 generic_field_name <"static_function",lang_decl_fn,static_function> static_function;
	 generic_field_name <"pure_virtual",lang_decl_fn,pure_virtual> pure_virtual;
	 generic_field_name <"defaulted_p",lang_decl_fn,defaulted_p> defaulted_p;
	 generic_field_name <"has_in_charge_parm_p",lang_decl_fn,has_in_charge_parm_p> has_in_charge_parm_p;
	 generic_field_name <"has_vtt_parm_p",lang_decl_fn,has_vtt_parm_p> has_vtt_parm_p;
	 generic_field_name <"pending_inline_p",lang_decl_fn,pending_inline_p> pending_inline_p;
	 generic_field_name <"nonconverting",lang_decl_fn,nonconverting> nonconverting;
	 generic_field_name <"thunk_p",lang_decl_fn,thunk_p> thunk_p;
	 generic_field_name <"this_thunk_p",lang_decl_fn,this_thunk_p> this_thunk_p;
	 generic_field_name <"hidden_friend_p",lang_decl_fn,hidden_friend_p> hidden_friend_p;
	 generic_field_name <"suppress_implicit_decl",lang_decl_fn,suppress_implicit_decl> suppress_implicit_decl;
	 generic_field_name <"befriending_classes",lang_decl_fn,befriending_classes> befriending_classes;
	 generic_field_name <"context",lang_decl_fn,context> context;
	 generic_field_name <"u5",lang_decl_fn,u5> u5;
	 generic_field_name <"u",lang_decl_fn,u> u;
}; 
class CLS_987_lang_decl_ns{ 
	 generic_class_name <"lang_decl_ns",lang_decl_ns> the_class_name;
	 generic_field_name <"base",lang_decl_ns,base> base;
	 generic_field_name <"level",lang_decl_ns,level> level;
}; 
class CLS_988_lang_decl_parm{ 
	 generic_class_name <"lang_decl_parm",lang_decl_parm> the_class_name;
	 generic_field_name <"base",lang_decl_parm,base> base;
	 generic_field_name <"level",lang_decl_parm,level> level;
	 generic_field_name <"index",lang_decl_parm,index> index;
}; 
class CLS_989_lang_decl{ 
	 generic_class_name <"lang_decl",lang_decl> the_class_name;
	 generic_field_name <"u",lang_decl,u> u;
}; 
class CLS_990_aggr_init_expr_arg_iterator_d{ 
	 generic_class_name <"aggr_init_expr_arg_iterator_d",aggr_init_expr_arg_iterator_d> the_class_name;
	 generic_field_name <"t",aggr_init_expr_arg_iterator_d,t> t;
	 generic_field_name <"n",aggr_init_expr_arg_iterator_d,n> n;
	 generic_field_name <"i",aggr_init_expr_arg_iterator_d,i> i;
}; 
class CLS_991_operator_name_info_t{ 
	 generic_class_name <"operator_name_info_t",operator_name_info_t> the_class_name;
	 generic_field_name <"identifier",operator_name_info_t,identifier> identifier;
	 generic_field_name <"name",operator_name_info_t,name> name;
	 generic_field_name <"mangled_name",operator_name_info_t,mangled_name> mangled_name;
	 generic_field_name <"arity",operator_name_info_t,arity> arity;
}; 
class CLS_992_cp_decl_specifier_seq{ 
	 generic_class_name <"cp_decl_specifier_seq",cp_decl_specifier_seq> the_class_name;
	 generic_field_name <"specs",cp_decl_specifier_seq,specs> specs;
	 generic_field_name <"type_location",cp_decl_specifier_seq,type_location> type_location;
	 generic_field_name <"type",cp_decl_specifier_seq,type> type;
	 generic_field_name <"attributes",cp_decl_specifier_seq,attributes> attributes;
	 generic_field_name <"redefined_builtin_type",cp_decl_specifier_seq,redefined_builtin_type> redefined_builtin_type;
	 generic_field_name <"storage_class",cp_decl_specifier_seq,storage_class> storage_class;
	 generic_field_name <"type_definition_p",cp_decl_specifier_seq,type_definition_p> type_definition_p;
	 generic_field_name <"multiple_types_p",cp_decl_specifier_seq,multiple_types_p> multiple_types_p;
	 generic_field_name <"conflicting_specifiers_p",cp_decl_specifier_seq,conflicting_specifiers_p> conflicting_specifiers_p;
	 generic_field_name <"any_specifiers_p",cp_decl_specifier_seq,any_specifiers_p> any_specifiers_p;
	 generic_field_name <"any_type_specifiers_p",cp_decl_specifier_seq,any_type_specifiers_p> any_type_specifiers_p;
	 generic_field_name <"explicit_int_p",cp_decl_specifier_seq,explicit_int_p> explicit_int_p;
	 generic_field_name <"explicit_int128_p",cp_decl_specifier_seq,explicit_int128_p> explicit_int128_p;
	 generic_field_name <"explicit_char_p",cp_decl_specifier_seq,explicit_char_p> explicit_char_p;
}; 
class CLS_993_cp_declarator{ 
	 generic_class_name <"cp_declarator",cp_declarator> the_class_name;
}; 
class CLS_994_cp_parameter_declarator{ 
	 generic_class_name <"cp_parameter_declarator",cp_parameter_declarator> the_class_name;
}; 
class CLS_995_cp_parameter_declarator{ 
	 generic_class_name <"cp_parameter_declarator",cp_parameter_declarator> the_class_name;
	 generic_field_name <"next",cp_parameter_declarator,next> next;
	 generic_field_name <"decl_specifiers",cp_parameter_declarator,decl_specifiers> decl_specifiers;
	 generic_field_name <"declarator",cp_parameter_declarator,declarator> declarator;
	 generic_field_name <"default_argument",cp_parameter_declarator,default_argument> default_argument;
	 generic_field_name <"ellipsis_p",cp_parameter_declarator,ellipsis_p> ellipsis_p;
}; 
class CLS_996_cp_declarator{ 
	 generic_class_name <"cp_declarator",cp_declarator> the_class_name;
	 generic_field_name <"kind",cp_declarator,kind> kind;
	 generic_field_name <"parameter_pack_p",cp_declarator,parameter_pack_p> parameter_pack_p;
	 generic_field_name <"id_loc",cp_declarator,id_loc> id_loc;
	 generic_field_name <"attributes",cp_declarator,attributes> attributes;
	 generic_field_name <"declarator",cp_declarator,declarator> declarator;
	 generic_field_name <"u",cp_declarator,u> u;
}; 
class CLS_997_tinst_level{ 
	 generic_class_name <"tinst_level",tinst_level> the_class_name;
}; 
class CLS_998_tinst_level{ 
	 generic_class_name <"tinst_level",tinst_level> the_class_name;
	 generic_field_name <"next",tinst_level,next> next;
	 generic_field_name <"decl",tinst_level,decl> decl;
	 generic_field_name <"locus",tinst_level,locus> locus;
	 generic_field_name <"errors",tinst_level,errors> errors;
	 generic_field_name <"in_system_header_p",tinst_level,in_system_header_p> in_system_header_p;
}; 
class CLS_999_tinst_level{ 
	 generic_class_name <"tinst_level",tinst_level> the_class_name;
	 generic_field_name <"next",tinst_level,next> next;
	 generic_field_name <"decl",tinst_level,decl> decl;
	 generic_field_name <"locus",tinst_level,locus> locus;
	 generic_field_name <"errors",tinst_level,errors> errors;
	 generic_field_name <"in_system_header_p",tinst_level,in_system_header_p> in_system_header_p;
}; 
class CLS_1000_tinst_level{ 
	 generic_class_name <"tinst_level",tinst_level> the_class_name;
	 generic_field_name <"next",tinst_level,next> next;
	 generic_field_name <"decl",tinst_level,decl> decl;
	 generic_field_name <"locus",tinst_level,locus> locus;
	 generic_field_name <"errors",tinst_level,errors> errors;
	 generic_field_name <"in_system_header_p",tinst_level,in_system_header_p> in_system_header_p;
}; 
class CLS_1001_deferred_access_check{ 
	 generic_class_name <"deferred_access_check",deferred_access_check> the_class_name;
	 generic_field_name <"binfo",deferred_access_check,binfo> binfo;
	 generic_field_name <"decl",deferred_access_check,decl> decl;
	 generic_field_name <"diag_decl",deferred_access_check,diag_decl> diag_decl;
}; 
class CLS_1002_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_1003_VEC_deferred_access_check_base{ 
	 generic_class_name <"VEC_deferred_access_check_base",VEC_deferred_access_check_base> the_class_name;
	 generic_field_name <"prefix",VEC_deferred_access_check_base,prefix> prefix;
	 generic_field_name <"vec",VEC_deferred_access_check_base,vec> vec;
}; 
class CLS_1004_VEC_deferred_access_check_none{ 
	 generic_class_name <"VEC_deferred_access_check_none",VEC_deferred_access_check_none> the_class_name;
	 generic_field_name <"base",VEC_deferred_access_check_none,base> base;
}; 
class CLS_1005_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1006_VEC_deferred_access_check_gc{ 
	 generic_class_name <"VEC_deferred_access_check_gc",VEC_deferred_access_check_gc> the_class_name;
	 generic_field_name <"base",VEC_deferred_access_check_gc,base> base;
}; 
class CLS_1007_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1008_attribute_spec{ 
	 generic_class_name <"attribute_spec",attribute_spec> the_class_name;
	 generic_field_name <"name",attribute_spec,name> name;
	 generic_field_name <"min_length",attribute_spec,min_length> min_length;
	 generic_field_name <"max_length",attribute_spec,max_length> max_length;
	 generic_field_name <"decl_required",attribute_spec,decl_required> decl_required;
	 generic_field_name <"type_required",attribute_spec,type_required> type_required;
	 generic_field_name <"function_type_required",attribute_spec,function_type_required> function_type_required;
	 generic_field_name <"handler",attribute_spec,handler> handler;
	 generic_field_name <"affects_type_identity",attribute_spec,affects_type_identity> affects_type_identity;
}; 
class CLS_1009_pointer_set_t{ 
	 generic_class_name <"pointer_set_t",pointer_set_t> the_class_name;
}; 
class CLS_1010_diagnostic_info{ 
	 generic_class_name <"diagnostic_info",diagnostic_info> the_class_name;
	 generic_field_name <"message",diagnostic_info,message> message;
	 generic_field_name <"location",diagnostic_info,location> location;
	 generic_field_name <"override_column",diagnostic_info,override_column> override_column;
	 generic_field_name <"x_data",diagnostic_info,x_data> x_data;
	 generic_field_name <"kind",diagnostic_info,kind> kind;
	 generic_field_name <"option_index",diagnostic_info,option_index> option_index;
}; 
class CLS_1011_basic_block_def{ 
	 generic_class_name <"basic_block_def",basic_block_def> the_class_name;
}; 
class CLS_1012_basic_block_def{ 
	 generic_class_name <"basic_block_def",basic_block_def> the_class_name;
}; 
class CLS_1013_edge_def{ 
	 generic_class_name <"edge_def",edge_def> the_class_name;
	 generic_field_name <"src",edge_def,src> src;
	 generic_field_name <"dest",edge_def,dest> dest;
	 generic_field_name <"insns",edge_def,insns> insns;
	 generic_field_name <"aux",edge_def,aux> aux;
	 generic_field_name <"goto_block",edge_def,goto_block> goto_block;
	 generic_field_name <"goto_locus",edge_def,goto_locus> goto_locus;
	 generic_field_name <"dest_idx",edge_def,dest_idx> dest_idx;
	 generic_field_name <"flags",edge_def,flags> flags;
	 generic_field_name <"probability",edge_def,probability> probability;
	 generic_field_name <"count",edge_def,count> count;
}; 
class CLS_1014_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_1015_VEC_edge_base{ 
	 generic_class_name <"VEC_edge_base",VEC_edge_base> the_class_name;
	 generic_field_name <"prefix",VEC_edge_base,prefix> prefix;
	 generic_field_name <"vec",VEC_edge_base,vec> vec;
}; 
class CLS_1016_VEC_edge_none{ 
	 generic_class_name <"VEC_edge_none",VEC_edge_none> the_class_name;
	 generic_field_name <"base",VEC_edge_none,base> base;
}; 
class CLS_1017_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1018_VEC_edge_gc{ 
	 generic_class_name <"VEC_edge_gc",VEC_edge_gc> the_class_name;
	 generic_field_name <"base",VEC_edge_gc,base> base;
}; 
class CLS_1019_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1020_VEC_edge_heap{ 
	 generic_class_name <"VEC_edge_heap",VEC_edge_heap> the_class_name;
	 generic_field_name <"base",VEC_edge_heap,base> base;
}; 
class CLS_1021_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1022_gcov_ctr_summary{ 
	 generic_class_name <"gcov_ctr_summary",gcov_ctr_summary> the_class_name;
}; 
class CLS_1023_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1024_rtl_bb_info{ 
	 generic_class_name <"rtl_bb_info",rtl_bb_info> the_class_name;
}; 
class CLS_1025_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1026_et_node{ 
	 generic_class_name <"et_node",et_node> the_class_name;
}; 
class CLS_1027_basic_block_def{ 
	 generic_class_name <"basic_block_def",basic_block_def> the_class_name;
}; 
class CLS_1028_basic_block_def{ 
	 generic_class_name <"basic_block_def",basic_block_def> the_class_name;
}; 
class CLS_1029_gimple_bb_info{ 
	 generic_class_name <"gimple_bb_info",gimple_bb_info> the_class_name;
}; 
class CLS_1030_rtl_bb_info{ 
	 generic_class_name <"rtl_bb_info",rtl_bb_info> the_class_name;
}; 
class CLS_1031_basic_block_def{ 
	 generic_class_name <"basic_block_def",basic_block_def> the_class_name;
	 generic_field_name <"preds",basic_block_def,preds> preds;
	 generic_field_name <"succs",basic_block_def,succs> succs;
	 generic_field_name <"aux",basic_block_def,aux> aux;
	 generic_field_name <"loop_father",basic_block_def,loop_father> loop_father;
	 generic_field_name <"dom",basic_block_def,dom> dom;
	 generic_field_name <"prev_bb",basic_block_def,prev_bb> prev_bb;
	 generic_field_name <"next_bb",basic_block_def,next_bb> next_bb;
	 generic_field_name <"il",basic_block_def,il> il;
	 generic_field_name <"count",basic_block_def,count> count;
	 generic_field_name <"index",basic_block_def,index> index;
	 generic_field_name <"loop_depth",basic_block_def,loop_depth> loop_depth;
	 generic_field_name <"frequency",basic_block_def,frequency> frequency;
	 generic_field_name <"discriminator",basic_block_def,discriminator> discriminator;
	 generic_field_name <"flags",basic_block_def,flags> flags;
}; 
class CLS_1032_rtl_bb_info{ 
	 generic_class_name <"rtl_bb_info",rtl_bb_info> the_class_name;
	 generic_field_name <"head_",rtl_bb_info,head_> head_;
	 generic_field_name <"end_",rtl_bb_info,end_> end_;
	 generic_field_name <"header",rtl_bb_info,header> header;
	 generic_field_name <"footer",rtl_bb_info,footer> footer;
	 generic_field_name <"visited",rtl_bb_info,visited> visited;
}; 
class CLS_1033_gimple_bb_info{ 
	 generic_class_name <"gimple_bb_info",gimple_bb_info> the_class_name;
	 generic_field_name <"seq",gimple_bb_info,seq> seq;
	 generic_field_name <"phi_nodes",gimple_bb_info,phi_nodes> phi_nodes;
}; 
class CLS_1034_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_1035_VEC_basic_block_base{ 
	 generic_class_name <"VEC_basic_block_base",VEC_basic_block_base> the_class_name;
	 generic_field_name <"prefix",VEC_basic_block_base,prefix> prefix;
	 generic_field_name <"vec",VEC_basic_block_base,vec> vec;
}; 
class CLS_1036_VEC_basic_block_none{ 
	 generic_class_name <"VEC_basic_block_none",VEC_basic_block_none> the_class_name;
	 generic_field_name <"base",VEC_basic_block_none,base> base;
}; 
class CLS_1037_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1038_VEC_basic_block_gc{ 
	 generic_class_name <"VEC_basic_block_gc",VEC_basic_block_gc> the_class_name;
	 generic_field_name <"base",VEC_basic_block_gc,base> base;
}; 
class CLS_1039_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1040_VEC_basic_block_heap{ 
	 generic_class_name <"VEC_basic_block_heap",VEC_basic_block_heap> the_class_name;
	 generic_field_name <"base",VEC_basic_block_heap,base> base;
}; 
class CLS_1041_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1042_control_flow_graph{ 
	 generic_class_name <"control_flow_graph",control_flow_graph> the_class_name;
	 generic_field_name <"x_entry_block_ptr",control_flow_graph,x_entry_block_ptr> x_entry_block_ptr;
	 generic_field_name <"x_exit_block_ptr",control_flow_graph,x_exit_block_ptr> x_exit_block_ptr;
	 generic_field_name <"x_basic_block_info",control_flow_graph,x_basic_block_info> x_basic_block_info;
	 generic_field_name <"x_n_basic_blocks",control_flow_graph,x_n_basic_blocks> x_n_basic_blocks;
	 generic_field_name <"x_n_edges",control_flow_graph,x_n_edges> x_n_edges;
	 generic_field_name <"x_last_basic_block",control_flow_graph,x_last_basic_block> x_last_basic_block;
	 generic_field_name <"last_label_uid",control_flow_graph,last_label_uid> last_label_uid;
	 generic_field_name <"x_label_to_block_map",control_flow_graph,x_label_to_block_map> x_label_to_block_map;
	 generic_field_name <"x_profile_status",control_flow_graph,x_profile_status> x_profile_status;
	 generic_field_name <"x_dom_computed",control_flow_graph,x_dom_computed> x_dom_computed;
	 generic_field_name <"x_n_bbs_in_dom_tree",control_flow_graph,x_n_bbs_in_dom_tree> x_n_bbs_in_dom_tree;
	 generic_field_name <"max_jumptable_ents",control_flow_graph,max_jumptable_ents> max_jumptable_ents;
}; 
class CLS_1043_bitmap_head_def{ 
	 generic_class_name <"bitmap_head_def",bitmap_head_def> the_class_name;
}; 
class CLS_1044_bitmap_head_def{ 
	 generic_class_name <"bitmap_head_def",bitmap_head_def> the_class_name;
}; 
class CLS_1045_ce_if_block{ 
	 generic_class_name <"ce_if_block",ce_if_block> the_class_name;
	 generic_field_name <"test_bb",ce_if_block,test_bb> test_bb;
	 generic_field_name <"then_bb",ce_if_block,then_bb> then_bb;
	 generic_field_name <"else_bb",ce_if_block,else_bb> else_bb;
	 generic_field_name <"join_bb",ce_if_block,join_bb> join_bb;
	 generic_field_name <"last_test_bb",ce_if_block,last_test_bb> last_test_bb;
	 generic_field_name <"num_multiple_test_blocks",ce_if_block,num_multiple_test_blocks> num_multiple_test_blocks;
	 generic_field_name <"num_and_and_blocks",ce_if_block,num_and_and_blocks> num_and_and_blocks;
	 generic_field_name <"num_or_or_blocks",ce_if_block,num_or_or_blocks> num_or_or_blocks;
	 generic_field_name <"num_multiple_test_insns",ce_if_block,num_multiple_test_insns> num_multiple_test_insns;
	 generic_field_name <"and_and_p",ce_if_block,and_and_p> and_and_p;
	 generic_field_name <"num_then_insns",ce_if_block,num_then_insns> num_then_insns;
	 generic_field_name <"num_else_insns",ce_if_block,num_else_insns> num_else_insns;
	 generic_field_name <"pass",ce_if_block,pass> pass;
}; 
class CLS_1046_edge_list{ 
	 generic_class_name <"edge_list",edge_list> the_class_name;
	 generic_field_name <"num_blocks",edge_list,num_blocks> num_blocks;
	 generic_field_name <"num_edges",edge_list,num_edges> num_edges;
	 generic_field_name <"index_to_edge",edge_list,index_to_edge> index_to_edge;
}; 
class CLS_1047_edge_list{ 
	 generic_class_name <"edge_list",edge_list> the_class_name;
	 generic_field_name <"num_blocks",edge_list,num_blocks> num_blocks;
	 generic_field_name <"num_edges",edge_list,num_edges> num_edges;
	 generic_field_name <"index_to_edge",edge_list,index_to_edge> index_to_edge;
}; 
class CLS_1048_edge_list{ 
	 generic_class_name <"edge_list",edge_list> the_class_name;
	 generic_field_name <"num_blocks",edge_list,num_blocks> num_blocks;
	 generic_field_name <"num_edges",edge_list,num_edges> num_edges;
	 generic_field_name <"index_to_edge",edge_list,index_to_edge> index_to_edge;
}; 
class CLS_1049_edge_list{ 
	 generic_class_name <"edge_list",edge_list> the_class_name;
	 generic_field_name <"num_blocks",edge_list,num_blocks> num_blocks;
	 generic_field_name <"num_edges",edge_list,num_edges> num_edges;
	 generic_field_name <"index_to_edge",edge_list,index_to_edge> index_to_edge;
}; 
class CLS_1050_edge_list{ 
	 generic_class_name <"edge_list",edge_list> the_class_name;
	 generic_field_name <"num_blocks",edge_list,num_blocks> num_blocks;
	 generic_field_name <"num_edges",edge_list,num_edges> num_edges;
	 generic_field_name <"index_to_edge",edge_list,index_to_edge> index_to_edge;
}; 
class CLS_1051_edge_list{ 
	 generic_class_name <"edge_list",edge_list> the_class_name;
	 generic_field_name <"num_blocks",edge_list,num_blocks> num_blocks;
	 generic_field_name <"num_edges",edge_list,num_edges> num_edges;
	 generic_field_name <"index_to_edge",edge_list,index_to_edge> index_to_edge;
}; 
class CLS_1052_edge_list{ 
	 generic_class_name <"edge_list",edge_list> the_class_name;
	 generic_field_name <"num_blocks",edge_list,num_blocks> num_blocks;
	 generic_field_name <"num_edges",edge_list,num_edges> num_edges;
	 generic_field_name <"index_to_edge",edge_list,index_to_edge> index_to_edge;
}; 
class CLS_1053_edge_list{ 
	 generic_class_name <"edge_list",edge_list> the_class_name;
	 generic_field_name <"num_blocks",edge_list,num_blocks> num_blocks;
	 generic_field_name <"num_edges",edge_list,num_edges> num_edges;
	 generic_field_name <"index_to_edge",edge_list,index_to_edge> index_to_edge;
}; 
class CLS_1054_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1055_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1056_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1057_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1058_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1059_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1060_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1061_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1062_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1063_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1064_cfg_hooks{ 
	 generic_class_name <"cfg_hooks",cfg_hooks> the_class_name;
	 generic_field_name <"name",cfg_hooks,name> name;
	 generic_field_name <"verify_flow_info",cfg_hooks,verify_flow_info> verify_flow_info;
	 generic_field_name <"dump_bb",cfg_hooks,dump_bb> dump_bb;
	 generic_field_name <"create_basic_block",cfg_hooks,create_basic_block> create_basic_block;
	 generic_field_name <"redirect_edge_and_branch",cfg_hooks,redirect_edge_and_branch> redirect_edge_and_branch;
	 generic_field_name <"redirect_edge_and_branch_force",cfg_hooks,redirect_edge_and_branch_force> redirect_edge_and_branch_force;
	 generic_field_name <"can_remove_branch_p",cfg_hooks,can_remove_branch_p> can_remove_branch_p;
	 generic_field_name <"delete_basic_block",cfg_hooks,delete_basic_block> delete_basic_block;
	 generic_field_name <"split_block",cfg_hooks,split_block> split_block;
	 generic_field_name <"move_block_after",cfg_hooks,move_block_after> move_block_after;
	 generic_field_name <"can_merge_blocks_p",cfg_hooks,can_merge_blocks_p> can_merge_blocks_p;
	 generic_field_name <"merge_blocks",cfg_hooks,merge_blocks> merge_blocks;
	 generic_field_name <"predict_edge",cfg_hooks,predict_edge> predict_edge;
	 generic_field_name <"predicted_by_p",cfg_hooks,predicted_by_p> predicted_by_p;
	 generic_field_name <"can_duplicate_block_p",cfg_hooks,can_duplicate_block_p> can_duplicate_block_p;
	 generic_field_name <"duplicate_block",cfg_hooks,duplicate_block> duplicate_block;
	 generic_field_name <"split_edge",cfg_hooks,split_edge> split_edge;
	 generic_field_name <"make_forwarder_block",cfg_hooks,make_forwarder_block> make_forwarder_block;
	 generic_field_name <"tidy_fallthru_edge",cfg_hooks,tidy_fallthru_edge> tidy_fallthru_edge;
	 generic_field_name <"force_nonfallthru",cfg_hooks,force_nonfallthru> force_nonfallthru;
	 generic_field_name <"block_ends_with_call_p",cfg_hooks,block_ends_with_call_p> block_ends_with_call_p;
	 generic_field_name <"block_ends_with_condjump_p",cfg_hooks,block_ends_with_condjump_p> block_ends_with_condjump_p;
	 generic_field_name <"flow_call_edges_add",cfg_hooks,flow_call_edges_add> flow_call_edges_add;
	 generic_field_name <"execute_on_growing_pred",cfg_hooks,execute_on_growing_pred> execute_on_growing_pred;
	 generic_field_name <"execute_on_shrinking_pred",cfg_hooks,execute_on_shrinking_pred> execute_on_shrinking_pred;
	 generic_field_name <"cfg_hook_duplicate_loop_to_header_edge",cfg_hooks,cfg_hook_duplicate_loop_to_header_edge> cfg_hook_duplicate_loop_to_header_edge;
	 generic_field_name <"lv_add_condition_to_bb",cfg_hooks,lv_add_condition_to_bb> lv_add_condition_to_bb;
	 generic_field_name <"lv_adjust_loop_header_phi",cfg_hooks,lv_adjust_loop_header_phi> lv_adjust_loop_header_phi;
	 generic_field_name <"extract_cond_bb_edges",cfg_hooks,extract_cond_bb_edges> extract_cond_bb_edges;
	 generic_field_name <"flush_pending_stmts",cfg_hooks,flush_pending_stmts> flush_pending_stmts;
}; 
class CLS_1065_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1066_cfg_hooks{ 
	 generic_class_name <"cfg_hooks",cfg_hooks> the_class_name;
	 generic_field_name <"name",cfg_hooks,name> name;
	 generic_field_name <"verify_flow_info",cfg_hooks,verify_flow_info> verify_flow_info;
	 generic_field_name <"dump_bb",cfg_hooks,dump_bb> dump_bb;
	 generic_field_name <"create_basic_block",cfg_hooks,create_basic_block> create_basic_block;
	 generic_field_name <"redirect_edge_and_branch",cfg_hooks,redirect_edge_and_branch> redirect_edge_and_branch;
	 generic_field_name <"redirect_edge_and_branch_force",cfg_hooks,redirect_edge_and_branch_force> redirect_edge_and_branch_force;
	 generic_field_name <"can_remove_branch_p",cfg_hooks,can_remove_branch_p> can_remove_branch_p;
	 generic_field_name <"delete_basic_block",cfg_hooks,delete_basic_block> delete_basic_block;
	 generic_field_name <"split_block",cfg_hooks,split_block> split_block;
	 generic_field_name <"move_block_after",cfg_hooks,move_block_after> move_block_after;
	 generic_field_name <"can_merge_blocks_p",cfg_hooks,can_merge_blocks_p> can_merge_blocks_p;
	 generic_field_name <"merge_blocks",cfg_hooks,merge_blocks> merge_blocks;
	 generic_field_name <"predict_edge",cfg_hooks,predict_edge> predict_edge;
	 generic_field_name <"predicted_by_p",cfg_hooks,predicted_by_p> predicted_by_p;
	 generic_field_name <"can_duplicate_block_p",cfg_hooks,can_duplicate_block_p> can_duplicate_block_p;
	 generic_field_name <"duplicate_block",cfg_hooks,duplicate_block> duplicate_block;
	 generic_field_name <"split_edge",cfg_hooks,split_edge> split_edge;
	 generic_field_name <"make_forwarder_block",cfg_hooks,make_forwarder_block> make_forwarder_block;
	 generic_field_name <"tidy_fallthru_edge",cfg_hooks,tidy_fallthru_edge> tidy_fallthru_edge;
	 generic_field_name <"force_nonfallthru",cfg_hooks,force_nonfallthru> force_nonfallthru;
	 generic_field_name <"block_ends_with_call_p",cfg_hooks,block_ends_with_call_p> block_ends_with_call_p;
	 generic_field_name <"block_ends_with_condjump_p",cfg_hooks,block_ends_with_condjump_p> block_ends_with_condjump_p;
	 generic_field_name <"flow_call_edges_add",cfg_hooks,flow_call_edges_add> flow_call_edges_add;
	 generic_field_name <"execute_on_growing_pred",cfg_hooks,execute_on_growing_pred> execute_on_growing_pred;
	 generic_field_name <"execute_on_shrinking_pred",cfg_hooks,execute_on_shrinking_pred> execute_on_shrinking_pred;
	 generic_field_name <"cfg_hook_duplicate_loop_to_header_edge",cfg_hooks,cfg_hook_duplicate_loop_to_header_edge> cfg_hook_duplicate_loop_to_header_edge;
	 generic_field_name <"lv_add_condition_to_bb",cfg_hooks,lv_add_condition_to_bb> lv_add_condition_to_bb;
	 generic_field_name <"lv_adjust_loop_header_phi",cfg_hooks,lv_adjust_loop_header_phi> lv_adjust_loop_header_phi;
	 generic_field_name <"extract_cond_bb_edges",cfg_hooks,extract_cond_bb_edges> extract_cond_bb_edges;
	 generic_field_name <"flush_pending_stmts",cfg_hooks,flush_pending_stmts> flush_pending_stmts;
}; 
class CLS_1067_cfg_hooks{ 
	 generic_class_name <"cfg_hooks",cfg_hooks> the_class_name;
	 generic_field_name <"name",cfg_hooks,name> name;
	 generic_field_name <"verify_flow_info",cfg_hooks,verify_flow_info> verify_flow_info;
	 generic_field_name <"dump_bb",cfg_hooks,dump_bb> dump_bb;
	 generic_field_name <"create_basic_block",cfg_hooks,create_basic_block> create_basic_block;
	 generic_field_name <"redirect_edge_and_branch",cfg_hooks,redirect_edge_and_branch> redirect_edge_and_branch;
	 generic_field_name <"redirect_edge_and_branch_force",cfg_hooks,redirect_edge_and_branch_force> redirect_edge_and_branch_force;
	 generic_field_name <"can_remove_branch_p",cfg_hooks,can_remove_branch_p> can_remove_branch_p;
	 generic_field_name <"delete_basic_block",cfg_hooks,delete_basic_block> delete_basic_block;
	 generic_field_name <"split_block",cfg_hooks,split_block> split_block;
	 generic_field_name <"move_block_after",cfg_hooks,move_block_after> move_block_after;
	 generic_field_name <"can_merge_blocks_p",cfg_hooks,can_merge_blocks_p> can_merge_blocks_p;
	 generic_field_name <"merge_blocks",cfg_hooks,merge_blocks> merge_blocks;
	 generic_field_name <"predict_edge",cfg_hooks,predict_edge> predict_edge;
	 generic_field_name <"predicted_by_p",cfg_hooks,predicted_by_p> predicted_by_p;
	 generic_field_name <"can_duplicate_block_p",cfg_hooks,can_duplicate_block_p> can_duplicate_block_p;
	 generic_field_name <"duplicate_block",cfg_hooks,duplicate_block> duplicate_block;
	 generic_field_name <"split_edge",cfg_hooks,split_edge> split_edge;
	 generic_field_name <"make_forwarder_block",cfg_hooks,make_forwarder_block> make_forwarder_block;
	 generic_field_name <"tidy_fallthru_edge",cfg_hooks,tidy_fallthru_edge> tidy_fallthru_edge;
	 generic_field_name <"force_nonfallthru",cfg_hooks,force_nonfallthru> force_nonfallthru;
	 generic_field_name <"block_ends_with_call_p",cfg_hooks,block_ends_with_call_p> block_ends_with_call_p;
	 generic_field_name <"block_ends_with_condjump_p",cfg_hooks,block_ends_with_condjump_p> block_ends_with_condjump_p;
	 generic_field_name <"flow_call_edges_add",cfg_hooks,flow_call_edges_add> flow_call_edges_add;
	 generic_field_name <"execute_on_growing_pred",cfg_hooks,execute_on_growing_pred> execute_on_growing_pred;
	 generic_field_name <"execute_on_shrinking_pred",cfg_hooks,execute_on_shrinking_pred> execute_on_shrinking_pred;
	 generic_field_name <"cfg_hook_duplicate_loop_to_header_edge",cfg_hooks,cfg_hook_duplicate_loop_to_header_edge> cfg_hook_duplicate_loop_to_header_edge;
	 generic_field_name <"lv_add_condition_to_bb",cfg_hooks,lv_add_condition_to_bb> lv_add_condition_to_bb;
	 generic_field_name <"lv_adjust_loop_header_phi",cfg_hooks,lv_adjust_loop_header_phi> lv_adjust_loop_header_phi;
	 generic_field_name <"extract_cond_bb_edges",cfg_hooks,extract_cond_bb_edges> extract_cond_bb_edges;
	 generic_field_name <"flush_pending_stmts",cfg_hooks,flush_pending_stmts> flush_pending_stmts;
}; 
class CLS_1068_cfg_hooks{ 
	 generic_class_name <"cfg_hooks",cfg_hooks> the_class_name;
	 generic_field_name <"name",cfg_hooks,name> name;
	 generic_field_name <"verify_flow_info",cfg_hooks,verify_flow_info> verify_flow_info;
	 generic_field_name <"dump_bb",cfg_hooks,dump_bb> dump_bb;
	 generic_field_name <"create_basic_block",cfg_hooks,create_basic_block> create_basic_block;
	 generic_field_name <"redirect_edge_and_branch",cfg_hooks,redirect_edge_and_branch> redirect_edge_and_branch;
	 generic_field_name <"redirect_edge_and_branch_force",cfg_hooks,redirect_edge_and_branch_force> redirect_edge_and_branch_force;
	 generic_field_name <"can_remove_branch_p",cfg_hooks,can_remove_branch_p> can_remove_branch_p;
	 generic_field_name <"delete_basic_block",cfg_hooks,delete_basic_block> delete_basic_block;
	 generic_field_name <"split_block",cfg_hooks,split_block> split_block;
	 generic_field_name <"move_block_after",cfg_hooks,move_block_after> move_block_after;
	 generic_field_name <"can_merge_blocks_p",cfg_hooks,can_merge_blocks_p> can_merge_blocks_p;
	 generic_field_name <"merge_blocks",cfg_hooks,merge_blocks> merge_blocks;
	 generic_field_name <"predict_edge",cfg_hooks,predict_edge> predict_edge;
	 generic_field_name <"predicted_by_p",cfg_hooks,predicted_by_p> predicted_by_p;
	 generic_field_name <"can_duplicate_block_p",cfg_hooks,can_duplicate_block_p> can_duplicate_block_p;
	 generic_field_name <"duplicate_block",cfg_hooks,duplicate_block> duplicate_block;
	 generic_field_name <"split_edge",cfg_hooks,split_edge> split_edge;
	 generic_field_name <"make_forwarder_block",cfg_hooks,make_forwarder_block> make_forwarder_block;
	 generic_field_name <"tidy_fallthru_edge",cfg_hooks,tidy_fallthru_edge> tidy_fallthru_edge;
	 generic_field_name <"force_nonfallthru",cfg_hooks,force_nonfallthru> force_nonfallthru;
	 generic_field_name <"block_ends_with_call_p",cfg_hooks,block_ends_with_call_p> block_ends_with_call_p;
	 generic_field_name <"block_ends_with_condjump_p",cfg_hooks,block_ends_with_condjump_p> block_ends_with_condjump_p;
	 generic_field_name <"flow_call_edges_add",cfg_hooks,flow_call_edges_add> flow_call_edges_add;
	 generic_field_name <"execute_on_growing_pred",cfg_hooks,execute_on_growing_pred> execute_on_growing_pred;
	 generic_field_name <"execute_on_shrinking_pred",cfg_hooks,execute_on_shrinking_pred> execute_on_shrinking_pred;
	 generic_field_name <"cfg_hook_duplicate_loop_to_header_edge",cfg_hooks,cfg_hook_duplicate_loop_to_header_edge> cfg_hook_duplicate_loop_to_header_edge;
	 generic_field_name <"lv_add_condition_to_bb",cfg_hooks,lv_add_condition_to_bb> lv_add_condition_to_bb;
	 generic_field_name <"lv_adjust_loop_header_phi",cfg_hooks,lv_adjust_loop_header_phi> lv_adjust_loop_header_phi;
	 generic_field_name <"extract_cond_bb_edges",cfg_hooks,extract_cond_bb_edges> extract_cond_bb_edges;
	 generic_field_name <"flush_pending_stmts",cfg_hooks,flush_pending_stmts> flush_pending_stmts;
}; 
class CLS_1069_cfg_hooks{ 
	 generic_class_name <"cfg_hooks",cfg_hooks> the_class_name;
	 generic_field_name <"name",cfg_hooks,name> name;
	 generic_field_name <"verify_flow_info",cfg_hooks,verify_flow_info> verify_flow_info;
	 generic_field_name <"dump_bb",cfg_hooks,dump_bb> dump_bb;
	 generic_field_name <"create_basic_block",cfg_hooks,create_basic_block> create_basic_block;
	 generic_field_name <"redirect_edge_and_branch",cfg_hooks,redirect_edge_and_branch> redirect_edge_and_branch;
	 generic_field_name <"redirect_edge_and_branch_force",cfg_hooks,redirect_edge_and_branch_force> redirect_edge_and_branch_force;
	 generic_field_name <"can_remove_branch_p",cfg_hooks,can_remove_branch_p> can_remove_branch_p;
	 generic_field_name <"delete_basic_block",cfg_hooks,delete_basic_block> delete_basic_block;
	 generic_field_name <"split_block",cfg_hooks,split_block> split_block;
	 generic_field_name <"move_block_after",cfg_hooks,move_block_after> move_block_after;
	 generic_field_name <"can_merge_blocks_p",cfg_hooks,can_merge_blocks_p> can_merge_blocks_p;
	 generic_field_name <"merge_blocks",cfg_hooks,merge_blocks> merge_blocks;
	 generic_field_name <"predict_edge",cfg_hooks,predict_edge> predict_edge;
	 generic_field_name <"predicted_by_p",cfg_hooks,predicted_by_p> predicted_by_p;
	 generic_field_name <"can_duplicate_block_p",cfg_hooks,can_duplicate_block_p> can_duplicate_block_p;
	 generic_field_name <"duplicate_block",cfg_hooks,duplicate_block> duplicate_block;
	 generic_field_name <"split_edge",cfg_hooks,split_edge> split_edge;
	 generic_field_name <"make_forwarder_block",cfg_hooks,make_forwarder_block> make_forwarder_block;
	 generic_field_name <"tidy_fallthru_edge",cfg_hooks,tidy_fallthru_edge> tidy_fallthru_edge;
	 generic_field_name <"force_nonfallthru",cfg_hooks,force_nonfallthru> force_nonfallthru;
	 generic_field_name <"block_ends_with_call_p",cfg_hooks,block_ends_with_call_p> block_ends_with_call_p;
	 generic_field_name <"block_ends_with_condjump_p",cfg_hooks,block_ends_with_condjump_p> block_ends_with_condjump_p;
	 generic_field_name <"flow_call_edges_add",cfg_hooks,flow_call_edges_add> flow_call_edges_add;
	 generic_field_name <"execute_on_growing_pred",cfg_hooks,execute_on_growing_pred> execute_on_growing_pred;
	 generic_field_name <"execute_on_shrinking_pred",cfg_hooks,execute_on_shrinking_pred> execute_on_shrinking_pred;
	 generic_field_name <"cfg_hook_duplicate_loop_to_header_edge",cfg_hooks,cfg_hook_duplicate_loop_to_header_edge> cfg_hook_duplicate_loop_to_header_edge;
	 generic_field_name <"lv_add_condition_to_bb",cfg_hooks,lv_add_condition_to_bb> lv_add_condition_to_bb;
	 generic_field_name <"lv_adjust_loop_header_phi",cfg_hooks,lv_adjust_loop_header_phi> lv_adjust_loop_header_phi;
	 generic_field_name <"extract_cond_bb_edges",cfg_hooks,extract_cond_bb_edges> extract_cond_bb_edges;
	 generic_field_name <"flush_pending_stmts",cfg_hooks,flush_pending_stmts> flush_pending_stmts;
}; 
class CLS_1070_cfg_hooks{ 
	 generic_class_name <"cfg_hooks",cfg_hooks> the_class_name;
	 generic_field_name <"name",cfg_hooks,name> name;
	 generic_field_name <"verify_flow_info",cfg_hooks,verify_flow_info> verify_flow_info;
	 generic_field_name <"dump_bb",cfg_hooks,dump_bb> dump_bb;
	 generic_field_name <"create_basic_block",cfg_hooks,create_basic_block> create_basic_block;
	 generic_field_name <"redirect_edge_and_branch",cfg_hooks,redirect_edge_and_branch> redirect_edge_and_branch;
	 generic_field_name <"redirect_edge_and_branch_force",cfg_hooks,redirect_edge_and_branch_force> redirect_edge_and_branch_force;
	 generic_field_name <"can_remove_branch_p",cfg_hooks,can_remove_branch_p> can_remove_branch_p;
	 generic_field_name <"delete_basic_block",cfg_hooks,delete_basic_block> delete_basic_block;
	 generic_field_name <"split_block",cfg_hooks,split_block> split_block;
	 generic_field_name <"move_block_after",cfg_hooks,move_block_after> move_block_after;
	 generic_field_name <"can_merge_blocks_p",cfg_hooks,can_merge_blocks_p> can_merge_blocks_p;
	 generic_field_name <"merge_blocks",cfg_hooks,merge_blocks> merge_blocks;
	 generic_field_name <"predict_edge",cfg_hooks,predict_edge> predict_edge;
	 generic_field_name <"predicted_by_p",cfg_hooks,predicted_by_p> predicted_by_p;
	 generic_field_name <"can_duplicate_block_p",cfg_hooks,can_duplicate_block_p> can_duplicate_block_p;
	 generic_field_name <"duplicate_block",cfg_hooks,duplicate_block> duplicate_block;
	 generic_field_name <"split_edge",cfg_hooks,split_edge> split_edge;
	 generic_field_name <"make_forwarder_block",cfg_hooks,make_forwarder_block> make_forwarder_block;
	 generic_field_name <"tidy_fallthru_edge",cfg_hooks,tidy_fallthru_edge> tidy_fallthru_edge;
	 generic_field_name <"force_nonfallthru",cfg_hooks,force_nonfallthru> force_nonfallthru;
	 generic_field_name <"block_ends_with_call_p",cfg_hooks,block_ends_with_call_p> block_ends_with_call_p;
	 generic_field_name <"block_ends_with_condjump_p",cfg_hooks,block_ends_with_condjump_p> block_ends_with_condjump_p;
	 generic_field_name <"flow_call_edges_add",cfg_hooks,flow_call_edges_add> flow_call_edges_add;
	 generic_field_name <"execute_on_growing_pred",cfg_hooks,execute_on_growing_pred> execute_on_growing_pred;
	 generic_field_name <"execute_on_shrinking_pred",cfg_hooks,execute_on_shrinking_pred> execute_on_shrinking_pred;
	 generic_field_name <"cfg_hook_duplicate_loop_to_header_edge",cfg_hooks,cfg_hook_duplicate_loop_to_header_edge> cfg_hook_duplicate_loop_to_header_edge;
	 generic_field_name <"lv_add_condition_to_bb",cfg_hooks,lv_add_condition_to_bb> lv_add_condition_to_bb;
	 generic_field_name <"lv_adjust_loop_header_phi",cfg_hooks,lv_adjust_loop_header_phi> lv_adjust_loop_header_phi;
	 generic_field_name <"extract_cond_bb_edges",cfg_hooks,extract_cond_bb_edges> extract_cond_bb_edges;
	 generic_field_name <"flush_pending_stmts",cfg_hooks,flush_pending_stmts> flush_pending_stmts;
}; 
class CLS_1071_bitmap_element_def{ 
	 generic_class_name <"bitmap_element_def",bitmap_element_def> the_class_name;
}; 
class CLS_1072_bitmap_head_def{ 
	 generic_class_name <"bitmap_head_def",bitmap_head_def> the_class_name;
}; 
class CLS_1073_obstack{ 
	 generic_class_name <"obstack",obstack> the_class_name;
	 generic_field_name <"chunk_size",obstack,chunk_size> chunk_size;
	 generic_field_name <"chunk",obstack,chunk> chunk;
	 generic_field_name <"object_base",obstack,object_base> object_base;
	 generic_field_name <"next_free",obstack,next_free> next_free;
	 generic_field_name <"chunk_limit",obstack,chunk_limit> chunk_limit;
	 generic_field_name <"temp",obstack,temp> temp;
	 generic_field_name <"alignment_mask",obstack,alignment_mask> alignment_mask;
	 generic_field_name <"chunkfun",obstack,chunkfun> chunkfun;
	 generic_field_name <"freefun",obstack,freefun> freefun;
	 generic_field_name <"extra_arg",obstack,extra_arg> extra_arg;
	 generic_field_name <"use_extra_arg",obstack,use_extra_arg> use_extra_arg;
	 generic_field_name <"maybe_empty_object",obstack,maybe_empty_object> maybe_empty_object;
	 generic_field_name <"alloc_failed",obstack,alloc_failed> alloc_failed;
}; 
class CLS_1074_bitmap_obstack{ 
	 generic_class_name <"bitmap_obstack",bitmap_obstack> the_class_name;
	 generic_field_name <"elements",bitmap_obstack,elements> elements;
	 generic_field_name <"heads",bitmap_obstack,heads> heads;
	 generic_field_name <"obstack",bitmap_obstack,obstack> obstack;
}; 
class CLS_1075_bitmap_element_def{ 
	 generic_class_name <"bitmap_element_def",bitmap_element_def> the_class_name;
}; 
class CLS_1076_bitmap_element_def{ 
	 generic_class_name <"bitmap_element_def",bitmap_element_def> the_class_name;
}; 
class CLS_1077_bitmap_element_def{ 
	 generic_class_name <"bitmap_element_def",bitmap_element_def> the_class_name;
	 generic_field_name <"next",bitmap_element_def,next> next;
	 generic_field_name <"prev",bitmap_element_def,prev> prev;
	 generic_field_name <"indx",bitmap_element_def,indx> indx;
	 generic_field_name <"bits",bitmap_element_def,bits> bits;
}; 
class CLS_1078_bitmap_descriptor{ 
	 generic_class_name <"bitmap_descriptor",bitmap_descriptor> the_class_name;
}; 
class CLS_1079_bitmap_head_def{ 
	 generic_class_name <"bitmap_head_def",bitmap_head_def> the_class_name;
	 generic_field_name <"first",bitmap_head_def,first> first;
	 generic_field_name <"current",bitmap_head_def,current> current;
	 generic_field_name <"indx",bitmap_head_def,indx> indx;
	 generic_field_name <"obstack",bitmap_head_def,obstack> obstack;
}; 
class CLS_1080_simple_bitmap_def{ 
	 generic_class_name <"simple_bitmap_def",simple_bitmap_def> the_class_name;
	 generic_field_name <"popcount",simple_bitmap_def,popcount> popcount;
	 generic_field_name <"n_bits",simple_bitmap_def,n_bits> n_bits;
	 generic_field_name <"size",simple_bitmap_def,size> size;
	 generic_field_name <"elms",simple_bitmap_def,elms> elms;
}; 
class CLS_1081_int_list{ 
	 generic_class_name <"int_list",int_list> the_class_name;
}; 
class CLS_1082_int_list{ 
	 generic_class_name <"int_list",int_list> the_class_name;
}; 
class CLS_1083_int_list{ 
	 generic_class_name <"int_list",int_list> the_class_name;
}; 
class CLS_1084_pointer_set_t{ 
	 generic_class_name <"pointer_set_t",pointer_set_t> the_class_name;
}; 
class CLS_1085_pointer_set_t{ 
	 generic_class_name <"pointer_set_t",pointer_set_t> the_class_name;
}; 
class CLS_1086_pointer_set_t{ 
	 generic_class_name <"pointer_set_t",pointer_set_t> the_class_name;
}; 
class CLS_1087_pointer_set_t{ 
	 generic_class_name <"pointer_set_t",pointer_set_t> the_class_name;
}; 
class CLS_1088_pointer_set_t{ 
	 generic_class_name <"pointer_set_t",pointer_set_t> the_class_name;
}; 
class CLS_1089_pointer_set_t{ 
	 generic_class_name <"pointer_set_t",pointer_set_t> the_class_name;
}; 
class CLS_1090_pointer_map_t{ 
	 generic_class_name <"pointer_map_t",pointer_map_t> the_class_name;
}; 
class CLS_1091_pointer_map_t{ 
	 generic_class_name <"pointer_map_t",pointer_map_t> the_class_name;
}; 
class CLS_1092_pointer_map_t{ 
	 generic_class_name <"pointer_map_t",pointer_map_t> the_class_name;
}; 
class CLS_1093_pointer_map_t{ 
	 generic_class_name <"pointer_map_t",pointer_map_t> the_class_name;
}; 
class CLS_1094_pointer_map_t{ 
	 generic_class_name <"pointer_map_t",pointer_map_t> the_class_name;
}; 
class CLS_1095_pointer_map_t{ 
	 generic_class_name <"pointer_map_t",pointer_map_t> the_class_name;
}; 
class CLS_1096_def_optype_d{ 
	 generic_class_name <"def_optype_d",def_optype_d> the_class_name;
}; 
class CLS_1097_def_optype_d{ 
	 generic_class_name <"def_optype_d",def_optype_d> the_class_name;
	 generic_field_name <"next",def_optype_d,next> next;
	 generic_field_name <"def_ptr",def_optype_d,def_ptr> def_ptr;
}; 
class CLS_1098_def_optype_d{ 
	 generic_class_name <"def_optype_d",def_optype_d> the_class_name;
	 generic_field_name <"next",def_optype_d,next> next;
	 generic_field_name <"def_ptr",def_optype_d,def_ptr> def_ptr;
}; 
class CLS_1099_use_optype_d{ 
	 generic_class_name <"use_optype_d",use_optype_d> the_class_name;
}; 
class CLS_1100_ssa_use_operand_d{ 
	 generic_class_name <"ssa_use_operand_d",ssa_use_operand_d> the_class_name;
	 generic_field_name <"prev",ssa_use_operand_d,prev> prev;
	 generic_field_name <"next",ssa_use_operand_d,next> next;
	 generic_field_name <"loc",ssa_use_operand_d,loc> loc;
	 generic_field_name <"use",ssa_use_operand_d,use> use;
}; 
class CLS_1101_use_optype_d{ 
	 generic_class_name <"use_optype_d",use_optype_d> the_class_name;
	 generic_field_name <"next",use_optype_d,next> next;
	 generic_field_name <"use_ptr",use_optype_d,use_ptr> use_ptr;
}; 
class CLS_1102_use_optype_d{ 
	 generic_class_name <"use_optype_d",use_optype_d> the_class_name;
	 generic_field_name <"next",use_optype_d,next> next;
	 generic_field_name <"use_ptr",use_optype_d,use_ptr> use_ptr;
}; 
class CLS_1103_ssa_operand_memory_d{ 
	 generic_class_name <"ssa_operand_memory_d",ssa_operand_memory_d> the_class_name;
}; 
class CLS_1104_ssa_operand_memory_d{ 
	 generic_class_name <"ssa_operand_memory_d",ssa_operand_memory_d> the_class_name;
	 generic_field_name <"next",ssa_operand_memory_d,next> next;
	 generic_field_name <"mem",ssa_operand_memory_d,mem> mem;
}; 
class CLS_1105_ssa_operand_memory_d{ 
	 generic_class_name <"ssa_operand_memory_d",ssa_operand_memory_d> the_class_name;
	 generic_field_name <"next",ssa_operand_memory_d,next> next;
	 generic_field_name <"mem",ssa_operand_memory_d,mem> mem;
}; 
class CLS_1106_def_optype_d{ 
	 generic_class_name <"def_optype_d",def_optype_d> the_class_name;
	 generic_field_name <"next",def_optype_d,next> next;
	 generic_field_name <"def_ptr",def_optype_d,def_ptr> def_ptr;
}; 
class CLS_1107_use_optype_d{ 
	 generic_class_name <"use_optype_d",use_optype_d> the_class_name;
	 generic_field_name <"next",use_optype_d,next> next;
	 generic_field_name <"use_ptr",use_optype_d,use_ptr> use_ptr;
}; 
class CLS_1108_ssa_operands{ 
	 generic_class_name <"ssa_operands",ssa_operands> the_class_name;
	 generic_field_name <"operand_memory",ssa_operands,operand_memory> operand_memory;
	 generic_field_name <"operand_memory_index",ssa_operands,operand_memory_index> operand_memory_index;
	 generic_field_name <"ssa_operand_mem_size",ssa_operands,ssa_operand_mem_size> ssa_operand_mem_size;
	 generic_field_name <"ops_active",ssa_operands,ops_active> ops_active;
	 generic_field_name <"free_defs",ssa_operands,free_defs> free_defs;
	 generic_field_name <"free_uses",ssa_operands,free_uses> free_uses;
}; 
class CLS_1109_ssa_operand_iterator_d{ 
	 generic_class_name <"ssa_operand_iterator_d",ssa_operand_iterator_d> the_class_name;
	 generic_field_name <"done",ssa_operand_iterator_d,done> done;
	 generic_field_name <"iter_type",ssa_operand_iterator_d,iter_type> iter_type;
	 generic_field_name <"defs",ssa_operand_iterator_d,defs> defs;
	 generic_field_name <"uses",ssa_operand_iterator_d,uses> uses;
	 generic_field_name <"phi_i",ssa_operand_iterator_d,phi_i> phi_i;
	 generic_field_name <"num_phi",ssa_operand_iterator_d,num_phi> num_phi;
	 generic_field_name <"phi_stmt",ssa_operand_iterator_d,phi_stmt> phi_stmt;
}; 
class CLS_1110_pt_solution{ 
	 generic_class_name <"pt_solution",pt_solution> the_class_name;
	 generic_field_name <"anything",pt_solution,anything> anything;
	 generic_field_name <"nonlocal",pt_solution,nonlocal> nonlocal;
	 generic_field_name <"escaped",pt_solution,escaped> escaped;
	 generic_field_name <"ipa_escaped",pt_solution,ipa_escaped> ipa_escaped;
	 generic_field_name <"null",pt_solution,null> null;
	 generic_field_name <"vars_contains_global",pt_solution,vars_contains_global> vars_contains_global;
	 generic_field_name <"vars",pt_solution,vars> vars;
}; 
class CLS_1111_ao_ref_s{ 
	 generic_class_name <"ao_ref_s",ao_ref_s> the_class_name;
	 generic_field_name <"ref",ao_ref_s,ref> ref;
	 generic_field_name <"base",ao_ref_s,base> base;
	 generic_field_name <"offset",ao_ref_s,offset> offset;
	 generic_field_name <"size",ao_ref_s,size> size;
	 generic_field_name <"max_size",ao_ref_s,max_size> max_size;
	 generic_field_name <"ref_alias_set",ao_ref_s,ref_alias_set> ref_alias_set;
	 generic_field_name <"base_alias_set",ao_ref_s,base_alias_set> base_alias_set;
	 generic_field_name <"volatile_p",ao_ref_s,volatile_p> volatile_p;
}; 
class CLS_1112_ptr_info_def{ 
	 generic_class_name <"ptr_info_def",ptr_info_def> the_class_name;
}; 
class CLS_1113_pt_solution{ 
	 generic_class_name <"pt_solution",pt_solution> the_class_name;
	 generic_field_name <"anything",pt_solution,anything> anything;
	 generic_field_name <"nonlocal",pt_solution,nonlocal> nonlocal;
	 generic_field_name <"escaped",pt_solution,escaped> escaped;
	 generic_field_name <"ipa_escaped",pt_solution,ipa_escaped> ipa_escaped;
	 generic_field_name <"null",pt_solution,null> null;
	 generic_field_name <"vars_contains_global",pt_solution,vars_contains_global> vars_contains_global;
	 generic_field_name <"vars",pt_solution,vars> vars;
}; 
class CLS_1114_pt_solution{ 
	 generic_class_name <"pt_solution",pt_solution> the_class_name;
	 generic_field_name <"anything",pt_solution,anything> anything;
	 generic_field_name <"nonlocal",pt_solution,nonlocal> nonlocal;
	 generic_field_name <"escaped",pt_solution,escaped> escaped;
	 generic_field_name <"ipa_escaped",pt_solution,ipa_escaped> ipa_escaped;
	 generic_field_name <"null",pt_solution,null> null;
	 generic_field_name <"vars_contains_global",pt_solution,vars_contains_global> vars_contains_global;
	 generic_field_name <"vars",pt_solution,vars> vars;
}; 
class CLS_1115_pt_solution{ 
	 generic_class_name <"pt_solution",pt_solution> the_class_name;
	 generic_field_name <"anything",pt_solution,anything> anything;
	 generic_field_name <"nonlocal",pt_solution,nonlocal> nonlocal;
	 generic_field_name <"escaped",pt_solution,escaped> escaped;
	 generic_field_name <"ipa_escaped",pt_solution,ipa_escaped> ipa_escaped;
	 generic_field_name <"null",pt_solution,null> null;
	 generic_field_name <"vars_contains_global",pt_solution,vars_contains_global> vars_contains_global;
	 generic_field_name <"vars",pt_solution,vars> vars;
}; 
class CLS_1116_pt_solution{ 
	 generic_class_name <"pt_solution",pt_solution> the_class_name;
	 generic_field_name <"anything",pt_solution,anything> anything;
	 generic_field_name <"nonlocal",pt_solution,nonlocal> nonlocal;
	 generic_field_name <"escaped",pt_solution,escaped> escaped;
	 generic_field_name <"ipa_escaped",pt_solution,ipa_escaped> ipa_escaped;
	 generic_field_name <"null",pt_solution,null> null;
	 generic_field_name <"vars_contains_global",pt_solution,vars_contains_global> vars_contains_global;
	 generic_field_name <"vars",pt_solution,vars> vars;
}; 
class CLS_1117_pt_solution{ 
	 generic_class_name <"pt_solution",pt_solution> the_class_name;
	 generic_field_name <"anything",pt_solution,anything> anything;
	 generic_field_name <"nonlocal",pt_solution,nonlocal> nonlocal;
	 generic_field_name <"escaped",pt_solution,escaped> escaped;
	 generic_field_name <"ipa_escaped",pt_solution,ipa_escaped> ipa_escaped;
	 generic_field_name <"null",pt_solution,null> null;
	 generic_field_name <"vars_contains_global",pt_solution,vars_contains_global> vars_contains_global;
	 generic_field_name <"vars",pt_solution,vars> vars;
}; 
class CLS_1118_pt_solution{ 
	 generic_class_name <"pt_solution",pt_solution> the_class_name;
	 generic_field_name <"anything",pt_solution,anything> anything;
	 generic_field_name <"nonlocal",pt_solution,nonlocal> nonlocal;
	 generic_field_name <"escaped",pt_solution,escaped> escaped;
	 generic_field_name <"ipa_escaped",pt_solution,ipa_escaped> ipa_escaped;
	 generic_field_name <"null",pt_solution,null> null;
	 generic_field_name <"vars_contains_global",pt_solution,vars_contains_global> vars_contains_global;
	 generic_field_name <"vars",pt_solution,vars> vars;
}; 
class CLS_1119_pt_solution{ 
	 generic_class_name <"pt_solution",pt_solution> the_class_name;
	 generic_field_name <"anything",pt_solution,anything> anything;
	 generic_field_name <"nonlocal",pt_solution,nonlocal> nonlocal;
	 generic_field_name <"escaped",pt_solution,escaped> escaped;
	 generic_field_name <"ipa_escaped",pt_solution,ipa_escaped> ipa_escaped;
	 generic_field_name <"null",pt_solution,null> null;
	 generic_field_name <"vars_contains_global",pt_solution,vars_contains_global> vars_contains_global;
	 generic_field_name <"vars",pt_solution,vars> vars;
}; 
class CLS_1120_pt_solution{ 
	 generic_class_name <"pt_solution",pt_solution> the_class_name;
	 generic_field_name <"anything",pt_solution,anything> anything;
	 generic_field_name <"nonlocal",pt_solution,nonlocal> nonlocal;
	 generic_field_name <"escaped",pt_solution,escaped> escaped;
	 generic_field_name <"ipa_escaped",pt_solution,ipa_escaped> ipa_escaped;
	 generic_field_name <"null",pt_solution,null> null;
	 generic_field_name <"vars_contains_global",pt_solution,vars_contains_global> vars_contains_global;
	 generic_field_name <"vars",pt_solution,vars> vars;
}; 
class CLS_1121_pt_solution{ 
	 generic_class_name <"pt_solution",pt_solution> the_class_name;
	 generic_field_name <"anything",pt_solution,anything> anything;
	 generic_field_name <"nonlocal",pt_solution,nonlocal> nonlocal;
	 generic_field_name <"escaped",pt_solution,escaped> escaped;
	 generic_field_name <"ipa_escaped",pt_solution,ipa_escaped> ipa_escaped;
	 generic_field_name <"null",pt_solution,null> null;
	 generic_field_name <"vars_contains_global",pt_solution,vars_contains_global> vars_contains_global;
	 generic_field_name <"vars",pt_solution,vars> vars;
}; 
class CLS_1122_pt_solution{ 
	 generic_class_name <"pt_solution",pt_solution> the_class_name;
	 generic_field_name <"anything",pt_solution,anything> anything;
	 generic_field_name <"nonlocal",pt_solution,nonlocal> nonlocal;
	 generic_field_name <"escaped",pt_solution,escaped> escaped;
	 generic_field_name <"ipa_escaped",pt_solution,ipa_escaped> ipa_escaped;
	 generic_field_name <"null",pt_solution,null> null;
	 generic_field_name <"vars_contains_global",pt_solution,vars_contains_global> vars_contains_global;
	 generic_field_name <"vars",pt_solution,vars> vars;
}; 
class CLS_1123_pt_solution{ 
	 generic_class_name <"pt_solution",pt_solution> the_class_name;
	 generic_field_name <"anything",pt_solution,anything> anything;
	 generic_field_name <"nonlocal",pt_solution,nonlocal> nonlocal;
	 generic_field_name <"escaped",pt_solution,escaped> escaped;
	 generic_field_name <"ipa_escaped",pt_solution,ipa_escaped> ipa_escaped;
	 generic_field_name <"null",pt_solution,null> null;
	 generic_field_name <"vars_contains_global",pt_solution,vars_contains_global> vars_contains_global;
	 generic_field_name <"vars",pt_solution,vars> vars;
}; 
class CLS_1124_gimple_seq_node_d{ 
	 generic_class_name <"gimple_seq_node_d",gimple_seq_node_d> the_class_name;
}; 
class CLS_1125_gimple_seq_node_d{ 
	 generic_class_name <"gimple_seq_node_d",gimple_seq_node_d> the_class_name;
}; 
class CLS_1126_gimple_seq_node_d{ 
	 generic_class_name <"gimple_seq_node_d",gimple_seq_node_d> the_class_name;
}; 
class CLS_1127_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_1128_VEC_gimple_vec_base{ 
	 generic_class_name <"VEC_gimple_vec_base",VEC_gimple_vec_base> the_class_name;
	 generic_field_name <"prefix",VEC_gimple_vec_base,prefix> prefix;
	 generic_field_name <"vec",VEC_gimple_vec_base,vec> vec;
}; 
class CLS_1129_VEC_gimple_vec_none{ 
	 generic_class_name <"VEC_gimple_vec_none",VEC_gimple_vec_none> the_class_name;
	 generic_field_name <"base",VEC_gimple_vec_none,base> base;
}; 
class CLS_1130_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1131_VEC_gimple_vec_heap{ 
	 generic_class_name <"VEC_gimple_vec_heap",VEC_gimple_vec_heap> the_class_name;
	 generic_field_name <"base",VEC_gimple_vec_heap,base> base;
}; 
class CLS_1132_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1133_gimple_seq_node_d{ 
	 generic_class_name <"gimple_seq_node_d",gimple_seq_node_d> the_class_name;
}; 
class CLS_1134_gimple_seq_node_d{ 
	 generic_class_name <"gimple_seq_node_d",gimple_seq_node_d> the_class_name;
}; 
class CLS_1135_gimple_seq_node_d{ 
	 generic_class_name <"gimple_seq_node_d",gimple_seq_node_d> the_class_name;
	 generic_field_name <"stmt",gimple_seq_node_d,stmt> stmt;
	 generic_field_name <"prev",gimple_seq_node_d,prev> prev;
	 generic_field_name <"next",gimple_seq_node_d,next> next;
}; 
class CLS_1136_gimple_seq_d{ 
	 generic_class_name <"gimple_seq_d",gimple_seq_d> the_class_name;
	 generic_field_name <"first",gimple_seq_d,first> first;
	 generic_field_name <"last",gimple_seq_d,last> last;
	 generic_field_name <"next_free",gimple_seq_d,next_free> next_free;
}; 
class CLS_1137_basic_block_def{ 
	 generic_class_name <"basic_block_def",basic_block_def> the_class_name;
	 generic_field_name <"preds",basic_block_def,preds> preds;
	 generic_field_name <"succs",basic_block_def,succs> succs;
	 generic_field_name <"aux",basic_block_def,aux> aux;
	 generic_field_name <"loop_father",basic_block_def,loop_father> loop_father;
	 generic_field_name <"dom",basic_block_def,dom> dom;
	 generic_field_name <"prev_bb",basic_block_def,prev_bb> prev_bb;
	 generic_field_name <"next_bb",basic_block_def,next_bb> next_bb;
	 generic_field_name <"il",basic_block_def,il> il;
	 generic_field_name <"count",basic_block_def,count> count;
	 generic_field_name <"index",basic_block_def,index> index;
	 generic_field_name <"loop_depth",basic_block_def,loop_depth> loop_depth;
	 generic_field_name <"frequency",basic_block_def,frequency> frequency;
	 generic_field_name <"discriminator",basic_block_def,discriminator> discriminator;
	 generic_field_name <"flags",basic_block_def,flags> flags;
}; 
class CLS_1138_gimple_statement_base{ 
	 generic_class_name <"gimple_statement_base",gimple_statement_base> the_class_name;
	 generic_field_name <"code",gimple_statement_base,code> code;
	 generic_field_name <"no_warning",gimple_statement_base,no_warning> no_warning;
	 generic_field_name <"visited",gimple_statement_base,visited> visited;
	 generic_field_name <"nontemporal_move",gimple_statement_base,nontemporal_move> nontemporal_move;
	 generic_field_name <"plf",gimple_statement_base,plf> plf;
	 generic_field_name <"modified",gimple_statement_base,modified> modified;
	 generic_field_name <"has_volatile_ops",gimple_statement_base,has_volatile_ops> has_volatile_ops;
	 generic_field_name <"subcode",gimple_statement_base,subcode> subcode;
	 generic_field_name <"uid",gimple_statement_base,uid> uid;
	 generic_field_name <"location",gimple_statement_base,location> location;
	 generic_field_name <"num_ops",gimple_statement_base,num_ops> num_ops;
	 generic_field_name <"bb",gimple_statement_base,bb> bb;
	 generic_field_name <"block",gimple_statement_base,block> block;
}; 
class CLS_1139_gimple_statement_base{ 
	 generic_class_name <"gimple_statement_base",gimple_statement_base> the_class_name;
	 generic_field_name <"code",gimple_statement_base,code> code;
	 generic_field_name <"no_warning",gimple_statement_base,no_warning> no_warning;
	 generic_field_name <"visited",gimple_statement_base,visited> visited;
	 generic_field_name <"nontemporal_move",gimple_statement_base,nontemporal_move> nontemporal_move;
	 generic_field_name <"plf",gimple_statement_base,plf> plf;
	 generic_field_name <"modified",gimple_statement_base,modified> modified;
	 generic_field_name <"has_volatile_ops",gimple_statement_base,has_volatile_ops> has_volatile_ops;
	 generic_field_name <"subcode",gimple_statement_base,subcode> subcode;
	 generic_field_name <"uid",gimple_statement_base,uid> uid;
	 generic_field_name <"location",gimple_statement_base,location> location;
	 generic_field_name <"num_ops",gimple_statement_base,num_ops> num_ops;
	 generic_field_name <"bb",gimple_statement_base,bb> bb;
	 generic_field_name <"block",gimple_statement_base,block> block;
}; 
class CLS_1140_def_optype_d{ 
	 generic_class_name <"def_optype_d",def_optype_d> the_class_name;
	 generic_field_name <"next",def_optype_d,next> next;
	 generic_field_name <"def_ptr",def_optype_d,def_ptr> def_ptr;
}; 
class CLS_1141_use_optype_d{ 
	 generic_class_name <"use_optype_d",use_optype_d> the_class_name;
	 generic_field_name <"next",use_optype_d,next> next;
	 generic_field_name <"use_ptr",use_optype_d,use_ptr> use_ptr;
}; 
class CLS_1142_gimple_statement_with_ops_base{ 
	 generic_class_name <"gimple_statement_with_ops_base",gimple_statement_with_ops_base> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_with_ops_base,gsbase> gsbase;
	 generic_field_name <"def_ops",gimple_statement_with_ops_base,def_ops> def_ops;
	 generic_field_name <"use_ops",gimple_statement_with_ops_base,use_ops> use_ops;
}; 
class CLS_1143_gimple_statement_with_ops_base{ 
	 generic_class_name <"gimple_statement_with_ops_base",gimple_statement_with_ops_base> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_with_ops_base,gsbase> gsbase;
	 generic_field_name <"def_ops",gimple_statement_with_ops_base,def_ops> def_ops;
	 generic_field_name <"use_ops",gimple_statement_with_ops_base,use_ops> use_ops;
}; 
class CLS_1144_gimple_statement_with_ops{ 
	 generic_class_name <"gimple_statement_with_ops",gimple_statement_with_ops> the_class_name;
	 generic_field_name <"opbase",gimple_statement_with_ops,opbase> opbase;
	 generic_field_name <"op",gimple_statement_with_ops,op> op;
}; 
class CLS_1145_gimple_statement_with_ops_base{ 
	 generic_class_name <"gimple_statement_with_ops_base",gimple_statement_with_ops_base> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_with_ops_base,gsbase> gsbase;
	 generic_field_name <"def_ops",gimple_statement_with_ops_base,def_ops> def_ops;
	 generic_field_name <"use_ops",gimple_statement_with_ops_base,use_ops> use_ops;
}; 
class CLS_1146_gimple_statement_with_memory_ops_base{ 
	 generic_class_name <"gimple_statement_with_memory_ops_base",gimple_statement_with_memory_ops_base> the_class_name;
	 generic_field_name <"opbase",gimple_statement_with_memory_ops_base,opbase> opbase;
	 generic_field_name <"vdef",gimple_statement_with_memory_ops_base,vdef> vdef;
	 generic_field_name <"vuse",gimple_statement_with_memory_ops_base,vuse> vuse;
}; 
class CLS_1147_gimple_statement_with_memory_ops_base{ 
	 generic_class_name <"gimple_statement_with_memory_ops_base",gimple_statement_with_memory_ops_base> the_class_name;
	 generic_field_name <"opbase",gimple_statement_with_memory_ops_base,opbase> opbase;
	 generic_field_name <"vdef",gimple_statement_with_memory_ops_base,vdef> vdef;
	 generic_field_name <"vuse",gimple_statement_with_memory_ops_base,vuse> vuse;
}; 
class CLS_1148_gimple_statement_with_memory_ops{ 
	 generic_class_name <"gimple_statement_with_memory_ops",gimple_statement_with_memory_ops> the_class_name;
	 generic_field_name <"membase",gimple_statement_with_memory_ops,membase> membase;
	 generic_field_name <"op",gimple_statement_with_memory_ops,op> op;
}; 
class CLS_1149_gimple_statement_with_memory_ops_base{ 
	 generic_class_name <"gimple_statement_with_memory_ops_base",gimple_statement_with_memory_ops_base> the_class_name;
	 generic_field_name <"opbase",gimple_statement_with_memory_ops_base,opbase> opbase;
	 generic_field_name <"vdef",gimple_statement_with_memory_ops_base,vdef> vdef;
	 generic_field_name <"vuse",gimple_statement_with_memory_ops_base,vuse> vuse;
}; 
class CLS_1150_pt_solution{ 
	 generic_class_name <"pt_solution",pt_solution> the_class_name;
	 generic_field_name <"anything",pt_solution,anything> anything;
	 generic_field_name <"nonlocal",pt_solution,nonlocal> nonlocal;
	 generic_field_name <"escaped",pt_solution,escaped> escaped;
	 generic_field_name <"ipa_escaped",pt_solution,ipa_escaped> ipa_escaped;
	 generic_field_name <"null",pt_solution,null> null;
	 generic_field_name <"vars_contains_global",pt_solution,vars_contains_global> vars_contains_global;
	 generic_field_name <"vars",pt_solution,vars> vars;
}; 
class CLS_1151_pt_solution{ 
	 generic_class_name <"pt_solution",pt_solution> the_class_name;
	 generic_field_name <"anything",pt_solution,anything> anything;
	 generic_field_name <"nonlocal",pt_solution,nonlocal> nonlocal;
	 generic_field_name <"escaped",pt_solution,escaped> escaped;
	 generic_field_name <"ipa_escaped",pt_solution,ipa_escaped> ipa_escaped;
	 generic_field_name <"null",pt_solution,null> null;
	 generic_field_name <"vars_contains_global",pt_solution,vars_contains_global> vars_contains_global;
	 generic_field_name <"vars",pt_solution,vars> vars;
}; 
class CLS_1152_gimple_statement_call{ 
	 generic_class_name <"gimple_statement_call",gimple_statement_call> the_class_name;
	 generic_field_name <"membase",gimple_statement_call,membase> membase;
	 generic_field_name <"call_used",gimple_statement_call,call_used> call_used;
	 generic_field_name <"call_clobbered",gimple_statement_call,call_clobbered> call_clobbered;
	 generic_field_name <"u",gimple_statement_call,u> u;
	 generic_field_name <"op",gimple_statement_call,op> op;
}; 
class CLS_1153_gimple_statement_base{ 
	 generic_class_name <"gimple_statement_base",gimple_statement_base> the_class_name;
	 generic_field_name <"code",gimple_statement_base,code> code;
	 generic_field_name <"no_warning",gimple_statement_base,no_warning> no_warning;
	 generic_field_name <"visited",gimple_statement_base,visited> visited;
	 generic_field_name <"nontemporal_move",gimple_statement_base,nontemporal_move> nontemporal_move;
	 generic_field_name <"plf",gimple_statement_base,plf> plf;
	 generic_field_name <"modified",gimple_statement_base,modified> modified;
	 generic_field_name <"has_volatile_ops",gimple_statement_base,has_volatile_ops> has_volatile_ops;
	 generic_field_name <"subcode",gimple_statement_base,subcode> subcode;
	 generic_field_name <"uid",gimple_statement_base,uid> uid;
	 generic_field_name <"location",gimple_statement_base,location> location;
	 generic_field_name <"num_ops",gimple_statement_base,num_ops> num_ops;
	 generic_field_name <"bb",gimple_statement_base,bb> bb;
	 generic_field_name <"block",gimple_statement_base,block> block;
}; 
class CLS_1154_gimple_statement_omp{ 
	 generic_class_name <"gimple_statement_omp",gimple_statement_omp> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_omp,gsbase> gsbase;
	 generic_field_name <"body",gimple_statement_omp,body> body;
}; 
class CLS_1155_gimple_statement_base{ 
	 generic_class_name <"gimple_statement_base",gimple_statement_base> the_class_name;
	 generic_field_name <"code",gimple_statement_base,code> code;
	 generic_field_name <"no_warning",gimple_statement_base,no_warning> no_warning;
	 generic_field_name <"visited",gimple_statement_base,visited> visited;
	 generic_field_name <"nontemporal_move",gimple_statement_base,nontemporal_move> nontemporal_move;
	 generic_field_name <"plf",gimple_statement_base,plf> plf;
	 generic_field_name <"modified",gimple_statement_base,modified> modified;
	 generic_field_name <"has_volatile_ops",gimple_statement_base,has_volatile_ops> has_volatile_ops;
	 generic_field_name <"subcode",gimple_statement_base,subcode> subcode;
	 generic_field_name <"uid",gimple_statement_base,uid> uid;
	 generic_field_name <"location",gimple_statement_base,location> location;
	 generic_field_name <"num_ops",gimple_statement_base,num_ops> num_ops;
	 generic_field_name <"bb",gimple_statement_base,bb> bb;
	 generic_field_name <"block",gimple_statement_base,block> block;
}; 
class CLS_1156_gimple_statement_bind{ 
	 generic_class_name <"gimple_statement_bind",gimple_statement_bind> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_bind,gsbase> gsbase;
	 generic_field_name <"vars",gimple_statement_bind,vars> vars;
	 generic_field_name <"block",gimple_statement_bind,block> block;
	 generic_field_name <"body",gimple_statement_bind,body> body;
}; 
class CLS_1157_gimple_statement_base{ 
	 generic_class_name <"gimple_statement_base",gimple_statement_base> the_class_name;
	 generic_field_name <"code",gimple_statement_base,code> code;
	 generic_field_name <"no_warning",gimple_statement_base,no_warning> no_warning;
	 generic_field_name <"visited",gimple_statement_base,visited> visited;
	 generic_field_name <"nontemporal_move",gimple_statement_base,nontemporal_move> nontemporal_move;
	 generic_field_name <"plf",gimple_statement_base,plf> plf;
	 generic_field_name <"modified",gimple_statement_base,modified> modified;
	 generic_field_name <"has_volatile_ops",gimple_statement_base,has_volatile_ops> has_volatile_ops;
	 generic_field_name <"subcode",gimple_statement_base,subcode> subcode;
	 generic_field_name <"uid",gimple_statement_base,uid> uid;
	 generic_field_name <"location",gimple_statement_base,location> location;
	 generic_field_name <"num_ops",gimple_statement_base,num_ops> num_ops;
	 generic_field_name <"bb",gimple_statement_base,bb> bb;
	 generic_field_name <"block",gimple_statement_base,block> block;
}; 
class CLS_1158_gimple_statement_catch{ 
	 generic_class_name <"gimple_statement_catch",gimple_statement_catch> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_catch,gsbase> gsbase;
	 generic_field_name <"types",gimple_statement_catch,types> types;
	 generic_field_name <"handler",gimple_statement_catch,handler> handler;
}; 
class CLS_1159_gimple_statement_base{ 
	 generic_class_name <"gimple_statement_base",gimple_statement_base> the_class_name;
	 generic_field_name <"code",gimple_statement_base,code> code;
	 generic_field_name <"no_warning",gimple_statement_base,no_warning> no_warning;
	 generic_field_name <"visited",gimple_statement_base,visited> visited;
	 generic_field_name <"nontemporal_move",gimple_statement_base,nontemporal_move> nontemporal_move;
	 generic_field_name <"plf",gimple_statement_base,plf> plf;
	 generic_field_name <"modified",gimple_statement_base,modified> modified;
	 generic_field_name <"has_volatile_ops",gimple_statement_base,has_volatile_ops> has_volatile_ops;
	 generic_field_name <"subcode",gimple_statement_base,subcode> subcode;
	 generic_field_name <"uid",gimple_statement_base,uid> uid;
	 generic_field_name <"location",gimple_statement_base,location> location;
	 generic_field_name <"num_ops",gimple_statement_base,num_ops> num_ops;
	 generic_field_name <"bb",gimple_statement_base,bb> bb;
	 generic_field_name <"block",gimple_statement_base,block> block;
}; 
class CLS_1160_gimple_statement_eh_filter{ 
	 generic_class_name <"gimple_statement_eh_filter",gimple_statement_eh_filter> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_eh_filter,gsbase> gsbase;
	 generic_field_name <"types",gimple_statement_eh_filter,types> types;
	 generic_field_name <"failure",gimple_statement_eh_filter,failure> failure;
}; 
class CLS_1161_gimple_statement_base{ 
	 generic_class_name <"gimple_statement_base",gimple_statement_base> the_class_name;
	 generic_field_name <"code",gimple_statement_base,code> code;
	 generic_field_name <"no_warning",gimple_statement_base,no_warning> no_warning;
	 generic_field_name <"visited",gimple_statement_base,visited> visited;
	 generic_field_name <"nontemporal_move",gimple_statement_base,nontemporal_move> nontemporal_move;
	 generic_field_name <"plf",gimple_statement_base,plf> plf;
	 generic_field_name <"modified",gimple_statement_base,modified> modified;
	 generic_field_name <"has_volatile_ops",gimple_statement_base,has_volatile_ops> has_volatile_ops;
	 generic_field_name <"subcode",gimple_statement_base,subcode> subcode;
	 generic_field_name <"uid",gimple_statement_base,uid> uid;
	 generic_field_name <"location",gimple_statement_base,location> location;
	 generic_field_name <"num_ops",gimple_statement_base,num_ops> num_ops;
	 generic_field_name <"bb",gimple_statement_base,bb> bb;
	 generic_field_name <"block",gimple_statement_base,block> block;
}; 
class CLS_1162_gimple_statement_eh_else{ 
	 generic_class_name <"gimple_statement_eh_else",gimple_statement_eh_else> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_eh_else,gsbase> gsbase;
	 generic_field_name <"n_body",gimple_statement_eh_else,n_body> n_body;
	 generic_field_name <"e_body",gimple_statement_eh_else,e_body> e_body;
}; 
class CLS_1163_gimple_statement_base{ 
	 generic_class_name <"gimple_statement_base",gimple_statement_base> the_class_name;
	 generic_field_name <"code",gimple_statement_base,code> code;
	 generic_field_name <"no_warning",gimple_statement_base,no_warning> no_warning;
	 generic_field_name <"visited",gimple_statement_base,visited> visited;
	 generic_field_name <"nontemporal_move",gimple_statement_base,nontemporal_move> nontemporal_move;
	 generic_field_name <"plf",gimple_statement_base,plf> plf;
	 generic_field_name <"modified",gimple_statement_base,modified> modified;
	 generic_field_name <"has_volatile_ops",gimple_statement_base,has_volatile_ops> has_volatile_ops;
	 generic_field_name <"subcode",gimple_statement_base,subcode> subcode;
	 generic_field_name <"uid",gimple_statement_base,uid> uid;
	 generic_field_name <"location",gimple_statement_base,location> location;
	 generic_field_name <"num_ops",gimple_statement_base,num_ops> num_ops;
	 generic_field_name <"bb",gimple_statement_base,bb> bb;
	 generic_field_name <"block",gimple_statement_base,block> block;
}; 
class CLS_1164_gimple_statement_eh_mnt{ 
	 generic_class_name <"gimple_statement_eh_mnt",gimple_statement_eh_mnt> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_eh_mnt,gsbase> gsbase;
	 generic_field_name <"fndecl",gimple_statement_eh_mnt,fndecl> fndecl;
}; 
class CLS_1165_gimple_statement_base{ 
	 generic_class_name <"gimple_statement_base",gimple_statement_base> the_class_name;
	 generic_field_name <"code",gimple_statement_base,code> code;
	 generic_field_name <"no_warning",gimple_statement_base,no_warning> no_warning;
	 generic_field_name <"visited",gimple_statement_base,visited> visited;
	 generic_field_name <"nontemporal_move",gimple_statement_base,nontemporal_move> nontemporal_move;
	 generic_field_name <"plf",gimple_statement_base,plf> plf;
	 generic_field_name <"modified",gimple_statement_base,modified> modified;
	 generic_field_name <"has_volatile_ops",gimple_statement_base,has_volatile_ops> has_volatile_ops;
	 generic_field_name <"subcode",gimple_statement_base,subcode> subcode;
	 generic_field_name <"uid",gimple_statement_base,uid> uid;
	 generic_field_name <"location",gimple_statement_base,location> location;
	 generic_field_name <"num_ops",gimple_statement_base,num_ops> num_ops;
	 generic_field_name <"bb",gimple_statement_base,bb> bb;
	 generic_field_name <"block",gimple_statement_base,block> block;
}; 
class CLS_1166_phi_arg_d{ 
	 generic_class_name <"phi_arg_d",phi_arg_d> the_class_name;
	 generic_field_name <"imm_use",phi_arg_d,imm_use> imm_use;
	 generic_field_name <"def",phi_arg_d,def> def;
	 generic_field_name <"locus",phi_arg_d,locus> locus;
}; 
class CLS_1167_gimple_statement_phi{ 
	 generic_class_name <"gimple_statement_phi",gimple_statement_phi> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_phi,gsbase> gsbase;
	 generic_field_name <"capacity",gimple_statement_phi,capacity> capacity;
	 generic_field_name <"nargs",gimple_statement_phi,nargs> nargs;
	 generic_field_name <"result",gimple_statement_phi,result> result;
	 generic_field_name <"args",gimple_statement_phi,args> args;
}; 
class CLS_1168_gimple_statement_base{ 
	 generic_class_name <"gimple_statement_base",gimple_statement_base> the_class_name;
	 generic_field_name <"code",gimple_statement_base,code> code;
	 generic_field_name <"no_warning",gimple_statement_base,no_warning> no_warning;
	 generic_field_name <"visited",gimple_statement_base,visited> visited;
	 generic_field_name <"nontemporal_move",gimple_statement_base,nontemporal_move> nontemporal_move;
	 generic_field_name <"plf",gimple_statement_base,plf> plf;
	 generic_field_name <"modified",gimple_statement_base,modified> modified;
	 generic_field_name <"has_volatile_ops",gimple_statement_base,has_volatile_ops> has_volatile_ops;
	 generic_field_name <"subcode",gimple_statement_base,subcode> subcode;
	 generic_field_name <"uid",gimple_statement_base,uid> uid;
	 generic_field_name <"location",gimple_statement_base,location> location;
	 generic_field_name <"num_ops",gimple_statement_base,num_ops> num_ops;
	 generic_field_name <"bb",gimple_statement_base,bb> bb;
	 generic_field_name <"block",gimple_statement_base,block> block;
}; 
class CLS_1169_gimple_statement_eh_ctrl{ 
	 generic_class_name <"gimple_statement_eh_ctrl",gimple_statement_eh_ctrl> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_eh_ctrl,gsbase> gsbase;
	 generic_field_name <"region",gimple_statement_eh_ctrl,region> region;
}; 
class CLS_1170_gimple_statement_base{ 
	 generic_class_name <"gimple_statement_base",gimple_statement_base> the_class_name;
	 generic_field_name <"code",gimple_statement_base,code> code;
	 generic_field_name <"no_warning",gimple_statement_base,no_warning> no_warning;
	 generic_field_name <"visited",gimple_statement_base,visited> visited;
	 generic_field_name <"nontemporal_move",gimple_statement_base,nontemporal_move> nontemporal_move;
	 generic_field_name <"plf",gimple_statement_base,plf> plf;
	 generic_field_name <"modified",gimple_statement_base,modified> modified;
	 generic_field_name <"has_volatile_ops",gimple_statement_base,has_volatile_ops> has_volatile_ops;
	 generic_field_name <"subcode",gimple_statement_base,subcode> subcode;
	 generic_field_name <"uid",gimple_statement_base,uid> uid;
	 generic_field_name <"location",gimple_statement_base,location> location;
	 generic_field_name <"num_ops",gimple_statement_base,num_ops> num_ops;
	 generic_field_name <"bb",gimple_statement_base,bb> bb;
	 generic_field_name <"block",gimple_statement_base,block> block;
}; 
class CLS_1171_gimple_statement_try{ 
	 generic_class_name <"gimple_statement_try",gimple_statement_try> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_try,gsbase> gsbase;
	 generic_field_name <"eval",gimple_statement_try,eval> eval;
	 generic_field_name <"cleanup",gimple_statement_try,cleanup> cleanup;
}; 
class CLS_1172_gimple_statement_base{ 
	 generic_class_name <"gimple_statement_base",gimple_statement_base> the_class_name;
	 generic_field_name <"code",gimple_statement_base,code> code;
	 generic_field_name <"no_warning",gimple_statement_base,no_warning> no_warning;
	 generic_field_name <"visited",gimple_statement_base,visited> visited;
	 generic_field_name <"nontemporal_move",gimple_statement_base,nontemporal_move> nontemporal_move;
	 generic_field_name <"plf",gimple_statement_base,plf> plf;
	 generic_field_name <"modified",gimple_statement_base,modified> modified;
	 generic_field_name <"has_volatile_ops",gimple_statement_base,has_volatile_ops> has_volatile_ops;
	 generic_field_name <"subcode",gimple_statement_base,subcode> subcode;
	 generic_field_name <"uid",gimple_statement_base,uid> uid;
	 generic_field_name <"location",gimple_statement_base,location> location;
	 generic_field_name <"num_ops",gimple_statement_base,num_ops> num_ops;
	 generic_field_name <"bb",gimple_statement_base,bb> bb;
	 generic_field_name <"block",gimple_statement_base,block> block;
}; 
class CLS_1173_gimple_statement_wce{ 
	 generic_class_name <"gimple_statement_wce",gimple_statement_wce> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_wce,gsbase> gsbase;
	 generic_field_name <"cleanup",gimple_statement_wce,cleanup> cleanup;
}; 
class CLS_1174_gimple_statement_with_memory_ops_base{ 
	 generic_class_name <"gimple_statement_with_memory_ops_base",gimple_statement_with_memory_ops_base> the_class_name;
	 generic_field_name <"opbase",gimple_statement_with_memory_ops_base,opbase> opbase;
	 generic_field_name <"vdef",gimple_statement_with_memory_ops_base,vdef> vdef;
	 generic_field_name <"vuse",gimple_statement_with_memory_ops_base,vuse> vuse;
}; 
class CLS_1175_gimple_statement_asm{ 
	 generic_class_name <"gimple_statement_asm",gimple_statement_asm> the_class_name;
	 generic_field_name <"membase",gimple_statement_asm,membase> membase;
	 generic_field_name <"string",gimple_statement_asm,string> string;
	 generic_field_name <"ni",gimple_statement_asm,ni> ni;
	 generic_field_name <"no",gimple_statement_asm,no> no;
	 generic_field_name <"nc",gimple_statement_asm,nc> nc;
	 generic_field_name <"nl",gimple_statement_asm,nl> nl;
	 generic_field_name <"op",gimple_statement_asm,op> op;
}; 
class CLS_1176_gimple_statement_omp{ 
	 generic_class_name <"gimple_statement_omp",gimple_statement_omp> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_omp,gsbase> gsbase;
	 generic_field_name <"body",gimple_statement_omp,body> body;
}; 
class CLS_1177_gimple_statement_omp_critical{ 
	 generic_class_name <"gimple_statement_omp_critical",gimple_statement_omp_critical> the_class_name;
	 generic_field_name <"omp",gimple_statement_omp_critical,omp> omp;
	 generic_field_name <"name",gimple_statement_omp_critical,name> name;
}; 
class CLS_1178_gimple_omp_for_iter{ 
	 generic_class_name <"gimple_omp_for_iter",gimple_omp_for_iter> the_class_name;
	 generic_field_name <"cond",gimple_omp_for_iter,cond> cond;
	 generic_field_name <"index",gimple_omp_for_iter,index> index;
	 generic_field_name <"initial",gimple_omp_for_iter,initial> initial;
	 generic_field_name <"final",gimple_omp_for_iter,final> final;
	 generic_field_name <"incr",gimple_omp_for_iter,incr> incr;
}; 
class CLS_1179_gimple_statement_omp{ 
	 generic_class_name <"gimple_statement_omp",gimple_statement_omp> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_omp,gsbase> gsbase;
	 generic_field_name <"body",gimple_statement_omp,body> body;
}; 
class CLS_1180_gimple_omp_for_iter{ 
	 generic_class_name <"gimple_omp_for_iter",gimple_omp_for_iter> the_class_name;
	 generic_field_name <"cond",gimple_omp_for_iter,cond> cond;
	 generic_field_name <"index",gimple_omp_for_iter,index> index;
	 generic_field_name <"initial",gimple_omp_for_iter,initial> initial;
	 generic_field_name <"final",gimple_omp_for_iter,final> final;
	 generic_field_name <"incr",gimple_omp_for_iter,incr> incr;
}; 
class CLS_1181_gimple_statement_omp_for{ 
	 generic_class_name <"gimple_statement_omp_for",gimple_statement_omp_for> the_class_name;
	 generic_field_name <"omp",gimple_statement_omp_for,omp> omp;
	 generic_field_name <"clauses",gimple_statement_omp_for,clauses> clauses;
	 generic_field_name <"collapse",gimple_statement_omp_for,collapse> collapse;
	 generic_field_name <"iter",gimple_statement_omp_for,iter> iter;
	 generic_field_name <"pre_body",gimple_statement_omp_for,pre_body> pre_body;
}; 
class CLS_1182_gimple_statement_omp{ 
	 generic_class_name <"gimple_statement_omp",gimple_statement_omp> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_omp,gsbase> gsbase;
	 generic_field_name <"body",gimple_statement_omp,body> body;
}; 
class CLS_1183_gimple_statement_omp_parallel{ 
	 generic_class_name <"gimple_statement_omp_parallel",gimple_statement_omp_parallel> the_class_name;
	 generic_field_name <"omp",gimple_statement_omp_parallel,omp> omp;
	 generic_field_name <"clauses",gimple_statement_omp_parallel,clauses> clauses;
	 generic_field_name <"child_fn",gimple_statement_omp_parallel,child_fn> child_fn;
	 generic_field_name <"data_arg",gimple_statement_omp_parallel,data_arg> data_arg;
}; 
class CLS_1184_gimple_statement_omp_parallel{ 
	 generic_class_name <"gimple_statement_omp_parallel",gimple_statement_omp_parallel> the_class_name;
	 generic_field_name <"omp",gimple_statement_omp_parallel,omp> omp;
	 generic_field_name <"clauses",gimple_statement_omp_parallel,clauses> clauses;
	 generic_field_name <"child_fn",gimple_statement_omp_parallel,child_fn> child_fn;
	 generic_field_name <"data_arg",gimple_statement_omp_parallel,data_arg> data_arg;
}; 
class CLS_1185_gimple_statement_omp_task{ 
	 generic_class_name <"gimple_statement_omp_task",gimple_statement_omp_task> the_class_name;
	 generic_field_name <"par",gimple_statement_omp_task,par> par;
	 generic_field_name <"copy_fn",gimple_statement_omp_task,copy_fn> copy_fn;
	 generic_field_name <"arg_size",gimple_statement_omp_task,arg_size> arg_size;
	 generic_field_name <"arg_align",gimple_statement_omp_task,arg_align> arg_align;
}; 
class CLS_1186_gimple_statement_omp{ 
	 generic_class_name <"gimple_statement_omp",gimple_statement_omp> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_omp,gsbase> gsbase;
	 generic_field_name <"body",gimple_statement_omp,body> body;
}; 
class CLS_1187_gimple_statement_omp_sections{ 
	 generic_class_name <"gimple_statement_omp_sections",gimple_statement_omp_sections> the_class_name;
	 generic_field_name <"omp",gimple_statement_omp_sections,omp> omp;
	 generic_field_name <"clauses",gimple_statement_omp_sections,clauses> clauses;
	 generic_field_name <"control",gimple_statement_omp_sections,control> control;
}; 
class CLS_1188_gimple_statement_base{ 
	 generic_class_name <"gimple_statement_base",gimple_statement_base> the_class_name;
	 generic_field_name <"code",gimple_statement_base,code> code;
	 generic_field_name <"no_warning",gimple_statement_base,no_warning> no_warning;
	 generic_field_name <"visited",gimple_statement_base,visited> visited;
	 generic_field_name <"nontemporal_move",gimple_statement_base,nontemporal_move> nontemporal_move;
	 generic_field_name <"plf",gimple_statement_base,plf> plf;
	 generic_field_name <"modified",gimple_statement_base,modified> modified;
	 generic_field_name <"has_volatile_ops",gimple_statement_base,has_volatile_ops> has_volatile_ops;
	 generic_field_name <"subcode",gimple_statement_base,subcode> subcode;
	 generic_field_name <"uid",gimple_statement_base,uid> uid;
	 generic_field_name <"location",gimple_statement_base,location> location;
	 generic_field_name <"num_ops",gimple_statement_base,num_ops> num_ops;
	 generic_field_name <"bb",gimple_statement_base,bb> bb;
	 generic_field_name <"block",gimple_statement_base,block> block;
}; 
class CLS_1189_gimple_statement_omp_continue{ 
	 generic_class_name <"gimple_statement_omp_continue",gimple_statement_omp_continue> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_omp_continue,gsbase> gsbase;
	 generic_field_name <"control_def",gimple_statement_omp_continue,control_def> control_def;
	 generic_field_name <"control_use",gimple_statement_omp_continue,control_use> control_use;
}; 
class CLS_1190_gimple_statement_omp{ 
	 generic_class_name <"gimple_statement_omp",gimple_statement_omp> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_omp,gsbase> gsbase;
	 generic_field_name <"body",gimple_statement_omp,body> body;
}; 
class CLS_1191_gimple_statement_omp_single{ 
	 generic_class_name <"gimple_statement_omp_single",gimple_statement_omp_single> the_class_name;
	 generic_field_name <"omp",gimple_statement_omp_single,omp> omp;
	 generic_field_name <"clauses",gimple_statement_omp_single,clauses> clauses;
}; 
class CLS_1192_gimple_statement_base{ 
	 generic_class_name <"gimple_statement_base",gimple_statement_base> the_class_name;
	 generic_field_name <"code",gimple_statement_base,code> code;
	 generic_field_name <"no_warning",gimple_statement_base,no_warning> no_warning;
	 generic_field_name <"visited",gimple_statement_base,visited> visited;
	 generic_field_name <"nontemporal_move",gimple_statement_base,nontemporal_move> nontemporal_move;
	 generic_field_name <"plf",gimple_statement_base,plf> plf;
	 generic_field_name <"modified",gimple_statement_base,modified> modified;
	 generic_field_name <"has_volatile_ops",gimple_statement_base,has_volatile_ops> has_volatile_ops;
	 generic_field_name <"subcode",gimple_statement_base,subcode> subcode;
	 generic_field_name <"uid",gimple_statement_base,uid> uid;
	 generic_field_name <"location",gimple_statement_base,location> location;
	 generic_field_name <"num_ops",gimple_statement_base,num_ops> num_ops;
	 generic_field_name <"bb",gimple_statement_base,bb> bb;
	 generic_field_name <"block",gimple_statement_base,block> block;
}; 
class CLS_1193_gimple_statement_omp_atomic_load{ 
	 generic_class_name <"gimple_statement_omp_atomic_load",gimple_statement_omp_atomic_load> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_omp_atomic_load,gsbase> gsbase;
	 generic_field_name <"rhs",gimple_statement_omp_atomic_load,rhs> rhs;
	 generic_field_name <"lhs",gimple_statement_omp_atomic_load,lhs> lhs;
}; 
class CLS_1194_gimple_statement_base{ 
	 generic_class_name <"gimple_statement_base",gimple_statement_base> the_class_name;
	 generic_field_name <"code",gimple_statement_base,code> code;
	 generic_field_name <"no_warning",gimple_statement_base,no_warning> no_warning;
	 generic_field_name <"visited",gimple_statement_base,visited> visited;
	 generic_field_name <"nontemporal_move",gimple_statement_base,nontemporal_move> nontemporal_move;
	 generic_field_name <"plf",gimple_statement_base,plf> plf;
	 generic_field_name <"modified",gimple_statement_base,modified> modified;
	 generic_field_name <"has_volatile_ops",gimple_statement_base,has_volatile_ops> has_volatile_ops;
	 generic_field_name <"subcode",gimple_statement_base,subcode> subcode;
	 generic_field_name <"uid",gimple_statement_base,uid> uid;
	 generic_field_name <"location",gimple_statement_base,location> location;
	 generic_field_name <"num_ops",gimple_statement_base,num_ops> num_ops;
	 generic_field_name <"bb",gimple_statement_base,bb> bb;
	 generic_field_name <"block",gimple_statement_base,block> block;
}; 
class CLS_1195_gimple_statement_omp_atomic_store{ 
	 generic_class_name <"gimple_statement_omp_atomic_store",gimple_statement_omp_atomic_store> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_omp_atomic_store,gsbase> gsbase;
	 generic_field_name <"val",gimple_statement_omp_atomic_store,val> val;
}; 
class CLS_1196_gimple_statement_with_memory_ops_base{ 
	 generic_class_name <"gimple_statement_with_memory_ops_base",gimple_statement_with_memory_ops_base> the_class_name;
	 generic_field_name <"opbase",gimple_statement_with_memory_ops_base,opbase> opbase;
	 generic_field_name <"vdef",gimple_statement_with_memory_ops_base,vdef> vdef;
	 generic_field_name <"vuse",gimple_statement_with_memory_ops_base,vuse> vuse;
}; 
class CLS_1197_gimple_statement_transaction{ 
	 generic_class_name <"gimple_statement_transaction",gimple_statement_transaction> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_transaction,gsbase> gsbase;
	 generic_field_name <"body",gimple_statement_transaction,body> body;
	 generic_field_name <"label",gimple_statement_transaction,label> label;
}; 
class CLS_1198_gimple_statement_base{ 
	 generic_class_name <"gimple_statement_base",gimple_statement_base> the_class_name;
	 generic_field_name <"code",gimple_statement_base,code> code;
	 generic_field_name <"no_warning",gimple_statement_base,no_warning> no_warning;
	 generic_field_name <"visited",gimple_statement_base,visited> visited;
	 generic_field_name <"nontemporal_move",gimple_statement_base,nontemporal_move> nontemporal_move;
	 generic_field_name <"plf",gimple_statement_base,plf> plf;
	 generic_field_name <"modified",gimple_statement_base,modified> modified;
	 generic_field_name <"has_volatile_ops",gimple_statement_base,has_volatile_ops> has_volatile_ops;
	 generic_field_name <"subcode",gimple_statement_base,subcode> subcode;
	 generic_field_name <"uid",gimple_statement_base,uid> uid;
	 generic_field_name <"location",gimple_statement_base,location> location;
	 generic_field_name <"num_ops",gimple_statement_base,num_ops> num_ops;
	 generic_field_name <"bb",gimple_statement_base,bb> bb;
	 generic_field_name <"block",gimple_statement_base,block> block;
}; 
class CLS_1199_gimple_statement_with_ops{ 
	 generic_class_name <"gimple_statement_with_ops",gimple_statement_with_ops> the_class_name;
	 generic_field_name <"opbase",gimple_statement_with_ops,opbase> opbase;
	 generic_field_name <"op",gimple_statement_with_ops,op> op;
}; 
class CLS_1200_gimple_statement_with_memory_ops_base{ 
	 generic_class_name <"gimple_statement_with_memory_ops_base",gimple_statement_with_memory_ops_base> the_class_name;
	 generic_field_name <"opbase",gimple_statement_with_memory_ops_base,opbase> opbase;
	 generic_field_name <"vdef",gimple_statement_with_memory_ops_base,vdef> vdef;
	 generic_field_name <"vuse",gimple_statement_with_memory_ops_base,vuse> vuse;
}; 
class CLS_1201_gimple_statement_with_memory_ops{ 
	 generic_class_name <"gimple_statement_with_memory_ops",gimple_statement_with_memory_ops> the_class_name;
	 generic_field_name <"membase",gimple_statement_with_memory_ops,membase> membase;
	 generic_field_name <"op",gimple_statement_with_memory_ops,op> op;
}; 
class CLS_1202_gimple_statement_call{ 
	 generic_class_name <"gimple_statement_call",gimple_statement_call> the_class_name;
	 generic_field_name <"membase",gimple_statement_call,membase> membase;
	 generic_field_name <"call_used",gimple_statement_call,call_used> call_used;
	 generic_field_name <"call_clobbered",gimple_statement_call,call_clobbered> call_clobbered;
	 generic_field_name <"u",gimple_statement_call,u> u;
	 generic_field_name <"op",gimple_statement_call,op> op;
}; 
class CLS_1203_gimple_statement_omp{ 
	 generic_class_name <"gimple_statement_omp",gimple_statement_omp> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_omp,gsbase> gsbase;
	 generic_field_name <"body",gimple_statement_omp,body> body;
}; 
class CLS_1204_gimple_statement_bind{ 
	 generic_class_name <"gimple_statement_bind",gimple_statement_bind> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_bind,gsbase> gsbase;
	 generic_field_name <"vars",gimple_statement_bind,vars> vars;
	 generic_field_name <"block",gimple_statement_bind,block> block;
	 generic_field_name <"body",gimple_statement_bind,body> body;
}; 
class CLS_1205_gimple_statement_catch{ 
	 generic_class_name <"gimple_statement_catch",gimple_statement_catch> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_catch,gsbase> gsbase;
	 generic_field_name <"types",gimple_statement_catch,types> types;
	 generic_field_name <"handler",gimple_statement_catch,handler> handler;
}; 
class CLS_1206_gimple_statement_eh_filter{ 
	 generic_class_name <"gimple_statement_eh_filter",gimple_statement_eh_filter> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_eh_filter,gsbase> gsbase;
	 generic_field_name <"types",gimple_statement_eh_filter,types> types;
	 generic_field_name <"failure",gimple_statement_eh_filter,failure> failure;
}; 
class CLS_1207_gimple_statement_eh_mnt{ 
	 generic_class_name <"gimple_statement_eh_mnt",gimple_statement_eh_mnt> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_eh_mnt,gsbase> gsbase;
	 generic_field_name <"fndecl",gimple_statement_eh_mnt,fndecl> fndecl;
}; 
class CLS_1208_gimple_statement_eh_else{ 
	 generic_class_name <"gimple_statement_eh_else",gimple_statement_eh_else> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_eh_else,gsbase> gsbase;
	 generic_field_name <"n_body",gimple_statement_eh_else,n_body> n_body;
	 generic_field_name <"e_body",gimple_statement_eh_else,e_body> e_body;
}; 
class CLS_1209_gimple_statement_phi{ 
	 generic_class_name <"gimple_statement_phi",gimple_statement_phi> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_phi,gsbase> gsbase;
	 generic_field_name <"capacity",gimple_statement_phi,capacity> capacity;
	 generic_field_name <"nargs",gimple_statement_phi,nargs> nargs;
	 generic_field_name <"result",gimple_statement_phi,result> result;
	 generic_field_name <"args",gimple_statement_phi,args> args;
}; 
class CLS_1210_gimple_statement_eh_ctrl{ 
	 generic_class_name <"gimple_statement_eh_ctrl",gimple_statement_eh_ctrl> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_eh_ctrl,gsbase> gsbase;
	 generic_field_name <"region",gimple_statement_eh_ctrl,region> region;
}; 
class CLS_1211_gimple_statement_try{ 
	 generic_class_name <"gimple_statement_try",gimple_statement_try> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_try,gsbase> gsbase;
	 generic_field_name <"eval",gimple_statement_try,eval> eval;
	 generic_field_name <"cleanup",gimple_statement_try,cleanup> cleanup;
}; 
class CLS_1212_gimple_statement_wce{ 
	 generic_class_name <"gimple_statement_wce",gimple_statement_wce> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_wce,gsbase> gsbase;
	 generic_field_name <"cleanup",gimple_statement_wce,cleanup> cleanup;
}; 
class CLS_1213_gimple_statement_asm{ 
	 generic_class_name <"gimple_statement_asm",gimple_statement_asm> the_class_name;
	 generic_field_name <"membase",gimple_statement_asm,membase> membase;
	 generic_field_name <"string",gimple_statement_asm,string> string;
	 generic_field_name <"ni",gimple_statement_asm,ni> ni;
	 generic_field_name <"no",gimple_statement_asm,no> no;
	 generic_field_name <"nc",gimple_statement_asm,nc> nc;
	 generic_field_name <"nl",gimple_statement_asm,nl> nl;
	 generic_field_name <"op",gimple_statement_asm,op> op;
}; 
class CLS_1214_gimple_statement_omp_critical{ 
	 generic_class_name <"gimple_statement_omp_critical",gimple_statement_omp_critical> the_class_name;
	 generic_field_name <"omp",gimple_statement_omp_critical,omp> omp;
	 generic_field_name <"name",gimple_statement_omp_critical,name> name;
}; 
class CLS_1215_gimple_statement_omp_for{ 
	 generic_class_name <"gimple_statement_omp_for",gimple_statement_omp_for> the_class_name;
	 generic_field_name <"omp",gimple_statement_omp_for,omp> omp;
	 generic_field_name <"clauses",gimple_statement_omp_for,clauses> clauses;
	 generic_field_name <"collapse",gimple_statement_omp_for,collapse> collapse;
	 generic_field_name <"iter",gimple_statement_omp_for,iter> iter;
	 generic_field_name <"pre_body",gimple_statement_omp_for,pre_body> pre_body;
}; 
class CLS_1216_gimple_statement_omp_parallel{ 
	 generic_class_name <"gimple_statement_omp_parallel",gimple_statement_omp_parallel> the_class_name;
	 generic_field_name <"omp",gimple_statement_omp_parallel,omp> omp;
	 generic_field_name <"clauses",gimple_statement_omp_parallel,clauses> clauses;
	 generic_field_name <"child_fn",gimple_statement_omp_parallel,child_fn> child_fn;
	 generic_field_name <"data_arg",gimple_statement_omp_parallel,data_arg> data_arg;
}; 
class CLS_1217_gimple_statement_omp_task{ 
	 generic_class_name <"gimple_statement_omp_task",gimple_statement_omp_task> the_class_name;
	 generic_field_name <"par",gimple_statement_omp_task,par> par;
	 generic_field_name <"copy_fn",gimple_statement_omp_task,copy_fn> copy_fn;
	 generic_field_name <"arg_size",gimple_statement_omp_task,arg_size> arg_size;
	 generic_field_name <"arg_align",gimple_statement_omp_task,arg_align> arg_align;
}; 
class CLS_1218_gimple_statement_omp_sections{ 
	 generic_class_name <"gimple_statement_omp_sections",gimple_statement_omp_sections> the_class_name;
	 generic_field_name <"omp",gimple_statement_omp_sections,omp> omp;
	 generic_field_name <"clauses",gimple_statement_omp_sections,clauses> clauses;
	 generic_field_name <"control",gimple_statement_omp_sections,control> control;
}; 
class CLS_1219_gimple_statement_omp_single{ 
	 generic_class_name <"gimple_statement_omp_single",gimple_statement_omp_single> the_class_name;
	 generic_field_name <"omp",gimple_statement_omp_single,omp> omp;
	 generic_field_name <"clauses",gimple_statement_omp_single,clauses> clauses;
}; 
class CLS_1220_gimple_statement_omp_continue{ 
	 generic_class_name <"gimple_statement_omp_continue",gimple_statement_omp_continue> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_omp_continue,gsbase> gsbase;
	 generic_field_name <"control_def",gimple_statement_omp_continue,control_def> control_def;
	 generic_field_name <"control_use",gimple_statement_omp_continue,control_use> control_use;
}; 
class CLS_1221_gimple_statement_omp_atomic_load{ 
	 generic_class_name <"gimple_statement_omp_atomic_load",gimple_statement_omp_atomic_load> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_omp_atomic_load,gsbase> gsbase;
	 generic_field_name <"rhs",gimple_statement_omp_atomic_load,rhs> rhs;
	 generic_field_name <"lhs",gimple_statement_omp_atomic_load,lhs> lhs;
}; 
class CLS_1222_gimple_statement_omp_atomic_store{ 
	 generic_class_name <"gimple_statement_omp_atomic_store",gimple_statement_omp_atomic_store> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_omp_atomic_store,gsbase> gsbase;
	 generic_field_name <"val",gimple_statement_omp_atomic_store,val> val;
}; 
class CLS_1223_gimple_statement_transaction{ 
	 generic_class_name <"gimple_statement_transaction",gimple_statement_transaction> the_class_name;
	 generic_field_name <"gsbase",gimple_statement_transaction,gsbase> gsbase;
	 generic_field_name <"body",gimple_statement_transaction,body> body;
	 generic_field_name <"label",gimple_statement_transaction,label> label;
}; 
class CLS_1224_basic_block_def{ 
	 generic_class_name <"basic_block_def",basic_block_def> the_class_name;
	 generic_field_name <"preds",basic_block_def,preds> preds;
	 generic_field_name <"succs",basic_block_def,succs> succs;
	 generic_field_name <"aux",basic_block_def,aux> aux;
	 generic_field_name <"loop_father",basic_block_def,loop_father> loop_father;
	 generic_field_name <"dom",basic_block_def,dom> dom;
	 generic_field_name <"prev_bb",basic_block_def,prev_bb> prev_bb;
	 generic_field_name <"next_bb",basic_block_def,next_bb> next_bb;
	 generic_field_name <"il",basic_block_def,il> il;
	 generic_field_name <"count",basic_block_def,count> count;
	 generic_field_name <"index",basic_block_def,index> index;
	 generic_field_name <"loop_depth",basic_block_def,loop_depth> loop_depth;
	 generic_field_name <"frequency",basic_block_def,frequency> frequency;
	 generic_field_name <"discriminator",basic_block_def,discriminator> discriminator;
	 generic_field_name <"flags",basic_block_def,flags> flags;
}; 
class CLS_1225_gimplify_ctx{ 
	 generic_class_name <"gimplify_ctx",gimplify_ctx> the_class_name;
}; 
class CLS_1226_gimplify_ctx{ 
	 generic_class_name <"gimplify_ctx",gimplify_ctx> the_class_name;
	 generic_field_name <"prev_context",gimplify_ctx,prev_context> prev_context;
	 generic_field_name <"bind_expr_stack",gimplify_ctx,bind_expr_stack> bind_expr_stack;
	 generic_field_name <"temps",gimplify_ctx,temps> temps;
	 generic_field_name <"conditional_cleanups",gimplify_ctx,conditional_cleanups> conditional_cleanups;
	 generic_field_name <"exit_label",gimplify_ctx,exit_label> exit_label;
	 generic_field_name <"return_temp",gimplify_ctx,return_temp> return_temp;
	 generic_field_name <"case_labels",gimplify_ctx,case_labels> case_labels;
	 generic_field_name <"temp_htab",gimplify_ctx,temp_htab> temp_htab;
	 generic_field_name <"conditions",gimplify_ctx,conditions> conditions;
	 generic_field_name <"save_stack",gimplify_ctx,save_stack> save_stack;
	 generic_field_name <"into_ssa",gimplify_ctx,into_ssa> into_ssa;
	 generic_field_name <"allow_rhs_cond_expr",gimplify_ctx,allow_rhs_cond_expr> allow_rhs_cond_expr;
	 generic_field_name <"in_cleanup_point_expr",gimplify_ctx,in_cleanup_point_expr> in_cleanup_point_expr;
}; 
class CLS_1227_gimplify_ctx{ 
	 generic_class_name <"gimplify_ctx",gimplify_ctx> the_class_name;
	 generic_field_name <"prev_context",gimplify_ctx,prev_context> prev_context;
	 generic_field_name <"bind_expr_stack",gimplify_ctx,bind_expr_stack> bind_expr_stack;
	 generic_field_name <"temps",gimplify_ctx,temps> temps;
	 generic_field_name <"conditional_cleanups",gimplify_ctx,conditional_cleanups> conditional_cleanups;
	 generic_field_name <"exit_label",gimplify_ctx,exit_label> exit_label;
	 generic_field_name <"return_temp",gimplify_ctx,return_temp> return_temp;
	 generic_field_name <"case_labels",gimplify_ctx,case_labels> case_labels;
	 generic_field_name <"temp_htab",gimplify_ctx,temp_htab> temp_htab;
	 generic_field_name <"conditions",gimplify_ctx,conditions> conditions;
	 generic_field_name <"save_stack",gimplify_ctx,save_stack> save_stack;
	 generic_field_name <"into_ssa",gimplify_ctx,into_ssa> into_ssa;
	 generic_field_name <"allow_rhs_cond_expr",gimplify_ctx,allow_rhs_cond_expr> allow_rhs_cond_expr;
	 generic_field_name <"in_cleanup_point_expr",gimplify_ctx,in_cleanup_point_expr> in_cleanup_point_expr;
}; 
class CLS_1228_gimplify_omp_ctx{ 
	 generic_class_name <"gimplify_omp_ctx",gimplify_omp_ctx> the_class_name;
}; 
class CLS_1229_gimplify_omp_ctx{ 
	 generic_class_name <"gimplify_omp_ctx",gimplify_omp_ctx> the_class_name;
}; 
class CLS_1230_basic_block_def{ 
	 generic_class_name <"basic_block_def",basic_block_def> the_class_name;
	 generic_field_name <"preds",basic_block_def,preds> preds;
	 generic_field_name <"succs",basic_block_def,succs> succs;
	 generic_field_name <"aux",basic_block_def,aux> aux;
	 generic_field_name <"loop_father",basic_block_def,loop_father> loop_father;
	 generic_field_name <"dom",basic_block_def,dom> dom;
	 generic_field_name <"prev_bb",basic_block_def,prev_bb> prev_bb;
	 generic_field_name <"next_bb",basic_block_def,next_bb> next_bb;
	 generic_field_name <"il",basic_block_def,il> il;
	 generic_field_name <"count",basic_block_def,count> count;
	 generic_field_name <"index",basic_block_def,index> index;
	 generic_field_name <"loop_depth",basic_block_def,loop_depth> loop_depth;
	 generic_field_name <"frequency",basic_block_def,frequency> frequency;
	 generic_field_name <"discriminator",basic_block_def,discriminator> discriminator;
	 generic_field_name <"flags",basic_block_def,flags> flags;
}; 
class CLS_1231_def_optype_d{ 
	 generic_class_name <"def_optype_d",def_optype_d> the_class_name;
	 generic_field_name <"next",def_optype_d,next> next;
	 generic_field_name <"def_ptr",def_optype_d,def_ptr> def_ptr;
}; 
class CLS_1232_def_optype_d{ 
	 generic_class_name <"def_optype_d",def_optype_d> the_class_name;
	 generic_field_name <"next",def_optype_d,next> next;
	 generic_field_name <"def_ptr",def_optype_d,def_ptr> def_ptr;
}; 
class CLS_1233_use_optype_d{ 
	 generic_class_name <"use_optype_d",use_optype_d> the_class_name;
	 generic_field_name <"next",use_optype_d,next> next;
	 generic_field_name <"use_ptr",use_optype_d,use_ptr> use_ptr;
}; 
class CLS_1234_use_optype_d{ 
	 generic_class_name <"use_optype_d",use_optype_d> the_class_name;
	 generic_field_name <"next",use_optype_d,next> next;
	 generic_field_name <"use_ptr",use_optype_d,use_ptr> use_ptr;
}; 
class CLS_1235_use_optype_d{ 
	 generic_class_name <"use_optype_d",use_optype_d> the_class_name;
	 generic_field_name <"next",use_optype_d,next> next;
	 generic_field_name <"use_ptr",use_optype_d,use_ptr> use_ptr;
}; 
class CLS_1236_def_optype_d{ 
	 generic_class_name <"def_optype_d",def_optype_d> the_class_name;
	 generic_field_name <"next",def_optype_d,next> next;
	 generic_field_name <"def_ptr",def_optype_d,def_ptr> def_ptr;
}; 
class CLS_1237_pt_solution{ 
	 generic_class_name <"pt_solution",pt_solution> the_class_name;
	 generic_field_name <"anything",pt_solution,anything> anything;
	 generic_field_name <"nonlocal",pt_solution,nonlocal> nonlocal;
	 generic_field_name <"escaped",pt_solution,escaped> escaped;
	 generic_field_name <"ipa_escaped",pt_solution,ipa_escaped> ipa_escaped;
	 generic_field_name <"null",pt_solution,null> null;
	 generic_field_name <"vars_contains_global",pt_solution,vars_contains_global> vars_contains_global;
	 generic_field_name <"vars",pt_solution,vars> vars;
}; 
class CLS_1238_pt_solution{ 
	 generic_class_name <"pt_solution",pt_solution> the_class_name;
	 generic_field_name <"anything",pt_solution,anything> anything;
	 generic_field_name <"nonlocal",pt_solution,nonlocal> nonlocal;
	 generic_field_name <"escaped",pt_solution,escaped> escaped;
	 generic_field_name <"ipa_escaped",pt_solution,ipa_escaped> ipa_escaped;
	 generic_field_name <"null",pt_solution,null> null;
	 generic_field_name <"vars_contains_global",pt_solution,vars_contains_global> vars_contains_global;
	 generic_field_name <"vars",pt_solution,vars> vars;
}; 
class CLS_1239_phi_arg_d{ 
	 generic_class_name <"phi_arg_d",phi_arg_d> the_class_name;
	 generic_field_name <"imm_use",phi_arg_d,imm_use> imm_use;
	 generic_field_name <"def",phi_arg_d,def> def;
	 generic_field_name <"locus",phi_arg_d,locus> locus;
}; 
class CLS_1240_phi_arg_d{ 
	 generic_class_name <"phi_arg_d",phi_arg_d> the_class_name;
	 generic_field_name <"imm_use",phi_arg_d,imm_use> imm_use;
	 generic_field_name <"def",phi_arg_d,def> def;
	 generic_field_name <"locus",phi_arg_d,locus> locus;
}; 
class CLS_1241_basic_block_def{ 
	 generic_class_name <"basic_block_def",basic_block_def> the_class_name;
	 generic_field_name <"preds",basic_block_def,preds> preds;
	 generic_field_name <"succs",basic_block_def,succs> succs;
	 generic_field_name <"aux",basic_block_def,aux> aux;
	 generic_field_name <"loop_father",basic_block_def,loop_father> loop_father;
	 generic_field_name <"dom",basic_block_def,dom> dom;
	 generic_field_name <"prev_bb",basic_block_def,prev_bb> prev_bb;
	 generic_field_name <"next_bb",basic_block_def,next_bb> next_bb;
	 generic_field_name <"il",basic_block_def,il> il;
	 generic_field_name <"count",basic_block_def,count> count;
	 generic_field_name <"index",basic_block_def,index> index;
	 generic_field_name <"loop_depth",basic_block_def,loop_depth> loop_depth;
	 generic_field_name <"frequency",basic_block_def,frequency> frequency;
	 generic_field_name <"discriminator",basic_block_def,discriminator> discriminator;
	 generic_field_name <"flags",basic_block_def,flags> flags;
}; 
class CLS_1242_pointer_set_t{ 
	 generic_class_name <"pointer_set_t",pointer_set_t> the_class_name;
}; 
class CLS_1243_walk_stmt_info{ 
	 generic_class_name <"walk_stmt_info",walk_stmt_info> the_class_name;
	 generic_field_name <"gsi",walk_stmt_info,gsi> gsi;
	 generic_field_name <"info",walk_stmt_info,info> info;
	 generic_field_name <"pset",walk_stmt_info,pset> pset;
	 generic_field_name <"callback_result",walk_stmt_info,callback_result> callback_result;
	 generic_field_name <"val_only",walk_stmt_info,val_only> val_only;
	 generic_field_name <"is_lhs",walk_stmt_info,is_lhs> is_lhs;
	 generic_field_name <"changed",walk_stmt_info,changed> changed;
	 generic_field_name <"want_locations",walk_stmt_info,want_locations> want_locations;
	 generic_field_name <"removed_stmt",walk_stmt_info,removed_stmt> removed_stmt;
}; 
class CLS_1244_walk_stmt_info{ 
	 generic_class_name <"walk_stmt_info",walk_stmt_info> the_class_name;
	 generic_field_name <"gsi",walk_stmt_info,gsi> gsi;
	 generic_field_name <"info",walk_stmt_info,info> info;
	 generic_field_name <"pset",walk_stmt_info,pset> pset;
	 generic_field_name <"callback_result",walk_stmt_info,callback_result> callback_result;
	 generic_field_name <"val_only",walk_stmt_info,val_only> val_only;
	 generic_field_name <"is_lhs",walk_stmt_info,is_lhs> is_lhs;
	 generic_field_name <"changed",walk_stmt_info,changed> changed;
	 generic_field_name <"want_locations",walk_stmt_info,want_locations> want_locations;
	 generic_field_name <"removed_stmt",walk_stmt_info,removed_stmt> removed_stmt;
}; 
class CLS_1245_walk_stmt_info{ 
	 generic_class_name <"walk_stmt_info",walk_stmt_info> the_class_name;
	 generic_field_name <"gsi",walk_stmt_info,gsi> gsi;
	 generic_field_name <"info",walk_stmt_info,info> info;
	 generic_field_name <"pset",walk_stmt_info,pset> pset;
	 generic_field_name <"callback_result",walk_stmt_info,callback_result> callback_result;
	 generic_field_name <"val_only",walk_stmt_info,val_only> val_only;
	 generic_field_name <"is_lhs",walk_stmt_info,is_lhs> is_lhs;
	 generic_field_name <"changed",walk_stmt_info,changed> changed;
	 generic_field_name <"want_locations",walk_stmt_info,want_locations> want_locations;
	 generic_field_name <"removed_stmt",walk_stmt_info,removed_stmt> removed_stmt;
}; 
class CLS_1246_walk_stmt_info{ 
	 generic_class_name <"walk_stmt_info",walk_stmt_info> the_class_name;
	 generic_field_name <"gsi",walk_stmt_info,gsi> gsi;
	 generic_field_name <"info",walk_stmt_info,info> info;
	 generic_field_name <"pset",walk_stmt_info,pset> pset;
	 generic_field_name <"callback_result",walk_stmt_info,callback_result> callback_result;
	 generic_field_name <"val_only",walk_stmt_info,val_only> val_only;
	 generic_field_name <"is_lhs",walk_stmt_info,is_lhs> is_lhs;
	 generic_field_name <"changed",walk_stmt_info,changed> changed;
	 generic_field_name <"want_locations",walk_stmt_info,want_locations> want_locations;
	 generic_field_name <"removed_stmt",walk_stmt_info,removed_stmt> removed_stmt;
}; 
class CLS_1247_walk_stmt_info{ 
	 generic_class_name <"walk_stmt_info",walk_stmt_info> the_class_name;
	 generic_field_name <"gsi",walk_stmt_info,gsi> gsi;
	 generic_field_name <"info",walk_stmt_info,info> info;
	 generic_field_name <"pset",walk_stmt_info,pset> pset;
	 generic_field_name <"callback_result",walk_stmt_info,callback_result> callback_result;
	 generic_field_name <"val_only",walk_stmt_info,val_only> val_only;
	 generic_field_name <"is_lhs",walk_stmt_info,is_lhs> is_lhs;
	 generic_field_name <"changed",walk_stmt_info,changed> changed;
	 generic_field_name <"want_locations",walk_stmt_info,want_locations> want_locations;
	 generic_field_name <"removed_stmt",walk_stmt_info,removed_stmt> removed_stmt;
}; 
class CLS_1248_ld_plugin_input_file{ 
	 generic_class_name <"ld_plugin_input_file",ld_plugin_input_file> the_class_name;
	 generic_field_name <"name",ld_plugin_input_file,name> name;
	 generic_field_name <"fd",ld_plugin_input_file,fd> fd;
	 generic_field_name <"offset",ld_plugin_input_file,offset> offset;
	 generic_field_name <"filesize",ld_plugin_input_file,filesize> filesize;
	 generic_field_name <"handle",ld_plugin_input_file,handle> handle;
}; 
class CLS_1249_ld_plugin_symbol{ 
	 generic_class_name <"ld_plugin_symbol",ld_plugin_symbol> the_class_name;
	 generic_field_name <"name",ld_plugin_symbol,name> name;
	 generic_field_name <"version",ld_plugin_symbol,version> version;
	 generic_field_name <"def",ld_plugin_symbol,def> def;
	 generic_field_name <"visibility",ld_plugin_symbol,visibility> visibility;
	 generic_field_name <"size",ld_plugin_symbol,size> size;
	 generic_field_name <"comdat_key",ld_plugin_symbol,comdat_key> comdat_key;
	 generic_field_name <"resolution",ld_plugin_symbol,resolution> resolution;
}; 
class CLS_1250_ld_plugin_section{ 
	 generic_class_name <"ld_plugin_section",ld_plugin_section> the_class_name;
	 generic_field_name <"handle",ld_plugin_section,handle> handle;
	 generic_field_name <"shndx",ld_plugin_section,shndx> shndx;
}; 
class CLS_1251_ld_plugin_input_file{ 
	 generic_class_name <"ld_plugin_input_file",ld_plugin_input_file> the_class_name;
	 generic_field_name <"name",ld_plugin_input_file,name> name;
	 generic_field_name <"fd",ld_plugin_input_file,fd> fd;
	 generic_field_name <"offset",ld_plugin_input_file,offset> offset;
	 generic_field_name <"filesize",ld_plugin_input_file,filesize> filesize;
	 generic_field_name <"handle",ld_plugin_input_file,handle> handle;
}; 
class CLS_1252_ld_plugin_symbol{ 
	 generic_class_name <"ld_plugin_symbol",ld_plugin_symbol> the_class_name;
	 generic_field_name <"name",ld_plugin_symbol,name> name;
	 generic_field_name <"version",ld_plugin_symbol,version> version;
	 generic_field_name <"def",ld_plugin_symbol,def> def;
	 generic_field_name <"visibility",ld_plugin_symbol,visibility> visibility;
	 generic_field_name <"size",ld_plugin_symbol,size> size;
	 generic_field_name <"comdat_key",ld_plugin_symbol,comdat_key> comdat_key;
	 generic_field_name <"resolution",ld_plugin_symbol,resolution> resolution;
}; 
class CLS_1253_ld_plugin_input_file{ 
	 generic_class_name <"ld_plugin_input_file",ld_plugin_input_file> the_class_name;
	 generic_field_name <"name",ld_plugin_input_file,name> name;
	 generic_field_name <"fd",ld_plugin_input_file,fd> fd;
	 generic_field_name <"offset",ld_plugin_input_file,offset> offset;
	 generic_field_name <"filesize",ld_plugin_input_file,filesize> filesize;
	 generic_field_name <"handle",ld_plugin_input_file,handle> handle;
}; 
class CLS_1254_ld_plugin_symbol{ 
	 generic_class_name <"ld_plugin_symbol",ld_plugin_symbol> the_class_name;
	 generic_field_name <"name",ld_plugin_symbol,name> name;
	 generic_field_name <"version",ld_plugin_symbol,version> version;
	 generic_field_name <"def",ld_plugin_symbol,def> def;
	 generic_field_name <"visibility",ld_plugin_symbol,visibility> visibility;
	 generic_field_name <"size",ld_plugin_symbol,size> size;
	 generic_field_name <"comdat_key",ld_plugin_symbol,comdat_key> comdat_key;
	 generic_field_name <"resolution",ld_plugin_symbol,resolution> resolution;
}; 
class CLS_1255_ld_plugin_section{ 
	 generic_class_name <"ld_plugin_section",ld_plugin_section> the_class_name;
	 generic_field_name <"handle",ld_plugin_section,handle> handle;
	 generic_field_name <"shndx",ld_plugin_section,shndx> shndx;
}; 
class CLS_1256_ld_plugin_section{ 
	 generic_class_name <"ld_plugin_section",ld_plugin_section> the_class_name;
	 generic_field_name <"handle",ld_plugin_section,handle> handle;
	 generic_field_name <"shndx",ld_plugin_section,shndx> shndx;
}; 
class CLS_1257_ld_plugin_section{ 
	 generic_class_name <"ld_plugin_section",ld_plugin_section> the_class_name;
	 generic_field_name <"handle",ld_plugin_section,handle> handle;
	 generic_field_name <"shndx",ld_plugin_section,shndx> shndx;
}; 
class CLS_1258_ld_plugin_section{ 
	 generic_class_name <"ld_plugin_section",ld_plugin_section> the_class_name;
	 generic_field_name <"handle",ld_plugin_section,handle> handle;
	 generic_field_name <"shndx",ld_plugin_section,shndx> shndx;
}; 
class CLS_1259_ld_plugin_tv{ 
	 generic_class_name <"ld_plugin_tv",ld_plugin_tv> the_class_name;
	 generic_field_name <"tv_tag",ld_plugin_tv,tv_tag> tv_tag;
	 generic_field_name <"tv_u",ld_plugin_tv,tv_u> tv_u;
}; 
class CLS_1260_ld_plugin_tv{ 
	 generic_class_name <"ld_plugin_tv",ld_plugin_tv> the_class_name;
	 generic_field_name <"tv_tag",ld_plugin_tv,tv_tag> tv_tag;
	 generic_field_name <"tv_u",ld_plugin_tv,tv_u> tv_u;
}; 
class CLS_1261_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
}; 
class CLS_1262_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
}; 
class CLS_1263_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
}; 
class CLS_1264_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
}; 
class CLS_1265_ipa_ref{ 
	 generic_class_name <"ipa_ref",ipa_ref> the_class_name;
	 generic_field_name <"refering",ipa_ref,refering> refering;
	 generic_field_name <"refered",ipa_ref,refered> refered;
	 generic_field_name <"stmt",ipa_ref,stmt> stmt;
	 generic_field_name <"refered_index",ipa_ref,refered_index> refered_index;
	 generic_field_name <"refering_type",ipa_ref,refering_type> refering_type;
	 generic_field_name <"refered_type",ipa_ref,refered_type> refered_type;
	 generic_field_name <"use",ipa_ref,use> use;
}; 
class CLS_1266_ipa_ref{ 
	 generic_class_name <"ipa_ref",ipa_ref> the_class_name;
	 generic_field_name <"refering",ipa_ref,refering> refering;
	 generic_field_name <"refered",ipa_ref,refered> refered;
	 generic_field_name <"stmt",ipa_ref,stmt> stmt;
	 generic_field_name <"refered_index",ipa_ref,refered_index> refered_index;
	 generic_field_name <"refering_type",ipa_ref,refering_type> refering_type;
	 generic_field_name <"refered_type",ipa_ref,refered_type> refered_type;
	 generic_field_name <"use",ipa_ref,use> use;
}; 
class CLS_1267_ipa_ref{ 
	 generic_class_name <"ipa_ref",ipa_ref> the_class_name;
	 generic_field_name <"refering",ipa_ref,refering> refering;
	 generic_field_name <"refered",ipa_ref,refered> refered;
	 generic_field_name <"stmt",ipa_ref,stmt> stmt;
	 generic_field_name <"refered_index",ipa_ref,refered_index> refered_index;
	 generic_field_name <"refering_type",ipa_ref,refering_type> refering_type;
	 generic_field_name <"refered_type",ipa_ref,refered_type> refered_type;
	 generic_field_name <"use",ipa_ref,use> use;
}; 
class CLS_1268_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_1269_VEC_ipa_ref_t_base{ 
	 generic_class_name <"VEC_ipa_ref_t_base",VEC_ipa_ref_t_base> the_class_name;
	 generic_field_name <"prefix",VEC_ipa_ref_t_base,prefix> prefix;
	 generic_field_name <"vec",VEC_ipa_ref_t_base,vec> vec;
}; 
class CLS_1270_VEC_ipa_ref_t_none{ 
	 generic_class_name <"VEC_ipa_ref_t_none",VEC_ipa_ref_t_none> the_class_name;
	 generic_field_name <"base",VEC_ipa_ref_t_none,base> base;
}; 
class CLS_1271_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1272_VEC_ipa_ref_t_gc{ 
	 generic_class_name <"VEC_ipa_ref_t_gc",VEC_ipa_ref_t_gc> the_class_name;
	 generic_field_name <"base",VEC_ipa_ref_t_gc,base> base;
}; 
class CLS_1273_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1274_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_1275_VEC_ipa_ref_ptr_base{ 
	 generic_class_name <"VEC_ipa_ref_ptr_base",VEC_ipa_ref_ptr_base> the_class_name;
	 generic_field_name <"prefix",VEC_ipa_ref_ptr_base,prefix> prefix;
	 generic_field_name <"vec",VEC_ipa_ref_ptr_base,vec> vec;
}; 
class CLS_1276_VEC_ipa_ref_ptr_none{ 
	 generic_class_name <"VEC_ipa_ref_ptr_none",VEC_ipa_ref_ptr_none> the_class_name;
	 generic_field_name <"base",VEC_ipa_ref_ptr_none,base> base;
}; 
class CLS_1277_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1278_VEC_ipa_ref_ptr_heap{ 
	 generic_class_name <"VEC_ipa_ref_ptr_heap",VEC_ipa_ref_ptr_heap> the_class_name;
	 generic_field_name <"base",VEC_ipa_ref_ptr_heap,base> base;
}; 
class CLS_1279_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1280_ipa_ref_list{ 
	 generic_class_name <"ipa_ref_list",ipa_ref_list> the_class_name;
	 generic_field_name <"references",ipa_ref_list,references> references;
	 generic_field_name <"refering",ipa_ref_list,refering> refering;
}; 
class CLS_1281_ipa_ref{ 
	 generic_class_name <"ipa_ref",ipa_ref> the_class_name;
	 generic_field_name <"refering",ipa_ref,refering> refering;
	 generic_field_name <"refered",ipa_ref,refered> refered;
	 generic_field_name <"stmt",ipa_ref,stmt> stmt;
	 generic_field_name <"refered_index",ipa_ref,refered_index> refered_index;
	 generic_field_name <"refering_type",ipa_ref,refering_type> refering_type;
	 generic_field_name <"refered_type",ipa_ref,refered_type> refered_type;
	 generic_field_name <"use",ipa_ref,use> use;
}; 
class CLS_1282_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
}; 
class CLS_1283_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
}; 
class CLS_1284_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
}; 
class CLS_1285_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
}; 
class CLS_1286_ipa_ref{ 
	 generic_class_name <"ipa_ref",ipa_ref> the_class_name;
	 generic_field_name <"refering",ipa_ref,refering> refering;
	 generic_field_name <"refered",ipa_ref,refered> refered;
	 generic_field_name <"stmt",ipa_ref,stmt> stmt;
	 generic_field_name <"refered_index",ipa_ref,refered_index> refered_index;
	 generic_field_name <"refering_type",ipa_ref,refering_type> refering_type;
	 generic_field_name <"refered_type",ipa_ref,refered_type> refered_type;
	 generic_field_name <"use",ipa_ref,use> use;
}; 
class CLS_1287_ipa_ref_list{ 
	 generic_class_name <"ipa_ref_list",ipa_ref_list> the_class_name;
	 generic_field_name <"references",ipa_ref_list,references> references;
	 generic_field_name <"refering",ipa_ref_list,refering> refering;
}; 
class CLS_1288_ipa_ref_list{ 
	 generic_class_name <"ipa_ref_list",ipa_ref_list> the_class_name;
	 generic_field_name <"references",ipa_ref_list,references> references;
	 generic_field_name <"refering",ipa_ref_list,refering> refering;
}; 
class CLS_1289_ipa_ref_list{ 
	 generic_class_name <"ipa_ref_list",ipa_ref_list> the_class_name;
	 generic_field_name <"references",ipa_ref_list,references> references;
	 generic_field_name <"refering",ipa_ref_list,refering> refering;
}; 
class CLS_1290_ipa_ref_list{ 
	 generic_class_name <"ipa_ref_list",ipa_ref_list> the_class_name;
	 generic_field_name <"references",ipa_ref_list,references> references;
	 generic_field_name <"refering",ipa_ref_list,refering> refering;
}; 
class CLS_1291_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
}; 
class CLS_1292_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
}; 
class CLS_1293_ipa_ref_list{ 
	 generic_class_name <"ipa_ref_list",ipa_ref_list> the_class_name;
	 generic_field_name <"references",ipa_ref_list,references> references;
	 generic_field_name <"refering",ipa_ref_list,refering> refering;
}; 
class CLS_1294_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
}; 
class CLS_1295_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
}; 
class CLS_1296_ipa_ref_list{ 
	 generic_class_name <"ipa_ref_list",ipa_ref_list> the_class_name;
	 generic_field_name <"references",ipa_ref_list,references> references;
	 generic_field_name <"refering",ipa_ref_list,refering> refering;
}; 
class CLS_1297_ipa_ref{ 
	 generic_class_name <"ipa_ref",ipa_ref> the_class_name;
	 generic_field_name <"refering",ipa_ref,refering> refering;
	 generic_field_name <"refered",ipa_ref,refered> refered;
	 generic_field_name <"stmt",ipa_ref,stmt> stmt;
	 generic_field_name <"refered_index",ipa_ref,refered_index> refered_index;
	 generic_field_name <"refering_type",ipa_ref,refering_type> refering_type;
	 generic_field_name <"refered_type",ipa_ref,refered_type> refered_type;
	 generic_field_name <"use",ipa_ref,use> use;
}; 
class CLS_1298_ipa_ref_list{ 
	 generic_class_name <"ipa_ref_list",ipa_ref_list> the_class_name;
	 generic_field_name <"references",ipa_ref_list,references> references;
	 generic_field_name <"refering",ipa_ref_list,refering> refering;
}; 
class CLS_1299_lto_file_decl_data{ 
	 generic_class_name <"lto_file_decl_data",lto_file_decl_data> the_class_name;
}; 
class CLS_1300_cgraph_thunk_info{ 
	 generic_class_name <"cgraph_thunk_info",cgraph_thunk_info> the_class_name;
	 generic_field_name <"fixed_offset",cgraph_thunk_info,fixed_offset> fixed_offset;
	 generic_field_name <"virtual_value",cgraph_thunk_info,virtual_value> virtual_value;
	 generic_field_name <"alias",cgraph_thunk_info,alias> alias;
	 generic_field_name <"this_adjusting",cgraph_thunk_info,this_adjusting> this_adjusting;
	 generic_field_name <"virtual_offset_p",cgraph_thunk_info,virtual_offset_p> virtual_offset_p;
	 generic_field_name <"thunk_p",cgraph_thunk_info,thunk_p> thunk_p;
}; 
class CLS_1301_lto_file_decl_data{ 
	 generic_class_name <"lto_file_decl_data",lto_file_decl_data> the_class_name;
}; 
class CLS_1302_cgraph_local_info{ 
	 generic_class_name <"cgraph_local_info",cgraph_local_info> the_class_name;
	 generic_field_name <"lto_file_data",cgraph_local_info,lto_file_data> lto_file_data;
	 generic_field_name <"local",cgraph_local_info,local> local;
	 generic_field_name <"externally_visible",cgraph_local_info,externally_visible> externally_visible;
	 generic_field_name <"finalized",cgraph_local_info,finalized> finalized;
	 generic_field_name <"versionable",cgraph_local_info,versionable> versionable;
	 generic_field_name <"can_change_signature",cgraph_local_info,can_change_signature> can_change_signature;
	 generic_field_name <"redefined_extern_inline",cgraph_local_info,redefined_extern_inline> redefined_extern_inline;
	 generic_field_name <"tm_may_enter_irr",cgraph_local_info,tm_may_enter_irr> tm_may_enter_irr;
}; 
class CLS_1303_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
}; 
class CLS_1304_cgraph_global_info{ 
	 generic_class_name <"cgraph_global_info",cgraph_global_info> the_class_name;
	 generic_field_name <"inlined_to",cgraph_global_info,inlined_to> inlined_to;
}; 
class CLS_1305_cgraph_rtl_info{ 
	 generic_class_name <"cgraph_rtl_info",cgraph_rtl_info> the_class_name;
	 generic_field_name <"preferred_incoming_stack_boundary",cgraph_rtl_info,preferred_incoming_stack_boundary> preferred_incoming_stack_boundary;
}; 
class CLS_1306_ipa_replace_map{ 
	 generic_class_name <"ipa_replace_map",ipa_replace_map> the_class_name;
	 generic_field_name <"old_tree",ipa_replace_map,old_tree> old_tree;
	 generic_field_name <"new_tree",ipa_replace_map,new_tree> new_tree;
	 generic_field_name <"parm_num",ipa_replace_map,parm_num> parm_num;
	 generic_field_name <"replace_p",ipa_replace_map,replace_p> replace_p;
	 generic_field_name <"ref_p",ipa_replace_map,ref_p> ref_p;
}; 
class CLS_1307_ipa_replace_map{ 
	 generic_class_name <"ipa_replace_map",ipa_replace_map> the_class_name;
	 generic_field_name <"old_tree",ipa_replace_map,old_tree> old_tree;
	 generic_field_name <"new_tree",ipa_replace_map,new_tree> new_tree;
	 generic_field_name <"parm_num",ipa_replace_map,parm_num> parm_num;
	 generic_field_name <"replace_p",ipa_replace_map,replace_p> replace_p;
	 generic_field_name <"ref_p",ipa_replace_map,ref_p> ref_p;
}; 
class CLS_1308_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_1309_VEC_ipa_replace_map_p_base{ 
	 generic_class_name <"VEC_ipa_replace_map_p_base",VEC_ipa_replace_map_p_base> the_class_name;
	 generic_field_name <"prefix",VEC_ipa_replace_map_p_base,prefix> prefix;
	 generic_field_name <"vec",VEC_ipa_replace_map_p_base,vec> vec;
}; 
class CLS_1310_VEC_ipa_replace_map_p_none{ 
	 generic_class_name <"VEC_ipa_replace_map_p_none",VEC_ipa_replace_map_p_none> the_class_name;
	 generic_field_name <"base",VEC_ipa_replace_map_p_none,base> base;
}; 
class CLS_1311_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1312_VEC_ipa_replace_map_p_gc{ 
	 generic_class_name <"VEC_ipa_replace_map_p_gc",VEC_ipa_replace_map_p_gc> the_class_name;
	 generic_field_name <"base",VEC_ipa_replace_map_p_gc,base> base;
}; 
class CLS_1313_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1314_cgraph_clone_info{ 
	 generic_class_name <"cgraph_clone_info",cgraph_clone_info> the_class_name;
	 generic_field_name <"tree_map",cgraph_clone_info,tree_map> tree_map;
	 generic_field_name <"args_to_skip",cgraph_clone_info,args_to_skip> args_to_skip;
	 generic_field_name <"combined_args_to_skip",cgraph_clone_info,combined_args_to_skip> combined_args_to_skip;
}; 
class CLS_1315_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
}; 
class CLS_1316_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
}; 
class CLS_1317_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
}; 
class CLS_1318_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
}; 
class CLS_1319_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
}; 
class CLS_1320_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
}; 
class CLS_1321_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
}; 
class CLS_1322_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
}; 
class CLS_1323_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
}; 
class CLS_1324_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
}; 
class CLS_1325_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
}; 
class CLS_1326_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
}; 
class CLS_1327_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
}; 
class CLS_1328_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
}; 
class CLS_1329_ipa_ref_list{ 
	 generic_class_name <"ipa_ref_list",ipa_ref_list> the_class_name;
	 generic_field_name <"references",ipa_ref_list,references> references;
	 generic_field_name <"refering",ipa_ref_list,refering> refering;
}; 
class CLS_1330_cgraph_local_info{ 
	 generic_class_name <"cgraph_local_info",cgraph_local_info> the_class_name;
	 generic_field_name <"lto_file_data",cgraph_local_info,lto_file_data> lto_file_data;
	 generic_field_name <"local",cgraph_local_info,local> local;
	 generic_field_name <"externally_visible",cgraph_local_info,externally_visible> externally_visible;
	 generic_field_name <"finalized",cgraph_local_info,finalized> finalized;
	 generic_field_name <"versionable",cgraph_local_info,versionable> versionable;
	 generic_field_name <"can_change_signature",cgraph_local_info,can_change_signature> can_change_signature;
	 generic_field_name <"redefined_extern_inline",cgraph_local_info,redefined_extern_inline> redefined_extern_inline;
	 generic_field_name <"tm_may_enter_irr",cgraph_local_info,tm_may_enter_irr> tm_may_enter_irr;
}; 
class CLS_1331_cgraph_global_info{ 
	 generic_class_name <"cgraph_global_info",cgraph_global_info> the_class_name;
	 generic_field_name <"inlined_to",cgraph_global_info,inlined_to> inlined_to;
}; 
class CLS_1332_cgraph_rtl_info{ 
	 generic_class_name <"cgraph_rtl_info",cgraph_rtl_info> the_class_name;
	 generic_field_name <"preferred_incoming_stack_boundary",cgraph_rtl_info,preferred_incoming_stack_boundary> preferred_incoming_stack_boundary;
}; 
class CLS_1333_cgraph_clone_info{ 
	 generic_class_name <"cgraph_clone_info",cgraph_clone_info> the_class_name;
	 generic_field_name <"tree_map",cgraph_clone_info,tree_map> tree_map;
	 generic_field_name <"args_to_skip",cgraph_clone_info,args_to_skip> args_to_skip;
	 generic_field_name <"combined_args_to_skip",cgraph_clone_info,combined_args_to_skip> combined_args_to_skip;
}; 
class CLS_1334_cgraph_thunk_info{ 
	 generic_class_name <"cgraph_thunk_info",cgraph_thunk_info> the_class_name;
	 generic_field_name <"fixed_offset",cgraph_thunk_info,fixed_offset> fixed_offset;
	 generic_field_name <"virtual_value",cgraph_thunk_info,virtual_value> virtual_value;
	 generic_field_name <"alias",cgraph_thunk_info,alias> alias;
	 generic_field_name <"this_adjusting",cgraph_thunk_info,this_adjusting> this_adjusting;
	 generic_field_name <"virtual_offset_p",cgraph_thunk_info,virtual_offset_p> virtual_offset_p;
	 generic_field_name <"thunk_p",cgraph_thunk_info,thunk_p> thunk_p;
}; 
class CLS_1335_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1336_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1337_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_1338_VEC_cgraph_node_ptr_base{ 
	 generic_class_name <"VEC_cgraph_node_ptr_base",VEC_cgraph_node_ptr_base> the_class_name;
	 generic_field_name <"prefix",VEC_cgraph_node_ptr_base,prefix> prefix;
	 generic_field_name <"vec",VEC_cgraph_node_ptr_base,vec> vec;
}; 
class CLS_1339_VEC_cgraph_node_ptr_none{ 
	 generic_class_name <"VEC_cgraph_node_ptr_none",VEC_cgraph_node_ptr_none> the_class_name;
	 generic_field_name <"base",VEC_cgraph_node_ptr_none,base> base;
}; 
class CLS_1340_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1341_VEC_cgraph_node_ptr_heap{ 
	 generic_class_name <"VEC_cgraph_node_ptr_heap",VEC_cgraph_node_ptr_heap> the_class_name;
	 generic_field_name <"base",VEC_cgraph_node_ptr_heap,base> base;
}; 
class CLS_1342_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1343_VEC_cgraph_node_ptr_gc{ 
	 generic_class_name <"VEC_cgraph_node_ptr_gc",VEC_cgraph_node_ptr_gc> the_class_name;
	 generic_field_name <"base",VEC_cgraph_node_ptr_gc,base> base;
}; 
class CLS_1344_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1345_pointer_map_t{ 
	 generic_class_name <"pointer_map_t",pointer_map_t> the_class_name;
}; 
class CLS_1346_cgraph_node_set_def{ 
	 generic_class_name <"cgraph_node_set_def",cgraph_node_set_def> the_class_name;
	 generic_field_name <"map",cgraph_node_set_def,map> map;
	 generic_field_name <"nodes",cgraph_node_set_def,nodes> nodes;
}; 
class CLS_1347_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
}; 
class CLS_1348_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_1349_VEC_varpool_node_ptr_base{ 
	 generic_class_name <"VEC_varpool_node_ptr_base",VEC_varpool_node_ptr_base> the_class_name;
	 generic_field_name <"prefix",VEC_varpool_node_ptr_base,prefix> prefix;
	 generic_field_name <"vec",VEC_varpool_node_ptr_base,vec> vec;
}; 
class CLS_1350_VEC_varpool_node_ptr_none{ 
	 generic_class_name <"VEC_varpool_node_ptr_none",VEC_varpool_node_ptr_none> the_class_name;
	 generic_field_name <"base",VEC_varpool_node_ptr_none,base> base;
}; 
class CLS_1351_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1352_VEC_varpool_node_ptr_heap{ 
	 generic_class_name <"VEC_varpool_node_ptr_heap",VEC_varpool_node_ptr_heap> the_class_name;
	 generic_field_name <"base",VEC_varpool_node_ptr_heap,base> base;
}; 
class CLS_1353_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1354_VEC_varpool_node_ptr_gc{ 
	 generic_class_name <"VEC_varpool_node_ptr_gc",VEC_varpool_node_ptr_gc> the_class_name;
	 generic_field_name <"base",VEC_varpool_node_ptr_gc,base> base;
}; 
class CLS_1355_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1356_pointer_map_t{ 
	 generic_class_name <"pointer_map_t",pointer_map_t> the_class_name;
}; 
class CLS_1357_varpool_node_set_def{ 
	 generic_class_name <"varpool_node_set_def",varpool_node_set_def> the_class_name;
	 generic_field_name <"map",varpool_node_set_def,map> map;
	 generic_field_name <"nodes",varpool_node_set_def,nodes> nodes;
}; 
class CLS_1358_cgraph_node_set_def{ 
	 generic_class_name <"cgraph_node_set_def",cgraph_node_set_def> the_class_name;
	 generic_field_name <"map",cgraph_node_set_def,map> map;
	 generic_field_name <"nodes",cgraph_node_set_def,nodes> nodes;
}; 
class CLS_1359_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_1360_VEC_cgraph_node_set_base{ 
	 generic_class_name <"VEC_cgraph_node_set_base",VEC_cgraph_node_set_base> the_class_name;
	 generic_field_name <"prefix",VEC_cgraph_node_set_base,prefix> prefix;
	 generic_field_name <"vec",VEC_cgraph_node_set_base,vec> vec;
}; 
class CLS_1361_VEC_cgraph_node_set_none{ 
	 generic_class_name <"VEC_cgraph_node_set_none",VEC_cgraph_node_set_none> the_class_name;
	 generic_field_name <"base",VEC_cgraph_node_set_none,base> base;
}; 
class CLS_1362_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1363_VEC_cgraph_node_set_gc{ 
	 generic_class_name <"VEC_cgraph_node_set_gc",VEC_cgraph_node_set_gc> the_class_name;
	 generic_field_name <"base",VEC_cgraph_node_set_gc,base> base;
}; 
class CLS_1364_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1365_VEC_cgraph_node_set_heap{ 
	 generic_class_name <"VEC_cgraph_node_set_heap",VEC_cgraph_node_set_heap> the_class_name;
	 generic_field_name <"base",VEC_cgraph_node_set_heap,base> base;
}; 
class CLS_1366_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1367_varpool_node_set_def{ 
	 generic_class_name <"varpool_node_set_def",varpool_node_set_def> the_class_name;
	 generic_field_name <"map",varpool_node_set_def,map> map;
	 generic_field_name <"nodes",varpool_node_set_def,nodes> nodes;
}; 
class CLS_1368_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_1369_VEC_varpool_node_set_base{ 
	 generic_class_name <"VEC_varpool_node_set_base",VEC_varpool_node_set_base> the_class_name;
	 generic_field_name <"prefix",VEC_varpool_node_set_base,prefix> prefix;
	 generic_field_name <"vec",VEC_varpool_node_set_base,vec> vec;
}; 
class CLS_1370_VEC_varpool_node_set_none{ 
	 generic_class_name <"VEC_varpool_node_set_none",VEC_varpool_node_set_none> the_class_name;
	 generic_field_name <"base",VEC_varpool_node_set_none,base> base;
}; 
class CLS_1371_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1372_VEC_varpool_node_set_gc{ 
	 generic_class_name <"VEC_varpool_node_set_gc",VEC_varpool_node_set_gc> the_class_name;
	 generic_field_name <"base",VEC_varpool_node_set_gc,base> base;
}; 
class CLS_1373_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1374_VEC_varpool_node_set_heap{ 
	 generic_class_name <"VEC_varpool_node_set_heap",VEC_varpool_node_set_heap> the_class_name;
	 generic_field_name <"base",VEC_varpool_node_set_heap,base> base;
}; 
class CLS_1375_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1376_cgraph_indirect_call_info{ 
	 generic_class_name <"cgraph_indirect_call_info",cgraph_indirect_call_info> the_class_name;
	 generic_field_name <"anc_offset",cgraph_indirect_call_info,anc_offset> anc_offset;
	 generic_field_name <"otr_token",cgraph_indirect_call_info,otr_token> otr_token;
	 generic_field_name <"otr_type",cgraph_indirect_call_info,otr_type> otr_type;
	 generic_field_name <"param_index",cgraph_indirect_call_info,param_index> param_index;
	 generic_field_name <"ecf_flags",cgraph_indirect_call_info,ecf_flags> ecf_flags;
	 generic_field_name <"polymorphic",cgraph_indirect_call_info,polymorphic> polymorphic;
}; 
class CLS_1377_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1378_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1379_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
}; 
class CLS_1380_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
}; 
class CLS_1381_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
}; 
class CLS_1382_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
}; 
class CLS_1383_cgraph_indirect_call_info{ 
	 generic_class_name <"cgraph_indirect_call_info",cgraph_indirect_call_info> the_class_name;
	 generic_field_name <"anc_offset",cgraph_indirect_call_info,anc_offset> anc_offset;
	 generic_field_name <"otr_token",cgraph_indirect_call_info,otr_token> otr_token;
	 generic_field_name <"otr_type",cgraph_indirect_call_info,otr_type> otr_type;
	 generic_field_name <"param_index",cgraph_indirect_call_info,param_index> param_index;
	 generic_field_name <"ecf_flags",cgraph_indirect_call_info,ecf_flags> ecf_flags;
	 generic_field_name <"polymorphic",cgraph_indirect_call_info,polymorphic> polymorphic;
}; 
class CLS_1384_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1385_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1386_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_1387_VEC_cgraph_edge_p_base{ 
	 generic_class_name <"VEC_cgraph_edge_p_base",VEC_cgraph_edge_p_base> the_class_name;
	 generic_field_name <"prefix",VEC_cgraph_edge_p_base,prefix> prefix;
	 generic_field_name <"vec",VEC_cgraph_edge_p_base,vec> vec;
}; 
class CLS_1388_VEC_cgraph_edge_p_none{ 
	 generic_class_name <"VEC_cgraph_edge_p_none",VEC_cgraph_edge_p_none> the_class_name;
	 generic_field_name <"base",VEC_cgraph_edge_p_none,base> base;
}; 
class CLS_1389_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1390_VEC_cgraph_edge_p_heap{ 
	 generic_class_name <"VEC_cgraph_edge_p_heap",VEC_cgraph_edge_p_heap> the_class_name;
	 generic_field_name <"base",VEC_cgraph_edge_p_heap,base> base;
}; 
class CLS_1391_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1392_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
}; 
class CLS_1393_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
}; 
class CLS_1394_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
}; 
class CLS_1395_ipa_ref_list{ 
	 generic_class_name <"ipa_ref_list",ipa_ref_list> the_class_name;
	 generic_field_name <"references",ipa_ref_list,references> references;
	 generic_field_name <"refering",ipa_ref_list,refering> refering;
}; 
class CLS_1396_lto_file_decl_data{ 
	 generic_class_name <"lto_file_decl_data",lto_file_decl_data> the_class_name;
}; 
class CLS_1397_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1398_cgraph_asm_node{ 
	 generic_class_name <"cgraph_asm_node",cgraph_asm_node> the_class_name;
}; 
class CLS_1399_cgraph_asm_node{ 
	 generic_class_name <"cgraph_asm_node",cgraph_asm_node> the_class_name;
	 generic_field_name <"next",cgraph_asm_node,next> next;
	 generic_field_name <"asm_str",cgraph_asm_node,asm_str> asm_str;
	 generic_field_name <"order",cgraph_asm_node,order> order;
}; 
class CLS_1400_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1401_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1402_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1403_cgraph_asm_node{ 
	 generic_class_name <"cgraph_asm_node",cgraph_asm_node> the_class_name;
	 generic_field_name <"next",cgraph_asm_node,next> next;
	 generic_field_name <"asm_str",cgraph_asm_node,asm_str> asm_str;
	 generic_field_name <"order",cgraph_asm_node,order> order;
}; 
class CLS_1404_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1405_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1406_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1407_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1408_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1409_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1410_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1411_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1412_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1413_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1414_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1415_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1416_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1417_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1418_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1419_cgraph_indirect_call_info{ 
	 generic_class_name <"cgraph_indirect_call_info",cgraph_indirect_call_info> the_class_name;
	 generic_field_name <"anc_offset",cgraph_indirect_call_info,anc_offset> anc_offset;
	 generic_field_name <"otr_token",cgraph_indirect_call_info,otr_token> otr_token;
	 generic_field_name <"otr_type",cgraph_indirect_call_info,otr_type> otr_type;
	 generic_field_name <"param_index",cgraph_indirect_call_info,param_index> param_index;
	 generic_field_name <"ecf_flags",cgraph_indirect_call_info,ecf_flags> ecf_flags;
	 generic_field_name <"polymorphic",cgraph_indirect_call_info,polymorphic> polymorphic;
}; 
class CLS_1420_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1421_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1422_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1423_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1424_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1425_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1426_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1427_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1428_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1429_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1430_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1431_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1432_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1433_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1434_cgraph_local_info{ 
	 generic_class_name <"cgraph_local_info",cgraph_local_info> the_class_name;
	 generic_field_name <"lto_file_data",cgraph_local_info,lto_file_data> lto_file_data;
	 generic_field_name <"local",cgraph_local_info,local> local;
	 generic_field_name <"externally_visible",cgraph_local_info,externally_visible> externally_visible;
	 generic_field_name <"finalized",cgraph_local_info,finalized> finalized;
	 generic_field_name <"versionable",cgraph_local_info,versionable> versionable;
	 generic_field_name <"can_change_signature",cgraph_local_info,can_change_signature> can_change_signature;
	 generic_field_name <"redefined_extern_inline",cgraph_local_info,redefined_extern_inline> redefined_extern_inline;
	 generic_field_name <"tm_may_enter_irr",cgraph_local_info,tm_may_enter_irr> tm_may_enter_irr;
}; 
class CLS_1435_cgraph_global_info{ 
	 generic_class_name <"cgraph_global_info",cgraph_global_info> the_class_name;
	 generic_field_name <"inlined_to",cgraph_global_info,inlined_to> inlined_to;
}; 
class CLS_1436_cgraph_rtl_info{ 
	 generic_class_name <"cgraph_rtl_info",cgraph_rtl_info> the_class_name;
	 generic_field_name <"preferred_incoming_stack_boundary",cgraph_rtl_info,preferred_incoming_stack_boundary> preferred_incoming_stack_boundary;
}; 
class CLS_1437_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1438_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1439_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1440_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1441_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1442_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1443_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1444_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1445_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1446_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1447_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1448_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1449_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1450_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1451_cgraph_asm_node{ 
	 generic_class_name <"cgraph_asm_node",cgraph_asm_node> the_class_name;
	 generic_field_name <"next",cgraph_asm_node,next> next;
	 generic_field_name <"asm_str",cgraph_asm_node,asm_str> asm_str;
	 generic_field_name <"order",cgraph_asm_node,order> order;
}; 
class CLS_1452_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1453_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1454_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1455_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1456_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1457_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1458_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1459_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1460_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1461_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1462_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1463_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1464_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1465_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1466_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1467_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1468_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1469_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1470_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1471_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1472_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1473_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1474_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1475_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1476_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1477_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1478_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1479_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1480_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1481_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1482_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1483_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1484_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1485_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1486_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1487_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1488_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1489_cgraph_edge_hook_list{ 
	 generic_class_name <"cgraph_edge_hook_list",cgraph_edge_hook_list> the_class_name;
}; 
class CLS_1490_cgraph_node_hook_list{ 
	 generic_class_name <"cgraph_node_hook_list",cgraph_node_hook_list> the_class_name;
}; 
class CLS_1491_cgraph_2edge_hook_list{ 
	 generic_class_name <"cgraph_2edge_hook_list",cgraph_2edge_hook_list> the_class_name;
}; 
class CLS_1492_cgraph_2node_hook_list{ 
	 generic_class_name <"cgraph_2node_hook_list",cgraph_2node_hook_list> the_class_name;
}; 
class CLS_1493_cgraph_edge_hook_list{ 
	 generic_class_name <"cgraph_edge_hook_list",cgraph_edge_hook_list> the_class_name;
}; 
class CLS_1494_cgraph_edge_hook_list{ 
	 generic_class_name <"cgraph_edge_hook_list",cgraph_edge_hook_list> the_class_name;
}; 
class CLS_1495_cgraph_node_hook_list{ 
	 generic_class_name <"cgraph_node_hook_list",cgraph_node_hook_list> the_class_name;
}; 
class CLS_1496_cgraph_node_hook_list{ 
	 generic_class_name <"cgraph_node_hook_list",cgraph_node_hook_list> the_class_name;
}; 
class CLS_1497_cgraph_node_hook_list{ 
	 generic_class_name <"cgraph_node_hook_list",cgraph_node_hook_list> the_class_name;
}; 
class CLS_1498_cgraph_node_hook_list{ 
	 generic_class_name <"cgraph_node_hook_list",cgraph_node_hook_list> the_class_name;
}; 
class CLS_1499_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1500_cgraph_2edge_hook_list{ 
	 generic_class_name <"cgraph_2edge_hook_list",cgraph_2edge_hook_list> the_class_name;
}; 
class CLS_1501_cgraph_2edge_hook_list{ 
	 generic_class_name <"cgraph_2edge_hook_list",cgraph_2edge_hook_list> the_class_name;
}; 
class CLS_1502_cgraph_2node_hook_list{ 
	 generic_class_name <"cgraph_2node_hook_list",cgraph_2node_hook_list> the_class_name;
}; 
class CLS_1503_cgraph_2node_hook_list{ 
	 generic_class_name <"cgraph_2node_hook_list",cgraph_2node_hook_list> the_class_name;
}; 
class CLS_1504_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1505_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1506_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1507_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1508_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1509_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1510_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1511_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1512_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1513_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1514_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1515_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1516_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1517_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1518_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1519_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1520_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1521_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1522_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1523_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1524_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1525_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1526_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1527_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1528_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1529_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1530_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1531_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1532_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1533_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1534_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1535_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1536_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1537_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1538_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1539_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1540_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1541_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1542_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1543_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1544_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1545_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1546_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1547_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1548_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1549_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1550_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1551_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1552_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1553_constant_descriptor_tree{ 
	 generic_class_name <"constant_descriptor_tree",constant_descriptor_tree> the_class_name;
	 generic_field_name <"rtl",constant_descriptor_tree,rtl> rtl;
	 generic_field_name <"value",constant_descriptor_tree,value> value;
	 generic_field_name <"hash",constant_descriptor_tree,hash> hash;
}; 
class CLS_1554_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1555_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1556_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1557_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1558_ipa_ref{ 
	 generic_class_name <"ipa_ref",ipa_ref> the_class_name;
	 generic_field_name <"refering",ipa_ref,refering> refering;
	 generic_field_name <"refered",ipa_ref,refered> refered;
	 generic_field_name <"stmt",ipa_ref,stmt> stmt;
	 generic_field_name <"refered_index",ipa_ref,refered_index> refered_index;
	 generic_field_name <"refering_type",ipa_ref,refering_type> refering_type;
	 generic_field_name <"refered_type",ipa_ref,refered_type> refered_type;
	 generic_field_name <"use",ipa_ref,use> use;
}; 
class CLS_1559_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1560_ipa_ref{ 
	 generic_class_name <"ipa_ref",ipa_ref> the_class_name;
	 generic_field_name <"refering",ipa_ref,refering> refering;
	 generic_field_name <"refered",ipa_ref,refered> refered;
	 generic_field_name <"stmt",ipa_ref,stmt> stmt;
	 generic_field_name <"refered_index",ipa_ref,refered_index> refered_index;
	 generic_field_name <"refering_type",ipa_ref,refering_type> refering_type;
	 generic_field_name <"refered_type",ipa_ref,refered_type> refered_type;
	 generic_field_name <"use",ipa_ref,use> use;
}; 
class CLS_1561_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1562_ipa_ref{ 
	 generic_class_name <"ipa_ref",ipa_ref> the_class_name;
	 generic_field_name <"refering",ipa_ref,refering> refering;
	 generic_field_name <"refered",ipa_ref,refered> refered;
	 generic_field_name <"stmt",ipa_ref,stmt> stmt;
	 generic_field_name <"refered_index",ipa_ref,refered_index> refered_index;
	 generic_field_name <"refering_type",ipa_ref,refering_type> refering_type;
	 generic_field_name <"refered_type",ipa_ref,refered_type> refered_type;
	 generic_field_name <"use",ipa_ref,use> use;
}; 
class CLS_1563_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1564_ipa_ref{ 
	 generic_class_name <"ipa_ref",ipa_ref> the_class_name;
	 generic_field_name <"refering",ipa_ref,refering> refering;
	 generic_field_name <"refered",ipa_ref,refered> refered;
	 generic_field_name <"stmt",ipa_ref,stmt> stmt;
	 generic_field_name <"refered_index",ipa_ref,refered_index> refered_index;
	 generic_field_name <"refering_type",ipa_ref,refering_type> refering_type;
	 generic_field_name <"refered_type",ipa_ref,refered_type> refered_type;
	 generic_field_name <"use",ipa_ref,use> use;
}; 
class CLS_1565_ipa_ref_list{ 
	 generic_class_name <"ipa_ref_list",ipa_ref_list> the_class_name;
	 generic_field_name <"references",ipa_ref_list,references> references;
	 generic_field_name <"refering",ipa_ref_list,refering> refering;
}; 
class CLS_1566_ipa_ref{ 
	 generic_class_name <"ipa_ref",ipa_ref> the_class_name;
	 generic_field_name <"refering",ipa_ref,refering> refering;
	 generic_field_name <"refered",ipa_ref,refered> refered;
	 generic_field_name <"stmt",ipa_ref,stmt> stmt;
	 generic_field_name <"refered_index",ipa_ref,refered_index> refered_index;
	 generic_field_name <"refering_type",ipa_ref,refering_type> refering_type;
	 generic_field_name <"refered_type",ipa_ref,refered_type> refered_type;
	 generic_field_name <"use",ipa_ref,use> use;
}; 
class CLS_1567_ipa_ref_list{ 
	 generic_class_name <"ipa_ref_list",ipa_ref_list> the_class_name;
	 generic_field_name <"references",ipa_ref_list,references> references;
	 generic_field_name <"refering",ipa_ref_list,refering> refering;
}; 
class CLS_1568_ipa_ref{ 
	 generic_class_name <"ipa_ref",ipa_ref> the_class_name;
	 generic_field_name <"refering",ipa_ref,refering> refering;
	 generic_field_name <"refered",ipa_ref,refered> refered;
	 generic_field_name <"stmt",ipa_ref,stmt> stmt;
	 generic_field_name <"refered_index",ipa_ref,refered_index> refered_index;
	 generic_field_name <"refering_type",ipa_ref,refering_type> refering_type;
	 generic_field_name <"refered_type",ipa_ref,refered_type> refered_type;
	 generic_field_name <"use",ipa_ref,use> use;
}; 
class CLS_1569_ipa_ref{ 
	 generic_class_name <"ipa_ref",ipa_ref> the_class_name;
	 generic_field_name <"refering",ipa_ref,refering> refering;
	 generic_field_name <"refered",ipa_ref,refered> refered;
	 generic_field_name <"stmt",ipa_ref,stmt> stmt;
	 generic_field_name <"refered_index",ipa_ref,refered_index> refered_index;
	 generic_field_name <"refering_type",ipa_ref,refering_type> refering_type;
	 generic_field_name <"refered_type",ipa_ref,refered_type> refered_type;
	 generic_field_name <"use",ipa_ref,use> use;
}; 
class CLS_1570_ipa_ref_list{ 
	 generic_class_name <"ipa_ref_list",ipa_ref_list> the_class_name;
	 generic_field_name <"references",ipa_ref_list,references> references;
	 generic_field_name <"refering",ipa_ref_list,refering> refering;
}; 
class CLS_1571_ipa_ref{ 
	 generic_class_name <"ipa_ref",ipa_ref> the_class_name;
	 generic_field_name <"refering",ipa_ref,refering> refering;
	 generic_field_name <"refered",ipa_ref,refered> refered;
	 generic_field_name <"stmt",ipa_ref,stmt> stmt;
	 generic_field_name <"refered_index",ipa_ref,refered_index> refered_index;
	 generic_field_name <"refering_type",ipa_ref,refering_type> refering_type;
	 generic_field_name <"refered_type",ipa_ref,refered_type> refered_type;
	 generic_field_name <"use",ipa_ref,use> use;
}; 
class CLS_1572_ipa_ref_list{ 
	 generic_class_name <"ipa_ref_list",ipa_ref_list> the_class_name;
	 generic_field_name <"references",ipa_ref_list,references> references;
	 generic_field_name <"refering",ipa_ref_list,refering> refering;
}; 
class CLS_1573_ipa_ref_list{ 
	 generic_class_name <"ipa_ref_list",ipa_ref_list> the_class_name;
	 generic_field_name <"references",ipa_ref_list,references> references;
	 generic_field_name <"refering",ipa_ref_list,refering> refering;
}; 
class CLS_1574_ipa_ref_list{ 
	 generic_class_name <"ipa_ref_list",ipa_ref_list> the_class_name;
	 generic_field_name <"references",ipa_ref_list,references> references;
	 generic_field_name <"refering",ipa_ref_list,refering> refering;
}; 
class CLS_1575_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1576_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1577_ipa_ref{ 
	 generic_class_name <"ipa_ref",ipa_ref> the_class_name;
	 generic_field_name <"refering",ipa_ref,refering> refering;
	 generic_field_name <"refered",ipa_ref,refered> refered;
	 generic_field_name <"stmt",ipa_ref,stmt> stmt;
	 generic_field_name <"refered_index",ipa_ref,refered_index> refered_index;
	 generic_field_name <"refering_type",ipa_ref,refering_type> refering_type;
	 generic_field_name <"refered_type",ipa_ref,refered_type> refered_type;
	 generic_field_name <"use",ipa_ref,use> use;
}; 
class CLS_1578_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1579_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1580_ipa_ref{ 
	 generic_class_name <"ipa_ref",ipa_ref> the_class_name;
	 generic_field_name <"refering",ipa_ref,refering> refering;
	 generic_field_name <"refered",ipa_ref,refered> refered;
	 generic_field_name <"stmt",ipa_ref,stmt> stmt;
	 generic_field_name <"refered_index",ipa_ref,refered_index> refered_index;
	 generic_field_name <"refering_type",ipa_ref,refering_type> refering_type;
	 generic_field_name <"refered_type",ipa_ref,refered_type> refered_type;
	 generic_field_name <"use",ipa_ref,use> use;
}; 
class CLS_1581_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1582_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1583_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1584_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1585_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1586_varpool_node{ 
	 generic_class_name <"varpool_node",varpool_node> the_class_name;
	 generic_field_name <"decl",varpool_node,decl> decl;
	 generic_field_name <"alias_of",varpool_node,alias_of> alias_of;
	 generic_field_name <"next",varpool_node,next> next;
	 generic_field_name <"prev",varpool_node,prev> prev;
	 generic_field_name <"next_needed",varpool_node,next_needed> next_needed;
	 generic_field_name <"prev_needed",varpool_node,prev_needed> prev_needed;
	 generic_field_name <"same_comdat_group",varpool_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"ref_list",varpool_node,ref_list> ref_list;
	 generic_field_name <"lto_file_data",varpool_node,lto_file_data> lto_file_data;
	 generic_field_name <"aux",varpool_node,aux> aux;
	 generic_field_name <"order",varpool_node,order> order;
	 generic_field_name <"resolution",varpool_node,resolution> resolution;
	 generic_field_name <"needed",varpool_node,needed> needed;
	 generic_field_name <"force_output",varpool_node,force_output> force_output;
	 generic_field_name <"analyzed",varpool_node,analyzed> analyzed;
	 generic_field_name <"finalized",varpool_node,finalized> finalized;
	 generic_field_name <"output",varpool_node,output> output;
	 generic_field_name <"externally_visible",varpool_node,externally_visible> externally_visible;
	 generic_field_name <"alias",varpool_node,alias> alias;
	 generic_field_name <"extra_name_alias",varpool_node,extra_name_alias> extra_name_alias;
	 generic_field_name <"used_from_other_partition",varpool_node,used_from_other_partition> used_from_other_partition;
	 generic_field_name <"in_other_partition",varpool_node,in_other_partition> in_other_partition;
}; 
class CLS_1587_cgraph_edge{ 
	 generic_class_name <"cgraph_edge",cgraph_edge> the_class_name;
	 generic_field_name <"count",cgraph_edge,count> count;
	 generic_field_name <"caller",cgraph_edge,caller> caller;
	 generic_field_name <"callee",cgraph_edge,callee> callee;
	 generic_field_name <"prev_caller",cgraph_edge,prev_caller> prev_caller;
	 generic_field_name <"next_caller",cgraph_edge,next_caller> next_caller;
	 generic_field_name <"prev_callee",cgraph_edge,prev_callee> prev_callee;
	 generic_field_name <"next_callee",cgraph_edge,next_callee> next_callee;
	 generic_field_name <"call_stmt",cgraph_edge,call_stmt> call_stmt;
	 generic_field_name <"indirect_info",cgraph_edge,indirect_info> indirect_info;
	 generic_field_name <"aux",cgraph_edge,aux> aux;
	 generic_field_name <"inline_failed",cgraph_edge,inline_failed> inline_failed;
	 generic_field_name <"lto_stmt_uid",cgraph_edge,lto_stmt_uid> lto_stmt_uid;
	 generic_field_name <"frequency",cgraph_edge,frequency> frequency;
	 generic_field_name <"uid",cgraph_edge,uid> uid;
	 generic_field_name <"indirect_inlining_edge",cgraph_edge,indirect_inlining_edge> indirect_inlining_edge;
	 generic_field_name <"indirect_unknown_callee",cgraph_edge,indirect_unknown_callee> indirect_unknown_callee;
	 generic_field_name <"call_stmt_cannot_inline_p",cgraph_edge,call_stmt_cannot_inline_p> call_stmt_cannot_inline_p;
	 generic_field_name <"can_throw_external",cgraph_edge,can_throw_external> can_throw_external;
}; 
class CLS_1588_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1589_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1590_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1591_cgraph_node{ 
	 generic_class_name <"cgraph_node",cgraph_node> the_class_name;
	 generic_field_name <"decl",cgraph_node,decl> decl;
	 generic_field_name <"callees",cgraph_node,callees> callees;
	 generic_field_name <"callers",cgraph_node,callers> callers;
	 generic_field_name <"next",cgraph_node,next> next;
	 generic_field_name <"previous",cgraph_node,previous> previous;
	 generic_field_name <"indirect_calls",cgraph_node,indirect_calls> indirect_calls;
	 generic_field_name <"origin",cgraph_node,origin> origin;
	 generic_field_name <"nested",cgraph_node,nested> nested;
	 generic_field_name <"next_nested",cgraph_node,next_nested> next_nested;
	 generic_field_name <"next_needed",cgraph_node,next_needed> next_needed;
	 generic_field_name <"next_sibling_clone",cgraph_node,next_sibling_clone> next_sibling_clone;
	 generic_field_name <"prev_sibling_clone",cgraph_node,prev_sibling_clone> prev_sibling_clone;
	 generic_field_name <"clones",cgraph_node,clones> clones;
	 generic_field_name <"clone_of",cgraph_node,clone_of> clone_of;
	 generic_field_name <"same_comdat_group",cgraph_node,same_comdat_group> same_comdat_group;
	 generic_field_name <"call_site_hash",cgraph_node,call_site_hash> call_site_hash;
	 generic_field_name <"former_clone_of",cgraph_node,former_clone_of> former_clone_of;
	 generic_field_name <"aux",cgraph_node,aux> aux;
	 generic_field_name <"ipa_transforms_to_apply",cgraph_node,ipa_transforms_to_apply> ipa_transforms_to_apply;
	 generic_field_name <"ref_list",cgraph_node,ref_list> ref_list;
	 generic_field_name <"local",cgraph_node,local> local;
	 generic_field_name <"global",cgraph_node,global> global;
	 generic_field_name <"rtl",cgraph_node,rtl> rtl;
	 generic_field_name <"clone",cgraph_node,clone> clone;
	 generic_field_name <"thunk",cgraph_node,thunk> thunk;
	 generic_field_name <"count",cgraph_node,count> count;
	 generic_field_name <"count_materialization_scale",cgraph_node,count_materialization_scale> count_materialization_scale;
	 generic_field_name <"uid",cgraph_node,uid> uid;
	 generic_field_name <"order",cgraph_node,order> order;
	 generic_field_name <"resolution",cgraph_node,resolution> resolution;
	 generic_field_name <"needed",cgraph_node,needed> needed;
	 generic_field_name <"address_taken",cgraph_node,address_taken> address_taken;
	 generic_field_name <"abstract_and_needed",cgraph_node,abstract_and_needed> abstract_and_needed;
	 generic_field_name <"reachable",cgraph_node,reachable> reachable;
	 generic_field_name <"reachable_from_other_partition",cgraph_node,reachable_from_other_partition> reachable_from_other_partition;
	 generic_field_name <"lowered",cgraph_node,lowered> lowered;
	 generic_field_name <"analyzed",cgraph_node,analyzed> analyzed;
	 generic_field_name <"in_other_partition",cgraph_node,in_other_partition> in_other_partition;
	 generic_field_name <"process",cgraph_node,process> process;
	 generic_field_name <"alias",cgraph_node,alias> alias;
	 generic_field_name <"same_body_alias",cgraph_node,same_body_alias> same_body_alias;
	 generic_field_name <"frequency",cgraph_node,frequency> frequency;
	 generic_field_name <"only_called_at_startup",cgraph_node,only_called_at_startup> only_called_at_startup;
	 generic_field_name <"only_called_at_exit",cgraph_node,only_called_at_exit> only_called_at_exit;
	 generic_field_name <"tm_clone",cgraph_node,tm_clone> tm_clone;
}; 
class CLS_1592_tm_restart_node{ 
	 generic_class_name <"tm_restart_node",tm_restart_node> the_class_name;
	 generic_field_name <"stmt",tm_restart_node,stmt> stmt;
	 generic_field_name <"label_or_list",tm_restart_node,label_or_list> label_or_list;
}; 
class CLS_1593_pt_solution{ 
	 generic_class_name <"pt_solution",pt_solution> the_class_name;
	 generic_field_name <"anything",pt_solution,anything> anything;
	 generic_field_name <"nonlocal",pt_solution,nonlocal> nonlocal;
	 generic_field_name <"escaped",pt_solution,escaped> escaped;
	 generic_field_name <"ipa_escaped",pt_solution,ipa_escaped> ipa_escaped;
	 generic_field_name <"null",pt_solution,null> null;
	 generic_field_name <"vars_contains_global",pt_solution,vars_contains_global> vars_contains_global;
	 generic_field_name <"vars",pt_solution,vars> vars;
}; 
class CLS_1594_pointer_map_t{ 
	 generic_class_name <"pointer_map_t",pointer_map_t> the_class_name;
}; 
class CLS_1595_ssa_operands{ 
	 generic_class_name <"ssa_operands",ssa_operands> the_class_name;
	 generic_field_name <"operand_memory",ssa_operands,operand_memory> operand_memory;
	 generic_field_name <"operand_memory_index",ssa_operands,operand_memory_index> operand_memory_index;
	 generic_field_name <"ssa_operand_mem_size",ssa_operands,ssa_operand_mem_size> ssa_operand_mem_size;
	 generic_field_name <"ops_active",ssa_operands,ops_active> ops_active;
	 generic_field_name <"free_defs",ssa_operands,free_defs> free_defs;
	 generic_field_name <"free_uses",ssa_operands,free_uses> free_uses;
}; 
class CLS_1596_gimple_df{ 
	 generic_class_name <"gimple_df",gimple_df> the_class_name;
	 generic_field_name <"referenced_vars",gimple_df,referenced_vars> referenced_vars;
	 generic_field_name <"modified_noreturn_calls",gimple_df,modified_noreturn_calls> modified_noreturn_calls;
	 generic_field_name <"ssa_names",gimple_df,ssa_names> ssa_names;
	 generic_field_name <"vop",gimple_df,vop> vop;
	 generic_field_name <"escaped",gimple_df,escaped> escaped;
	 generic_field_name <"decls_to_pointers",gimple_df,decls_to_pointers> decls_to_pointers;
	 generic_field_name <"free_ssanames",gimple_df,free_ssanames> free_ssanames;
	 generic_field_name <"default_defs",gimple_df,default_defs> default_defs;
	 generic_field_name <"syms_to_rename",gimple_df,syms_to_rename> syms_to_rename;
	 generic_field_name <"in_ssa_p",gimple_df,in_ssa_p> in_ssa_p;
	 generic_field_name <"ipa_pta",gimple_df,ipa_pta> ipa_pta;
	 generic_field_name <"ssa_operands",gimple_df,ssa_operands> ssa_operands;
	 generic_field_name <"tm_restart",gimple_df,tm_restart> tm_restart;
}; 
class CLS_1597_pt_solution{ 
	 generic_class_name <"pt_solution",pt_solution> the_class_name;
	 generic_field_name <"anything",pt_solution,anything> anything;
	 generic_field_name <"nonlocal",pt_solution,nonlocal> nonlocal;
	 generic_field_name <"escaped",pt_solution,escaped> escaped;
	 generic_field_name <"ipa_escaped",pt_solution,ipa_escaped> ipa_escaped;
	 generic_field_name <"null",pt_solution,null> null;
	 generic_field_name <"vars_contains_global",pt_solution,vars_contains_global> vars_contains_global;
	 generic_field_name <"vars",pt_solution,vars> vars;
}; 
class CLS_1598_ptr_info_def{ 
	 generic_class_name <"ptr_info_def",ptr_info_def> the_class_name;
	 generic_field_name <"pt",ptr_info_def,pt> pt;
	 generic_field_name <"align",ptr_info_def,align> align;
	 generic_field_name <"misalign",ptr_info_def,misalign> misalign;
}; 
class CLS_1599_var_ann_d{ 
	 generic_class_name <"var_ann_d",var_ann_d> the_class_name;
	 generic_field_name <"base_var_processed",var_ann_d,base_var_processed> base_var_processed;
	 generic_field_name <"used",var_ann_d,used> used;
	 generic_field_name <"need_phi_state",var_ann_d,need_phi_state> need_phi_state;
	 generic_field_name <"base_index",var_ann_d,base_index> base_index;
	 generic_field_name <"current_def",var_ann_d,current_def> current_def;
}; 
class CLS_1600_immediate_use_iterator_d{ 
	 generic_class_name <"immediate_use_iterator_d",immediate_use_iterator_d> the_class_name;
	 generic_field_name <"imm_use",immediate_use_iterator_d,imm_use> imm_use;
	 generic_field_name <"end_p",immediate_use_iterator_d,end_p> end_p;
	 generic_field_name <"iter_node",immediate_use_iterator_d,iter_node> iter_node;
	 generic_field_name <"next_imm_name",immediate_use_iterator_d,next_imm_name> next_imm_name;
}; 
class CLS_1601_var_ann_d{ 
	 generic_class_name <"var_ann_d",var_ann_d> the_class_name;
	 generic_field_name <"base_var_processed",var_ann_d,base_var_processed> base_var_processed;
	 generic_field_name <"used",var_ann_d,used> used;
	 generic_field_name <"need_phi_state",var_ann_d,need_phi_state> need_phi_state;
	 generic_field_name <"base_index",var_ann_d,base_index> base_index;
	 generic_field_name <"current_def",var_ann_d,current_def> current_def;
}; 
class CLS_1602_int_tree_map{ 
	 generic_class_name <"int_tree_map",int_tree_map> the_class_name;
	 generic_field_name <"uid",int_tree_map,uid> uid;
	 generic_field_name <"to",int_tree_map,to> to;
}; 
class CLS_1603_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1604_omp_region{ 
	 generic_class_name <"omp_region",omp_region> the_class_name;
}; 
class CLS_1605_omp_region{ 
	 generic_class_name <"omp_region",omp_region> the_class_name;
}; 
class CLS_1606_omp_region{ 
	 generic_class_name <"omp_region",omp_region> the_class_name;
}; 
class CLS_1607_omp_region{ 
	 generic_class_name <"omp_region",omp_region> the_class_name;
	 generic_field_name <"outer",omp_region,outer> outer;
	 generic_field_name <"inner",omp_region,inner> inner;
	 generic_field_name <"next",omp_region,next> next;
	 generic_field_name <"entry",omp_region,entry> entry;
	 generic_field_name <"exit",omp_region,exit> exit;
	 generic_field_name <"cont",omp_region,cont> cont;
	 generic_field_name <"ws_args",omp_region,ws_args> ws_args;
	 generic_field_name <"type",omp_region,type> type;
	 generic_field_name <"sched_kind",omp_region,sched_kind> sched_kind;
	 generic_field_name <"is_combined_parallel",omp_region,is_combined_parallel> is_combined_parallel;
}; 
class CLS_1608_omp_region{ 
	 generic_class_name <"omp_region",omp_region> the_class_name;
	 generic_field_name <"outer",omp_region,outer> outer;
	 generic_field_name <"inner",omp_region,inner> inner;
	 generic_field_name <"next",omp_region,next> next;
	 generic_field_name <"entry",omp_region,entry> entry;
	 generic_field_name <"exit",omp_region,exit> exit;
	 generic_field_name <"cont",omp_region,cont> cont;
	 generic_field_name <"ws_args",omp_region,ws_args> ws_args;
	 generic_field_name <"type",omp_region,type> type;
	 generic_field_name <"sched_kind",omp_region,sched_kind> sched_kind;
	 generic_field_name <"is_combined_parallel",omp_region,is_combined_parallel> is_combined_parallel;
}; 
class CLS_1609_omp_region{ 
	 generic_class_name <"omp_region",omp_region> the_class_name;
	 generic_field_name <"outer",omp_region,outer> outer;
	 generic_field_name <"inner",omp_region,inner> inner;
	 generic_field_name <"next",omp_region,next> next;
	 generic_field_name <"entry",omp_region,entry> entry;
	 generic_field_name <"exit",omp_region,exit> exit;
	 generic_field_name <"cont",omp_region,cont> cont;
	 generic_field_name <"ws_args",omp_region,ws_args> ws_args;
	 generic_field_name <"type",omp_region,type> type;
	 generic_field_name <"sched_kind",omp_region,sched_kind> sched_kind;
	 generic_field_name <"is_combined_parallel",omp_region,is_combined_parallel> is_combined_parallel;
}; 
class CLS_1610_omp_region{ 
	 generic_class_name <"omp_region",omp_region> the_class_name;
	 generic_field_name <"outer",omp_region,outer> outer;
	 generic_field_name <"inner",omp_region,inner> inner;
	 generic_field_name <"next",omp_region,next> next;
	 generic_field_name <"entry",omp_region,entry> entry;
	 generic_field_name <"exit",omp_region,exit> exit;
	 generic_field_name <"cont",omp_region,cont> cont;
	 generic_field_name <"ws_args",omp_region,ws_args> ws_args;
	 generic_field_name <"type",omp_region,type> type;
	 generic_field_name <"sched_kind",omp_region,sched_kind> sched_kind;
	 generic_field_name <"is_combined_parallel",omp_region,is_combined_parallel> is_combined_parallel;
}; 
class CLS_1611_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1612_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1613_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1614_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1615_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1616_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1617__edge_var_map{ 
	 generic_class_name <"_edge_var_map",_edge_var_map> the_class_name;
	 generic_field_name <"result",_edge_var_map,result> result;
	 generic_field_name <"def",_edge_var_map,def> def;
	 generic_field_name <"locus",_edge_var_map,locus> locus;
}; 
class CLS_1618__edge_var_map{ 
	 generic_class_name <"_edge_var_map",_edge_var_map> the_class_name;
	 generic_field_name <"result",_edge_var_map,result> result;
	 generic_field_name <"def",_edge_var_map,def> def;
	 generic_field_name <"locus",_edge_var_map,locus> locus;
}; 
class CLS_1619_vec_prefix{ 
	 generic_class_name <"vec_prefix",vec_prefix> the_class_name;
	 generic_field_name <"num",vec_prefix,num> num;
	 generic_field_name <"alloc",vec_prefix,alloc> alloc;
}; 
class CLS_1620_VEC_edge_var_map_base{ 
	 generic_class_name <"VEC_edge_var_map_base",VEC_edge_var_map_base> the_class_name;
	 generic_field_name <"prefix",VEC_edge_var_map_base,prefix> prefix;
	 generic_field_name <"vec",VEC_edge_var_map_base,vec> vec;
}; 
class CLS_1621_VEC_edge_var_map_none{ 
	 generic_class_name <"VEC_edge_var_map_none",VEC_edge_var_map_none> the_class_name;
	 generic_field_name <"base",VEC_edge_var_map_none,base> base;
}; 
class CLS_1622_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1623_VEC_edge_var_map_heap{ 
	 generic_class_name <"VEC_edge_var_map_heap",VEC_edge_var_map_heap> the_class_name;
	 generic_field_name <"base",VEC_edge_var_map_heap,base> base;
}; 
class CLS_1624_vec_swallow_trailing_semi{ 
	 generic_class_name <"vec_swallow_trailing_semi",vec_swallow_trailing_semi> the_class_name;
}; 
class CLS_1625_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1626_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1627_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1628_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1629_ptr_info_def{ 
	 generic_class_name <"ptr_info_def",ptr_info_def> the_class_name;
	 generic_field_name <"pt",ptr_info_def,pt> pt;
	 generic_field_name <"align",ptr_info_def,align> align;
	 generic_field_name <"misalign",ptr_info_def,misalign> misalign;
}; 
class CLS_1630_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1631_tree_niter_desc{ 
	 generic_class_name <"tree_niter_desc",tree_niter_desc> the_class_name;
	 generic_field_name <"assumptions",tree_niter_desc,assumptions> assumptions;
	 generic_field_name <"may_be_zero",tree_niter_desc,may_be_zero> may_be_zero;
	 generic_field_name <"niter",tree_niter_desc,niter> niter;
	 generic_field_name <"max",tree_niter_desc,max> max;
	 generic_field_name <"control",tree_niter_desc,control> control;
	 generic_field_name <"bound",tree_niter_desc,bound> bound;
	 generic_field_name <"cmp",tree_niter_desc,cmp> cmp;
}; 
class CLS_1632_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1633_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1634_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1635_tree_niter_desc{ 
	 generic_class_name <"tree_niter_desc",tree_niter_desc> the_class_name;
	 generic_field_name <"assumptions",tree_niter_desc,assumptions> assumptions;
	 generic_field_name <"may_be_zero",tree_niter_desc,may_be_zero> may_be_zero;
	 generic_field_name <"niter",tree_niter_desc,niter> niter;
	 generic_field_name <"max",tree_niter_desc,max> max;
	 generic_field_name <"control",tree_niter_desc,control> control;
	 generic_field_name <"bound",tree_niter_desc,bound> bound;
	 generic_field_name <"cmp",tree_niter_desc,cmp> cmp;
}; 
class CLS_1636_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1637_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1638_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1639_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1640_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1641_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1642_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1643_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1644_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1645_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1646_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1647_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1648_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1649_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1650_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1651_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1652_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1653_tree_niter_desc{ 
	 generic_class_name <"tree_niter_desc",tree_niter_desc> the_class_name;
	 generic_field_name <"assumptions",tree_niter_desc,assumptions> assumptions;
	 generic_field_name <"may_be_zero",tree_niter_desc,may_be_zero> may_be_zero;
	 generic_field_name <"niter",tree_niter_desc,niter> niter;
	 generic_field_name <"max",tree_niter_desc,max> max;
	 generic_field_name <"control",tree_niter_desc,control> control;
	 generic_field_name <"bound",tree_niter_desc,bound> bound;
	 generic_field_name <"cmp",tree_niter_desc,cmp> cmp;
}; 
class CLS_1654_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1655_tree_niter_desc{ 
	 generic_class_name <"tree_niter_desc",tree_niter_desc> the_class_name;
	 generic_field_name <"assumptions",tree_niter_desc,assumptions> assumptions;
	 generic_field_name <"may_be_zero",tree_niter_desc,may_be_zero> may_be_zero;
	 generic_field_name <"niter",tree_niter_desc,niter> niter;
	 generic_field_name <"max",tree_niter_desc,max> max;
	 generic_field_name <"control",tree_niter_desc,control> control;
	 generic_field_name <"bound",tree_niter_desc,bound> bound;
	 generic_field_name <"cmp",tree_niter_desc,cmp> cmp;
}; 
class CLS_1656_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1657_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1658_tree_niter_desc{ 
	 generic_class_name <"tree_niter_desc",tree_niter_desc> the_class_name;
	 generic_field_name <"assumptions",tree_niter_desc,assumptions> assumptions;
	 generic_field_name <"may_be_zero",tree_niter_desc,may_be_zero> may_be_zero;
	 generic_field_name <"niter",tree_niter_desc,niter> niter;
	 generic_field_name <"max",tree_niter_desc,max> max;
	 generic_field_name <"control",tree_niter_desc,control> control;
	 generic_field_name <"bound",tree_niter_desc,bound> bound;
	 generic_field_name <"cmp",tree_niter_desc,cmp> cmp;
}; 
class CLS_1659_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1660_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1661_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1662_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1663_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1664_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1665_pointer_map_t{ 
	 generic_class_name <"pointer_map_t",pointer_map_t> the_class_name;
}; 
class CLS_1666_pre_expr_d{ 
	 generic_class_name <"pre_expr_d",pre_expr_d> the_class_name;
}; 
class CLS_1667_pre_expr_d{ 
	 generic_class_name <"pre_expr_d",pre_expr_d> the_class_name;
}; 
class CLS_1668_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1669_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1670_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1671_mem_address{ 
	 generic_class_name <"mem_address",mem_address> the_class_name;
	 generic_field_name <"symbol",mem_address,symbol> symbol;
	 generic_field_name <"base",mem_address,base> base;
	 generic_field_name <"index",mem_address,index> index;
	 generic_field_name <"step",mem_address,step> step;
	 generic_field_name <"offset",mem_address,offset> offset;
}; 
class CLS_1672_affine_tree_combination{ 
	 generic_class_name <"affine_tree_combination",affine_tree_combination> the_class_name;
}; 
class CLS_1673_affine_tree_combination{ 
	 generic_class_name <"affine_tree_combination",affine_tree_combination> the_class_name;
}; 
class CLS_1674_mem_address{ 
	 generic_class_name <"mem_address",mem_address> the_class_name;
	 generic_field_name <"symbol",mem_address,symbol> symbol;
	 generic_field_name <"base",mem_address,base> base;
	 generic_field_name <"index",mem_address,index> index;
	 generic_field_name <"step",mem_address,step> step;
	 generic_field_name <"offset",mem_address,offset> offset;
}; 
class CLS_1675_mem_address{ 
	 generic_class_name <"mem_address",mem_address> the_class_name;
	 generic_field_name <"symbol",mem_address,symbol> symbol;
	 generic_field_name <"base",mem_address,base> base;
	 generic_field_name <"index",mem_address,index> index;
	 generic_field_name <"step",mem_address,step> step;
	 generic_field_name <"offset",mem_address,offset> offset;
}; 
class CLS_1676_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1677_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1678_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1679_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1680_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1681_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1682_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1683_phi_arg_d{ 
	 generic_class_name <"phi_arg_d",phi_arg_d> the_class_name;
	 generic_field_name <"imm_use",phi_arg_d,imm_use> imm_use;
	 generic_field_name <"def",phi_arg_d,def> def;
	 generic_field_name <"locus",phi_arg_d,locus> locus;
}; 
class CLS_1684_phi_arg_d{ 
	 generic_class_name <"phi_arg_d",phi_arg_d> the_class_name;
	 generic_field_name <"imm_use",phi_arg_d,imm_use> imm_use;
	 generic_field_name <"def",phi_arg_d,def> def;
	 generic_field_name <"locus",phi_arg_d,locus> locus;
}; 
class CLS_1685_phi_arg_d{ 
	 generic_class_name <"phi_arg_d",phi_arg_d> the_class_name;
	 generic_field_name <"imm_use",phi_arg_d,imm_use> imm_use;
	 generic_field_name <"def",phi_arg_d,def> def;
	 generic_field_name <"locus",phi_arg_d,locus> locus;
}; 
class CLS_1686_phi_arg_d{ 
	 generic_class_name <"phi_arg_d",phi_arg_d> the_class_name;
	 generic_field_name <"imm_use",phi_arg_d,imm_use> imm_use;
	 generic_field_name <"def",phi_arg_d,def> def;
	 generic_field_name <"locus",phi_arg_d,locus> locus;
}; 
class CLS_1687_loop{ 
	 generic_class_name <"loop",loop> the_class_name;
}; 
class CLS_1688_ssa_operands{ 
	 generic_class_name <"ssa_operands",ssa_operands> the_class_name;
	 generic_field_name <"operand_memory",ssa_operands,operand_memory> operand_memory;
	 generic_field_name <"operand_memory_index",ssa_operands,operand_memory_index> operand_memory_index;
	 generic_field_name <"ssa_operand_mem_size",ssa_operands,ssa_operand_mem_size> ssa_operand_mem_size;
	 generic_field_name <"ops_active",ssa_operands,ops_active> ops_active;
	 generic_field_name <"free_defs",ssa_operands,free_defs> free_defs;
	 generic_field_name <"free_uses",ssa_operands,free_uses> free_uses;
}; 
class CLS_1689_function{ 
	 generic_class_name <"function",function> the_class_name;
	 generic_field_name <"eh",function,eh> eh;
	 generic_field_name <"cfg",function,cfg> cfg;
	 generic_field_name <"gimple_body",function,gimple_body> gimple_body;
	 generic_field_name <"gimple_df",function,gimple_df> gimple_df;
	 generic_field_name <"x_current_loops",function,x_current_loops> x_current_loops;
	 generic_field_name <"su",function,su> su;
	 generic_field_name <"value_histograms",function,value_histograms> value_histograms;
	 generic_field_name <"decl",function,decl> decl;
	 generic_field_name <"static_chain_decl",function,static_chain_decl> static_chain_decl;
	 generic_field_name <"nonlocal_goto_save_area",function,nonlocal_goto_save_area> nonlocal_goto_save_area;
	 generic_field_name <"local_decls",function,local_decls> local_decls;
	 generic_field_name <"machine",function,machine> machine;
	 generic_field_name <"language",function,language> language;
	 generic_field_name <"used_types_hash",function,used_types_hash> used_types_hash;
	 generic_field_name <"fde",function,fde> fde;
	 generic_field_name <"last_stmt_uid",function,last_stmt_uid> last_stmt_uid;
	 generic_field_name <"funcdef_no",function,funcdef_no> funcdef_no;
	 generic_field_name <"function_start_locus",function,function_start_locus> function_start_locus;
	 generic_field_name <"function_end_locus",function,function_end_locus> function_end_locus;
	 generic_field_name <"curr_properties",function,curr_properties> curr_properties;
	 generic_field_name <"last_verified",function,last_verified> last_verified;
	 generic_field_name <"cannot_be_copied_reason",function,cannot_be_copied_reason> cannot_be_copied_reason;
	 generic_field_name <"va_list_gpr_size",function,va_list_gpr_size> va_list_gpr_size;
	 generic_field_name <"va_list_fpr_size",function,va_list_fpr_size> va_list_fpr_size;
	 generic_field_name <"calls_setjmp",function,calls_setjmp> calls_setjmp;
	 generic_field_name <"calls_alloca",function,calls_alloca> calls_alloca;
	 generic_field_name <"has_nonlocal_label",function,has_nonlocal_label> has_nonlocal_label;
	 generic_field_name <"cannot_be_copied_set",function,cannot_be_copied_set> cannot_be_copied_set;
	 generic_field_name <"stdarg",function,stdarg> stdarg;
	 generic_field_name <"after_inlining",function,after_inlining> after_inlining;
	 generic_field_name <"always_inline_functions_inlined",function,always_inline_functions_inlined> always_inline_functions_inlined;
	 generic_field_name <"can_throw_non_call_exceptions",function,can_throw_non_call_exceptions> can_throw_non_call_exceptions;
	 generic_field_name <"returns_struct",function,returns_struct> returns_struct;
	 generic_field_name <"returns_pcc_struct",function,returns_pcc_struct> returns_pcc_struct;
	 generic_field_name <"after_tree_profile",function,after_tree_profile> after_tree_profile;
	 generic_field_name <"has_local_explicit_reg_vars",function,has_local_explicit_reg_vars> has_local_explicit_reg_vars;
	 generic_field_name <"is_thunk",function,is_thunk> is_thunk;
}; 
class CLS_1690_plugin_name_args{ 
	 generic_class_name <"plugin_name_args",plugin_name_args> the_class_name;
	 generic_field_name <"base_name",plugin_name_args,base_name> base_name;
	 generic_field_name <"full_name",plugin_name_args,full_name> full_name;
	 generic_field_name <"argc",plugin_name_args,argc> argc;
	 generic_field_name <"argv",plugin_name_args,argv> argv;
	 generic_field_name <"version",plugin_name_args,version> version;
	 generic_field_name <"help",plugin_name_args,help> help;
}; 
class CLS_1691_plugin_name_args{ 
	 generic_class_name <"plugin_name_args",plugin_name_args> the_class_name;
	 generic_field_name <"base_name",plugin_name_args,base_name> base_name;
	 generic_field_name <"full_name",plugin_name_args,full_name> full_name;
	 generic_field_name <"argc",plugin_name_args,argc> argc;
	 generic_field_name <"argv",plugin_name_args,argv> argv;
	 generic_field_name <"version",plugin_name_args,version> version;
	 generic_field_name <"help",plugin_name_args,help> help;
}; 
class CLS_1692_plugin_gcc_version{ 
	 generic_class_name <"plugin_gcc_version",plugin_gcc_version> the_class_name;
	 generic_field_name <"basever",plugin_gcc_version,basever> basever;
	 generic_field_name <"datestamp",plugin_gcc_version,datestamp> datestamp;
	 generic_field_name <"devphase",plugin_gcc_version,devphase> devphase;
	 generic_field_name <"revision",plugin_gcc_version,revision> revision;
	 generic_field_name <"configuration_arguments",plugin_gcc_version,configuration_arguments> configuration_arguments;
}; 
